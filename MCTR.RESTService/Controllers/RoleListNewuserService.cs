///*************************************************************************
/// 
/// BOEING CONFIDENTIAL
/// ___________________
/// 
///  BOEING is a trademark of Boeing Management Company.
///
///  Copyright © 2016 Boeing. All rights reserved.
/// 
/// NOTICE:  All information contained herein is, and remains
/// the property of Boeing and its suppliers, if any.  
/// The intellectual and technical concepts contained
/// herein are proprietary to Boeing and its suppliers and may be 
/// covered by U.S. and Foreign Patents, patents in process, 
/// and are protected by trade secret or copyright law.
/// Dissemination of this information or reproduction of this material
/// is strictly forbidden unless prior written permission is obtained
/// from Boeing. 
///
///************************************************************************
/// Author           : Generated by ATMA ®
/// Revision History :

using log4net;
using MCTR.Business;
using MCTR.BusinessInterface;
using MCTR.DomainEntity;
using System;
using System.Collections.Generic;
using System.Net;
using System.Net.Http;
using System.Web.Http;

namespace MCTR.RESTService.Controllers
{
    ///*********************************************************************
    ///<summary>
    ///RoleListNewuserServiceController is a Rest controller implementation  
    ///which acts as a wrapper to the RoleListBusiness implementation and
    /// provides api path for each methods exposed.
    ///</summary>

    public class RoleListNewuserServiceController : ApiController
    {

         private readonly ILog logger;
        public RoleListNewuserServiceController()
        {
            logger = LogManager.GetLogger(System.Reflection.MethodBase.GetCurrentMethod().DeclaringType);
        }

        ///*************************************************************
        ///<summary>
        ///Method Name : GetAll
        ///</summary>
        ///<returns>IEnumerable<RoleListNewuser></returns>
        [HttpPost]
        public HttpResponseMessage empllistonload([FromBody]IEnumerable<RoleListNewuser> emplist)
        {
            try
            {
                logger.Info("Executing MCTR.RESTService.RoleListNewuserServiceController.emplListbutFindWhenButtonPressed()");
                IRoleListNewuserBusiness roleListNewuserBusiness = new RoleListNewuserBusiness();
                var response = roleListNewuserBusiness.empllistonload(emplist);
                logger.Info("Response received from MCTR.RESTService.RoleListNewuserServiceController.emplListbutFindWhenButtonPressed() : " + response);
                return Request.CreateResponse(HttpStatusCode.OK, response);
            }
            catch (Exception e)
            {
                return Request.CreateErrorResponse(HttpStatusCode.InternalServerError, e.Message);
            }
        }

        ///*************************************************************
        ///<summary>
        ///Method Name : emplListbutFindWhenButtonPressed
        ///</summary>
        ///<param name = "roleListNewuser"></param>
        ///<returns>IEnumerable<RoleListNewuser></returns>
        [HttpPost]
        [ActionName("emplListbutFindWhenButtonPressed")]
        public HttpResponseMessage emplListbutFindWhenButtonPressed([FromBody]IEnumerable<RoleListNewuser> roleListNewuser)
        {
            try
            {
                logger.Info("Executing MCTR.RESTService.RoleListNewuserServiceController.emplListbutFindWhenButtonPressed() with request : " + roleListNewuser);
                if (roleListNewuser != null)
                {
                    IRoleListNewuserBusiness roleListNewuserBusiness = new RoleListNewuserBusiness();
                    var response = roleListNewuserBusiness.emplListbutFindWhenButtonPressed(roleListNewuser);
                    logger.Info("Response received from MCTR.RESTService.RoleListNewuserServiceController..emplListbutFindWhenButtonPressed() : " + response);
                    return Request.CreateResponse(HttpStatusCode.OK, response);
                }
                return null;
            }
            catch (Exception e)
            {
                return Request.CreateErrorResponse(HttpStatusCode.InternalServerError, e.Message);
            }
        }
        ///*************************************************************
        ///<summary>
        ///Method Name : roleListNewuserWhenNewFormInstance
        ///</summary>
        ///<param name = "roleListNewuser"></param>
        ///<returns>IEnumerable<RoleListNewuser></returns>
        [HttpPost]
        [ActionName("roleListNewuserWhenNewFormInstance")]
        public HttpResponseMessage roleListNewuserWhenNewFormInstance([FromBody]IEnumerable<RoleListNewuser> roleListNewuser)
        {
            try
            {
                if (roleListNewuser != null)
                {
                    logger.Info("Executing MCTR.RESTService.RoleListNewuserServiceController.emplListbutFindWhenButtonPressed() with request : " + roleListNewuser);
                    IRoleListNewuserBusiness roleListNewuserBusiness = new RoleListNewuserBusiness();
                    var response = roleListNewuserBusiness.roleListNewuserWhenNewFormInstance(roleListNewuser);
                    logger.Info("Response received from MCTR.RESTService.RoleListNewuserServiceController..roleListNewuserWhenNewFormInstance() : " + response);
                    return Request.CreateResponse(HttpStatusCode.OK, response);
                }
                return null;
            }
            catch (Exception e)
            {
                return Request.CreateErrorResponse(HttpStatusCode.InternalServerError, e.Message);
            }
        }
    }
}

