///*************************************************************************
/// 
/// BOEING CONFIDENTIAL
/// ___________________
/// 
///  BOEING is a trademark of Boeing Management Company.
///
///  Copyright © 2016 Boeing. All rights reserved.
/// 
/// NOTICE:  All information contained herein is, and remains
/// the property of Boeing and its suppliers, if any.  
/// The intellectual and technical concepts contained
/// herein are proprietary to Boeing and its suppliers and may be 
/// covered by U.S. and Foreign Patents, patents in process, 
/// and are protected by trade secret or copyright law.
/// Dissemination of this information or reproduction of this material
/// is strictly forbidden unless prior written permission is obtained
/// from Boeing. 
///

///************************************************************************
/// Author           : Generated by ATMA ®
/// Revision History :  

using log4net;
using MCTR.DomainEntity;
using System;
using System.Collections.Generic;

namespace MCTR.Web.Handlers
{
    ///*********************************************************************
    ///<summary>
    ///BuProfileHandler is a Rest controller implementation  
    ///which acts as a wrapper to the BuProfileBusiness implementation and
    /// provides api path for each methods exposed.
    ///</summary>
    public class BuProfileHandler
    {
         private readonly ILog logger;

        public BuProfileHandler()
        {
            logger = LogManager.GetLogger(System.Reflection.MethodBase.GetCurrentMethod().DeclaringType);
        }
        ///*************************************************************
        ///<summary>
        ///Method Name : buProfileBuProfileOnLoad
        ///</summary>
        ///<param></param>
        ///<returns>IEnumerable<BuProfile> </returns>

        public IEnumerable<BuProfile> buProfileBuProfileOnLoad()
        {
            try {

                logger.Debug("Executing MCTR.Web.Handlers.BuProfileHandler.buProfileBuProfileOnLoad rest service handler.");
                string restApiPath = "BuProfileService/buProfileBuProfileOnLoad";
                logger.Info("Invoking Rest API : " + restApiPath);
                var response = HandlerUtil<BuProfile>.RestGetProcessor(restApiPath);
                logger.Info("Response received form Rest API : " + restApiPath + " : " + response);
                return response;
            }
            catch (Exception ex)
            {
                logger.Info("Exception Occured at MCTR.Web.Handlers.BuProfileHandler.buProfileBuProfileOnLoad() : " + ex.Message);
                throw;
            }
        }
        ///*************************************************************
        ///<summary>
        ///Method Name : buProfilebusinessUnitPreTextItem
        ///</summary>
        ///<param name = "BuProfile"></param>
        ///<returns>IEnumerable<BuProfile> </returns>

        public IEnumerable<BuProfile> buProfilebusinessUnitPreTextItem(BuProfile buProfile)
        {
            try {
                logger.Debug("Executing  MCTR.Web.Handlers.BuProfileHandler.buProfilebusinessUnitPreTextItem rest service handler.");
                string restApiPath = "BuProfileService/buProfilebusinessUnitPreTextItem";
                logger.Info("Invoking Rest API : " + restApiPath + " with Request : " + buProfile);
                var response = HandlerUtil<BuProfile>.RestPostProcessor(restApiPath, buProfile);
                logger.Info("Response received form Rest API : " + restApiPath + " : " + response);
                return response;
            }
             
            catch (Exception ex)
            {
                logger.Info("Exception Occured at MCTR.Web.Handlers.BuProfileHandler.buProfilebusinessUnitPreTextItem() : " + ex.Message);
                throw;
            }
}
        ///*************************************************************
        ///<summary>
        ///Method Name : buProfilebusinessUnitPostTextItem
        ///</summary>
        ///<param name = "BuProfile"></param>
        ///<returns>IEnumerable<BuProfile> </returns>

        public IEnumerable<BuProfile> buProfilebusinessUnitPostTextItem(BuProfile buProfile)
        {
            try { 

            logger.Debug("Executing  MCTR.Web.Handlers.BuProfileHandler.buProfilebusinessUnitPostTextItem rest service handler.");
            string restApiPath = "BuProfileService/buProfilebusinessUnitPostTextItem";
            logger.Info("Invoking Rest API : " + restApiPath + " with Request : " + buProfile);
            var response = HandlerUtil<BuProfile>.RestPostProcessor(restApiPath, buProfile);
            logger.Info("Response received form Rest API : " + restApiPath + " : " + response);
            return response;
            }
            catch (Exception ex)
            {
                logger.Info("Exception Occured at MCTR.Web.Handlers.BuProfileHandler.buProfilebusinessUnitPostTextItem() : " + ex.Message);
                throw;
            }
        }
        ///*************************************************************
        ///<summary>
        ///Method Name : buProfileoffsetActivityPreTextItem
        ///</summary>
        ///<param name = "BuProfile"></param>
        ///<returns>IEnumerable<BuProfile> </returns>

        public IEnumerable<BuProfile> buProfileoffsetActivityPreTextItem(BuProfile buProfile)
        {
            try { 
            logger.Debug("Executing  MCTR.Web.Handlers.BuProfileHandler.buProfileoffsetActivityPreTextItem rest service handler.");
            string restApiPath = "BuProfileService/buProfileoffsetActivityPreTextItem";
            logger.Info("Invoking Rest API : " + restApiPath + " with Request : " + buProfile);
            var response = HandlerUtil<BuProfile>.RestPostProcessor(restApiPath, buProfile);
            logger.Info("Response received form Rest API : " + restApiPath + " : " + response);
            return response;
            }
            catch (Exception ex)
            {
                logger.Info("Exception Occured at MCTR.Web.Handlers.BuProfileHandler.buProfileoffsetActivityPreTextItem() : " + ex.Message);
                throw;
            }
        }
        ///*************************************************************
        ///<summary>
        ///Method Name : buProfileoffsetActivityPostTextItem
        ///</summary>
        ///<param name = "BuProfile"></param>
        ///<returns>IEnumerable<BuProfile> </returns>

        public IEnumerable<BuProfile> buProfileoffsetActivityPostTextItem(BuProfile buProfile)
        {
            try { 
            logger.Debug("Executing  MCTR.Web.Handlers.BuProfileHandler.buProfileoffsetActivityPostTextItem rest service handler.");
            string restApiPath = "BuProfileService/buProfileoffsetActivityPostTextItem";
            logger.Info("Invoking Rest API : " + restApiPath + " with Request : " + buProfile);
            var response = HandlerUtil<BuProfile>.RestPostProcessor(restApiPath, buProfile);
            logger.Info("Response received form Rest API : " + restApiPath + " : " + response);
            return response;
            }
            catch (Exception ex)
            {
                logger.Info("Exception Occured at MCTR.Web.Handlers.BuProfileHandler.buProfileoffsetActivityPostTextItem() : " + ex.Message);
                throw;
            }
        }
        ///*************************************************************
        ///<summary>
        ///Method Name : buProfileoffsetProjectPreTextItem
        ///</summary>
        ///<param name = "BuProfile"></param>
        ///<returns>IEnumerable<BuProfile> </returns>

        public IEnumerable<BuProfile> buProfileoffsetProjectPreTextItem(BuProfile buProfile)
        {
            try {
                logger.Debug("Executing  MCTR.Web.Handlers.BuProfileHandler.buProfileoffsetProjectPreTextItem rest service handler.");
                string restApiPath = "BuProfileService/buProfileoffsetProjectPreTextItem";
                logger.Info("Invoking Rest API : " + restApiPath + " with Request : " + buProfile);
                var response = HandlerUtil<BuProfile>.RestPostProcessor(restApiPath, buProfile);
                logger.Info("Response received form Rest API : " + restApiPath + " : " + response);
                return response;
            }
            catch (Exception ex)
            {
                logger.Info("Exception Occured at MCTR.Web.Handlers.BuProfileHandler.buProfileoffsetProjectPreTextItem() : " + ex.Message);
                throw;
            }
        }
        ///*************************************************************
        ///<summary>
        ///Method Name : buProfileoffsetProjectPostTextItem
        ///</summary>
        ///<param name = "BuProfile"></param>
        ///<returns>IEnumerable<BuProfile> </returns>
        public IEnumerable<BuProfile> buProfileoffsetProjectPostTextItem(BuProfile buProfile)
        {
            try {
                logger.Debug("Executing  MCTR.Web.Handlers.BuProfileHandler.buProfileoffsetProjectPostTextItem rest service handler.");
                string restApiPath = "BuProfileService/buProfileoffsetProjectPostTextItem";
                logger.Info("Invoking Rest API : " + restApiPath + " with Request : " + buProfile);
                var response = HandlerUtil<BuProfile>.RestPostProcessor(restApiPath, buProfile);
                logger.Info("Response received form Rest API : " + restApiPath + " : " + response);
                return response;
            }
            catch (Exception ex)
            {
                logger.Info("Exception Occured at MCTR.Web.Handlers.BuProfileHandler.buProfileoffsetProjectPostTextItem() : " + ex.Message);
                throw;
            }
        }
        ///*************************************************************
        ///<summary>
        ///Method Name : buProfileoffsetAccountPreTextItem
        ///</summary>
        ///<param name = "BuProfile"></param>
        ///<returns>IEnumerable<BuProfile> </returns>

        public IEnumerable<BuProfile> buProfileoffsetAccountPreTextItem(BuProfile buProfile)
        {
            try{
                logger.Debug("Executing  MCTR.Web.Handlers.BuProfileHandler.buProfileoffsetAccountPreTextItem rest service handler.");
                string restApiPath = "BuProfileService/buProfileoffsetAccountPreTextItem";
                logger.Info("Invoking Rest API : " + restApiPath + " with Request : " + buProfile);
                var response = HandlerUtil<BuProfile>.RestPostProcessor(restApiPath, buProfile);
                logger.Info("Response received form Rest API : " + restApiPath + " : " + response);
                return response;
            }
            catch (Exception ex)
            {
                logger.Info("Exception Occured at MCTR.Web.Handlers.BuProfileHandler.buProfileoffsetAccountPreTextItem() : " + ex.Message);
                throw;
            }
        }
        ///*************************************************************
        ///<summary>
        ///Method Name : buProfileoffsetAccountPostTextItem
        ///</summary>
        ///<param name = "BuProfile"></param>
        ///<returns>IEnumerable<BuProfile> </returns>

        public IEnumerable<BuProfile> buProfileoffsetAccountPostTextItem(BuProfile buProfile)
        {
            try { 
            logger.Debug("Executing  MCTR.Web.Handlers.BuProfileHandler.buProfileoffsetAccountPostTextItem rest service handler.");
            string restApiPath = "BuProfileService/buProfileoffsetAccountPostTextItem";
            logger.Info("Invoking Rest API : " + restApiPath + " with Request : " + buProfile);
            var response = HandlerUtil<BuProfile>.RestPostProcessor(restApiPath, buProfile);
            logger.Info("Response received form Rest API : " + restApiPath + " : " + response);
            return response;
            }
            catch (Exception ex)
            {
                logger.Info("Exception Occured at MCTR.Web.Handlers.BuProfileHandler.buProfileoffsetAccountPostTextItem() : " + ex.Message);
                throw;
            }
        }
        ///*************************************************************
        ///<summary>
        ///Method Name : buProfileopenLOV
        ///</summary>
        ///<param name = "BuProfile"></param>
        ///<returns>IEnumerable<BuProfile> </returns>
        public IEnumerable<BuProfile> buProfileopenLOV()
        {
            try { 
            logger.Debug("Executing  MCTR.Web.Handlers.BuProfileHandler.buProfileopenLOV() rest service handler.");
            string restApiPath = "BuProfileService/buProfileopenLOV()";
            logger.Info("Invoking Rest API : " + restApiPath);
            var response = HandlerUtil<BuProfile>.RestGetProcessor(restApiPath);
            logger.Info("Response received form Rest API : " + restApiPath + " : " + response);
            return response;
            }
            catch (Exception ex)
            {
                logger.Info("Exception Occured at MCTR.Web.Handlers.BuProfileHandler.buProfileopenLOV() : " + ex.Message);
                throw;
            }
        }
        ///*************************************************************
        ///<summary>
        ///Method Name : buProfilebemsAdminPostTextItem
        ///</summary>
        ///<param name = "BuProfile"></param>
        ///<returns>IEnumerable<BuProfile> </returns>
        public IEnumerable<BuProfile> buProfilebemsAdminPostTextItem(BuProfile buProfile)
        {
            try { 

            logger.Debug("Executing  MCTR.Web.Handlers.BuProfileHandler.buProfilebemsAdminPostTextItem rest service handler.");
            string restApiPath = "BuProfileService/buProfilebemsAdminPostTextItem";
            logger.Info("Invoking Rest API : " + restApiPath + " with Request : " + buProfile);
            var response = HandlerUtil<BuProfile>.RestPostProcessor(restApiPath, buProfile);
            logger.Info("Response received form Rest API : " + restApiPath + " : " + response);
            return response;
            }
            catch (Exception ex)
            {
                logger.Info("Exception Occured at MCTR.Web.Handlers.BuProfileHandler.buProfilebemsAdminPostTextItem() : " + ex.Message);
                throw;
            }
        }
        ///*************************************************************
        ///<summary>
        ///Method Name : buProfilePostQuery
        ///</summary>
        ///<param name = "BuProfile"></param>
        ///<returns>IEnumerable<BuProfile> </returns>
        public IEnumerable<BuProfile> buProfilePostQuery(BuProfile buProfile)
        {
            try {

                logger.Debug("Executing  MCTR.Web.Handlers.BuProfileHandler.buProfilePostQuery rest service handler.");
                string restApiPath = "BuProfileService/buProfilePostQuery";
                logger.Info("Invoking Rest API : " + restApiPath + " with Request : " + buProfile);
                var response = HandlerUtil<BuProfile>.RestPostProcessor(restApiPath, buProfile);
                logger.Info("Response received form Rest API : " + restApiPath + " : " + response);
                return response;
            }
            catch (Exception ex)
            {
                logger.Info("Exception Occured at MCTR.Web.Handlers.BuProfileHandler.buProfilePostQuery() : " + ex.Message);
                throw;
            }
        }
        ///*************************************************************
        ///<summary>
        ///Method Name : buProfilePreInsert
        ///</summary>
        ///<param name = "BuProfile"></param>
        ///<returns>IEnumerable<BuProfile> </returns>
        public IEnumerable<BuProfile> buProfilePreInsert(IEnumerable<BuProfile> buProfile)
        {
            try { 
            logger.Debug("Executing  MCTR.Web.Handlers.BuProfileHandler.buProfilePreInsert rest service handler.");
            string restApiPath = "BuProfileService/buProfilePreInsert";
            logger.Info("Invoking Rest API : " + restApiPath + " with Request : " + buProfile);
            var response = HandlerUtil<BuProfile>.PostProcessor(restApiPath, buProfile);
            logger.Info("Response received form Rest API : " + restApiPath + " : " + response);
            return response;
            }
            catch (Exception ex)
            {
                logger.Info("Exception Occured at MCTR.Web.Handlers.BuProfileHandler.buProfilePreInsert() : " + ex.Message);
                throw;
            }
        }
        ///*************************************************************
        ///<summary>
        ///Method Name : buProfilePreUpdate
        ///</summary>
        ///<param name = "BuProfile"></param>
        ///<returns>IEnumerable<BuProfile> </returns>

        public IEnumerable<BuProfile> buProfilePreUpdate(IEnumerable<BuProfile> buProfile)
        {
            try { 

            logger.Debug("Executing  MCTR.Web.Handlers.BuProfileHandler.buProfilePreUpdate rest service handler.");
            string restApiPath = "BuProfileService/buProfilePreUpdate";
            logger.Info("Invoking Rest API : " + restApiPath + " with Request : " + buProfile);
            var response = HandlerUtil<BuProfile>.PostProcessor(restApiPath, buProfile);
            logger.Info("Response received form Rest API : " + restApiPath + " : " + response);
            return response;
            }
            catch (Exception ex)
            {
                logger.Info("Exception Occured at MCTR.Web.Handlers.BuProfileHandler.buProfilePreUpdate() : " + ex.Message);
                throw;
            }
        }
        ///*************************************************************
        ///<summary>
        ///Method Name : buProfileWhenNewFormInstance
        ///</summary>
        ///<param name = "BuProfile"></param>
        ///<returns>IEnumerable<BuProfile> </returns>
        public IEnumerable<BuProfile> buProfileWhenNewFormInstance(BuProfile buProfile)
        {
            try {
                logger.Debug("Executing  MCTR.Web.Handlers.BuProfileHandler.buProfileWhenNewFormInstance rest service handler.");
                string restApiPath = "BuProfileService/buProfileWhenNewFormInstance";
                logger.Info("Invoking Rest API : " + restApiPath + " with Request : " + buProfile);
                var response = HandlerUtil<BuProfile>.RestPostProcessor(restApiPath, buProfile);
                logger.Info("Response received form Rest API : " + restApiPath + " : " + response);
                return response;
            }
            catch (Exception ex)
            {
                logger.Info("Exception Occured at MCTR.Web.Handlers.BuProfileHandler.buProfileWhenNewFormInstance() : " + ex.Message);
                throw;
            }
        }
        ///*************************************************************
        ///<summary>
        ///Method Name : buProfileWhenWindowClosed
        ///</summary>
        ///<param name = "BuProfile"></param>
        ///<returns>IEnumerable<BuProfile> </returns>

        public IEnumerable<BuProfile> buProfileWhenWindowClosed(BuProfile buProfile)
        {
            try { 
            logger.Debug("Executing  MCTR.Web.Handlers.BuProfileHandler.buProfileWhenWindowClosed rest service handler.");
            string restApiPath = "BuProfileService/buProfileWhenWindowClosed";
            logger.Info("Invoking Rest API : " + restApiPath + " with Request : " + buProfile);
            var response = HandlerUtil<BuProfile>.RestPostProcessor(restApiPath, buProfile);
            logger.Info("Response received form Rest API : " + restApiPath + " : " + response);
            return response;
            }
            catch (Exception ex)
            {
                logger.Info("Exception Occured at MCTR.Web.Handlers.BuProfileHandler.buProfileWhenWindowClosed() : " + ex.Message);
                throw;
            }
        }
        ///*************************************************************
        ///<summary>
        ///Method Name : buProfileDelete
        ///</summary>
        ///<param name = "BuProfile"></param>
        ///<returns>IEnumerable<BuProfile> </returns>
        public IEnumerable<BuProfile> buProfileDelete(BuProfile buProfile)
        {
            try { 
            logger.Debug("Executing  MCTR.Web.Handlers.BuProfileHandler.buProfileDelete rest service handler.");
            string restApiPath = "BuProfileService/buProfileDelete";
            logger.Info("Invoking Rest API : " + restApiPath + " with Request : " + buProfile);
            var response = HandlerUtil<BuProfile>.RestPostProcessor(restApiPath, buProfile);
            logger.Info("Response received form Rest API : " + restApiPath + " : " + response);
            return response;
            }
            catch (Exception ex)
            {
                logger.Info("Exception Occured at MCTR.Web.Handlers.BuProfileHandler.buProfileDelete() : " + ex.Message);
                throw;
            }
        }
        ///*************************************************************
        ///<summary>
        ///Method Name : buProfilePostInsert
        ///</summary>
        ///<param name = "BuProfile"></param>
        ///<returns>IEnumerable<BuProfile> </returns>
        public IEnumerable<BuProfile> buProfilePostInsert(BuProfile buProfile)
        {
            try { 
            logger.Debug("Executing  MCTR.Web.Handlers.BuProfileHandler.buProfilePostInsert rest service handler.");
            string restApiPath = "BuProfileService/buProfilePostInsert";
            logger.Info("Invoking Rest API : " + restApiPath + " with Request : " + buProfile);
            var response = HandlerUtil<BuProfile>.RestPostProcessor(restApiPath, buProfile);
            logger.Info("Response received form Rest API : " + restApiPath + " : " + response);
            return response;
            }
            catch (Exception ex)
            {
                logger.Info("Exception Occured at MCTR.Web.Handlers.BuProfileHandler.buProfilePostInsert() : " + ex.Message);
                throw;
            }
        }
        ///*************************************************************
        ///<summary>
        ///Method Name : buProfilePostUpdate
        ///</summary>
        ///<param name = "BuProfile"></param>
        ///<returns>IEnumerable<BuProfile> </returns>
        public IEnumerable<BuProfile> buProfilePostUpdate(BuProfile buProfile)
        {
            try { 
            logger.Debug("Executing  MCTR.Web.Handlers.BuProfileHandler.buProfilePostUpdate rest service handler.");
            string restApiPath = "BuProfileService/buProfilePostUpdate";
            logger.Info("Invoking Rest API : " + restApiPath + " with Request : " + buProfile);
            var response = HandlerUtil<BuProfile>.RestPostProcessor(restApiPath, buProfile);
            logger.Info("Response received form Rest API : " + restApiPath + " : " + response);
            return response;
            }
            catch (Exception ex)
            {
                logger.Info("Exception Occured at MCTR.Web.Handlers.BuProfileHandler.buProfilePostUpdate() : " + ex.Message);
                throw;
            }
        }
        ///*************************************************************
        ///<summary>
        ///Method Name : buProfileGetAdmin
        ///</summary>
        ///<param name = "MctrEmployee"></param>
        ///<returns>IEnumerable<MctrEmployee> </returns>
        public IEnumerable<MctrEmployee> getRgAdminLOV(MctrEmployee employee)
        {
            try
            { 
            logger.Debug("Executing  MCTR.Web.Handlers.BuProfileHandler.buProfileGetAdmin rest service handler.");
            string restApiPath = "BuProfileService/GetAdmin";
            logger.Info("Invoking Rest API : " + restApiPath + "  ");

            var response = HandlerUtil<MctrEmployee>.RestPostProcessor(restApiPath, employee);
            logger.Info("Response received form Rest API : " + restApiPath + " : " + response);
            return response;
            }
            catch (Exception ex)
            {
                logger.Info("Exception Occured at MCTR.Web.Handlers.BuProfileHandler.buProfileGetAdmin() : " + ex.Message);
                throw;
            }
        }



    }

}

