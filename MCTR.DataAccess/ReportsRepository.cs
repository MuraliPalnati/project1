///*************************************************************************
/// 
/// BOEING CONFIDENTIAL
/// ___________________
/// 
///  BOEING is a trademark of Boeing Management Company.
///
///  Copyright © 2016 Boeing. All rights reserved.
/// 
/// NOTICE:  All information contained herein is, and remains
/// the property of Boeing and its suppliers, if any.  
/// The intellectual and technical concepts contained
/// herein are proprietary to Boeing and its suppliers and may be 
/// covered by U.S. and Foreign Patents, patents in process, 
/// and are protected by trade secret or copyright law.
/// Dissemination of this information or reproduction of this material
/// is strictly forbidden unless prior written permission is obtained
/// from Boeing. 
///

///************************************************************************
/// Author           : Generated by ATMA ®
/// Revision History :  

using System.Collections.Generic;
using log4net;
using Oracle.ManagedDataAccess.Client;
using MCTR.DataEntity;
using MCTR.DomainEntity;
using System.Linq;
using System.Data;
using MCTR.DataAccessInterface;
using System.Text;
using System;

namespace MCTR.DataAccess
{
    ///*********************************************************************
    ///<summary>
    ///TtdStatusBlRepository is a data access implementation which holds all 
    ///the data access logic in it.
    ///</summary>
    public class ReportsRepository : BaseRepository, IReportsRepository
    {
    
    private readonly ILog logger = null;

      public ReportsRepository()
    {
      logger = LogManager.GetLogger(System.Reflection.MethodBase.GetCurrentMethod().DeclaringType);
    }

        public IEnumerable<AdminTables> selectionbutactiverolebulistwhenbuttonpressed(IEnumerable<AdminTables> admintables)
        {
            List<AdminTables> adminTableList = new List<AdminTables>();

            OracleParameter[] parameter1 = new OracleParameter[2];
            logger.Debug("Executing MCTR.DataAccess.MctrCreateFormRepository.selectionbutactiverolebulistwhenbuttonpressed with input : " + admintables);
            AdminTables obj = admintables.First<AdminTables>();
            StringBuilder sb = new StringBuilder(@"select distinct mgr_last_name , mgr_first_name , to_number ( substr ( mgr_email , 2 , 7 ) ) as mgr_bems , 
last_name , first_name , middle_int , to_number ( substr ( emp_email , 2 , 7 ) ) as emp_bems , 
empl_bu , empl_loc , empl_dept , chr ( 39 ) || bems as empl_bems_id , emp_status as empl_status,
active ,TO_CHAR(last_logon, 'DD-MON-YYYY') as  last_logon , days_since_last_logon , fin_control_role , accountant_role , 
lbr_acct_role , matl_acct_role , cost_acct_role , sr_acct_role as jrnl_aprv_role, 
admin_role , TO_CHAR(date_init_add,'DD-MON-YYYY') as date_init_add , TO_CHAR(date_update,'DD-MON-YYYY') as date_update,bems_admin as admin_bems_id , auth_bu_grp , 
auth_bu , auth_bu_desc , auth_bu_admin_last_name , auth_bu_admin_first_name , 
auth_bu_admin_bems , mgr_email , emp_email,decode(trim(last_name), null, null, 
rtrim(trim(last_name) || ', ' || trim(first_name) || ' ' || trim(middle_int)) || ';') as email_empl_name from mctr_rptng_role_bu_list_v 
where active = 'Y' and auth_bu_grp = :0 and auth_bu like :1 order by mgr_last_name , mgr_bems , last_name , emp_bems ");
            parameter1[0] = new OracleParameter(":0", OracleDbType.Varchar2, obj.BusinessGroup, ParameterDirection.Input);
            parameter1[1] = new OracleParameter(":1", OracleDbType.Varchar2, obj.BusinessUnit, ParameterDirection.Input);
            var resultlist = entities.Database.SqlQuery<AuthBuExcel>(sb.ToString(), parameter1).ToList<AuthBuExcel>();
            foreach (var item in resultlist)
            {

                item.EMAIL_EMPL_NAME = "\""+item.LAST_NAME +" , " + item.FIRST_NAME + ";"+"\"";

            }
            obj.AuthBureports = resultlist;
           
            adminTableList.Add(obj);
            return adminTableList;
            
            //StringBuilder sb = new StringBuilder("select distinct mgr_last_name , mgr_first_name , to_number ( substr ( mgr_email , 2 , 7 ) ) as mgr_bems , last_name , first_name , middle_int , to_number ( substr ( emp_email , 2 , 7 ) ) as emp_bems , empl_bu , empl_loc , empl_dept , chr ( 39 ) || bems as empl_bems_id , emp_status , active , last_logon , days_since_last_logon , fin_control_role , accountant_role , lbr_acct_role , matl_acct_role , cost_acct_role , sr_acct_role , admin_role , date_init_add , date_update , bems_admin as admin_bems_id , mgr_email , emp_email from mctr_rptng_role_bu_list_v rr where active = 'Y' and ( exists ( select * from mctr_role where bems = :0 and admin_role = 'y' ) or exists ( select * from mctr_message_admin where bems_id = :0 ) )");

        }
        public IEnumerable<AdminTables> selectionbutactiveuserlistwhenbuttonpressed(IEnumerable<AdminTables> admintables)
        {
            AdminTables obj = admintables.First<AdminTables>();
            logger.Debug("Executing MCTR.DataAccess.MctrCreateFormRepository.selectionbutactiverolebulistwhenbuttonpressed with input : " + admintables);
            switch (obj.roleaccess)
            {
                case ("RAU"):
                    OracleParameter[] parameter1 = new OracleParameter[1];
                    StringBuilder sb = new StringBuilder(@"select distinct mgr_last_name , mgr_first_name ,   
substr ( mgr_email , 2 , 7 )  as mgr_bems , last_name , first_name , middle_int ,  
substr ( emp_email , 2 , 7 ) as emp_bems , empl_bu , empl_loc , empl_dept , chr ( 39 ) || bems as empl_bems_id ,
emp_status as empl_status , active , TO_CHAR(last_logon, 'DD-MON-YYYY') as  last_logon , days_since_last_logon , fin_control_role , accountant_role , lbr_acct_role , 
matl_acct_role , cost_acct_role , sr_acct_role as jrnl_apvr_role , admin_role ,  TO_CHAR(date_init_add, 'DD-MON-YYYY') as date_init_add , TO_CHAR(date_update, 'DD-MON-YYYY') as date_update ,
bems_admin as admin_bems_id , mgr_email , emp_email,decode(trim(last_name), null, null, 
rtrim(trim(last_name) || ', ' || trim(first_name) || ' ' || trim(middle_int)) || ';') as email_empl_name 
from mctr_rptng_role_bu_list_v rr where active = 'Y' and ( exists ( select * from mctr_role where bems = :0 and admin_role = 'Y' ) or 
exists ( select * from mctr_message_admin where bems_id = :0 ) ) order by mgr_last_name , mgr_bems , last_name , emp_bems ");
                    parameter1[0] = new OracleParameter(":0", OracleDbType.Varchar2, obj.SessionBems, ParameterDirection.Input);
                    var resultlist = entities.Database.SqlQuery<Activeuser>(sb.ToString(), parameter1).ToList<Activeuser>();
                    obj.activeuser = resultlist;
                    foreach (var item in resultlist)
                    {
                        item.EMAIL_EMPL_NAME = "\"" + item.LAST_NAME + " , " + item.FIRST_NAME + " " + item.MIDDLE_INT+ ";"+"\"";

                    }
                    break;
                case ("RAS"):
                    OracleParameter[] parameter2 = new OracleParameter[1];
                    StringBuilder sb2 = new StringBuilder(@"select distinct decode ( rtrim ( last_name ) || ', ' || rtrim ( first_name ) , ', ' , '[not found]' , rtrim ( last_name ) || ', ' || rtrim ( first_name ) ) as empl_name , 
bems as empl_bems , active , fin_control_role , accountant_role , lbr_acct_role , matl_acct_role ,
cost_acct_role , sr_acct_role as jrnl_apvr_role , admin_role , bems_admin as admin_bems_id , TO_CHAR(date_init_add, 'DD-MON-YYYY') as date_init_add ,
TO_CHAR(date_update, 'DD-MON-YYYY') as date_update , TO_CHAR(last_logon, 'DD-MON-YYYY') as last_logon , auth_bu_grp , '**' as emp_bu_grp_tag , decode ( auth_bu , null , 'none' , auth_bu ) as auth_abu ,
decode ( rtrim ( auth_bu_admin_last_name ) || ', ' || rtrim ( auth_bu_admin_first_name || ' ' || auth_bu_admin_middle_int ) , ', ' , 'no assignment' , 
rtrim ( auth_bu_admin_last_name ) || ', ' || rtrim ( auth_bu_admin_first_name || ' ' || auth_bu_admin_middle_int ) ) as auth_bu_admin_name ,
auth_bu_admin_bems , decode ( rtrim ( mgr_last_name ) || ', ' || rtrim ( mgr_first_name ) , ', ' , '[not found]' , rtrim ( mgr_last_name ) || ', ' || rtrim ( mgr_first_name ) ) as mgr_name , 
mgr_id as mgr_bems_id , to_number ( substr ( mgr_email , 2 , 7 ) ) as mgr_email_bems , mgr_email , last_name as empl_last_name ,
first_name as empl_first_name , middle_int as emplmiddle_int , to_number ( substr ( emp_email , 2 , 7 ) ) as emp_email_bems , emp_email , 
empl_bu , empl_loc , empl_dept , emp_status from mctr_rptng_role_bu_list_v where active = 'y' and
( exists ( select * from mctr_message_admin where bems_id = :0 ) or 
( not exists ( select * from mctr_message_admin where bems_id = :0 ) and exists ( select admin_role from mctr_role where bems = :0 and admin_role = 'Y' ) ) )");
                    parameter2[0] = new OracleParameter(":0", OracleDbType.Varchar2, obj.SessionBems, ParameterDirection.Input);
                    var resultlist2 = entities.Database.SqlQuery<ActiveState>(sb2.ToString(), parameter2).ToList<ActiveState>();
                    foreach (var item in resultlist2)
                    {
                        item.EMPL_NAME = "\"" + item.EMPL_LAST_NAME + "," +item.EMPL_FIRST_NAME+"\"";
                        item.AUTH_BU_ADMIN_NAME = "\"" + item.AUTH_BU_ADMIN_NAME + "\"";
                        item.MGR_NAME = "\"" + item.MGR_NAME + "\"";
                    }
                        obj.Activestate = resultlist2;
                    break;
                case ("RCM"):
                    if (obj.f_days == null || obj.f_days < 1 || obj.f_days > 700)
                    {
                        obj.f_days = 30;
                    }
                    OracleParameter[] parameter3 = new OracleParameter[1];
                    DateTime logDateComparer = DateTime.Now.AddDays(Convert.ToDouble(-obj.f_days));
                    StringBuilder sb3 = new StringBuilder(@"SELECT DISTINCT TRIM(PDBS.LAST_NAME || ', ' || PDBS.FIRST_NAME) AS EMPL_NAME, RLOG.ROLE_BEMS AS EMPL_BEMS, TO_CHAR(RLOG.LOG_DATE, 'MM/DD/YYYY HH:MI:SS AM') AS DATE_CHANGE_MADE, RLOG.LOG_ACTION AS ACTION , RLOG.FIELD_CHGD AS FIELD_CHANGED, RLOG.FIELD_BEFORE AS VALUE_OLD, RLOG.FIELD_AFTER AS VALUE_NEW, RLOG.LOG_BEMS AS CHGD_BY_BEMS, (SELECT LAST_NAME FROM MCTR_EMPLOYEE_V WHERE BEMS_ID = RLOG.LOG_BEMS) AS CHGD_BY_LNAME FROM MCTR_OWNER.MCTR_ROLE_CHG_LOG RLOG, MCTR_EMPLOYEE_V PDBS WHERE RLOG.LOG_DATE >= TRUNC(SYSDATE - 30) AND RLOG.ROLE_BEMS = PDBS.BEMS_ID (+) AND (EXISTS (SELECT * FROM MCTR_MESSAGE_ADMIN WHERE BEMS_ID = :0) OR (NOT EXISTS (SELECT * FROM MCTR_MESSAGE_ADMIN WHERE BEMS_ID = :0) AND EXISTS (SELECT ADMIN_ROLE FROM MCTR_ROLE WHERE BEMS = :0 AND ADMIN_ROLE = 'Y')))");
                    parameter3[0] = new OracleParameter(":0", OracleDbType.Varchar2, obj.SessionBems, ParameterDirection.Input);
                    //parameter3[1] = new OracleParameter(":1", OracleDbType.Varchar2, logDateComparer.ToString("M/d/yyyy"), ParameterDirection.Input);         
                    var resultlist3 = entities.Database.SqlQuery<ChangesMade>(sb3.ToString(), parameter3).ToList<ChangesMade>();
                    obj.changesmade = resultlist3;
                    foreach (var item in resultlist3)
                    {
                        item.EMPL_NAME = "\"" + item.EMPL_NAME + "\"";
                    }
                    break;
            }
            List<AdminTables> response = new List<AdminTables>();
            response.Add(obj);

            return response;
        }
        public IEnumerable<AdminTables> selectionbutexceleotwhenbuttonpressed(IEnumerable<AdminTables> admintables)
        {
            try
            {
                logger.Debug("Executing MCTR.DataAccess.MctrCreateFormRepository.selectionbutactiverolebulistwhenbuttonpressed with input : " + admintables);
                AdminTables obj = admintables.First<AdminTables>();
                List<AdminTables> adminTableList = new List<AdminTables>();
                OracleParameter[] parameter1 = new OracleParameter[1];
                StringBuilder sb = new StringBuilder("select max ( date_journal )  from  mctr_header where date_journal is not null and date_journal < :0 ");
                parameter1[0] = new OracleParameter(":0", OracleDbType.Varchar2, obj.JournalDate, ParameterDirection.Input);
                var v_from_date = entities.Database.SqlQuery<System.DateTime>(sb.ToString(), parameter1).SingleOrDefault();
                // var fromDate = DateTime.ParseExact(v_from_date.ToString(),"dd-MMM-yy",System.Globalization.CultureInfo.InvariantCulture);
                OracleParameter[] parameter2 = new OracleParameter[1];
                StringBuilder sb1 = new StringBuilder("select max ( date_journal )  from  mctr_header where date_journal is not null and trunc ( date_journal ) = :0 ");
                parameter2[0] = new OracleParameter(":0", OracleDbType.Varchar2, obj.JournalDate, ParameterDirection.Input);
                var v_to_date = entities.Database.SqlQuery<System.DateTime>(sb1.ToString(), parameter2).SingleOrDefault();
                // var toDate = DateTime.ParseExact(v_to_date.ToString(), "dd-MMM-yy", System.Globalization.CultureInfo.InvariantCulture);
                OracleParameter[] parameter3 = new OracleParameter[2];
                StringBuilder sb2 = new StringBuilder(@"select from_to , group_tag , status_tag , mctr_no , wk_no_prcsd , wk_no_created , wk_no_entered , 
date_time_hs_prcsd , date_hs_prcsd , date_hs_created , date_entered , date_journal , status_id , orig_bu , orig_group , bems_orig , name_bems_orig ,
bems_super , appr_cd_super , TO_CHAR(date_appr_super, 'DD-MON-YYYY') as date_appr_super , wk_no_appr_super , name_bems_super , bems_fin_ctl , appr_cd_fin_ctl , TO_CHAR(date_appr_fin_ctl, 'DD-MON-YYYY') as date_appr_fin_ctl , wk_no_appr_fin_ctl , 
name_bems_fin_ctl , bems_acct , appr_cd_acct , TO_CHAR(date_appr_acct, 'DD-MON-YYYY') as date_appr_acct , wk_no_appr_acct , name_bems_acct , bems_cost_acct , appr_cd_cost_acct , TO_CHAR(date_appr_cost_acct, 'DD-MON-YYYY') as date_appr_cost_acct ,
wk_no_appr_cost_acct , name_bems_cost_acct , bems_matl_acct , appr_cd_matl_acct , TO_CHAR(date_appr_matl_acct, 'DD-MON-YYYY') as date_appr_matl_acct , wk_no_appr_matl_acct , name_bems_matl_acct , bems_sr_acct ,
appr_cd_sr_acct , TO_CHAR(date_appr_sr_acct, 'DD-MON-YYYY') as date_appr_sr_acct , wk_no_appr_sr_acct , name_bems_sr_acct , oh_base_year , appl_jrnl_id , jv_item_cd , reason_code , reason_desc , title , reject_code ,
reject_reason , line_no ,  TO_CHAR(period_from, 'DD-MON-YYYY') as period_from , TO_CHAR(period_to, 'DD-MON-YYYY') as period_to , ttd_flag , per_flag , bems_1 , appr_cd_1 , date_appr_1 , wk_no_date_appr_1 , name_bems_1 , bems_2 , appr_cd_2 , 
date_appr_2 , wk_no_date_appr_2 , name_bems_2 , bems_3 , appr_cd_3 , date_appr_3 , wk_no_date_appr_3 , name_bems_3 , activity_id as activity_id_from , project_id as project_id_from , 
account as account_from , bum_cd as bum_cd_from , home_dept as home_dept_from , home_loc as home_loc_from , home_bugl as home_bugl_from, home_pool as home_pool_from ,
labor_rate_cd as labor_rate_cd_from  , class_cd as class_cd_from , cust_type_cd as cust_type_cd_from , work_dept as work_dept_from , work_loc as work_loc_from , 
work_bugl as work_bugl_from , work_pool as work_pool_from , rsc as rsc_from , ptt as proj_trans_type_from , ptc as proj_trans_code_from , stat_code as stat_code_from ,
uom as uom_from , oh_base_yr as oh_base_yr_from , quantity as quantity_from , amount as amount_from , adjustment as adjustment_from , amt_plus_adj as amt_plus_adj_from, 
contract_num as contract_num_from, wpd as wpd_from, bulk as bulk_from , causal_id as causal_id_from , estmtg_pricg_cd as estmtg_pricg_cd_from , po_id as po_id_from ,
part_no as part_no_from , epacs_ctt as epacs_ctt_from , shop_order as shop_order_from , po_line as po_line_from, material_quantity as material_quantity_from , 
acty_red_flg as acty_red_flg_from , dept_red_flg as work_dept_red_flg_from , work_dept_red_flg as work_dept_red_flg_from , mtl_jrnl , 
justification from mctr_rptng_metric_v where  date_time_hs_prcsd  > :0 and date_time_hs_prcsd <= :1 and 
exists ( select business_unit from mctr_bus_unit_v where business_unit = mctr_rptng_metric_v.orig_bu and op_segment_7 = 'BT' )");

                parameter3[0] = new OracleParameter(":0", OracleDbType.Date, v_from_date, ParameterDirection.Input);
                parameter3[1] = new OracleParameter(":1", OracleDbType.Date, v_to_date, ParameterDirection.Input);
                var resultlist1 = entities.Database.SqlQuery<WeeklyReportsExcel>(sb2.ToString(),parameter3).ToList<WeeklyReportsExcel>();
                obj.Weeklyreports = resultlist1;
                foreach (var item in resultlist1)
                {
                    item.NAME_BEMS_ORIG = "\"" + item.NAME_BEMS_ORIG + "\"";
                    item.NAME_BEMS_SUPER = "\"" + item.NAME_BEMS_SUPER + "\"";
                    item.NAME_BEMS_FIN_CTL = "\"" + item.NAME_BEMS_FIN_CTL + "\"";
                    item.NAME_BEMS_ACCT = "\"" + item.NAME_BEMS_ACCT + "\"";
                    item.NAME_BEMS_COST_ACCT = "\"" + item.NAME_BEMS_COST_ACCT + "\"";
                    item.NAME_BEMS_MATL_ACCT = "\"" + item.NAME_BEMS_MATL_ACCT + "\"";
                    item.NAME_BEMS_SR_ACCT = "\"" + item.NAME_BEMS_SR_ACCT + "\"";
                }
                adminTableList.Add(obj);
                return adminTableList;
            }
            catch (Exception e)
            {
                logger.Error("Error thrown from MCTRlogOrigChgRepository.Get(): " + e.Message);
                throw;
            }

        }
        public IEnumerable<AdminTables> selectionbutqtrlyrolelistwhenbuttonpressed(IEnumerable<AdminTables> admintables)
        {

            AdminTables obj = admintables.First<AdminTables>();
            List<AdminTables> adminTableList = new List<AdminTables>();
            logger.Debug("Executing MCTR.DataAccess.MctrCreateFormRepository.selectionbutactiverolebulistwhenbuttonpressed with input : " + admintables);
            switch (obj.useraccess)
            {
                case ("RNM"):
                    OracleParameter[] parameter1 = new OracleParameter[1];
                    StringBuilder sb = new StringBuilder(@"select distinct acctg_focal_lname as admin_focal_lname, acctg_focal_fname as admin_focal_fname , acctg_focal_mint as admin_focal_mint , 
acctg_focal_bems as admin_focal_bems , emp_name as empl_name, bems as empl_bems, active , fin_control_role  , accountant_role , 
lbr_acct_role , matl_acct_role , cost_acct_role , sr_acct_role as jrnl_apvr_role , admin_role , bems_admin as admin_bems_id, 
TO_CHAR(date_init_add, 'DD-MON-YYYY') as date_init_add , TO_CHAR(date_update, 'DD-MON-YYYY') as date_update ,TO_CHAR(last_logon, 'DD-MON-YYYY') as last_logon , auth_bu_grp , emp_bu_grp_tag , auth_bu , auth_bu_admin_name , auth_bu_admin_bems ,
mgr_name ,mgr_id as mgr_bems_id,  mgr_email_bems , mgr_email , last_name as empl_last_name , first_name as empl_first_name ,
middle_int emplmiddle_int , emp_email_bems , emp_email , empl_bu , empl_loc , empl_dept , emp_status as empl_status 
from mctr_owner.mctr_role_qtrly_rpt where exists ( select * from mctr_message_admin where bems_id = :0 ) or
( not exists ( select * from mctr_message_admin where bems_id = :0 ) and 
exists ( select admin_role from mctr_role where bems = :0 and admin_role = 'Y' ) )");
                    parameter1[0] = new OracleParameter(":0", OracleDbType.Varchar2, obj.SessionBems, ParameterDirection.Input);
                    var resultlist1 = entities.Database.SqlQuery<AdminReportsExcel>(sb.ToString(), parameter1).ToList<AdminReportsExcel>();
                    foreach (var item in resultlist1)
                    {

                        item.EMPL_NAME = "\"" + item.ADMIN_FOCAL_LNAME + " , " + item.ADMIN_FOCAL_FNAME + "\"";
                        item.AUTH_BU_ADMIN_NAME = "\"" + item.ADMIN_FOCAL_LNAME + " , " + item.ADMIN_FOCAL_FNAME + " " + item.ADMIN_FOCAL_MINT + "\"";
                        item.MGR_NAME = "\"" + item.MGR_NAME + "\"";

                    }
                    obj.AdminReports = resultlist1;
                    OracleParameter[] parameter2 = new OracleParameter[1];
                    StringBuilder sb1 = new StringBuilder("select distinct acctg_focal_lname , mgr_name , mctr_owner.mctr_role_qtrly_rpt .mgr_id as mgr_bems ,decode(mctr_owner.mctr_role_qtrly_rpt.mgr_emp_status, 'A', ' ', mctr_owner.mctr_role_qtrly_rpt.mgr_emp_status)as mgr_status, emp_name as empl_name, bems as empl_bems, decode(mctr_owner.mctr_role_qtrly_rpt.emp_status, 'A', ' ', mctr_owner.mctr_role_qtrly_rpt.emp_status)as empl_status, decode(contract_vendor_code, 'Y', 'Y', ' ')as contract_item, decode(trim(dept_nmw), null, ' ', (decode(length(trim(work_phone)), 12, ' ', trim(dept_nmw))))as dept_item from mctr_owner.mctr_role_qtrly_rpt , mctr_employee_v where bems = :0  and(exists(select * from mctr_message_admin where bems_id = :0) or(not exists(select * from mctr_message_admin where bems_id = :0) and exists(select admin_role from mctr_role where bems = :0 and admin_role = 'Y')))");
                    parameter2[0] = new OracleParameter(":0", OracleDbType.Varchar2, obj.SessionBems, ParameterDirection.Input);
                    var resultlist2 = entities.Database.SqlQuery<Notification2>(sb1.ToString(), parameter2).ToList<Notification2>();
                    foreach( var item in resultlist2)
                    {
                        item.MGR_NAME = "\"" + item.MGR_NAME + "\"";
                        item.EMPL_NAME = "\"" + item.EMPL_NAME + "\"";
                    }
                  
                    obj.notification2 = resultlist2;

                    break;
                case ("RM"):
                    OracleParameter[] parameter5 = new OracleParameter[1];
                    StringBuilder sb5 = new StringBuilder(@"select distinct qrpt.acctg_focal_lname as admin_focal_lname , qrpt.emp_name as empl_name, qrpt.bems as empl_bems , to_char ( rlog.log_date , 'mm/dd/yyyy hh:mi:ss am' ) as date_change_made , rlog.log_action as action , rlog.field_chgd as field_changed , rlog.field_before as value_old , rlog.field_after as value_new , rlog.log_bems as chgd_by_bems from mctr_owner.mctr_role_chg_log rlog , mctr_owner.mctr_role_qtrly_rpt qrpt where rlog.role_bems = qrpt.bems and qrpt.qtrly_rpt_run_dt <= rlog.log_date and ( exists ( select * from mctr_message_admin where bems_id = :0 ) or ( not exists ( select * from mctr_message_admin where bems_id = :0 ) and exists ( select admin_role from mctr_role where bems = :0 and admin_role = 'Y') ) )");
                    parameter5[0] = new OracleParameter(":0", OracleDbType.Varchar2, obj.SessionBems, ParameterDirection.Input);
                    var resultlist5 = entities.Database.SqlQuery<RoleModification>(sb5.ToString(), parameter5).ToList<RoleModification>();
                    foreach (var item in resultlist5)
                    {
                        item.EMPL_NAME = "\"" + item.EMPL_NAME + "\"";
                    }

                    obj.Rolemodification = resultlist5;
                    break;
                case ("RI"):
                    OracleParameter[] parameter3 = new OracleParameter[1];
                    StringBuilder sb2 = new StringBuilder(@"select distinct qrpt.acctg_focal_lname as admin_focal_lname, 'inactivated' as action_type , vrol.mgr_last_name || ', ' || vrol.mgr_first_name as mgr_name , vrol.mgr_id as mgr_email_bems , vrol.last_name || ', ' || vrol.first_name as emp_name , vrol.empl_bu , vrol.empl_loc , vrol.empl_dept , vrol.bems as emp_email_bems , vrol.fin_control_role , vrol.accountant_role , vrol.lbr_acct_role , vrol.matl_acct_role , vrol.cost_acct_role , vrol.sr_acct_role as jrnl_apvr_role , vrol.admin_role , vrol.last_logon , vrol.date_init_add , vrol.date_update , vrol.bems_admin as admin_bems_id , vrol.emp_status from mctr_owner.mctr_rptng_role_bu_list_v vrol , mctr_owner.mctr_role_qtrly_rpt qrpt where vrol.active = 'N' and vrol.bems = qrpt.bems and ( exists ( select * from mctr_message_admin where bems_id = :0 ) or ( not exists ( select * from mctr_message_admin where bems_id = :0 ) and exists ( select admin_role from mctr_role where bems =:0 and admin_role = 'Y' ) ) ) union select distinct acctg_focal_lname , 'deleted' as action_type , mgr_name , mgr_id , emp_name , empl_bu , empl_loc , empl_dept , bems as emp_bems , fin_control_role , accountant_role , lbr_acct_role , matl_acct_role , cost_acct_role , sr_acct_role , admin_role , last_logon , date_init_add , date_update , bems_admin , emp_status as empl_status from mctr_owner.mctr_role_qtrly_rpt where not exists ( select * from mctr_owner.mctr_role where bems = :0 ) and ( exists ( select * from mctr_message_admin where bems_id = :0 ) or ( not exists ( select * from mctr_message_admin where bems_id = :0 ) and exists ( select admin_role from mctr_role where bems = :0 and admin_role = 'Y' ) ) )");
                    parameter3[0] = new OracleParameter(":0", OracleDbType.Varchar2, obj.SessionBems, ParameterDirection.Input);
                    var resultlist3 = entities.Database.SqlQuery<Inactivations>(sb2.ToString(), parameter3).ToList<Inactivations>();
                    obj.inactivations = resultlist3;
                    break;
                case ("RCS"):
                    OracleParameter[] parameter4 = new OracleParameter[1];
                    StringBuilder sb3 = new StringBuilder(@"select distinct qrpt.acctg_focal_lname as admin_focal_lname , qrpt.acctg_focal_fname as admin_focal_fname ,
qrpt.acctg_focal_mint as admin_focal_mint , qrpt.acctg_focal_bems as admin_focal_bems ,
decode ( rtrim ( vrol.last_name ) || ', ' || rtrim ( vrol.first_name ) , ', ' , '[not found]' , rtrim ( vrol.last_name ) || ', ' || rtrim ( vrol.first_name ) ) as empl_name ,
qrpt.bems as empl_bems , vrol.active as active , vrol.fin_control_role as fin_control_role, vrol.accountant_role as accountant_role , vrol.lbr_acct_role as lbr_acct_role , vrol.matl_acct_role as matl_acct_role ,
vrol.cost_acct_role as cost_acct_role , vrol.sr_acct_role as jrnl_apvr_role , vrol.admin_role as admin_role , vrol.bems_admin as admin_bems_id, TO_CHAR(vrol.date_init_add,'DD-MON-YYYY') as date_init_add  , TO_CHAR(vrol.date_update,'DD-MON-YYYY') as date_update, 
   TO_CHAR(vrol.last_logon,'DD-MON-YYYY') as last_logon , vrol.auth_bu_grp , '**' as emp_bu_grp_tag , 
decode ( vrol.auth_bu , null , 'none' , vrol.auth_bu ) as auth_bu , 
decode ( rtrim ( vrol.auth_bu_admin_last_name ) || ', ' || rtrim ( vrol.auth_bu_admin_first_name || ' ' || vrol.auth_bu_admin_middle_int ) , ', ' , 'no assignment' , rtrim ( auth_bu_admin_last_name ) || ', ' || rtrim ( vrol.auth_bu_admin_first_name || ' ' || vrol.auth_bu_admin_middle_int ) ) as auth_bu_admin_name , 
vrol.auth_bu_admin_bems , decode ( rtrim ( vrol.mgr_last_name ) || ', ' || rtrim ( vrol.mgr_first_name ) , ', ' , '[not found]' , rtrim ( vrol.mgr_last_name ) || ', ' || rtrim ( vrol.mgr_first_name ) ) as mgr_name ,
vrol.mgr_id as mgr_bems_id, to_number ( substr ( vrol.mgr_email , 2 , 7 ) ) as mgr_email_bems , vrol.mgr_email , vrol.last_name as empl_last_name , 
vrol.first_name as empl_first_name , vrol.middle_int as emplmiddle_int , to_number ( substr ( vrol.emp_email , 2 , 7 ) ) as emp_email_bems , 
vrol.emp_email , vrol.empl_bu , vrol.empl_loc , vrol.empl_dept , vrol.emp_status as empl_status from mctr_rptng_role_bu_list_v vrol ,
mctr_role_qtrly_rpt qrpt where qrpt.bems = vrol.bems ( + ) and ( exists ( select * from mctr_message_admin where bems_id = :0 ) or ( not exists ( select * from mctr_message_admin where bems_id = :0 ) and exists ( select admin_role from mctr_role where bems = :0 and admin_role = 'Y') ) )");
                    parameter4[0] = new OracleParameter(":0", OracleDbType.Varchar2, obj.SessionBems, ParameterDirection.Input);
                    var resultlist4 = entities.Database.SqlQuery<CurrentStateExcel>(sb3.ToString(), parameter4).ToList<CurrentStateExcel>();
                    foreach (var item in resultlist4)
                    {
                        item.EMPL_NAME = "\"" + item.EMPL_NAME + "\"";
                        item.AUTH_BU_ADMIN_NAME = "\"" + item.AUTH_BU_ADMIN_NAME + "\"";
                        item.MGR_NAME = "\"" + item.MGR_NAME + "\"";
                    }
                    obj.currentstate = resultlist4;
                    break;

                default: throw new Exception("Please select an option");
            };
            List<AdminTables> response = new List<AdminTables>();
            response.Add(obj);

            return response;
        }
        public IEnumerable<RptJrnlbyDate> mctrJrnlbyDatedwldExcel(IEnumerable<RptJrnlbyDate> rptJrnlbyDate)
        {
            RptJrnlbyDate ObjrptJrnlbyDate = rptJrnlbyDate.First();
            OracleParameter[] parameters = new OracleParameter[5];
            StringBuilder sb = new StringBuilder(@"SELECT fx109 AS ORIGGRP,
                  fx108 AS ORIGBU,
                  TO_NUMBER(fx111) AS JRNLYEAR,                  
                  TO_CHAR(fx105,'MM-DD-YYYY') AS DATEJRNLD,
                  fx103 AS APPLJRNLID,
                  fx107 AS JVITEMCD,
                  TO_CHAR(fx104,'MM-DD-YYYY') AS DATEENTER,
                  fx110 AS STATUSID,
                  fx106 AS OH_BASEYR,
                  TO_NUMBER(fx100) AS MCTRNO,
                  TO_NUMBER(fx102) AS LICNTED,
                  TO_NUMBER(fx101) AS LASTLINO,
                  TO_CHAR(fx116) AS ABSOLUTEQTY,
                  TO_CHAR(fx115) AS ABSOLUTEAMT,
                  TO_CHAR(fx121 + fx120 + fx119 + fx118 + fx117) AS BALANCE,
                  TO_CHAR(fx114) AS LIFROMQTY,
                  TO_CHAR(fx121) AS LIFROMAMT,
                  TO_CHAR(fx118) AS OHFROMAMT,
                  TO_CHAR(fx113) AS LITOQTY,
                  TO_CHAR(fx120) AS LITOAMT,
                  TO_CHAR(fx117) AS OHTOAMT,
                  TO_CHAR(fx119) AS OFFSETAMT,
                  fx150 AS BEMS_ORIG,
                  ORIG_LNAME, 
                  ORIG_FNAME, 
                  fx151 AS BEMSFINCTL,
                  DECODE(EMPLVW.LAST_NAME, NULL, ' ', EMPLVW.LAST_NAME) AS FINCTLLNAME,
                  DECODE(EMPLVW.FIRST_NAME, NULL, ' ', EMPLVW.FIRST_NAME)AS FINCTLFNAME,
                  TITLE,
                  DECODE(fx155, NULL, ' ', fx155) AS REASONCODE,
                  DECODE(REASON_DESCR, NULL, ' ', REASON_DESCR) AS REASONDESCR,
                  TO_NUMBER(DECODE(PROG_DAYS_HIST, NULL, ' ', PROG_DAYS_HIST)) AS PROGDAYSHIST,
                  TO_NUMBER(DECODE(ACCT_DAYS_HIST, NULL, ' ', ACCT_DAYS_HIST)) AS ACCTDAYSHIST,
                  TO_NUMBER(DECODE(TOTAL_DAYS, NULL, ' ', TOTAL_DAYS)) AS TOTALDAYS
             FROM(SELECT o104607.MCTR_NO AS fx112,
                     (SUM(o104643.LI_TO_QTY)) AS fx113,
                     (SUM(o104643.LI_FROM_QTY)) AS fx114,
                     (SUM(o104643.ABSOLUTE_AMT)) AS fx115,
                     (SUM(o104643.ABSOLUTE_QTY)) AS fx116,
                     (SUM(o104643.OH_TO_AMT)) AS fx117,
                     (SUM(o104643.OH_FROM_AMT)) AS fx118,
                     (SUM(o104643.OFFSET_AMT)) AS fx119,
                     (SUM(o104643.LI_TO_AMT)) AS fx120,
                     (SUM(o104643.LI_FROM_AMT)) AS fx121
                     FROM MCTR_OWNER.MCTR_HEADER o104607,
                          MCTR_OWNER.MCTR_AMOUNT_V o104643
                    WHERE o104607.MCTR_NO = o104643.MCTR_NO(+)
                    GROUP BY o104607.MCTR_NO),
                 (SELECT o104607.MCTR_NO AS fx100,
                        (MAX(o104642.LINE_NO)) AS fx101,
                        (COUNT(o104642.LINE_NO)) AS fx102,
                         o104607.APPL_JRNL_ID AS fx103,
                         o104607.DATE_ENTER AS fx104,
                         o104607.DATE_JOURNAL AS fx105,
                         o104607.FISCAL_YEAR AS fx106,
                         o104607.JV_ITEM_CD AS fx107,
                         o104607.ORIG_BU AS fx108,
                         o104607.ORIG_GROUP AS fx109,
                         o104607.STATUS_ID AS fx110,
                        (TO_CHAR(TRUNC(o104607.DATE_JOURNAL, 'YYYY'), 'YYYY')) AS fx111,
                         o104607.TITLE,
                         o104607.BEMS_ORIG AS fx150, o104607.BEMS_FIN_CTL AS fx151,
                         DECODE(EMPLTBL.LAST_NAME, NULL, ' ', EMPLTBL.LAST_NAME) AS ORIG_LNAME,
                         DECODE(EMPLTBL.FIRST_NAME, NULL, ' ', EMPLTBL.FIRST_NAME)AS ORIG_FNAME,
                         o104607.REASON_CODE AS fx155
                    FROM MCTR_OWNER.MCTR_HEADER o104607,
                         MCTR_OWNER.MCTR_LINE_ITEM o104642,
                         MCTR_EMPLOYEE_V EMPLTBL
                   WHERE o104607.MCTR_NO = o104642.MCTR_NO(+)
                     AND o104607.ORIG_BU = :0
                     AND o104607.STATUS_ID = '99'
                     AND o104607.DATE_JOURNAL IS NOT NULL
                     AND TRUNC(o104607.DATE_JOURNAL) >= :1
            AND TRUNC(o104607.DATE_JOURNAL) >= :2
            AND o104607.BEMS_ORIG LIKE :3
            AND o104607.BEMS_FIN_CTL LIKE :4
            AND(o104642.MTL_JRNL(+) = 'N')
                     AND o104607.BEMS_ORIG = EMPLTBL.BEMS_ID(+)
                   GROUP
                      BY (TO_CHAR(TRUNC(o104607.DATE_JOURNAL, 'YYYY'), 'YYYY')),
                         o104607.TITLE, o104607.BEMS_ORIG, o104607.BEMS_FIN_CTL,
                         o104607.STATUS_ID, o104607.REASON_CODE,
                         o104607.ORIG_GROUP, o104607.ORIG_BU,
                         o104607.JV_ITEM_CD, o104607.FISCAL_YEAR,
                         o104607.DATE_JOURNAL, o104607.DATE_ENTER,
                         o104607.APPL_JRNL_ID, o104607.MCTR_NO,
                         DECODE(EMPLTBL.LAST_NAME, NULL, ' ', EMPLTBL.LAST_NAME),
                         DECODE(EMPLTBL.FIRST_NAME, NULL, ' ', EMPLTBL.FIRST_NAME)),
                  MCTR_EMPLOYEE_V EMPLVW,
                  MCTR_REASON_CODE RC,
                  MCTR_RPTNG_CYCLE_TIME_V CT
            WHERE fx100 = fx112
              AND fx100 = CT.MCTR_NO
              AND fx151 = EMPLVW.BEMS_ID(+)
              AND fx155 = RC.REASON_CODE(+)
            ORDER
               BY fx111 ASC, fx105 ASC, fx103 ASC, fx107 ASC, fx106 ASC, fx100 ASC");

            parameters[0] = new OracleParameter(":0", OracleDbType.Varchar2, ObjrptJrnlbyDate.ORIGBU, ParameterDirection.Input);
            parameters[1] = new OracleParameter(":1", OracleDbType.Varchar2, ObjrptJrnlbyDate.DATEJRNLD, ParameterDirection.Input);
            parameters[2] = new OracleParameter(":2", OracleDbType.Varchar2, ObjrptJrnlbyDate.DATEENTER, ParameterDirection.Input);
            if (ObjrptJrnlbyDate.BEMSFINCTL == "")
            {
                parameters[3] = new OracleParameter(":3", OracleDbType.Varchar2, "%", ParameterDirection.Input);
            }
            else
            {
                parameters[3] = new OracleParameter(":3", OracleDbType.Varchar2, ObjrptJrnlbyDate.BEMSFINCTL, ParameterDirection.Input);
            }
            if (ObjrptJrnlbyDate.BEMS_ORIG == "")
            {
                parameters[4] = new OracleParameter(":4", OracleDbType.Varchar2, "%", ParameterDirection.Input);
            }
            else
            {
                parameters[4] = new OracleParameter(":4", OracleDbType.Varchar2, ObjrptJrnlbyDate.BEMS_ORIG, ParameterDirection.Input);
            }
            var resultlist = entities.Database.SqlQuery<RptJrnlbyDate>(sb.ToString(), parameters).ToList<RptJrnlbyDate>();
            List<RptJrnlbyDate> listRptJrnlbyDate = null;
            listRptJrnlbyDate = new List<RptJrnlbyDate>();

            foreach (var item in resultlist)
            {
                
               
                ObjrptJrnlbyDate = new RptJrnlbyDate();
                ObjrptJrnlbyDate.ORIGGRP = item.ORIGGRP;
                ObjrptJrnlbyDate.ORIGBU = item.ORIGBU;
                ObjrptJrnlbyDate.JRNLYEAR = item.JRNLYEAR;
                ObjrptJrnlbyDate.DATEJRNLD = item.DATEJRNLD;
                ObjrptJrnlbyDate.APPLJRNLID = item.APPLJRNLID;
                ObjrptJrnlbyDate.JVITEMCD = item.JVITEMCD;
                ObjrptJrnlbyDate.DATEENTER = item.DATEENTER;
                ObjrptJrnlbyDate.STATUSID = item.STATUSID;
                ObjrptJrnlbyDate.OHBASEYR = item.OHBASEYR;
                ObjrptJrnlbyDate.MCTRNO = item.MCTRNO;
                ObjrptJrnlbyDate.LICNTED = item.LICNTED;
                ObjrptJrnlbyDate.LASTLINO = item.LASTLINO;
                ObjrptJrnlbyDate.ABSOLUTEQTY = item.ABSOLUTEQTY;
                ObjrptJrnlbyDate.ABSOLUTEAMT = item.ABSOLUTEAMT;
                ObjrptJrnlbyDate.BALANCE = item.BALANCE;
                ObjrptJrnlbyDate.LIFROMQTY = item.LIFROMQTY;
                ObjrptJrnlbyDate.LIFROMAMT = item.LIFROMAMT;
                ObjrptJrnlbyDate.OHFROMAMT = item.OHFROMAMT;
                ObjrptJrnlbyDate.LITOQTY = item.LITOQTY;
                ObjrptJrnlbyDate.LITOAMT = item.LITOAMT;
                ObjrptJrnlbyDate.OHTOAMT = item.OHTOAMT;
                ObjrptJrnlbyDate.OFFSETAMT = item.OFFSETAMT;
                ObjrptJrnlbyDate.BEMS_ORIG = item.BEMS_ORIG;
                ObjrptJrnlbyDate.ORIG_LNAME = item.ORIG_LNAME;
                ObjrptJrnlbyDate.ORIG_FNAME = item.ORIG_FNAME;
                ObjrptJrnlbyDate.BEMSFINCTL = item.BEMSFINCTL;
                //ObjrptJrnlbyDate.BEMSFINCTL_1 = item.BEMSFINCTL_1;
                ObjrptJrnlbyDate.FINCTLFNAME = item.FINCTLFNAME;
                ObjrptJrnlbyDate.FINCTLLNAME = item.FINCTLLNAME;
                ObjrptJrnlbyDate.PROGDAYSHIST = item.PROGDAYSHIST;
                ObjrptJrnlbyDate.ACCTDAYSHIST = item.ACCTDAYSHIST;
                ObjrptJrnlbyDate.TOTALDAYS = item.TOTALDAYS;
                ObjrptJrnlbyDate.REASONCODE = item.REASONCODE;
                ObjrptJrnlbyDate.REASONDESCR = item.REASONDESCR;
                ObjrptJrnlbyDate.TITLE = item.TITLE;              
                
                //ObjrptJrnlbyDate.ORIGLNAME = item.ORIGLNAME;
                //ObjrptJrnlbyDate.ORIGFNAME = item.ORIGFNAME;
                //ObjrptJrnlbyDate.BEMSORIG = item.BEMSORIG;
                //ObjrptJrnlbyDate.DATEJRNLDFROM = item.DATEJRNLDFROM;
                //ObjrptJrnlbyDate.DATEJRNLDTO = item.DATEJRNLDTO;
                listRptJrnlbyDate.Add(ObjrptJrnlbyDate);
            }                                                      
            return listRptJrnlbyDate;
        }
    }
}

