
///*************************************************************************
/// 
/// BOEING CONFIDENTIAL
/// ___________________
/// 
///  BOEING is a trademark of Boeing Management Company.
///
///  Copyright © 2016 Boeing. All rights reserved.
/// 
/// NOTICE:  All information contained herein is, and remains
/// the property of Boeing and its suppliers, if any.  
/// The intellectual and technical concepts contained
/// herein are proprietary to Boeing and its suppliers and may be 
/// covered by U.S. and Foreign Patents, patents in process, 
/// and are protected by trade secret or copyright law.
/// Dissemination of this information or reproduction of this material
/// is strictly forbidden unless prior written permission is obtained
/// from Boeing. 
///

///************************************************************************
/// Author           : Generated by ATMA ®
/// Revision History :  


using MCTR.DomainEntity;
using MCTR.Web.Handlers;

using System;
using System.Linq;
using System.Web.Mvc;
using log4net;
using MCTR.Web.Security;

namespace MCTR.Web.Controllers
{
    ///*********************************************************************
    ///<summary>
    ///MctrRptsAdmnBlController is a web controller implementation for the 
    ///MctrRptsAdmnBl screen.
    ///</summary>
    ///
    [CustomAuthorize]
    public class MctrRptsAdmnBlController : Controller
    {
         private readonly ILog logger;
        public MctrRptsAdmnBlController()
        {
            logger = LogManager.GetLogger(System.Reflection.MethodBase.GetCurrentMethod().DeclaringType);

        }

        public ActionResult getAdminRptRgBuLOV()
        {
            return PartialView();
        }
        ///*************************************************************
        ///<summary>
        ///Method Name : getRgBuJSON()
        ///</summary>
        ///<param name = "MctrRptsAdmnBl"></param>
        ///<returns>IEnumerable<MctrRptsAdmnBl> </returns>

        [HttpPost]
        public JsonResult getRgBuJSON()
        {
            try
            {
                var mctrRptsAdmnBl = new MctrRptsAdmnBl();
                mctrRptsAdmnBl.SessionBems = SessionPerister.BEMSID;
                MctrRptsAdmnBlHandler mctrRptsAdmnBlHandler = new MctrRptsAdmnBlHandler();
                logger.Debug("Executing mctrRptsAdmnBlHandler.getRgBuLOV()().");
                var mctrRptsAdmnBlResp = mctrRptsAdmnBlHandler.getRgBuLOV(mctrRptsAdmnBl);
                logger.Info("Response Received : " + mctrRptsAdmnBlResp);
                var busUnitList = mctrRptsAdmnBlResp.First().BUGroups;
                var jsonData = new
                {
                    total = 1,
                    page = 1,
                    records = busUnitList.Count(),
                    rows = busUnitList,
                    userdata = busUnitList
                };
                return Json(jsonData, JsonRequestBehavior.AllowGet);
            }
            catch(Exception e)
            {
                throw (e);
            }
        }

        ///*************************************************************
        ///<summary>
        ///Method Name : getRgToDateLOV()
        ///</summary>
        ///<param name = "MctrRptsAdmnBl"></param>
        ///<returns>IEnumerable<MctrRptsAdmnBl> </returns>
        /// 

        public ActionResult getAdminRgToDateLOV()
        {
            return PartialView();
        }

        [HttpPost]
        public JsonResult selectionbutToDateWhenButtonPressedOpenLOV()
        {

            try
            {
                MctrRptsAdmnBlHandler mctrRptsAdmnBlHandler = new MctrRptsAdmnBlHandler();
                logger.Debug("Executing mctrRptsAdmnBlHandler.getRgBuLOV()().");
                var weeklyJournalDatesResp = mctrRptsAdmnBlHandler.selectionbutToDateWhenButtonPressedOpenLOV();
                logger.Info("Response Received : " );
                var jsonData = new
                {
                    total = 1,
                    page = 1,
                    records = weeklyJournalDatesResp.Count(),
                    rows = weeklyJournalDatesResp,
                    userdata = weeklyJournalDatesResp
                };
                return Json(jsonData, JsonRequestBehavior.AllowGet);
            }
            catch (Exception e)
            {
                throw (e);
            }
        }
    }




} 
