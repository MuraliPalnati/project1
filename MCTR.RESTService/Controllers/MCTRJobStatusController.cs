///*************************************************************************
/// 
/// BOEING CONFIDENTIAL
/// ___________________
/// 
///  BOEING is a trademark of Boeing Management Company.
///
///  Copyright © 2016 Boeing. All rights reserved.
/// 
/// NOTICE:  All information contained herein is, and remains
/// the property of Boeing and its suppliers, if any.  
/// The intellectual and technical concepts contained
/// herein are proprietary to Boeing and its suppliers and may be 
/// covered by U.S. and Foreign Patents, patents in process, 
/// and are protected by trade secret or copyright law.
/// Dissemination of this information or reproduction of this material
/// is strictly forbidden unless prior written permission is obtained
/// from Boeing. 
///

///************************************************************************
/// Author           : Generated by ATMA ®

using System.Collections.Generic;
using System.Linq;
using System.Net;
using System.Net.Http;
using System.Web.Http;
using log4net;
using MCTR.DomainEntity;
using MCTR.BusinessInterface;
using MCTR.Business;
using System;

namespace MCTR.RESTService.Controllers
{

    public class MCTRJobStatusController : ApiController
    {

         private readonly ILog logger;

        public MCTRJobStatusController()
        {
            logger = LogManager.GetLogger(System.Reflection.MethodBase.GetCurrentMethod().DeclaringType);
        }


        ///*************************************************************
        ///<summary>
        ///Method Name : MCTRJobStatusOnInsert
        ///</summary>
        ///<param name = "MCTRJobStatus"></param>
        ///<returns>IEnumerable<custType> </returns>
        [HttpPost]
        [ActionName("MCTRJobStatusOnInsert")]
        public IEnumerable<MCTRJobStatus> MCTRJobStatusOnInsert([FromBody]IEnumerable<MCTRJobStatus> MCTRJobStatus)
        {
            try
            {
                logger.Info("Executing Rest API : MCTRJobStatusOnInsert() with request : " + MCTRJobStatus);
                if (MCTRJobStatus != null)
                {
                    IMCTRJobStatusBusiness MCTRJobStatusBusiness = new MCTRJobStatusBusiness();
                    var response = MCTRJobStatusBusiness.MCTRJobStatusOnInsert(MCTRJobStatus);
                    logger.Info("Response received from MCTRJobStatusBusiness.MCTRJobStatusOnInsert() : " + response);
                    return response;
                }
                return null;
            }
            catch(Exception e)
            {
                throw e;
            }
        }

        ///*************************************************************
        ///<summary>
        ///Method Name : GetData
     
        [HttpGet]
        [ActionName("GetData")]
        public IEnumerable<MCTRJobStatus> GetData()
        {
            try {
                logger.Info("Executing Rest API : GetData() : ");
                IMCTRJobStatusBusiness MCTRJobStatusBusiness = new MCTRJobStatusBusiness();
                var response = MCTRJobStatusBusiness.GetData();
                logger.Info("Response received from MCTRJobStatusBusiness.MCTRJobStatusOnInsert() : " + response);
                return response;
            }
            catch(Exception e)
            {
                throw e;
            }
        }




    }

}

