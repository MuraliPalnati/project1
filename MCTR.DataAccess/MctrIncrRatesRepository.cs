///*************************************************************************
/// 
/// BOEING CONFIDENTIAL
/// ___________________
/// 
///  BOEING is a trademark of Boeing Management Company.
///
///  Copyright © 2016 Boeing. All rights reserved.
/// 
/// NOTICE:  All information contained herein is, and remains
/// the property of Boeing and its suppliers, if any.  
/// The intellectual and technical concepts contained
/// herein are proprietary to Boeing and its suppliers and may be 
/// covered by U.S. and Foreign Patents, patents in process, 
/// and are protected by trade secret or copyright law.
/// Dissemination of this information or reproduction of this material
/// is strictly forbidden unless prior written permission is obtained
/// from Boeing. 
///

///************************************************************************
/// Author           : Generated by ATMA ®
/// Revision History :  

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using AutoMapper;
using System.Data;
using MCTR.DataEntity;
using log4net;
using Oracle.ManagedDataAccess.Client;

using MCTR.DomainEntity;
//using MCTR.DataEntity;
using MCTR.DataAccessInterface;


namespace MCTR.DataAccess
{
    ///*********************************************************************
    ///<summary>
    ///MctrIncrRatesRepository is a data access implementation which holds all 
    ///the data access logic in it.
    ///</summary>
    public class MctrIncrRatesRepository : BaseRepository, IMctrIncrRatesRepository  
    {

        private readonly ILog logger = null;
        private MctrIncrRates obj;

        public MctrIncrRatesRepository()
        {
            logger = LogManager.GetLogger(System.Reflection.MethodBase.GetCurrentMethod().DeclaringType);
        }


        ///*************************************************************
        ///<summary>
        ///Method Name : mctrIncrRatesMctrIncrRatesOnLoad
        ///</summary>
        ///<param name = "MctrIncrRates"></param>
        ///<returns>IEnumerable<MctrIncrRates> </returns>

        public IEnumerable<MctrIncrRates> mctrIncrRatesMctrIncrRatesOnLoad(IEnumerable<MctrIncrRates> mctrIncrRates)
        {
            logger.Debug("Executing MCTR.DataAccess.MctrIncrRatesRepository.mctrLineItemMctrLineItemOnLoad with input : " + mctrIncrRates);
            try
            {
                obj = mctrIncrRates.First<MctrIncrRates>();

              

                OracleParameter[] parameter1 = new OracleParameter[1];

                string sqlstmt = "select * from mctr_owner.mctr_incr_rates where exists (select lu.business_unit from mctr_role_bu lu where lu.bems = :0 and (lu.business_unit = cmpon_cd or (lu.business_unit = '**' and exists ( select bu.business_unit from MCTR_PS_BUS_UNIT_TBL7_MV bu where bu.business_unit = cmpon_cd and bu.group_cd7 = lu.group_cd7 ) ) ) ) order by cmpon_cd asc, fiscal_year asc, rsc_pool asc";//

                parameter1[0] = new OracleParameter(":lu.bems", OracleDbType.Varchar2, obj.session_bems, ParameterDirection.Input);

                var resultlist = entities.Database.SqlQuery<MctrIncrRates>(sqlstmt, parameter1).ToList<MctrIncrRates>();

                logger.Debug("Response received from MCTR.DataAccess.MctrIncrRatesRepository.mctrLineItemMctrLineItemOnLoad with response : " + resultlist);

                return resultlist;
            }
            catch (OracleException e)
            {
                logger.Error("Error from MCTR.DataAccess.MctrIncrRatesRepository.mctrIncrRatesMctrIncrRatesOnLoad" + e.Message);

                throw;
            }
            catch (Exception e)
            {
                logger.Error("Error from MCTR.DataAccess.MctrIncrRatesRepository.mctrIncrRatesMctrIncrRatesOnLoad" + e.Message);

                throw;
            }

        }


        ///*************************************************************
        ///<summary>
        ///Method Name : selectionbutRatesListWhenButtonPressed
        ///</summary>
        ///<param name = "MctrIncrRates"></param>
        ///<returns>IEnumerable<MctrIncrRates> </returns>
        ///  -- mctr rate table listing extraction query
        ///   -- download pulled data to excel file.
        public IEnumerable<MctrIncrRates> selectionbutRatesListWhenButtonPressed(IEnumerable<MctrIncrRates> mctrIncrRates)
        {
            logger.Debug("Executing MCTR.DataAccess.MctrIncrRatesRepository.selectionbutRatesListWhenButtonPressed with input : " + mctrIncrRates);
            try
            {
                OracleParameter[] parameter1 = new OracleParameter[1];

            
                var obj = mctrIncrRates.First();

                // cursor for c_rte_tbl
                StringBuilder sb = new StringBuilder("select cmpon_cd, fiscal_year, rsc_pool, sum(rate) as sumrates  from mctr_incr_rates where ( fiscal_year = :0 and :0 is not null ) or :0 is null group by cmpon_cd , fiscal_year , rsc_pool order by cmpon_cd asc , fiscal_year asc, rsc_pool asc");
                parameter1[0] = new OracleParameter(":fiscal_year", OracleDbType.Int32, obj.f_year, ParameterDirection.Input);

                var resultlist = entities.Database.SqlQuery<MctrIncrRates>(sb.ToString(), parameter1).ToList<MctrIncrRates>();

                logger.Debug("Response received from MCTR.DataAccess.MctrIncrRatesRepository.selectionbutRatesListWhenButtonPressed with response : " + resultlist);
                return resultlist;
            }
            catch (OracleException e)
            {
                logger.Error("Error from MCTR.DataAccess.MctrIncrRatesRepository.selectionbutRatesListWhenButtonPressed" + e.Message);

                throw;
            }
            catch (Exception e)
            {
                logger.Error("Error from MCTR.DataAccess.MctrIncrRatesRepository.selectionbutRatesListWhenButtonPressed" + e.Message);

                throw;
            }
        }

        ///*************************************************************
        ///<summary>
        ///Method Name : mctrIncrRatescmponCdPostTextItem
        ///</summary>
        ///<param name = "MctrIncrRates"></param>
        ///<returns>IEnumerable<MctrIncrRates> </returns>

        public IEnumerable<MctrIncrRates> mctrIncrRatescmponCdPostTextItem(IEnumerable<MctrIncrRates> mctrIncrRates)
        {
            logger.Debug("Executing MCTR.DataAccess.MctrIncrRatesRepository.mctrIncrRatescmponCdPostTextItem with input : " + mctrIncrRates);
            try
            {
                obj = mctrIncrRates.First<MctrIncrRates>();
             

                //if (obj.CMPON_CD != null)
                //{
                    OracleParameter[] parameters = new OracleParameter[2];

                    string sqlstmt = "select count(*) from mctr_role_bu lu where lu.bems = :0 and (lu.business_unit =:1 or (lu.business_unit = '**' and exists ( select bu.business_unit from MCTR_PS_BUS_UNIT_TBL7_MV bu where bu.business_unit =:1 and bu.group_cd7 = lu.group_cd7 ) ) )";
                    parameters[0] = new OracleParameter(":lu.bems", OracleDbType.Varchar2, obj.session_bems, ParameterDirection.Input);
                    parameters[1] = new OracleParameter(":lu.business_unit", OracleDbType.Varchar2, obj.CMPON_CD.ToUpper(), ParameterDirection.Input);

                    obj.v_count = entities.Database.SqlQuery<int>(sqlstmt, parameters).Single<int>();
                //}
                //if (v_count == 0)
                //{
                //    obj.CMPON_CD = null;
                //    throw new Exception("This BU is not in your BU/Group access");
                //    //message ='This BU is not in your BU/Group access';
                //}
                logger.Debug("Response received from MCTR.DataAccess.MctrIncrRatesRepository.mctrIncrRatescmponCdPostTextItem with response : " + mctrIncrRates);

                List<MctrIncrRates> Incr = new List<MctrIncrRates>();
                Incr.Add(obj);
                return Incr;
            }

            catch (OracleException e)
            {
                logger.Error("Error from MCTR.DataAccess.MctrIncrRatesRepository.mctrIncrRatescmponCdPostTextItem" + e.Message);

                throw;
            }
            catch (Exception e)
            {
                logger.Error("Error from MCTR.DataAccess.MctrIncrRatesRepository.mctrIncrRatescmponCdPostTextItem" + e.Message);

                throw;
            }
        }

        ///*************************************************************
        ///<summary>
        ///Method Name : mctrIncrRatescascadeFlgWhenMouseClick
        ///</summary>
        ///<param name = "MctrIncrRates"></param>
        ///<returns>IEnumerable<MctrIncrRates> </returns>

        public IEnumerable<MctrIncrRates> mctrIncrRatescascadeFlgWhenMouseClick(IEnumerable<MctrIncrRates> mctrIncrRates)
        {
            logger.Debug("Executing MCTR.DataAccess.MctrIncrRatesRepository.mctrIncrRatescascadeFlgWhenMouseClick with input : " + mctrIncrRates);
            //MctrIncrRatesRepository mctrincrrates = new MctrIncrRatesRepository();

            obj = mctrIncrRates.First();


            try
            {
                OracleParameter[] parameter1 = new OracleParameter[3];

             

                // cursor for c_incr_rate()
                string sqlstmt = "select rsc_input,rsc_output , pool_output , cust_type_input , bum_input , comp_seq , base_amt , rate_1 , rate_2 , rate_3 , rate_4 , rate_5 , rate_6 , rate_7 , rate_8 , rate_9 from MCTR_COMP_RATES where cmpon_cd = :0 and fiscal_year = :1 and rate_i_rsc_pool = :2";
                parameter1[0] = new OracleParameter(":cmpon_cd", OracleDbType.Varchar2, obj.CMPON_CD, ParameterDirection.Input);
                parameter1[1] = new OracleParameter(":fiscal_year", OracleDbType.Int32, obj.FISCAL_YEAR, ParameterDirection.Input);
                parameter1[2] = new OracleParameter(":rate_i_rsc_pool", OracleDbType.Varchar2, obj.RSC_POOL, ParameterDirection.Input);

                var resultlist = entities.Database.SqlQuery<MctrCompRates>(sqlstmt, parameter1).ToList<MctrCompRates>();

                OracleParameter[] parameter2 = new OracleParameter[10];
                Decimal? v_rate_output;
                string query;
                int result;

                foreach (var b in resultlist)
                {

                    v_rate_output = (Decimal)((obj.RATE) * (b.BASE_AMT + b.RATE_1 + b.RATE_2 + b.RATE_3 + b.RATE_4 + b.RATE_5 + b.RATE_6 + b.RATE_7 + b.RATE_8 + b.RATE_9));

                    query = "UPDATE MCTR_COMP_RATES  SET rate_i=:0, rate_output=:1 where (cmpon_cd = :2 and fiscal_year =:3 and rsc_input=:4 and rsc_output = :5 and pool_output = :6 and cust_type_input = :7 and bum_input = :8 and comp_seq = :9);";

                    parameter2[0] = new OracleParameter(":rate_i", OracleDbType.Int32, obj.RATE, ParameterDirection.Input);
                    parameter2[1] = new OracleParameter(":v_rate_output", OracleDbType.Int32, v_rate_output, ParameterDirection.Input);
                    parameter2[2] = new OracleParameter(":cmpon_cd", OracleDbType.Varchar2, obj.CMPON_CD, ParameterDirection.Input);
                    parameter2[3] = new OracleParameter(":fiscal_year", OracleDbType.Int32, obj.FISCAL_YEAR, ParameterDirection.Input);
                    parameter2[4] = new OracleParameter(":rsc_input", OracleDbType.Varchar2, b.RSC_INPUT, ParameterDirection.Input);
                    parameter2[5] = new OracleParameter(":rsc_output", OracleDbType.Varchar2, b.RSC_OUTPUT, ParameterDirection.Input);
                    parameter2[6] = new OracleParameter(":pool_output", OracleDbType.Varchar2, b.POOL_OUTPUT, ParameterDirection.Input);
                    parameter2[7] = new OracleParameter(":cust_type_input", OracleDbType.Varchar2, b.CUST_TYPE_INPUT, ParameterDirection.Input);
                    parameter2[8] = new OracleParameter(":bum_input", OracleDbType.Varchar2, b.BUM_INPUT, ParameterDirection.Input);
                    parameter2[9] = new OracleParameter(":comp_seq", OracleDbType.Int32, b.COMP_SEQ, ParameterDirection.Input);

                    result = entities.Database.ExecuteSqlCommand("BEGIN " + query + " END;", parameter2);

                    updateCompRates(obj.CMPON_CD, obj.FISCAL_YEAR, b.RSC_INPUT, b.RSC_OUTPUT, b.POOL_OUTPUT, b.CUST_TYPE_INPUT, b.BUM_INPUT, b.COMP_SEQ, v_rate_output);

                    //mctrincrrates.updateCompRates(obj.CMPON_CD, obj.FISCAL_YEAR, b);
                }


                string query1 = "update mctr_incr_rates set CASCADE_FLG = null where CMPON_CD =:0 and FISCAL_YEAR =:1 and RSC_POOL =:2;";
                int result2 = entities.Database.ExecuteSqlCommand("BEGIN " + query1 + " END;", parameter1);

                logger.Debug("Response received from MCTR.DataAccess.MctrIncrRatesRepository.mctrIncrRatescascadeFlgWhenMouseClick with response : " + mctrIncrRates);

                return mctrIncrRates;
            }

            catch (OracleException e)
            {
                logger.Error("Error from MCTR.DataAccess.MctrIncrRatesRepository.mctrIncrRatescascadeFlgWhenMouseClick" + e.Message);

                throw;
            }
            catch (Exception e)
            {
                logger.Error("Error from MCTR.DataAccess.MctrIncrRatesRepository.mctrIncrRatescascadeFlgWhenMouseClick" + e.Message);

                throw;
            }

        }

        ///*************************************************************
        ///<summary>
        ///Method Name : mctrIncrRatesPreUpdate
        ///</summary>
        ///<param name = "MctrIncrRates"></param>
        ///<returns>IEnumerable<MctrIncrRates> </returns>

        public IEnumerable<MctrIncrRates> mctrIncrRatesPreUpdate(IEnumerable<MctrIncrRates> mctrIncrRates)
        {
            logger.Debug("Executing MCTR.DataAccess.MctrIncrRatesRepository.mctrIncrRatescascadeFlgWhenMouseClick with input : " + mctrIncrRates);
            try
            {
                OracleParameter[] parameters = new OracleParameter[10];
                logger.Debug("Executing MCTR.DataAccess.MctrIncrRatesRepository.mctrIncrRatesPreUpdate with input : " + mctrIncrRates);
                //TODO: Move the Data Access logic from the Business implementation class to here.
                // setting the visual attributes.
                return null;
            }
            catch (Exception e)
            {
                logger.Error("Error from MCTR.DataAccess.MctrIncrRatesRepository.mctrIncrRatesPreUpdate" + e.Message);

                throw;
            }
        }

        ///*************************************************************
        ///<summary>
        ///Method Name : mctrIncrRatesPostQuery
        ///</summary>
        ///<param name = "MctrIncrRates"></param>
        ///<returns>IEnumerable<MctrIncrRates> </returns>

        public IEnumerable<MctrIncrRates> mctrIncrRatesPostQuery(IEnumerable<MctrIncrRates> mctrIncrRates)
        {
            logger.Debug("Executing MCTR.DataAccess.MctrIncrRatesRepository.mctrIncrRatesPostQuery with input : " + mctrIncrRates);
            try
            {
                OracleParameter[] parameters = new OracleParameter[10];
                logger.Debug("Executing MCTR.DataAccess.MctrIncrRatesRepository.mctrIncrRatesPostQuery with input : " + mctrIncrRates);
                //TODO: Move the Data Access logic from the Business implementation class to here.
                // setting the visual attributes.
                return null;
            }
            catch (Exception e)
            {
                logger.Error("Error from MCTR.DataAccess.MctrIncrRatesRepository.mctrIncrRatesPreUpdate" + e.Message);

                throw;
            }
        }

        ///*************************************************************
        ///<summary>
        ///Method Name : webutildummyWhenButtonPressed
        ///</summary>
        ///<param name = "MctrIncrRates"></param>
        ///<returns>IEnumerable<MctrIncrRates> </returns>

        public IEnumerable<MctrIncrRates> webutildummyWhenButtonPressed(IEnumerable<MctrIncrRates> mctrIncrRates)
        {
            logger.Debug("Executing MCTR.DataAccess.MctrIncrRatesRepository.webutildummyWhenButtonPressed with input : " + mctrIncrRates);
            try
            {
                OracleParameter[] parameters = new OracleParameter[10];
                logger.Debug("Executing MCTR.DataAccess.MctrIncrRatesRepository.webutildummyWhenButtonPressed with input : " + mctrIncrRates);
                //TODO: Move the Data Access logic from the Business implementation class to here.
                return null;
            }
            catch (Exception e)
            {
                logger.Error("Error from MCTR.DataAccess.MctrIncrRatesRepository.mctrIncrRatesPreUpdate" + e.Message);

                throw;
            }
        }

        ///*************************************************************
        ///<summary>
        ///Method Name : webutilwebutilClientinfoFunctionsWhenCustomItemEvent
        ///</summary>
        ///<param name = "MctrIncrRates"></param>
        ///<returns>IEnumerable<MctrIncrRates> </returns>

        public IEnumerable<MctrIncrRates> webutilwebutilClientinfoFunctionsWhenCustomItemEvent(IEnumerable<MctrIncrRates> mctrIncrRates)
        {
            try {
                OracleParameter[] parameters = new OracleParameter[10];
                logger.Debug("Executing MCTR.DataAccess.MctrIncrRatesRepository.webutilwebutilClientinfoFunctionsWhenCustomItemEvent with input : " + mctrIncrRates);
                //TODO: Move the Data Access logic from the Business implementation class to here.
                return null;
            }
            catch (Exception e)
            {
                logger.Error("Error from MCTR.DataAccess.MctrIncrRatesRepository.mctrIncrRatesPreUpdate" + e.Message);

                throw;
            }
        }

        ///*************************************************************
        ///<summary>
        ///Method Name : webutilwebutilFileFunctionsWhenCustomItemEvent
        ///</summary>
        ///<param name = "MctrIncrRates"></param>
        ///<returns>IEnumerable<MctrIncrRates> </returns>

        public IEnumerable<MctrIncrRates> webutilwebutilFileFunctionsWhenCustomItemEvent(IEnumerable<MctrIncrRates> mctrIncrRates)
        {
            try {
                OracleParameter[] parameters = new OracleParameter[10];
                logger.Debug("Executing MCTR.DataAccess.MctrIncrRatesRepository.webutilwebutilFileFunctionsWhenCustomItemEvent with input : " + mctrIncrRates);
                //TODO: Move the Data Access logic from the Business implementation class to here.
                return null;
            }
            catch (Exception e)
            {
                logger.Error("Error from MCTR.DataAccess.MctrIncrRatesRepository.mctrIncrRatesPreUpdate" + e.Message);

                throw;
            }
        }

        ///*************************************************************
        ///<summary>
        ///Method Name : webutilwebutilHostFunctionsWhenCustomItemEvent
        ///</summary>
        ///<param name = "MctrIncrRates"></param>
        ///<returns>IEnumerable<MctrIncrRates> </returns>

        public IEnumerable<MctrIncrRates> webutilwebutilHostFunctionsWhenCustomItemEvent(IEnumerable<MctrIncrRates> mctrIncrRates)
        {
            OracleParameter[] parameters = new OracleParameter[10];
            logger.Debug("Executing MCTR.DataAccess.MctrIncrRatesRepository.webutilwebutilHostFunctionsWhenCustomItemEvent with input : " + mctrIncrRates);
            //TODO: Move the Data Access logic from the Business implementation class to here.
            return null;
        }

        ///*************************************************************
        ///<summary>
        ///Method Name : webutilwebutilSessionFunctionsWhenCustomItemEvent
        ///</summary>
        ///<param name = "MctrIncrRates"></param>
        ///<returns>IEnumerable<MctrIncrRates> </returns>

        public IEnumerable<MctrIncrRates> webutilwebutilSessionFunctionsWhenCustomItemEvent(IEnumerable<MctrIncrRates> mctrIncrRates)
        {
            OracleParameter[] parameters = new OracleParameter[10];
            logger.Debug("Executing MCTR.DataAccess.MctrIncrRatesRepository.webutilwebutilSessionFunctionsWhenCustomItemEvent with input : " + mctrIncrRates);
            //TODO: Move the Data Access logic from the Business implementation class to here.
            return null;
        }

        ///*************************************************************
        ///<summary>
        ///Method Name : webutilwebutilFiletransferFunctionsWhenCustomItemEvent
        ///</summary>
        ///<param name = "MctrIncrRates"></param>
        ///<returns>IEnumerable<MctrIncrRates> </returns>

        public IEnumerable<MctrIncrRates> webutilwebutilFiletransferFunctionsWhenCustomItemEvent(IEnumerable<MctrIncrRates> mctrIncrRates)
        {
            OracleParameter[] parameters = new OracleParameter[10];
            logger.Debug("Executing MCTR.DataAccess.MctrIncrRatesRepository.webutilwebutilFiletransferFunctionsWhenCustomItemEvent with input : " + mctrIncrRates);
            //TODO: Move the Data Access logic from the Business implementation class to here.
            return null;
        }

        ///*************************************************************
        ///<summary>
        ///Method Name : webutilwebutilOleFunctionsWhenCustomItemEvent
        ///</summary>
        ///<param name = "MctrIncrRates"></param>
        ///<returns>IEnumerable<MctrIncrRates> </returns>

        public IEnumerable<MctrIncrRates> webutilwebutilOleFunctionsWhenCustomItemEvent(IEnumerable<MctrIncrRates> mctrIncrRates)
        {
            OracleParameter[] parameters = new OracleParameter[10];
            logger.Debug("Executing MCTR.DataAccess.MctrIncrRatesRepository.webutilwebutilOleFunctionsWhenCustomItemEvent with input : " + mctrIncrRates);
            //TODO: Move the Data Access logic from the Business implementation class to here.
            return null;
        }

        ///*************************************************************
        ///<summary>
        ///Method Name : webutilwebutilCApiFunctionsWhenCustomItemEvent
        ///</summary>
        ///<param name = "MctrIncrRates"></param>
        ///<returns>IEnumerable<MctrIncrRates> </returns>

        public IEnumerable<MctrIncrRates> webutilwebutilCApiFunctionsWhenCustomItemEvent(IEnumerable<MctrIncrRates> mctrIncrRates)
        {
            OracleParameter[] parameters = new OracleParameter[10];
            logger.Debug("Executing MCTR.DataAccess.MctrIncrRatesRepository.webutilwebutilCApiFunctionsWhenCustomItemEvent with input : " + mctrIncrRates);
            //TODO: Move the Data Access logic from the Business implementation class to here.
            return null;
        }

        ///*************************************************************
        ///<summary>
        ///Method Name : webutilwebutilBrowserFunctionsWhenCustomItemEvent
        ///</summary>
        ///<param name = "MctrIncrRates"></param>
        ///<returns>IEnumerable<MctrIncrRates> </returns>

        public IEnumerable<MctrIncrRates> webutilwebutilBrowserFunctionsWhenCustomItemEvent(IEnumerable<MctrIncrRates> mctrIncrRates)
        {
            OracleParameter[] parameters = new OracleParameter[10];
            logger.Debug("Executing MCTR.DataAccess.MctrIncrRatesRepository.webutilwebutilBrowserFunctionsWhenCustomItemEvent with input : " + mctrIncrRates);
            //TODO: Move the Data Access logic from the Business implementation class to here.
            return null;
        }

        ///*************************************************************
        ///<summary>
        ///Method Name : mctrIncrRatesWhenWindowClosed
        ///</summary>
        ///<param name = "MctrIncrRates"></param>
        ///<returns>IEnumerable<MctrIncrRates> </returns>

        public IEnumerable<MctrIncrRates> mctrIncrRatesWhenWindowClosed(IEnumerable<MctrIncrRates> mctrIncrRates)
        {
            logger.Debug("Executing MCTR.DataAccess.MctrIncrRatesRepository.mctrIncrRatesWhenWindowClosed with input : " + mctrIncrRates);
            try
            {
                OracleParameter[] parameters = new OracleParameter[10];
                logger.Debug("Executing MCTR.DataAccess.MctrIncrRatesRepository.mctrIncrRatesWhenWindowClosed with input : " + mctrIncrRates);
                //TODO: Move the Data Access logic from the Business implementation class to here.
                return null;
            }
            catch (Exception e)
            {
                logger.Error("Error from MCTR.DataAccess.MctrIncrRatesRepository.mctrIncrRatesPreUpdate" + e.Message);

                throw;
            }
        }

        ///*************************************************************
        ///<summary>
        ///Method Name : updateCompRates
        ///</summary>
        ///<param name = "MctrIncrRates"></param>
        ///<returns>IEnumerable<MctrIncrRates> </returns>

        // public IEnumerable<MctrCompRates> updateCompRates(string bu, int fyear, MctrCompRates comprates)
        public void updateCompRates(string bu, int fyear, string rscinput, string rscoutput, string pooloutput, string custtypeinput, string buminput, int compseq, Decimal? rateoutput)

        {
            logger.Debug("Executing MCTR.DataAccess.MctrIncrRatesRepository.updateCompRates with input : " );
            try
            {

                OracleParameter[] parameter1 = new OracleParameter[8];

                OracleParameter[] parameter2 = new OracleParameter[10];

                string query;
                Decimal? v_comp_rate;

                // cursors

                string sqlstmt = "select rsc_output, pool_output, cust_type_input, bum_input, comp_seq from mctr_comp_rates where cmpon_cd =:0 and fiscal_year =:1 and rsc_input =:2 and";
                string sqlstmt1 = sqlstmt + " rate_1_rsc_pool = :3 || '-' || :4 || '-' || :5 || '-' || :6 || '-' || :7";


                string sqlstmt2 = sqlstmt + " rate_2_rsc_pool = :3 || '-' || :4 || '-' || :5 || '-' || :6 || '-' || :7";
                string sqlstmt3 = sqlstmt + " rate_3_rsc_pool = :3 || '-' || :4 || '-' || :5 || '-' || :6 || '-' || :7";
                string sqlstmt4 = sqlstmt + " rate_4_rsc_pool = :3 || '-' || :4 || '-' || :5 || '-' || :6 || '-' || :7";
                string sqlstmt5 = sqlstmt + " rate_5_rsc_pool = :3 || '-' || :4 || '-' || :5 || '-' || :6 || '-' || :7";
                string sqlstmt6 = sqlstmt + " rate_6_rsc_pool = :3 || '-' || :4 || '-' || :5 || '-' || :6 || '-' || :7";
                string sqlstmt7 = sqlstmt + " rate_7_rsc_pool = :3 || '-' || :4 || '-' || :5 || '-' || :6 || '-' || :7";
                string sqlstmt8 = sqlstmt + " rate_8_rsc_pool = :3 || '-' || :4 || '-' || :5 || '-' || :6 || '-' || :7";
                string sqlstmt9 = sqlstmt + " rate_9_rsc_pool = :3 || '-' || :4 || '-' || :5 || '-' || :6 || '-' || :7";

                parameter1[0] = new OracleParameter(":cmpon_cd", OracleDbType.Varchar2, bu, ParameterDirection.Input);
                parameter1[1] = new OracleParameter(":fiscal_year", OracleDbType.Int32, fyear, ParameterDirection.Input);
                parameter1[2] = new OracleParameter(":rsc_input", OracleDbType.Varchar2, rscinput, ParameterDirection.Input);
                parameter1[3] = new OracleParameter(":rsc_output", OracleDbType.Varchar2, rscoutput, ParameterDirection.Input);
                parameter1[4] = new OracleParameter(":pool_output", OracleDbType.Varchar2, pooloutput, ParameterDirection.Input);
                parameter1[5] = new OracleParameter(":p_ct_i", OracleDbType.Varchar2, custtypeinput, ParameterDirection.Input);
                parameter1[6] = new OracleParameter(":p_bum_i", OracleDbType.Varchar2, buminput, ParameterDirection.Input);
                parameter1[7] = new OracleParameter(":p_seq", OracleDbType.Int32, compseq, ParameterDirection.Input);


                var resultlist1 = entities.Database.SqlQuery<MctrCompRates>(sqlstmt1, parameter1).ToList<MctrCompRates>();

                foreach (var b in resultlist1)
                {

                    string smt1 = "select rate_i , base_amt , rate_2 , rate_3 , rate_4 , rate_5 , rate_6 , rate_7 , rate_8 , rate_9  from mctr_comp_rates where cmpon_cd =:0 and fiscal_year = :1 and rsc_input =:2 and rsc_output =:3 and pool_output =:4 and cust_type_input = :5 and bum_input = :6 and comp_seq = :7";

                    parameter1[0] = new OracleParameter(":cmpon_cd", OracleDbType.Varchar2, bu, ParameterDirection.Input);
                    parameter1[1] = new OracleParameter(":fiscal_year", OracleDbType.Int32, fyear, ParameterDirection.Input);
                    parameter1[2] = new OracleParameter(":rsc_input", OracleDbType.Varchar2, rscinput, ParameterDirection.Input);
                    parameter1[3] = new OracleParameter(":rsc_output", OracleDbType.Varchar2, b.RSC_OUTPUT, ParameterDirection.Input);
                    parameter1[4] = new OracleParameter(":pool_output", OracleDbType.Varchar2, b.POOL_OUTPUT, ParameterDirection.Input);
                    parameter1[5] = new OracleParameter(":p_ct_i", OracleDbType.Varchar2, b.CUST_TYPE_INPUT, ParameterDirection.Input);
                    parameter1[6] = new OracleParameter(":p_bum_i", OracleDbType.Varchar2, b.BUM_INPUT, ParameterDirection.Input);
                    parameter1[7] = new OracleParameter(":p_seq", OracleDbType.Int32, b.COMP_SEQ, ParameterDirection.Input);

                    var result = entities.Database.SqlQuery<MctrCompRates>(smt1, parameter2).ToList<MctrCompRates>();

                    var c = result.First<MctrCompRates>();


                    v_comp_rate = (Decimal)((c.RATE_I) * (c.BASE_AMT + rateoutput + c.RATE_2 + c.RATE_3 + c.RATE_4 + c.RATE_5 + c.RATE_6 + c.RATE_7 + c.RATE_8 + c.RATE_9));

                    query = "UPDATE MCTR_COMP_RATES  SET rate_1=:0, rate_output=:1 where (cmpon_cd = :2 and fiscal_year =:3 and rsc_input=:4 and cust_type_input = :5 and bum_input = :6 and  comp_seq = :7 and rsc_output = :8 and pool_output = :9 )";

                    parameter2[0] = new OracleParameter(":rate_1", OracleDbType.Double, rateoutput, ParameterDirection.Input);
                    parameter2[1] = new OracleParameter(":rate_output", OracleDbType.Double, v_comp_rate, ParameterDirection.Input);
                    parameter2[2] = new OracleParameter(":cmpon_cd", OracleDbType.Varchar2, bu, ParameterDirection.Input);
                    parameter2[3] = new OracleParameter(":fiscal_year", OracleDbType.Int32, fyear, ParameterDirection.Input);
                    parameter2[4] = new OracleParameter(":rsc_input", OracleDbType.Varchar2, rscinput, ParameterDirection.Input);
                    parameter2[5] = new OracleParameter(":cust_type_input", OracleDbType.Varchar2, b.CUST_TYPE_INPUT, ParameterDirection.Input);
                    parameter2[6] = new OracleParameter(":bum_input", OracleDbType.Varchar2, b.BUM_INPUT, ParameterDirection.Input);
                    parameter2[7] = new OracleParameter(":comp_seq", OracleDbType.Int32, b.COMP_SEQ, ParameterDirection.Input);
                    parameter2[8] = new OracleParameter(":rsc_output", OracleDbType.Varchar2, b.RSC_OUTPUT, ParameterDirection.Input);
                    parameter2[9] = new OracleParameter(":pool_output", OracleDbType.Varchar2, b.POOL_OUTPUT, ParameterDirection.Input);

                    entities.Database.ExecuteSqlCommand("BEGIN " + query + " END;", parameter2);
                    updateCompRates(bu, fyear, rscinput, b.RSC_OUTPUT, b.POOL_OUTPUT, b.CUST_TYPE_INPUT, b.BUM_INPUT, b.COMP_SEQ, v_comp_rate);
                }

                var resultlist2 = entities.Database.SqlQuery<MctrCompRates>(sqlstmt2, parameter1).ToList<MctrCompRates>();
                foreach (var b in resultlist2)
                {

                    string smt1 = "select rate_i , base_amt , rate_1 , rate_3 , rate_4 , rate_5 , rate_6 , rate_7 , rate_8 , rate_9  from mctr_comp_rates where cmpon_cd =:0 and fiscal_year = :1 and rsc_input =:2 and rsc_output =:3 and pool_output =:4 and cust_type_input = :5 and bum_input = :6 and comp_seq = :7";

                    parameter1[0] = new OracleParameter(":cmpon_cd", OracleDbType.Varchar2, bu, ParameterDirection.Input);
                    parameter1[1] = new OracleParameter(":fiscal_year", OracleDbType.Int32, fyear, ParameterDirection.Input);
                    parameter1[2] = new OracleParameter(":rsc_input", OracleDbType.Varchar2, rscinput, ParameterDirection.Input);
                    parameter1[3] = new OracleParameter(":rsc_output", OracleDbType.Varchar2, b.RSC_OUTPUT, ParameterDirection.Input);
                    parameter1[4] = new OracleParameter(":pool_output", OracleDbType.Varchar2, b.POOL_OUTPUT, ParameterDirection.Input);
                    parameter1[5] = new OracleParameter(":p_ct_i", OracleDbType.Varchar2, b.CUST_TYPE_INPUT, ParameterDirection.Input);
                    parameter1[6] = new OracleParameter(":p_bum_i", OracleDbType.Varchar2, b.BUM_INPUT, ParameterDirection.Input);
                    parameter1[7] = new OracleParameter(":p_seq", OracleDbType.Int32, b.COMP_SEQ, ParameterDirection.Input);

                    var result = entities.Database.SqlQuery<MctrCompRates>(smt1, parameter2).ToList<MctrCompRates>();

                    var c = result.First<MctrCompRates>();

                    v_comp_rate = (Decimal)((c.RATE_I) * (c.BASE_AMT + rateoutput + c.RATE_1 + c.RATE_3 + c.RATE_4 + c.RATE_5 + c.RATE_6 + c.RATE_7 + c.RATE_8 + c.RATE_9));

                    query = "UPDATE MCTR_COMP_RATES  SET rate_2=:0, rate_output=:1 where (cmpon_cd = :2 and fiscal_year =:3 and rsc_input=:4 and cust_type_input = :5 and bum_input = :6 and  comp_seq = :7 and rsc_output = :8 and pool_output = :9 )";

                    parameter2[0] = new OracleParameter(":rate_2", OracleDbType.Double, rateoutput, ParameterDirection.Input);
                    parameter2[1] = new OracleParameter(":rate_output", OracleDbType.Double, v_comp_rate, ParameterDirection.Input);
                    parameter2[2] = new OracleParameter(":cmpon_cd", OracleDbType.Varchar2, bu, ParameterDirection.Input);
                    parameter2[3] = new OracleParameter(":fiscal_year", OracleDbType.Int32, fyear, ParameterDirection.Input);
                    parameter2[4] = new OracleParameter(":rsc_input", OracleDbType.Varchar2, rscinput, ParameterDirection.Input);
                    parameter2[5] = new OracleParameter(":cust_type_input", OracleDbType.Varchar2, b.CUST_TYPE_INPUT, ParameterDirection.Input);
                    parameter2[6] = new OracleParameter(":bum_input", OracleDbType.Varchar2, b.BUM_INPUT, ParameterDirection.Input);
                    parameter2[7] = new OracleParameter(":comp_seq", OracleDbType.Int32, b.COMP_SEQ, ParameterDirection.Input);
                    parameter2[8] = new OracleParameter(":rsc_output", OracleDbType.Varchar2, b.RSC_OUTPUT, ParameterDirection.Input);
                    parameter2[9] = new OracleParameter(":pool_output", OracleDbType.Varchar2, b.POOL_OUTPUT, ParameterDirection.Input);

                    entities.Database.ExecuteSqlCommand("BEGIN " + query + " END;", parameter2);
                    updateCompRates(bu, fyear, rscinput, b.RSC_OUTPUT, b.POOL_OUTPUT, b.CUST_TYPE_INPUT, b.BUM_INPUT, b.COMP_SEQ, v_comp_rate);
                }


                var resultlist3 = entities.Database.SqlQuery<MctrCompRates>(sqlstmt3, parameter1).ToList<MctrCompRates>();
                foreach (var b in resultlist3)
                {

                    string smt1 = "select rate_i , base_amt , rate_1 , rate_2 , rate_4 , rate_5 , rate_6 , rate_7 , rate_8 , rate_9  from mctr_comp_rates where cmpon_cd =:0 and fiscal_year = :1 and rsc_input =:2 and rsc_output =:3 and pool_output =:4 and cust_type_input = :5 and bum_input = :6 and comp_seq = :7";

                    parameter1[0] = new OracleParameter(":cmpon_cd", OracleDbType.Varchar2, bu, ParameterDirection.Input);
                    parameter1[1] = new OracleParameter(":fiscal_year", OracleDbType.Int32, fyear, ParameterDirection.Input);
                    parameter1[2] = new OracleParameter(":rsc_input", OracleDbType.Varchar2, rscinput, ParameterDirection.Input);
                    parameter1[3] = new OracleParameter(":rsc_output", OracleDbType.Varchar2, b.RSC_OUTPUT, ParameterDirection.Input);
                    parameter1[4] = new OracleParameter(":pool_output", OracleDbType.Varchar2, b.POOL_OUTPUT, ParameterDirection.Input);
                    parameter1[5] = new OracleParameter(":p_ct_i", OracleDbType.Varchar2, b.CUST_TYPE_INPUT, ParameterDirection.Input);
                    parameter1[6] = new OracleParameter(":p_bum_i", OracleDbType.Varchar2, b.BUM_INPUT, ParameterDirection.Input);
                    parameter1[7] = new OracleParameter(":p_seq", OracleDbType.Int32, b.COMP_SEQ, ParameterDirection.Input);

                    var result = entities.Database.SqlQuery<MctrCompRates>(smt1, parameter2).ToList<MctrCompRates>();

                    var c = result.First<MctrCompRates>();

                    v_comp_rate = (Decimal)((c.RATE_I) * (c.BASE_AMT + rateoutput + c.RATE_1 + c.RATE_2 + c.RATE_4 + c.RATE_5 + c.RATE_6 + c.RATE_7 + c.RATE_8 + c.RATE_9));

                    query = "UPDATE MCTR_COMP_RATES  SET rate_3=:0, rate_output=:1 where (cmpon_cd = :2 and fiscal_year =:3 and rsc_input=:4 and cust_type_input = :5 and bum_input = :6 and  comp_seq = :7 and rsc_output = :8 and pool_output = :9 )";

                    parameter2[0] = new OracleParameter(":rate_3", OracleDbType.Double, rateoutput, ParameterDirection.Input);
                    parameter2[1] = new OracleParameter(":rate_output", OracleDbType.Double, v_comp_rate, ParameterDirection.Input);
                    parameter2[2] = new OracleParameter(":cmpon_cd", OracleDbType.Varchar2, bu, ParameterDirection.Input);
                    parameter2[3] = new OracleParameter(":fiscal_year", OracleDbType.Int32, fyear, ParameterDirection.Input);
                    parameter2[4] = new OracleParameter(":rsc_input", OracleDbType.Varchar2, rscinput, ParameterDirection.Input);
                    parameter2[5] = new OracleParameter(":cust_type_input", OracleDbType.Varchar2, b.CUST_TYPE_INPUT, ParameterDirection.Input);
                    parameter2[6] = new OracleParameter(":bum_input", OracleDbType.Varchar2, b.BUM_INPUT, ParameterDirection.Input);
                    parameter2[7] = new OracleParameter(":comp_seq", OracleDbType.Int32, b.COMP_SEQ, ParameterDirection.Input);
                    parameter2[8] = new OracleParameter(":rsc_output", OracleDbType.Varchar2, b.RSC_OUTPUT, ParameterDirection.Input);
                    parameter2[9] = new OracleParameter(":pool_output", OracleDbType.Varchar2, b.POOL_OUTPUT, ParameterDirection.Input);

                    entities.Database.ExecuteSqlCommand("BEGIN " + query + " END;", parameter2);
                    updateCompRates(bu, fyear, rscinput, b.RSC_OUTPUT, b.POOL_OUTPUT, b.CUST_TYPE_INPUT, b.BUM_INPUT, b.COMP_SEQ, v_comp_rate);
                }
                var resultlist4 = entities.Database.SqlQuery<MctrCompRates>(sqlstmt4, parameter1).ToList<MctrCompRates>();
                foreach (var b in resultlist4)
                {

                    string smt1 = "select rate_i , base_amt , rate_1 , rate_2,rate_3 , rate_5 , rate_6 , rate_7 , rate_8 , rate_9  from mctr_comp_rates where cmpon_cd =:0 and fiscal_year = :1 and rsc_input =:2 and rsc_output =:3 and pool_output =:4 and cust_type_input = :5 and bum_input = :6 and comp_seq = :7";

                    parameter1[0] = new OracleParameter(":cmpon_cd", OracleDbType.Varchar2, bu, ParameterDirection.Input);
                    parameter1[1] = new OracleParameter(":fiscal_year", OracleDbType.Int32, fyear, ParameterDirection.Input);
                    parameter1[2] = new OracleParameter(":rsc_input", OracleDbType.Varchar2, rscinput, ParameterDirection.Input);
                    parameter1[3] = new OracleParameter(":rsc_output", OracleDbType.Varchar2, b.RSC_OUTPUT, ParameterDirection.Input);
                    parameter1[4] = new OracleParameter(":pool_output", OracleDbType.Varchar2, b.POOL_OUTPUT, ParameterDirection.Input);
                    parameter1[5] = new OracleParameter(":p_ct_i", OracleDbType.Varchar2, b.CUST_TYPE_INPUT, ParameterDirection.Input);
                    parameter1[6] = new OracleParameter(":p_bum_i", OracleDbType.Varchar2, b.BUM_INPUT, ParameterDirection.Input);
                    parameter1[7] = new OracleParameter(":p_seq", OracleDbType.Int32, b.COMP_SEQ, ParameterDirection.Input);

                    var result = entities.Database.SqlQuery<MctrCompRates>(smt1, parameter2).ToList<MctrCompRates>();

                    var c = result.First<MctrCompRates>();

                    v_comp_rate = (Decimal)((c.RATE_I) * (c.BASE_AMT + rateoutput + c.RATE_1 + +c.RATE_2 + c.RATE_3 + c.RATE_5 + c.RATE_6 + c.RATE_7 + c.RATE_8 + c.RATE_9));

                    query = "UPDATE MCTR_COMP_RATES  SET rate_4=:0, rate_output=:1 where (cmpon_cd = :2 and fiscal_year =:3 and rsc_input=:4 and cust_type_input = :5 and bum_input = :6 and  comp_seq = :7 and rsc_output = :8 and pool_output = :9 )";

                    parameter2[0] = new OracleParameter(":rate_4", OracleDbType.Double, rateoutput, ParameterDirection.Input);
                    parameter2[1] = new OracleParameter(":rate_output", OracleDbType.Double, v_comp_rate, ParameterDirection.Input);
                    parameter2[2] = new OracleParameter(":cmpon_cd", OracleDbType.Varchar2, bu, ParameterDirection.Input);
                    parameter2[3] = new OracleParameter(":fiscal_year", OracleDbType.Int32, fyear, ParameterDirection.Input);
                    parameter2[4] = new OracleParameter(":rsc_input", OracleDbType.Varchar2, rscinput, ParameterDirection.Input);
                    parameter2[5] = new OracleParameter(":cust_type_input", OracleDbType.Varchar2, b.CUST_TYPE_INPUT, ParameterDirection.Input);
                    parameter2[6] = new OracleParameter(":bum_input", OracleDbType.Varchar2, b.BUM_INPUT, ParameterDirection.Input);
                    parameter2[7] = new OracleParameter(":comp_seq", OracleDbType.Int32, b.COMP_SEQ, ParameterDirection.Input);
                    parameter2[8] = new OracleParameter(":rsc_output", OracleDbType.Varchar2, b.RSC_OUTPUT, ParameterDirection.Input);
                    parameter2[9] = new OracleParameter(":pool_output", OracleDbType.Varchar2, b.POOL_OUTPUT, ParameterDirection.Input);

                    entities.Database.ExecuteSqlCommand("BEGIN " + query + " END;", parameter2);
                    updateCompRates(bu, fyear, rscinput, b.RSC_OUTPUT, b.POOL_OUTPUT, b.CUST_TYPE_INPUT, b.BUM_INPUT, b.COMP_SEQ, v_comp_rate);
                }
                var resultlist5 = entities.Database.SqlQuery<MctrCompRates>(sqlstmt5, parameter1).ToList<MctrCompRates>();
                foreach (var b in resultlist5)
                {

                    string smt1 = "select rate_i , base_amt , rate_1 , rate_2,rate_3 , rate_4 , rate_6 , rate_7 , rate_8 , rate_9  from mctr_comp_rates where cmpon_cd =:0 and fiscal_year = :1 and rsc_input =:2 and rsc_output =:3 and pool_output =:4 and cust_type_input = :5 and bum_input = :6 and comp_seq = :7";

                    parameter1[0] = new OracleParameter(":cmpon_cd", OracleDbType.Varchar2, bu, ParameterDirection.Input);
                    parameter1[1] = new OracleParameter(":fiscal_year", OracleDbType.Int32, fyear, ParameterDirection.Input);
                    parameter1[2] = new OracleParameter(":rsc_input", OracleDbType.Varchar2, rscinput, ParameterDirection.Input);
                    parameter1[3] = new OracleParameter(":rsc_output", OracleDbType.Varchar2, b.RSC_OUTPUT, ParameterDirection.Input);
                    parameter1[4] = new OracleParameter(":pool_output", OracleDbType.Varchar2, b.POOL_OUTPUT, ParameterDirection.Input);
                    parameter1[5] = new OracleParameter(":p_ct_i", OracleDbType.Varchar2, b.CUST_TYPE_INPUT, ParameterDirection.Input);
                    parameter1[6] = new OracleParameter(":p_bum_i", OracleDbType.Varchar2, b.BUM_INPUT, ParameterDirection.Input);
                    parameter1[7] = new OracleParameter(":p_seq", OracleDbType.Int32, b.COMP_SEQ, ParameterDirection.Input);

                    var result = entities.Database.SqlQuery<MctrCompRates>(smt1, parameter2).ToList<MctrCompRates>();

                    var c = result.First<MctrCompRates>();

                    v_comp_rate = (Decimal)((c.RATE_I) * (c.BASE_AMT + rateoutput + c.RATE_1 + +c.RATE_2 + c.RATE_3 + c.RATE_4 + c.RATE_6 + c.RATE_7 + c.RATE_8 + c.RATE_9));

                    query = "UPDATE MCTR_COMP_RATES  SET rate_5=:0, rate_output=:1 where (cmpon_cd = :2 and fiscal_year =:3 and rsc_input=:4 and cust_type_input = :5 and bum_input = :6 and  comp_seq = :7 and rsc_output = :8 and pool_output = :9 )";

                    parameter2[0] = new OracleParameter(":rate_5", OracleDbType.Double, rateoutput, ParameterDirection.Input);
                    parameter2[1] = new OracleParameter(":rate_output", OracleDbType.Double, v_comp_rate, ParameterDirection.Input);
                    parameter2[2] = new OracleParameter(":cmpon_cd", OracleDbType.Varchar2, bu, ParameterDirection.Input);
                    parameter2[3] = new OracleParameter(":fiscal_year", OracleDbType.Int32, fyear, ParameterDirection.Input);
                    parameter2[4] = new OracleParameter(":rsc_input", OracleDbType.Varchar2, rscinput, ParameterDirection.Input);
                    parameter2[5] = new OracleParameter(":cust_type_input", OracleDbType.Varchar2, b.CUST_TYPE_INPUT, ParameterDirection.Input);
                    parameter2[6] = new OracleParameter(":bum_input", OracleDbType.Varchar2, b.BUM_INPUT, ParameterDirection.Input);
                    parameter2[7] = new OracleParameter(":comp_seq", OracleDbType.Int32, b.COMP_SEQ, ParameterDirection.Input);
                    parameter2[8] = new OracleParameter(":rsc_output", OracleDbType.Varchar2, b.RSC_OUTPUT, ParameterDirection.Input);
                    parameter2[9] = new OracleParameter(":pool_output", OracleDbType.Varchar2, b.POOL_OUTPUT, ParameterDirection.Input);

                    entities.Database.ExecuteSqlCommand("BEGIN " + query + " END;", parameter2);
                    updateCompRates(bu, fyear, rscinput, b.RSC_OUTPUT, b.POOL_OUTPUT, b.CUST_TYPE_INPUT, b.BUM_INPUT, b.COMP_SEQ, v_comp_rate);
                }
                var resultlist6 = entities.Database.SqlQuery<MctrCompRates>(sqlstmt6, parameter1).ToList<MctrCompRates>();
                foreach (var b in resultlist6)
                {

                    string smt1 = "select rate_i , base_amt , rate_1 , rate_2,rate_3 , rate_4 , rate_5 , rate_7 , rate_8 , rate_9  from mctr_comp_rates where cmpon_cd =:0 and fiscal_year = :1 and rsc_input =:2 and rsc_output =:3 and pool_output =:4 and cust_type_input = :5 and bum_input = :6 and comp_seq = :7";

                    parameter1[0] = new OracleParameter(":cmpon_cd", OracleDbType.Varchar2, bu, ParameterDirection.Input);
                    parameter1[1] = new OracleParameter(":fiscal_year", OracleDbType.Int32, fyear, ParameterDirection.Input);
                    parameter1[2] = new OracleParameter(":rsc_input", OracleDbType.Varchar2, rscinput, ParameterDirection.Input);
                    parameter1[3] = new OracleParameter(":rsc_output", OracleDbType.Varchar2, b.RSC_OUTPUT, ParameterDirection.Input);
                    parameter1[4] = new OracleParameter(":pool_output", OracleDbType.Varchar2, b.POOL_OUTPUT, ParameterDirection.Input);
                    parameter1[5] = new OracleParameter(":p_ct_i", OracleDbType.Varchar2, b.CUST_TYPE_INPUT, ParameterDirection.Input);
                    parameter1[6] = new OracleParameter(":p_bum_i", OracleDbType.Varchar2, b.BUM_INPUT, ParameterDirection.Input);
                    parameter1[7] = new OracleParameter(":p_seq", OracleDbType.Int32, b.COMP_SEQ, ParameterDirection.Input);

                    var result = entities.Database.SqlQuery<MctrCompRates>(smt1, parameter2).ToList<MctrCompRates>();

                    var c = result.First<MctrCompRates>();

                    v_comp_rate = (Decimal)((c.RATE_I) * (c.BASE_AMT + rateoutput + c.RATE_1 + +c.RATE_2 + c.RATE_3 + c.RATE_4 + c.RATE_5 + c.RATE_7 + c.RATE_8 + c.RATE_9));

                    query = "UPDATE MCTR_COMP_RATES  SET rate_6=:0, rate_output=:1 where (cmpon_cd = :2 and fiscal_year =:3 and rsc_input=:4 and cust_type_input = :5 and bum_input = :6 and  comp_seq = :7 and rsc_output = :8 and pool_output = :9 )";

                    parameter2[0] = new OracleParameter(":rate_6", OracleDbType.Double, rateoutput, ParameterDirection.Input);
                    parameter2[1] = new OracleParameter(":rate_output", OracleDbType.Double, v_comp_rate, ParameterDirection.Input);
                    parameter2[2] = new OracleParameter(":cmpon_cd", OracleDbType.Varchar2, bu, ParameterDirection.Input);
                    parameter2[3] = new OracleParameter(":fiscal_year", OracleDbType.Int32, fyear, ParameterDirection.Input);
                    parameter2[4] = new OracleParameter(":rsc_input", OracleDbType.Varchar2, rscinput, ParameterDirection.Input);
                    parameter2[5] = new OracleParameter(":cust_type_input", OracleDbType.Varchar2, b.CUST_TYPE_INPUT, ParameterDirection.Input);
                    parameter2[6] = new OracleParameter(":bum_input", OracleDbType.Varchar2, b.BUM_INPUT, ParameterDirection.Input);
                    parameter2[7] = new OracleParameter(":comp_seq", OracleDbType.Int32, b.COMP_SEQ, ParameterDirection.Input);
                    parameter2[8] = new OracleParameter(":rsc_output", OracleDbType.Varchar2, b.RSC_OUTPUT, ParameterDirection.Input);
                    parameter2[9] = new OracleParameter(":pool_output", OracleDbType.Varchar2, b.POOL_OUTPUT, ParameterDirection.Input);

                    entities.Database.ExecuteSqlCommand("BEGIN " + query + " END;", parameter2);
                    updateCompRates(bu, fyear, rscinput, b.RSC_OUTPUT, b.POOL_OUTPUT, b.CUST_TYPE_INPUT, b.BUM_INPUT, b.COMP_SEQ, v_comp_rate);
                }
                var resultlist7 = entities.Database.SqlQuery<MctrCompRates>(sqlstmt7, parameter1).ToList<MctrCompRates>();
                foreach (var b in resultlist7)
                {
                    string smt1 = "select rate_i , base_amt , rate_1 , rate_2,rate_3 , rate_4 , rate_5 , rate_6 , rate_8 , rate_9  from mctr_comp_rates where cmpon_cd =:0 and fiscal_year = :1 and rsc_input =:2 and rsc_output =:3 and pool_output =:4 and cust_type_input = :5 and bum_input = :6 and comp_seq = :7";

                    parameter1[0] = new OracleParameter(":cmpon_cd", OracleDbType.Varchar2, bu, ParameterDirection.Input);
                    parameter1[1] = new OracleParameter(":fiscal_year", OracleDbType.Int32, fyear, ParameterDirection.Input);
                    parameter1[2] = new OracleParameter(":rsc_input", OracleDbType.Varchar2, rscinput, ParameterDirection.Input);
                    parameter1[3] = new OracleParameter(":rsc_output", OracleDbType.Varchar2, b.RSC_OUTPUT, ParameterDirection.Input);
                    parameter1[4] = new OracleParameter(":pool_output", OracleDbType.Varchar2, b.POOL_OUTPUT, ParameterDirection.Input);
                    parameter1[5] = new OracleParameter(":p_ct_i", OracleDbType.Varchar2, b.CUST_TYPE_INPUT, ParameterDirection.Input);
                    parameter1[6] = new OracleParameter(":p_bum_i", OracleDbType.Varchar2, b.BUM_INPUT, ParameterDirection.Input);
                    parameter1[7] = new OracleParameter(":p_seq", OracleDbType.Int32, b.COMP_SEQ, ParameterDirection.Input);

                    var result = entities.Database.SqlQuery<MctrCompRates>(smt1, parameter2).ToList<MctrCompRates>();

                    var c = result.First<MctrCompRates>();

                    v_comp_rate = (Decimal)((c.RATE_I) * (c.BASE_AMT + rateoutput + c.RATE_1 + +c.RATE_2 + c.RATE_3 + c.RATE_4 + c.RATE_5 + c.RATE_6 + c.RATE_8 + c.RATE_9));

                    query = "UPDATE MCTR_COMP_RATES  SET rate_7=:0, rate_output=:1 where (cmpon_cd = :2 and fiscal_year =:3 and rsc_input=:4 and cust_type_input = :5 and bum_input = :6 and  comp_seq = :7 and rsc_output = :8 and pool_output = :9 )";

                    parameter2[0] = new OracleParameter(":rate_7", OracleDbType.Double, rateoutput, ParameterDirection.Input);
                    parameter2[1] = new OracleParameter(":rate_output", OracleDbType.Double, v_comp_rate, ParameterDirection.Input);
                    parameter2[2] = new OracleParameter(":cmpon_cd", OracleDbType.Varchar2, bu, ParameterDirection.Input);
                    parameter2[3] = new OracleParameter(":fiscal_year", OracleDbType.Int32, fyear, ParameterDirection.Input);
                    parameter2[4] = new OracleParameter(":rsc_input", OracleDbType.Varchar2, rscinput, ParameterDirection.Input);
                    parameter2[5] = new OracleParameter(":cust_type_input", OracleDbType.Varchar2, b.CUST_TYPE_INPUT, ParameterDirection.Input);
                    parameter2[6] = new OracleParameter(":bum_input", OracleDbType.Varchar2, b.BUM_INPUT, ParameterDirection.Input);
                    parameter2[7] = new OracleParameter(":comp_seq", OracleDbType.Int32, b.COMP_SEQ, ParameterDirection.Input);
                    parameter2[8] = new OracleParameter(":rsc_output", OracleDbType.Varchar2, b.RSC_OUTPUT, ParameterDirection.Input);
                    parameter2[9] = new OracleParameter(":pool_output", OracleDbType.Varchar2, b.POOL_OUTPUT, ParameterDirection.Input);

                    entities.Database.ExecuteSqlCommand("BEGIN " + query + " END;", parameter2);
                    updateCompRates(bu, fyear, rscinput, b.RSC_OUTPUT, b.POOL_OUTPUT, b.CUST_TYPE_INPUT, b.BUM_INPUT, b.COMP_SEQ, v_comp_rate);
                }
                var resultlist8 = entities.Database.SqlQuery<MctrCompRates>(sqlstmt8, parameter1).ToList<MctrCompRates>();
                foreach (var b in resultlist8)
                {

                    string smt1 = "select rate_i , base_amt , rate_1 , rate_2,rate_3 , rate_4 , rate_5 , rate_6 , rate_7 , rate_9  from mctr_comp_rates where cmpon_cd =:0 and fiscal_year = :1 and rsc_input =:2 and rsc_output =:3 and pool_output =:4 and cust_type_input = :5 and bum_input = :6 and comp_seq = :7";

                    parameter1[0] = new OracleParameter(":cmpon_cd", OracleDbType.Varchar2, bu, ParameterDirection.Input);
                    parameter1[1] = new OracleParameter(":fiscal_year", OracleDbType.Int32, fyear, ParameterDirection.Input);
                    parameter1[2] = new OracleParameter(":rsc_input", OracleDbType.Varchar2, rscinput, ParameterDirection.Input);
                    parameter1[3] = new OracleParameter(":rsc_output", OracleDbType.Varchar2, b.RSC_OUTPUT, ParameterDirection.Input);
                    parameter1[4] = new OracleParameter(":pool_output", OracleDbType.Varchar2, b.POOL_OUTPUT, ParameterDirection.Input);
                    parameter1[5] = new OracleParameter(":p_ct_i", OracleDbType.Varchar2, b.CUST_TYPE_INPUT, ParameterDirection.Input);
                    parameter1[6] = new OracleParameter(":p_bum_i", OracleDbType.Varchar2, b.BUM_INPUT, ParameterDirection.Input);
                    parameter1[7] = new OracleParameter(":p_seq", OracleDbType.Int32, b.COMP_SEQ, ParameterDirection.Input);

                    var result = entities.Database.SqlQuery<MctrCompRates>(smt1, parameter2).ToList<MctrCompRates>();

                    var c = result.First<MctrCompRates>();

                    v_comp_rate = (Decimal)((c.RATE_I) * (c.BASE_AMT + rateoutput + c.RATE_1 + +c.RATE_2 + c.RATE_3 + c.RATE_4 + c.RATE_5 + c.RATE_6 + c.RATE_7 + c.RATE_9));

                    query = "UPDATE MCTR_COMP_RATES  SET rate_8=:0, rate_output=:1 where (cmpon_cd = :2 and fiscal_year =:3 and rsc_input=:4 and cust_type_input = :5 and bum_input = :6 and  comp_seq = :7 and rsc_output = :8 and pool_output = :9 )";

                    parameter2[0] = new OracleParameter(":rate_8", OracleDbType.Double, rateoutput, ParameterDirection.Input);
                    parameter2[1] = new OracleParameter(":rate_output", OracleDbType.Double, v_comp_rate, ParameterDirection.Input);
                    parameter2[2] = new OracleParameter(":cmpon_cd", OracleDbType.Varchar2, bu, ParameterDirection.Input);
                    parameter2[3] = new OracleParameter(":fiscal_year", OracleDbType.Int32, fyear, ParameterDirection.Input);
                    parameter2[4] = new OracleParameter(":rsc_input", OracleDbType.Varchar2, rscinput, ParameterDirection.Input);
                    parameter2[5] = new OracleParameter(":cust_type_input", OracleDbType.Varchar2, b.CUST_TYPE_INPUT, ParameterDirection.Input);
                    parameter2[6] = new OracleParameter(":bum_input", OracleDbType.Varchar2, b.BUM_INPUT, ParameterDirection.Input);
                    parameter2[7] = new OracleParameter(":comp_seq", OracleDbType.Int32, b.COMP_SEQ, ParameterDirection.Input);
                    parameter2[8] = new OracleParameter(":rsc_output", OracleDbType.Varchar2, b.RSC_OUTPUT, ParameterDirection.Input);
                    parameter2[9] = new OracleParameter(":pool_output", OracleDbType.Varchar2, b.POOL_OUTPUT, ParameterDirection.Input);

                    entities.Database.ExecuteSqlCommand("BEGIN " + query + " END;", parameter2);
                    updateCompRates(bu, fyear, rscinput, b.RSC_OUTPUT, b.POOL_OUTPUT, b.CUST_TYPE_INPUT, b.BUM_INPUT, b.COMP_SEQ, v_comp_rate);
                }

                var resultlist9 = entities.Database.SqlQuery<MctrCompRates>(sqlstmt9, parameter1).ToList<MctrCompRates>();

                foreach (var b in resultlist9)
                {

                    string smt1 = "select rate_i , base_amt , rate_1 , rate_2,rate_3 , rate_4 , rate_5 , rate_6 , rate_7 , rate_8  from mctr_comp_rates where cmpon_cd =:0 and fiscal_year = :1 and rsc_input =:2 and rsc_output =:3 and pool_output =:4 and cust_type_input = :5 and bum_input = :6 and comp_seq = :7";

                    parameter1[0] = new OracleParameter(":cmpon_cd", OracleDbType.Varchar2, bu, ParameterDirection.Input);
                    parameter1[1] = new OracleParameter(":fiscal_year", OracleDbType.Int32, fyear, ParameterDirection.Input);
                    parameter1[2] = new OracleParameter(":rsc_input", OracleDbType.Varchar2, rscinput, ParameterDirection.Input);
                    parameter1[3] = new OracleParameter(":rsc_output", OracleDbType.Varchar2, b.RSC_OUTPUT, ParameterDirection.Input);
                    parameter1[4] = new OracleParameter(":pool_output", OracleDbType.Varchar2, b.POOL_OUTPUT, ParameterDirection.Input);
                    parameter1[5] = new OracleParameter(":p_ct_i", OracleDbType.Varchar2, b.CUST_TYPE_INPUT, ParameterDirection.Input);
                    parameter1[6] = new OracleParameter(":p_bum_i", OracleDbType.Varchar2, b.BUM_INPUT, ParameterDirection.Input);
                    parameter1[7] = new OracleParameter(":p_seq", OracleDbType.Int32, b.COMP_SEQ, ParameterDirection.Input);

                    var result = entities.Database.SqlQuery<MctrCompRates>(smt1, parameter2).ToList<MctrCompRates>();

                    var c = result.First<MctrCompRates>();

                    v_comp_rate = (Decimal)((c.RATE_I) * (c.BASE_AMT + rateoutput + c.RATE_1 + +c.RATE_2 + c.RATE_3 + c.RATE_4 + c.RATE_5 + c.RATE_6 + c.RATE_7 + c.RATE_8));

                    query = "UPDATE MCTR_COMP_RATES  SET rate_9=:0, rate_output=:1 where (cmpon_cd = :2 and fiscal_year =:3 and rsc_input=:4 and cust_type_input = :5 and bum_input = :6 and  comp_seq = :7 and rsc_output = :8 and pool_output = :9 )";

                    parameter2[0] = new OracleParameter(":rate_9", OracleDbType.Double, rateoutput, ParameterDirection.Input);
                    parameter2[1] = new OracleParameter(":rate_output", OracleDbType.Double, v_comp_rate, ParameterDirection.Input);
                    parameter2[2] = new OracleParameter(":cmpon_cd", OracleDbType.Varchar2, bu, ParameterDirection.Input);
                    parameter2[3] = new OracleParameter(":fiscal_year", OracleDbType.Int32, fyear, ParameterDirection.Input);
                    parameter2[4] = new OracleParameter(":rsc_input", OracleDbType.Varchar2, rscinput, ParameterDirection.Input);
                    parameter2[5] = new OracleParameter(":cust_type_input", OracleDbType.Varchar2, b.CUST_TYPE_INPUT, ParameterDirection.Input);
                    parameter2[6] = new OracleParameter(":bum_input", OracleDbType.Varchar2, b.BUM_INPUT, ParameterDirection.Input);
                    parameter2[7] = new OracleParameter(":comp_seq", OracleDbType.Int32, b.COMP_SEQ, ParameterDirection.Input);
                    parameter2[8] = new OracleParameter(":rsc_output", OracleDbType.Varchar2, b.RSC_OUTPUT, ParameterDirection.Input);
                    parameter2[9] = new OracleParameter(":pool_output", OracleDbType.Varchar2, b.POOL_OUTPUT, ParameterDirection.Input);

                    entities.Database.ExecuteSqlCommand("BEGIN " + query + " END;", parameter2);
                    updateCompRates(bu, fyear, rscinput, b.RSC_OUTPUT, b.POOL_OUTPUT, b.CUST_TYPE_INPUT, b.BUM_INPUT, b.COMP_SEQ, v_comp_rate);
                }

                logger.Debug("Response received from  MCTR.DataAccess.MctrIncrRatesRepository.updateCompRates: ");
            }
            catch (OracleException e)
            {
                logger.Error("Error from MCTR.DataAccess.MctrIncrRatesRepository.updateCompRates" + e.Message);

                throw;
            }
            catch (Exception e)
            {
                logger.Error("Error from MCTR.DataAccess.MctrIncrRatesRepository.updateCompRates" + e.Message);

                throw;
            }
        }



        ///*************************************************************
        ///<summary>
        ///Method Name : mctrIncrRatesWhenNewFormInstance
        ///</summary>
        ///<param name = "MctrIncrRates"></param>
        ///<returns>IEnumerable<MctrIncrRates> </returns>

        public IEnumerable<MctrIncrRates> mctrIncrRatesWhenNewFormInstance()
        {
            logger.Debug("Executing MCTR.DataAccess.MctrIncrRatesRepository.mctrIncrRatesWhenNewFormInstance with input : ");
            try
            {
                List<MctrIncrRates> ra = new List<MctrIncrRates>();

                MctrIncrRates a = new MctrIncrRates();

            

                string sqlstmt2 = "select max(fiscal_year) from mctr_lbr_rate";

                int f_year = entities.Database.SqlQuery<int>(sqlstmt2).Single<int>();

                a.f_year = f_year;

                logger.Debug("Response received from  MCTR.DataAccess.MctrIncrRatesRepository.mctrIncrRatesWhenNewFormInstance with input : ");

                ra.Add(a);
                return ra;
            }

            catch (OracleException e)
            {
                logger.Error("Error from MCTR.DataAccess.MctrIncrRatesRepository.mctrIncrRatesWhenNewFormInstance" + e.Message);

                throw;
            }
            catch (Exception e)
            {
                logger.Error("Error from MCTR.DataAccess.MctrIncrRatesRepository.mctrIncrRatesWhenNewFormInstance" + e.Message);

                throw;
            }

        }


        ///*************************************************************
        ///<summary>
        ///Method Name : fyear
        ///</summary>
    

        public int fyear()
        {
            logger.Debug("Executing MCTR.DataAccess.MctrIncrRatesRepository.mctrIncrRatesWhenNewFormInstance with input : ");
            try {
                List<MctrIncrRates> a = new List<MctrIncrRates>();

                string sqlstmt2 = "select max(fiscal_year) from mctr_lbr_rate";

                int v1 = entities.Database.SqlQuery<int>(sqlstmt2).Single<int>();



                return v1;
            }
            catch(Exception e)
            {
                throw e;

            }

        }


        ///*************************************************************
        ///<summary>
        ///Method Name : CreateStatus
        ///</summary>
        ///<param name = "MctrIncrRates"></param>
        ///<returns>IEnumerable<MctrIncrRates> </returns>


        public IEnumerable<MctrIncrRates> Create(IEnumerable<MctrIncrRates> mctrIncrRates)
        {
            obj = mctrIncrRates.First<MctrIncrRates>();
            obj.IncrCount = new Dictionary<string, int>();
            obj.IncrCount.Clear();
           // logger.Debug("Executing MCTR.DataAccess.LbrRateRepository.Create() with input : " + mctrIncrRates);
            try
            {
                StringBuilder sql = new StringBuilder();
                OracleParameter[] parameters = new OracleParameter[3];
                sql = new StringBuilder("SELECT COUNT(*) FROM MCTR_INCR_RATES WHERE CMPON_CD=:0 AND FISCAL_YEAR=:1 AND RSC_POOL=:2");
                parameters[0] = new OracleParameter(":0", OracleDbType.Varchar2, obj.CMPON_CD.ToUpper(), ParameterDirection.Input);
                parameters[1] = new OracleParameter(":1", OracleDbType.Int32, obj.FISCAL_YEAR, ParameterDirection.Input);
                parameters[2] = new OracleParameter(":2", OracleDbType.Varchar2, obj.RSC_POOL.ToUpper(), ParameterDirection.Input);
                var v_count = entities.Database.SqlQuery<int>(sql.ToString(), parameters).SingleOrDefault();

                obj.IncrCount.Add("add", v_count);
                if (v_count == 0)
                {
                    obj = mctrIncrRates.First<MctrIncrRates>();
                    OracleParameter[] parameter1 = new OracleParameter[4];
                    string query = "insert into MCTR_INCR_RATES (CMPON_CD,FISCAL_YEAR,RSC_POOL,RATE) VALUES (:0,:1,:2,:3);";
                    parameter1[0] = new OracleParameter(":0", OracleDbType.Varchar2, obj.CMPON_CD.ToUpper(), ParameterDirection.Input);
                    parameter1[1] = new OracleParameter(":1", OracleDbType.Int32, obj.FISCAL_YEAR, ParameterDirection.Input);
                    parameter1[2] = new OracleParameter(":2", OracleDbType.Varchar2, obj.RSC_POOL.ToUpper(), ParameterDirection.Input);
                    parameter1[3] = new OracleParameter(":3", OracleDbType.Double, obj.RATE, ParameterDirection.Input);

                    int result = entities.Database.ExecuteSqlCommand("BEGIN " + query + " END;", parameter1);
                }
                return mctrIncrRates;
            }
            catch (Exception e)
            {
                logger.Error("Error from MCTR.DataAccess.LbrRateRepository.Create():" + e.Message);
                throw;
            }
        }

        ///*************************************************************
        ///<summary>
        ///Method Name : DeleteStatus
        ///</summary>
        ///<param name = "MctrIncrRates"></param>
        ///<returns>IEnumerable<MctrIncrRates> </returns>

        public IEnumerable<MctrIncrRates> DeleteStatus(IEnumerable<MctrIncrRates> mctrIncrRates)
        {
            logger.Debug("Executing MCTR.DataAccess.LbrRateRepository.Delete() with input : " + mctrIncrRates);

            try
            {
                //IEnumerable<MCTR_LBR_RATE> retrievedType = new List<MCTR_LBR_RATE>();
                //var TargetToDelete = Mapper.DynamicMap<IEnumerable<LbrRate>, IEnumerable<MCTR_LBR_RATE>>(lbrRate);
                //Repository<MCTR_LBR_RATE> dataRepository = new Repository<MCTR_LBR_RATE>();
                //dataRepository.Delete(TargetToDelete);

                obj = mctrIncrRates.First<MctrIncrRates>();
                OracleParameter[] parameter1 = new OracleParameter[3];
                string query = "delete from MCTR_INCR_RATES where (CMPON_CD=:0 or CMPON_CD is null) and (FISCAL_YEAR=:1 or FISCAL_YEAR is null) and (RSC_POOL=:2 or RSC_POOL is null);";
                parameter1[0] = new OracleParameter(":0", OracleDbType.Varchar2, obj.CMPON_CD, ParameterDirection.Input);
                parameter1[1] = new OracleParameter(":1", OracleDbType.Varchar2, obj.FISCAL_YEAR, ParameterDirection.Input);
                parameter1[2] = new OracleParameter(":2", OracleDbType.Varchar2, obj.RSC_POOL, ParameterDirection.Input);
               
                int result = entities.Database.ExecuteSqlCommand("BEGIN " + query + " END;", parameter1);

            }
            catch (Exception exp)
            {
                string ExceptionMessage = exp.Message;
                throw exp;
            }

            return mctrIncrRates;
        }

        ///*************************************************************
        ///<summary>
        ///Method Name : EditStatus
        ///</summary>
        ///<param name = "MctrIncrRates"></param>
        ///<returns>IEnumerable<MctrIncrRates> </returns>

        public IEnumerable<IncrRateEdit> EditStatus(IEnumerable<IncrRateEdit> mctrIncrRates)
        {
            logger.Debug("Executing MCTR.DataAccess.MctrIncrRatesRepository.EditStatus with input : ");
            try
            {
                var IncrRates = mctrIncrRates.First<IncrRateEdit>();
                var row = IncrRates.Row;
                var editedRow = IncrRates.EditedRow;
                IncrRates.IncrCount = new Dictionary<string, int>();
                IncrRates.IncrCount.Clear();

                StringBuilder sql = new StringBuilder();
                OracleParameter[] parameters = new OracleParameter[4];
                sql = new StringBuilder("SELECT COUNT(*) FROM MCTR_INCR_RATES WHERE CMPON_CD=:0 AND FISCAL_YEAR=:1 AND RSC_POOL=:2 AND RATE=:3");
                parameters[0] = new OracleParameter(":0", OracleDbType.Varchar2, editedRow.CMPON_CD, ParameterDirection.Input);
                parameters[1] = new OracleParameter(":1", OracleDbType.Int32, editedRow.FISCAL_YEAR, ParameterDirection.Input);
                parameters[2] = new OracleParameter(":2", OracleDbType.Varchar2, editedRow.RSC_POOL, ParameterDirection.Input);
                parameters[3] = new OracleParameter(":3", OracleDbType.Double, editedRow.RATE, ParameterDirection.Input);

                var v_count = entities.Database.SqlQuery<int>(sql.ToString(), parameters).SingleOrDefault();
                IncrRates.IncrCount.Add("add", v_count);
                if (v_count == 0)
                {
                    if (!(row.CMPON_CD.ToUpper() == editedRow.CMPON_CD.ToUpper() && row.FISCAL_YEAR == editedRow.FISCAL_YEAR && row.RSC_POOL.ToUpper() == editedRow.RSC_POOL.ToUpper() && row.RATE == editedRow.RATE))
                    {
                        var rowList = new List<MctrIncrRates>();
                        var editedRowList = new List<MctrIncrRates>();
                        rowList.Add(row);
                        editedRowList.Add(editedRow);
                        DeleteStatus(rowList);
                        Create(editedRowList);
                    }

                }
            }
            catch (OracleException ex)
            {

                string msg = ex.Message;

            }
            catch (Exception exp)
            {
                string ExceptionMessage = exp.InnerException.Message;
                throw exp;
            }
            return mctrIncrRates;
        }


    }

}