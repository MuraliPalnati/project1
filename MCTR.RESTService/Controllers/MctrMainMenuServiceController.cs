///*************************************************************************
/// 
/// BOEING CONFIDENTIAL
/// ___________________
/// 
///  BOEING is a trademark of Boeing Management Company.
///
///  Copyright © 2016 Boeing. All rights reserved.
/// 
/// NOTICE:  All information contained herein is, and remains
/// the property of Boeing and its suppliers, if any.  
/// The intellectual and technical concepts contained
/// herein are proprietary to Boeing and its suppliers and may be 
/// covered by U.S. and Foreign Patents, patents in process, 
/// and are protected by trade secret or copyright law.
/// Dissemination of this information or reproduction of this material
/// is strictly forbidden unless prior written permission is obtained
/// from Boeing. 
///

///************************************************************************
/// Author           : Generated by ATMA ®
/// Revision History :  


using System;
using System.Collections.Generic;
using System.Linq;
using System.Net;
using System.Net.Http;
using System.Web.Http;
using log4net;

using MCTR.DomainEntity;
using MCTR.BusinessInterface;
using MCTR.Business;

namespace MCTR.RESTService.Controllers
{
    ///*********************************************************************
    ///<summary>
    ///MctrMainMenuServiceController is a Rest controller implementation  
    ///which acts as a wrapper to the MctrMainMenuBusiness implementation and
    /// provides api path for each methods exposed.
    ///</summary>

    public class MctrMainMenuServiceController : ApiController
    {

        private readonly ILog logger;

        public MctrMainMenuServiceController()
        {
            logger = LogManager.GetLogger(System.Reflection.MethodBase.GetCurrentMethod().DeclaringType);
        }


        ///*************************************************************
        ///<summary>
        ///Method Name : buttonPalettebutAdminTblsWhenButtonPressed
        ///</summary>
        ///<param name = "MctrMainMenu"></param>
        ///<returns>IEnumerable<MctrMainMenu> </returns>

        [HttpPost]
        [ActionName("buttonPalettebutAdminTblsWhenButtonPressed")]
        public HttpResponseMessage buttonPalettebutAdminTblsWhenButtonPressed([FromBody]IEnumerable<MctrMainMenu> mctrMainMenu)
        {
            logger.Info("Executing Rest API : buttonPalettebutAdminTblsWhenButtonPressed() with request : " + mctrMainMenu);
            if (mctrMainMenu != null)
            {
                IMctrMainMenuBusiness mctrMainMenuBusiness = new MctrMainMenuBusiness();
                var response = mctrMainMenuBusiness.buttonPalettebutAdminTblsWhenButtonPressed(mctrMainMenu);
                logger.Info("Response received from mctrMainMenuBusiness.buttonPalettebutAdminTblsWhenButtonPressed() : " + response);
                return Request.CreateResponse(HttpStatusCode.OK, response);
            }
            return null;
        }

        ///*************************************************************
        ///<summary>
        ///Method Name : mctrMainMenuWhenTimerExpired
        ///</summary>
        ///<param name = "MctrMainMenu"></param>
        ///<returns>IEnumerable<MctrMainMenu> </returns>

        [HttpGet]
        [ActionName("getDescription")]
        public HttpResponseMessage getDescription()
        {
            logger.Info("Executing Rest API : getDescription()");

            IMctrMainMenuBusiness mctrMainMenuBusiness = new MctrMainMenuBusiness();
            var response = mctrMainMenuBusiness.getDescription();
            logger.Info("Response received from mctrMainMenuBusiness.getDescription() : " + response);
            return Request.CreateResponse(HttpStatusCode.OK, response);
        }

        [HttpPost]
        [ActionName("populateActionTree")]
        public HttpResponseMessage populateActionTree([FromBody]IEnumerable<MctrMainMenu> mctrMainMenu)
        {
            logger.Info("Executing Rest API : populateActionTree() with request : " + mctrMainMenu);
            if (mctrMainMenu != null)
            {
                IMctrMainMenuBusiness mctrMainMenuBusiness = new MctrMainMenuBusiness();
                var response = mctrMainMenuBusiness.populateActionTree(mctrMainMenu);
                logger.Info("Response received from mctrMainMenuBusiness.populateActionTree() : " + response);
                return Request.CreateResponse(HttpStatusCode.OK, response);
            }
            return null;
        }


        [HttpPost]
        [ActionName("populateAssignedAtree")]
        public HttpResponseMessage populateAssignedAtree([FromBody]IEnumerable<MctrMainMenu> mctrMainMenu)
        {
            logger.Info("Executing Rest API : populateAssignedAtree() with request : " + mctrMainMenu);
            if (mctrMainMenu != null)
            {
                IMctrMainMenuBusiness mctrMainMenuBusiness = new MctrMainMenuBusiness();
                var response = mctrMainMenuBusiness.populateAssignedAtree(mctrMainMenu);
                logger.Info("Response received from mctrMainMenuBusiness.populateAssignedAtree() : " + response);
                return Request.CreateResponse(HttpStatusCode.OK, response);
            }
            return null;
        }
    }
}
