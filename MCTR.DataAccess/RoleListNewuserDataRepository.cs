///*************************************************************************
/// 
/// BOEING CONFIDENTIAL
/// ___________________
/// 
///  BOEING is a trademark of Boeing Management Company.
///
///  Copyright © 2016 Boeing. All rights reserved.
/// 
/// NOTICE:  All information contained herein is, and remains
/// the property of Boeing and its suppliers, if any.  
/// The intellectual and technical concepts contained
/// herein are proprietary to Boeing and its suppliers and may be 
/// covered by U.S. and Foreign Patents, patents in process, 
/// and are protected by trade secret or copyright law.
/// Dissemination of this information or reproduction of this material
/// is strictly forbidden unless prior written permission is obtained
/// from Boeing. 
///

///************************************************************************
/// Author           : Generated by ATMA ®
/// Revision History :

using AutoMapper;
using log4net;
using MCTR.DataAccessInterface;
using MCTR.DataEntity;
using MCTR.DomainEntity;
using System;
using System.Collections.Generic;
using System.Linq;

using System.Text;

namespace MCTR.DataAccess
{
    ///*********************************************************************
    ///<summary>
    ///RoleListNewuserDataRepository is a data access implementation which holds all 
    ///the data access logic in it.
    ///</summary>
    public class RoleListNewuserDataRepository : BaseRepository, IRoleListNewuserDataRepository
    {
        StringBuilder sql = null;
        private List<RoleListNewuser> roleListNewUserList = new List<RoleListNewuser>();
        List<Role> objrole = new List<Role>();
        MCTR_ROLE role = new MCTR_ROLE();
        RoleListNewuser robj;
        private readonly ILog logger = LogManager.GetLogger(System.Reflection.MethodBase.GetCurrentMethod().DeclaringType);
        public IEnumerable<RoleListNewuser> emplListbutFindWhenButtonPressed(IEnumerable<RoleListNewuser> EmplList)
        {
            string query = "";
            RoleListNewuser SearchUser = new RoleListNewuser();
            try
            {
                if (EmplList != null)
                {
                    SearchUser = EmplList.First<RoleListNewuser>();
                }
                if ((SearchUser.BEMS_ID != null) || (SearchUser.LAST_NAME != null) || (SearchUser.COMPONENT != null) || (SearchUser.DEPTNO != null))
                {
                    if (SearchUser.BEMS_ID != "" && SearchUser.BEMS_ID != null)
                    {
                        query = "BEMS_ID like " + "'%" + SearchUser.BEMS_ID + "%'";
                    }

                    if (SearchUser.LAST_NAME != "" && SearchUser.LAST_NAME != null)
                    {
                        if (query != "")
                        {
                            query = query + "and LAST_NAME like " + "'%" + SearchUser.LAST_NAME + "%'";
                        }
                        else
                        {
                            query = "LAST_NAME like " + "'%" + SearchUser.LAST_NAME + "%'";
                        }
                    }
                    if (SearchUser.COMPONENT != "" && SearchUser.COMPONENT != null)
                    {
                        if (query != "")
                        {
                            query = query + "and COMPONENT like " + "'%" + SearchUser.COMPONENT + "%'";
                        }
                        else
                        {
                            query = "COMPONENT like " + "'%" + SearchUser.COMPONENT + "%'";
                        }
                    }
                    if (SearchUser.DEPTNO != "" && SearchUser.DEPTNO != null)
                    {
                        if (query != "")
                        {
                            query = query + "and DEPTNO like " + "'%" + SearchUser.DEPTNO + "%'";
                        }
                        else
                        {
                            query = "DEPTNO like " + "'%" + SearchUser.DEPTNO + "%'";
                        }

                    }
                }
                if (query != "")
                {
                    sql = new StringBuilder("select * from(select bems_id, last_name, first_name, component, acctg_loc_cdm, deptno from mctr_employee_v where emp_status = 'A' and not exists(select * from mctr_role where bems = mctr_employee_v.bems_id) and bems_id <> "+ SearchUser.session_bems + " and exists(select * from mctr_role where BEMS = "+SearchUser.session_bems+" and ADMIN_ROLE = 'Y') order by last_name, first_name, bems_id) where " +query);
                    var resultlist = entities.Database.SqlQuery<RoleListNewuser>(sql.ToString()).ToList<RoleListNewuser>();

                    foreach (var item in resultlist)
                    {
                        robj = new RoleListNewuser();
                        robj.BEMS_ID = item.BEMS_ID;
                        robj.FIRST_NAME = item.FIRST_NAME;
                        robj.BUS_UNIT = item.BUS_UNIT;
                        robj.COMPONENT = item.COMPONENT;
                        robj.DEPTNO = item.DEPTNO;
                        robj.ACCTG_LOC_CDM = item.ACCTG_LOC_CDM;
                        robj.LAST_NAME = item.LAST_NAME;
                        roleListNewUserList.Add(robj);
                    }
                    return roleListNewUserList;
                }
                if (query == "")
                {
                    sql = new StringBuilder("select * from(select bems_id, last_name, first_name, component, acctg_loc_cdm, deptno from mctr_employee_v where emp_status = 'A' and not exists(select * from mctr_role where bems = mctr_employee_v.bems_id) and bems_id <> " + SearchUser.session_bems + " and exists(select * from mctr_role where BEMS = " + SearchUser.session_bems + " and ADMIN_ROLE = 'Y') order by last_name, first_name, bems_id)");
                    var resultlist = entities.Database.SqlQuery<RoleListNewuser>(sql.ToString()).ToList<RoleListNewuser>();

                    foreach (var item in resultlist)
                    {
                        robj = new RoleListNewuser();
                        robj.BEMS_ID = item.BEMS_ID;
                        robj.FIRST_NAME = item.FIRST_NAME;
                        robj.BUS_UNIT = item.BUS_UNIT;
                        robj.COMPONENT = item.COMPONENT;
                        robj.DEPTNO = item.DEPTNO;
                        robj.ACCTG_LOC_CDM = item.ACCTG_LOC_CDM;
                        robj.LAST_NAME = item.LAST_NAME;
                        roleListNewUserList.Add(robj);
                    }
                    return roleListNewUserList;
                }

                return roleListNewUserList;
            }
            catch (Exception e)
            {
                logger.Info("Excetion on find data : " + e);
                throw e;
            }
        }

        public IEnumerable<RoleListNewuser> roleListNewuserWhenNewFormInstance(IEnumerable<RoleListNewuser> NewuserList)
        {
            IEnumerable<RoleListNewuser> retrievedCustType = new List<RoleListNewuser>();
            try
            { 
                foreach (var item in NewuserList)
                {
                    robj = new RoleListNewuser();
                    robj.BEMS_ID = item.BEMS_ID;
                    robj.FIRST_NAME = item.FIRST_NAME;
                    robj.BUS_UNIT = item.BUS_UNIT;
                    robj.COMPONENT = item.COMPONENT;
                    robj.DEPTNO = item.DEPTNO;
                    robj.ACCTG_LOC_CDM = item.ACCTG_LOC_CDM;
                    robj.LAST_NAME = item.LAST_NAME;
                    roleListNewUserList.Add(robj);
                }

                var TargetNewUserTypesToInsert = Mapper.DynamicMap<IEnumerable<RoleListNewuser>, IEnumerable<MCTR_EMPLOYEE_V>>(roleListNewUserList);
                logger.Info("Inserting data into DataAccess : roleListNewuserWhenNewFormInstance() with request : " + TargetNewUserTypesToInsert);
                
                foreach (var NewUser in TargetNewUserTypesToInsert)
                {
                    entities.MCTR_EMPLOYEE_V.Add(NewUser);
                    entities.SaveChanges();
                }
                
                return NewuserList;
            }
            
            catch (Exception e)
            {
                logger.Info("Excetion on Inset data : " + e);
                throw e;
            }
        }

        public IEnumerable<RoleListNewuser> empllistonload(IEnumerable<RoleListNewuser> emplist)
        {
            try
            {
                sql = new StringBuilder("select bems_id, last_name, first_name, component, acctg_loc_cdm, deptno from mctr_employee_v where emp_status = 'A' and not exists (select * from mctr_role where bems = mctr_employee_v.bems_id) and upper(component) like component and upper(deptno) like deptno and upper(bems_id) like bems_id and bems_id <>  " + emplist.First().session_bems + " and exists (select * from mctr_role where bems =  " + emplist.First().session_bems + " and admin_role = 'Y') order by last_name, first_name, bems_id");
                var resultlist = entities.Database.SqlQuery<RoleListNewuser>(sql.ToString()).ToList<RoleListNewuser>();
                return resultlist;
            }
            catch (Exception e)
            {
                logger.Error("occured at MCTR.DataAccess.RoleListNewuserDataRepository.empllistonload()" + e.Message);
                throw;
            }
        } 
    }
}
