///*************************************************************************
/// 
/// BOEING CONFIDENTIAL
/// ___________________
/// 
///  BOEING is a trademark of Boeing Management Company.
///
///  Copyright © 2016 Boeing. All rights reserved.
/// 
/// NOTICE:  All information contained herein is, and remains
/// the property of Boeing and its suppliers, if any.  
/// The intellectual and technical concepts contained
/// herein are proprietary to Boeing and its suppliers and may be 
/// covered by U.S. and Foreign Patents, patents in process, 
/// and are protected by trade secret or copyright law.
/// Dissemination of this information or reproduction of this material
/// is strictly forbidden unless prior written permission is obtained
/// from Boeing. 
///

///************************************************************************
/// Author           : Generated by ATMA ®
/// Revision History :

using log4net;
using MCTR.DataAccessInterface;
using MCTR.DataEntity;
using MCTR.DomainEntity;

using System;
using System.Collections.Generic;
using System.Linq;



namespace MCTR.DataAccess
{
    ///*********************************************************************
    ///<summary>
    ///RoleRepository is a data access implementation which holds all 
    ///the data access logic in it.
    ///</summary>
    public class RoleListRepository : BaseRepository, IRoleListRepository
    {

        private readonly ILog logger = null;

        public RoleListRepository()
        {
            logger = LogManager.GetLogger(System.Reflection.MethodBase.GetCurrentMethod().DeclaringType);
        }

        public IEnumerable<RoleList> roleListOnLoad(IEnumerable<RoleList> roleList)
        {
            try
            {
                logger.Debug("Executing MCTR.DataAccess.RoleListRepository.roleListOnLoad() with input : " + roleList);
                var response = entities.Database.SqlQuery<RoleList>("select bems , active , admin_role , accountant_role ,bus_unit, lbr_acct_role , matl_acct_role , cost_acct_role , fin_control_role , sr_acct_role , last_name , first_name , last_bu , last_loc , last_dept , deptno , component , acctg_loc_cdm , last_logon from mctr_owner.mctr_role , mctr_owner.mctr_employee_v where bems = bems_id ( + ) order by last_name, first_name, bems").ToList<RoleList>();
                logger.Debug("Response received from MCTR.DataAccess.RoleListRepository.roleListOnLoad() with input : " + roleList);
                return response;
            }
            catch (Exception e)
            {
                logger.Error("Error from MCTR.DataAccess.LineItemRepository.mctrLineItemPostQuery" + e.Message);

                throw;
            }
        }

        public IEnumerable<RoleList> roleListbutRoleWhenButtonPressed(IEnumerable<RoleList> roleList)
        {
            logger.Debug("Executing MCTR.DataAccess.RoleListRepository.roleListbutRoleWhenButtonPressed() with input : " + roleList);
            return roleList;
        }

        public IEnumerable<RoleList> roleListbutFindWhenButtonPressed(IEnumerable<RoleList> roleList)
        {
            string query = "";
            List<RoleList> resopnse = new List<RoleList>();
            RoleList SearchUser = new RoleList();
            logger.Debug("Executing MCTR.DataAccess.RoleListRepository.roleListbutFindWhenButtonPressed with input : " + roleList);
            try
            {
                if (roleList != null)
                {
                    SearchUser = roleList.First<RoleList>();
                }
                if ((SearchUser.bems != null) || (SearchUser.last_name != null) || (SearchUser.component != null) || (SearchUser.deptno != null))
                {
                    if (SearchUser.bems != "" && SearchUser.bems != null)
                    {
                        query = "bems_id like" + "'%" + SearchUser.bems + "%'";
                    }

                    if (SearchUser.last_name != "" && SearchUser.last_name != null)
                    {
                        if (query != "")
                        {
                            query = query + "and last_name like" + "'%" + SearchUser.last_name + "%'";
                        }
                        else
                        {
                            query = "last_name like" + "'%" + SearchUser.last_name + "%'";
                        }
                    }
                    if (SearchUser.component != "" && SearchUser.component != null)
                    {
                        if (query != "")
                        {
                            query = query + "and component like" + "'%" + SearchUser.component + "%'";
                        }
                        else
                        {
                            query = "component like" + "'%" + SearchUser.component + "%'";
                        }
                    }
                    if (SearchUser.deptno != "" && SearchUser.deptno != null)
                    {
                        if (query != "")
                        {
                            query = query + "and deptno like" + "'%" + SearchUser.deptno + "%'";
                        }
                        else
                        {
                            query = "deptno like" + "'%" + SearchUser.deptno + "%'";
                        }
                    }
                }
                if (query != "")
                {
                    var resultlist = entities.MCTR_EMPLOYEE_V.SqlQuery("select * from MCTR_EMPLOYEE_V where " + query).ToList<MCTR_EMPLOYEE_V>();
                    RoleList rollist;
                    foreach (var item in resultlist)
                    {
                        rollist = new RoleList();
                        rollist.bems = item.BEMS_ID;
                        rollist.first_name = item.FIRST_NAME;
                        rollist.component = item.BUS_UNIT;
                        rollist.deptno = item.DEPTNO;
                        rollist.acctg_loc_cdm = item.ACCTG_LOC_CDM;
                        rollist.last_name = item.LAST_NAME;

                        var resultlist1 = entities.MCTR_ROLE.SqlQuery("select * from MCTR_ROLE where bems='" + item.BEMS_ID + "'").ToList<MCTR_ROLE>();
                        foreach (var item1 in resultlist1)
                        {
                            rollist.last_logon = item1.LAST_LOGON;
                            rollist.last_logon_days = (DateTime.Now - (Convert.ToDateTime(item1.LAST_LOGON))).TotalDays.ToString();
                            rollist.accountant_role = item1.ACCOUNTANT_ROLE;
                            rollist.active = item1.ACTIVE;
                            rollist.admin_role = item1.ADMIN_ROLE;
                            rollist.cost_acct_role = item1.COST_ACCT_ROLE;
                            rollist.cost_acct_role = item1.FIN_CONTROL_ROLE;
                            rollist.lbr_acct_role = item1.LBR_ACCT_ROLE;
                            rollist.matl_acct_role = item1.MATL_ACCT_ROLE;
                            rollist.sr_acct_role = item1.SR_ACCT_ROLE;
                        }
                        resopnse.Add(rollist);
                    }
                }
                if (query == "")
                {
                    var resultlist = entities.MCTR_EMPLOYEE_V.SqlQuery("select * from MCTR_EMPLOYEE_V").ToList<MCTR_EMPLOYEE_V>();
                    RoleList rollist;
                    foreach (var item in resultlist)
                    {
                        rollist = new RoleList();
                        rollist.bems = item.BEMS_ID;
                        rollist.first_name = item.FIRST_NAME;
                        rollist.component = item.BUS_UNIT;
                        rollist.deptno = item.DEPTNO;
                        rollist.acctg_loc_cdm = item.ACCTG_LOC_CDM;
                        rollist.last_name = item.LAST_NAME;

                        var resultlist1 = entities.MCTR_ROLE.SqlQuery("select * from MCTR_ROLE where bems='" + item.BEMS_ID + "'").ToList<MCTR_ROLE>();
                        foreach (var item1 in resultlist1)
                        {
                            rollist.last_logon = item1.LAST_LOGON;
                            rollist.last_logon_days = (DateTime.Now - (Convert.ToDateTime(item1.LAST_LOGON))).TotalDays.ToString();
                            rollist.accountant_role = item1.ACCOUNTANT_ROLE;
                            rollist.active = item1.ACTIVE;
                            rollist.admin_role = item1.ADMIN_ROLE;
                            rollist.cost_acct_role = item1.COST_ACCT_ROLE;
                            rollist.cost_acct_role = item1.FIN_CONTROL_ROLE;
                            rollist.lbr_acct_role = item1.LBR_ACCT_ROLE;
                            rollist.matl_acct_role = item1.MATL_ACCT_ROLE;
                            rollist.sr_acct_role = item1.SR_ACCT_ROLE;
                        }
                        resopnse.Add(rollist);
                    }
                }
                return resopnse;
            }
            catch (Exception e)
            {
                logger.Info("Excetion on find data : " + e);
                throw e;
            }
        }
        public IEnumerable<RoleList> roleListPostQuery(IEnumerable<RoleList> roleList)
        {
            logger.Debug("Executing roleListPostQuery with input : " + roleList);
            //TODO: Move the Data Access logic from the Business implementation class to here.
            return roleList;
        }

        public IEnumerable<RoleList> roleListWhenNewFormInstance(IEnumerable<RoleList> roleList)
        {
            logger.Debug("Executing roleListWhenNewFormInstance with input : " + roleList);
            //TODO: Move the Data Access logic from the Business implementation class to here.
            return roleList;
        }
    }
}

