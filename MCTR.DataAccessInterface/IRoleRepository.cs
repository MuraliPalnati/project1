///*************************************************************************
/// 
/// BOEING CONFIDENTIAL
/// ___________________
/// 
///  BOEING is a trademark of Boeing Management Company.
///
///  Copyright © 2016 Boeing. All rights reserved.
/// 
/// NOTICE:  All information contained herein is, and remains
/// the property of Boeing and its suppliers, if any.  
/// The intellectual and technical concepts contained
/// herein are proprietary to Boeing and its suppliers and may be 
/// covered by U.S. and Foreign Patents, patents in process, 
/// and are protected by trade secret or copyright law.
/// Dissemination of this information or reproduction of this material
/// is strictly forbidden unless prior written permission is obtained
/// from Boeing. 
///

///************************************************************************
/// Author           : Generated by ATMA ®
/// Revision History :  
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

using MCTR.DomainEntity;

namespace MCTR.DataAccessInterface
{

    public interface IRoleRepository //: IDataRepository
    {

        IEnumerable<RoleList> roleOnLoad(IEnumerable<RoleList> roleList);

        IEnumerable<Role> rolePostQuery(IEnumerable<Role> role);

        //IEnumerable<Role> rolePostInsert(IEnumerable<Role> role);

        //IEnumerable<Role> rolePostDelete(IEnumerable<Role> role);

        //IEnumerable<Role> rolePostUpdate(IEnumerable<Role> role);

        IEnumerable<Role> roleWhenNewFormInstance(IEnumerable<Role> role);

        IEnumerable<RoleList> roleInsert(IEnumerable<RoleList> roleList);

        IEnumerable<RoleList> roleUpdate(IEnumerable<RoleList> roleList);

        IEnumerable<RoleList> roleDelete(IEnumerable<RoleList> roleList);
  }

}

