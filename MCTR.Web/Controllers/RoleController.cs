///*************************************************************************
/// 
/// BOEING CONFIDENTIAL
/// ___________________
/// 
///  BOEING is a trademark of Boeing Management Company.
///
///  Copyright © 2016 Boeing. All rights reserved.
/// 
/// NOTICE:  All information contained herein is, and remains
/// the property of Boeing and its suppliers, if any.  
/// The intellectual and technical concepts contained
/// herein are proprietary to Boeing and its suppliers and may be 
/// covered by U.S. and Foreign Patents, patents in process, 
/// and are protected by trade secret or copyright law.
/// Dissemination of this information or reproduction of this material
/// is strictly forbidden unless prior written permission is obtained
/// from Boeing. 
///

///************************************************************************
/// Author           : Generated by ATMA ®
/// Revision History :

using log4net;
using MCTR.DomainEntity;
using MCTR.Web.Handlers;
using MCTR.Web.Security;
using System;
using System.Linq;
using System.Web.Mvc;

namespace MCTR.Web.Controllers
{
    ///*********************************************************************
    ///<summary>
    ///RoleController is a web controller implementation for the 
    ///Role screen.
    ///</summary>
    [CustomAuthorize]
    public class RoleController : Controller
    {
         private readonly ILog logger;


        public RoleController()
        {
            logger = LogManager.GetLogger(System.Reflection.MethodBase.GetCurrentMethod().DeclaringType);
        }
        //nU:newUser
        public ActionResult roleOnLoad(string bemsID,bool? newUser)
        {

            try
            {
                    var rolelist = new RoleList();
                    rolelist.bems = bemsID;
                    logger.Info("Executing MCTR.Web.RoleController.roleOnlOad() with input :" + rolelist);
                    if (rolelist != null)
                    {
                        RoleHandler roleHandler = new RoleHandler();
                        logger.Debug("Executing roleHandler.rolebutGrpBuWhenButtonPressed().");
                        var roleResp = roleHandler.roleOnLoad(rolelist);
                        logger.Info("Response received from MCTR.Web.RoleController.rolebutGrpBuWhenButtonPressed()" + roleResp);
                        var roleObj = roleResp.First();
                    bool? isNewUser = newUser;

                        //roleObj.NewRecordFlag = isNewUser;

                    TempData["NewUser"] = isNewUser;
                        return View("Role", roleObj);
                    }
                    else
                    {
                        logger.Info("Request object is null or doesn't contain any value.");
                        return View();
                    }
                
            }
            catch (Exception e)
            {
                logger.Info("Response received from JrnlWeekRepository.jrnlWeekJrnlWeekOnLoad() : " + e.Message);

                throw;
            }
            
        }

        public ActionResult Save(RoleList rolelist)
        {
            try
            {
                if ((SessionPerister.ADMINROLE == "Y" || SessionPerister.ACCOUNTANTROLE == "Y") && (SessionPerister.BEMSID != rolelist.bems) )
                {
                        logger.Info("Executing MCTR.Web.RoleController.roleOnlOad() with input :" + rolelist);
                        if (rolelist != null)
                        {
                            rolelist.accountant_role = rolelist.accountant_role1 == true ? "Y" : "N";
                            rolelist.active = rolelist.active1 == true ? "Y" : "N";
                            rolelist.admin_role = rolelist.admin_role1 == true ? "Y" : "N";
                            rolelist.cost_acct_role = rolelist.cost_acct_role1 == true ? "Y" : "N";
                            rolelist.fin_control_role = rolelist.fin_control_role1 == true ? "Y" : "N";
                            rolelist.lbr_acct_role = rolelist.lbr_acct_role1 == true ? "Y" : "N";
                            rolelist.matl_acct_role = rolelist.matl_acct_role1 == true ? "Y" : "N";
                            rolelist.sr_acct_role = rolelist.sr_acct_role1 == true ? "Y" : "N";
                        if(rolelist.bems_admin==null)
                        {
                            rolelist.bems_admin = SessionPerister.BEMSID;
                        }
                        if (rolelist.date_init_add==null)
                        {
                            rolelist.date_init_add = DateTime.Now;
                        }
                        if (rolelist.date_update == null)
                        {
                            rolelist.date_update = DateTime.Now;
                        }
                        RoleHandler roleHandler = new RoleHandler();
                            logger.Debug("Executing roleHandler.rolebutGrpBuWhenButtonPressed().");
                            var roleResp = roleHandler.Save(rolelist);
                            logger.Info("Response received from MCTR.Web.RoleController.rolebutGrpBuWhenButtonPressed()" + roleResp);
                        TempData["Success"] = "The record has been saved successfully!";
                        return RedirectToAction("roleOnLoad","Role", new { bemsID = rolelist.bems });
                    }
                        else
                        {
                            logger.Info("Request object is null or doesn't contain any value.");
                            return View("Role", rolelist);
                        }
                }
                else
                {
                    ViewData["Error"] = "User must have administartor/accountant role to perform operations";
                    return View("Role");
                }
            }
            catch (Exception e)
            {
                logger.Info("Response received from JrnlWeekRepository.jrnlWeekJrnlWeekOnLoad() : " + e.Message);

                throw;
            }
        }


        //*************************************************************
        ///<summary>
        ///Method Name : rolebutGrpBuWhenButtonPressed
        ///</summary>
        ///<param name = "role"></param>
        ///<returns>ActionResult</returns>
        [HttpPost]
        public ActionResult rolebutGrpBuWhenButtonPressed(Role role)
        {
            try
            {
                logger.Info("Executing MCTR.Web.RoleController.rolebutGrpBuWhenButtonPressed() with input :" + role);
                if (role != null)
                {
                    RoleHandler roleHandler = new RoleHandler();
                    logger.Debug("Executing roleHandler.rolebutGrpBuWhenButtonPressed().");
                    var roleResp = roleHandler.rolebutGrpBuWhenButtonPressed(role);
                    logger.Info("Response received from MCTR.Web.RoleController.rolebutGrpBuWhenButtonPressed()" + roleResp);
                    return View("Role", roleResp);
                }
                else
                {
                    logger.Info("Request object is null or doesn't contain any value.");
                    return View();
                }
            }
            catch (Exception e)
            {
                logger.Info("Response received from JrnlWeekRepository.jrnlWeekJrnlWeekOnLoad() : " + e.Message);

                throw;
            }
        }

        //*************************************************************
        ///<summary>
        ///Method Name : rolebutResetBudgetWhenButtonPressed
        ///</summary>
        ///<param name = "role"></param>
        ///<returns>ActionResult</returns>
        [HttpPost]
        public ActionResult rolebutResetBudgetWhenButtonPressed(Role role)
        {
            try
            {
                logger.Info("Executing MCTR.Web.RoleController.rolebutResetBudgetWhenButtonPressed() with input :" + role);
                if (role != null)
                {
                    RoleHandler roleHandler = new RoleHandler();
                    logger.Debug("Executing roleHandler.rolebutResetBudgetWhenButtonPressed().");
                    var roleResp = roleHandler.rolebutResetBudgetWhenButtonPressed(role);
                    logger.Info("Response received from MCTR.Web.RoleController.rolebutResetBudgetWhenButtonPressed()" + roleResp);
                    return View("Role", roleResp);
                }
                else
                {
                    logger.Info("Request object is null or doesn't contain any value.");
                    return View();
                }
            }
            catch (Exception e)
            {
                logger.Info("Response received from JrnlWeekRepository.jrnlWeekJrnlWeekOnLoad() : " + e.Message);

                throw;
            }
        }

        //*************************************************************
        ///<summary>
        ///Method Name : rolePostQuery
        ///</summary>
        ///<param name = "role"></param>
        ///<returns>ActionResult</returns>
        [HttpPost]
        public ActionResult rolePostQuery(Role role)
        {
            try
            {
                logger.Info("Executing MCTR.Web.RoleController.rolePostQuery() with input :" + role);
                if (role != null)
                {
                    RoleHandler roleHandler = new RoleHandler();
                    var roleResp = roleHandler.rolePostQuery(role);
                    logger.Info("Response received from MCTR.Web.RoleController.rolePostQuery()" + roleResp);
                    return View("Role", roleResp);
                }
                else
                {
                    logger.Info("Request object is null or doesn't contain any value.");
                    return View();
                }
            }
            catch (Exception e)
            {
                logger.Info("Response received from JrnlWeekRepository.jrnlWeekJrnlWeekOnLoad() : " + e.Message);

                throw;
            }
        }

        //*************************************************************
        ///<summary>
        ///Method Name : rolePreRecord
        ///</summary>
        ///<param name = "role"></param>
        ///<returns>ActionResult</returns>
        [HttpPost]
        public ActionResult rolePreRecord(Role role)
        {
            try
            {
                logger.Info("Executing MCTR.Web.RoleController.rolePreRecord() with input :" + role);
                if (role != null)
                {
                    RoleHandler roleHandler = new RoleHandler();
                    var roleResp = roleHandler.rolePreRecord(role);
                    logger.Info("Response received from MCTR.Web.RoleController.rolePreRecord()" + roleResp);
                    return View("Role", roleResp);
                }
                else
                {
                    logger.Info("Request object is null or doesn't contain any value.");
                    return View();
                }
            }
            catch (Exception e)
            {
                logger.Info("Response received from JrnlWeekRepository.jrnlWeekJrnlWeekOnLoad() : " + e.Message);

                throw;
            }
        }

        //*************************************************************
        ///<summary>
        ///Method Name : rolePreInsert
        ///</summary>
        ///<param name = "role"></param>
        ///<returns>ActionResult</returns>
        [HttpPost]
        public ActionResult rolePreInsert(Role role)
        {
            try
            {
                logger.Info("Executing MCTR.Web.RoleController.rolePreInsert() with input :" + role);
                if (role != null)
                {
                    RoleHandler roleHandler = new RoleHandler();
                    logger.Debug("Executing roleHandler.rolePreInsert().");
                    var roleResp = roleHandler.rolePreInsert(role);
                    logger.Info("Response received from MCTR.Web.RoleController.rolePreInsert()" + roleResp);
                    return View("Role", roleResp);
                }
                else
                {
                    logger.Info("Request object is null or doesn't contain any value.");
                    return View();
                }
            }
            catch (Exception e)
            {
                logger.Info("Response received from JrnlWeekRepository.jrnlWeekJrnlWeekOnLoad() : " + e.Message);

                throw;
            }
        }

        //*************************************************************
        ///<summary>
        ///Method Name : rolePreUpdate
        ///</summary>
        ///<param name = "role"></param>
        ///<returns>ActionResult</returns>
        [HttpPost]
        public ActionResult rolePreUpdate(Role role)
        {
            try
            {
                logger.Info("Executing MCTR.Web.RoleController.rolePreUpdate() with input :" + role);
                if (role != null)
                {
                    RoleHandler roleHandler = new RoleHandler();
                    logger.Debug("Executing roleHandler.rolePreUpdate().");
                    var roleResp = roleHandler.rolePreUpdate(role);
                    logger.Info("Response received from MCTR.Web.RoleController.rolePreUpdate()" + roleResp);
                    return View("Role", roleResp);
                }
                else
                {
                    logger.Info("Request object is null or doesn't contain any value.");
                    return View();
                }
            }
            catch (Exception e)
            {
                logger.Info("Response received from JrnlWeekRepository.jrnlWeekJrnlWeekOnLoad() : " + e.Message);

                throw;
            }
        }

        //*************************************************************
        ///<summary>
        ///Method Name : roleOnError
        ///</summary>
        ///<param name = "role"></param>
        ///<returns>ActionResult</returns>
        [HttpPost]
        public ActionResult roleOnError(Role role)
        {
            try
            {
                logger.Info("Executing MCTR.Web.RoleController.roleOnError() with input :" + role);
                if (role != null)
                {
                    RoleHandler roleHandler = new RoleHandler();
                    logger.Debug("Executing roleHandler.roleOnError().");
                    var roleResp = roleHandler.roleOnError(role);
                    logger.Info("Response received from MCTR.Web.RoleController.roleOnError()" + roleResp);
                    return View("Role", roleResp);
                }
                else
                {
                    logger.Info("Request object is null or doesn't contain any value.");
                    return View();
                }
            }
            catch (Exception e)
            {
                logger.Info("Response received from JrnlWeekRepository.jrnlWeekJrnlWeekOnLoad() : " + e.Message);

                throw;
            }
        }

        //*************************************************************
        ///<summary>
        ///Method Name : rolePostInsert
        ///</summary>
        ///<param name = "role"></param>
        ///<returns>ActionResult</returns>
        [HttpPost]
        public ActionResult rolePostInsert(Role role)
        {
            try
            {
                logger.Info("Executing MCTR.Web.RoleController.rolePostInsert() with input :" + role);
                if (role != null)
                {
                    RoleHandler roleHandler = new RoleHandler();
                    logger.Debug("Executing roleHandler.rolePostInsert().");
                    var roleResp = roleHandler.rolePostInsert(role);
                    logger.Info("Response received from MCTR.Web.RoleController.rolePostInsert()" + roleResp);
                    return View("Role", roleResp);
                }
                else
                {
                    logger.Info("Request object is null or doesn't contain any value.");
                    return View();
                }
            }
            catch (Exception e)
            {
                logger.Info("Response received from JrnlWeekRepository.jrnlWeekJrnlWeekOnLoad() : " + e.Message);

                throw;
            }
        }

        //*************************************************************
        ///<summary>
        ///Method Name : rolePostDelete
        ///</summary>
        ///<param name = "role"></param>
        ///<returns>ActionResult</returns>
        [HttpPost]
        public ActionResult rolePostDelete(Role role)
        {
            try
            {
                logger.Info("Executing MCTR.Web.RoleController.rolePostDelete() with input :" + role);
                if (role != null)
                {
                    RoleHandler roleHandler = new RoleHandler();
                    logger.Debug("Executing roleHandler.rolePostDelete().");
                    var roleResp = roleHandler.rolePostDelete(role);
                    logger.Info("Response received from MCTR.Web.RoleController.rolePostDelete()" + roleResp);
                    return View("Role", roleResp);
                }
                else
                {
                    logger.Info("Request object is null or doesn't contain any value.");
                    return View();
                }
            }
            catch (Exception e)
            {
                logger.Info("Response received from JrnlWeekRepository.jrnlWeekJrnlWeekOnLoad() : " + e.Message);

                throw;
            }
        }

        //*************************************************************
        ///<summary>
        ///Method Name : rolePostUpdate
        ///</summary>
        ///<param name = "role"></param>
        ///<returns>ActionResult</returns>
        [HttpPost]
        public ActionResult rolePostUpdate(Role role)
        {
            try
            {
                logger.Info("Executing MCTR.Web.RoleController.rolePostUpdate() with input :" + role);
                if (role != null)
                {
                    RoleHandler roleHandler = new RoleHandler();
                    logger.Debug("Executing roleHandler.rolePostUpdate().");
                    var roleResp = roleHandler.rolePostUpdate(role);
                    logger.Info("Response received from MCTR.Web.RoleController.rolePostUpdate()" + roleResp);
                    return View("Role", roleResp);
                }
                else
                {
                    logger.Info("Request object is null or doesn't contain any value.");
                    return View();
                }
            }
            catch (Exception e)
            {
                logger.Info("Response received from JrnlWeekRepository.jrnlWeekJrnlWeekOnLoad() : " + e.Message);

                throw;
            }
        }

        //*************************************************************
        ///<summary>
        ///Method Name : roleWhenNewFormInstance
        ///</summary>
        ///<param name = "role"></param>
        ///<returns>ActionResult</returns>
        [HttpPost]
        public ActionResult roleWhenNewFormInstance(Role role)
        {
            try
            {
                logger.Info("Executing MCTR.Web.RoleController.roleWhenNewFormInstance() with input :" + role);
                if (role != null)
                {
                    RoleHandler roleHandler = new RoleHandler();
                    logger.Debug("Executing roleHandler.roleWhenNewFormInstance().");
                    var roleResp = roleHandler.roleWhenNewFormInstance(role);
                    logger.Info("Response received from MCTR.Web.RoleController.roleWhenNewFormInstance()" + roleResp);
                    return View("Role", roleResp);
                }
                else
                {
                    logger.Info("Request object is null or doesn't contain any value.");
                    return View();
                }
            }
            catch (Exception e)
            {
                logger.Info("Response received from JrnlWeekRepository.jrnlWeekJrnlWeekOnLoad() : " + e.Message);

                throw;
            }
        }

        //*************************************************************
        ///<summary>
        ///Method Name : rolePostForm
        ///</summary>
        ///<param name = "role"></param>
        ///<returns>ActionResult</returns>
        [HttpPost]
        public ActionResult rolePostForm(Role role)
        {
            try
            {
                logger.Info("Executing MCTR.Web.RoleController.rolePostForm() with input :" + role);
                if (role != null)
                {
                    RoleHandler roleHandler = new RoleHandler();
                    logger.Debug("Executing roleHandler.rolePostForm().");
                    var roleResp = roleHandler.rolePostForm(role);
                    logger.Info("Response received from MCTR.Web.RoleController.rolePostForm()" + roleResp);
                    return View("Role", roleResp);
                }
                else
                {
                    logger.Info("Request object is null or doesn't contain any value.");
                    return View();
                }
            }
            catch (Exception e)
            {
                logger.Info("Response received from JrnlWeekRepository.jrnlWeekJrnlWeekOnLoad() : " + e.Message);

                throw;
            }
        }

        //*************************************************************
        ///<summary>
        ///Method Name : roleWhenWindowActivated
        ///</summary>
        ///<param name = "role"></param>
        ///<returns>ActionResult</returns>
        [HttpPost]
        public ActionResult roleWhenWindowActivated(Role role)
        {
            try
            {
                logger.Info("Executing MCTR.Web.RoleController.roleWhenWindowActivated() with input :" + role);
                if (role != null)
                {
                    RoleHandler roleHandler = new RoleHandler();
                    logger.Debug("Executing roleHandler.roleWhenWindowActivated().");
                    var roleResp = roleHandler.roleWhenWindowActivated(role);
                    logger.Info("Response received from MCTR.Web.RoleController.roleWhenWindowActivated()" + roleResp);
                    return View("Role", roleResp);
                }
                else
                {
                    logger.Info("Request object is null or doesn't contain any value.");
                    return View();
                }
            }
            catch (Exception e)
            {
                logger.Info("Response received from JrnlWeekRepository.jrnlWeekJrnlWeekOnLoad() : " + e.Message);

                throw;
            }
        }

        //*************************************************************
        ///<summary>
        ///Method Name : roleWhenWindowClosed
        ///</summary>
        ///<param name = "role"></param>
        ///<returns>ActionResult</returns>
        [HttpPost]
        public ActionResult roleWhenWindowClosed(Role role)
        {
            try
            {
                logger.Info("Executing MCTR.Web.RoleController.roleWhenWindowClosed() with input :" + role);
                if (role != null)
                {
                    RoleHandler roleHandler = new RoleHandler();
                    logger.Debug("Executing roleHandler.roleWhenWindowClosed().");
                    var roleResp = roleHandler.roleWhenWindowClosed(role);
                    logger.Info("Response received from MCTR.Web.RoleController.roleWhenWindowClosed()" + roleResp);
                    return View("Role", roleResp);
                }
                else
                {
                    logger.Info("Request object is null or doesn't contain any value.");
                    return View();
                }
            }
            catch (Exception e)
            {
                logger.Info("Response received from JrnlWeekRepository.jrnlWeekJrnlWeekOnLoad() : " + e.Message);

                throw;
            }
        }
    }
}
