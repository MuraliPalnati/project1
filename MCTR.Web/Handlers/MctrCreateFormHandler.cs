///*************************************************************************
/// 
/// BOEING CONFIDENTIAL
/// ___________________
/// 
///  BOEING is a trademark of Boeing Management Company.
///
///  Copyright © 2016 Boeing. All rights reserved.
/// 
/// NOTICE:  All information contained herein is, and remains
/// the property of Boeing and its suppliers, if any.  
/// The intellectual and technical concepts contained
/// herein are proprietary to Boeing and its suppliers and may be 
/// covered by U.S. and Foreign Patents, patents in process, 
/// and are protected by trade secret or copyright law.
/// Dissemination of this information or reproduction of this material
/// is strictly forbidden unless prior written permission is obtained
/// from Boeing. 
///

///************************************************************************
/// Author           : Generated by ATMA ®

using System.Collections.Generic;
using System.Linq;
using System.Web.Mvc;
using log4net;
using MCTR.DomainEntity;

namespace MCTR.Web.Handlers
{
    public class MctrCreateFormHandler
    {
         private readonly ILog logger;

        public MctrCreateFormHandler()
        {
            logger = LogManager.GetLogger(System.Reflection.MethodBase.GetCurrentMethod().DeclaringType);
        }


        public IEnumerable<MctrCreateForm> mctrLineItemclassCdToPostTextItemOpenLOV(MctrCreateForm mctrCreateForm)
        {
            string restApiPath = "MctrCreateFormService/mctrLineItemclassCdToPostTextItemOpenLOV";
            var response = HandlerUtil<MctrCreateForm>.RestPostProcessor(restApiPath, mctrCreateForm);
            return response;
        }

        public IEnumerable<MctrCreateForm> mctrLineItemestmtgPricgCdToPostTextItemOpenLOV(MctrCreateForm mctrCreateForm)
        {
            string restApiPath = "MctrCreateFormService/mctrLineItemestmtgPricgCdToPostTextItemOpenLOV";
            var response = HandlerUtil<MctrCreateForm>.RestPostProcessor(restApiPath, mctrCreateForm);
            return response;
        }
        public IEnumerable<MctrLineItem> mctrLineItemInsert(IEnumerable<MctrLineItem> mctrLineItem)
        {
            string restApiPath = "MctrCreateFormService/mctrLineItemInsert";
            var response = HandlerUtil<MctrLineItem>.PostProcessor(restApiPath, mctrLineItem);
            return response;
        }

        public IEnumerable<MctrLineItem> mctrLineItemDelete(MctrLineItem mctrCreateForm)
        {
            string restApiPath = "MctrCreateFormService/mctrLineItemDelete";
            var response = HandlerUtil<MctrLineItem>.RestPostProcessor(restApiPath, mctrCreateForm);
            return response;
        }

        public IEnumerable<MctrCreateForm> mctrHeaderbutJrnlWhenButtonPressed(MctrCreateForm mctrCreateForm)
        {
            string restApiPath = "MctrCreateFormService/mctrHeaderbutJrnlWhenButtonPressed";
            var response = HandlerUtil<MctrCreateForm>.RestPostProcessor(restApiPath, mctrCreateForm);
            return response;
        }

        public IEnumerable<MctrCreateForm> justificationsave(MctrCreateForm mctrCreateForm)
        {
            string restApiPath = "MctrCreateFormService/justificationsave";
            var response = HandlerUtil<MctrCreateForm>.RestPostProcessor(restApiPath, mctrCreateForm);
            return response;
        }
        public IEnumerable<MctrLineItem> mctrLineItemPreDelete(MctrLineItem mctrCreateForm)
        {
            string restApiPath = "MctrCreateFormService/mctrLineItemPreDelete";
            var response = HandlerUtil<MctrLineItem>.RestPostProcessor(restApiPath, mctrCreateForm);
            return response;
        }


        public IEnumerable<MctrLineItem> mctrLineItemOnload(MctrLineItem mctrLineItem)
        {
            string restApiPath = "MctrCreateFormService/mctrLineItemOnLoad";
            var response = HandlerUtil<MctrLineItem>.RestPostProcessor(restApiPath, mctrLineItem);
            return response;
        }

        public IEnumerable<MctrCreateForm> mctrHeaderbutJustificationWhenButtonPressed(MctrCreateForm mctrCreateForm)
        {
            string restApiPath = "MctrCreateFormService/mctrHeaderbutJustificationWhenButtonPressed";
            var response = HandlerUtil<MctrCreateForm>.RestPostProcessor(restApiPath, mctrCreateForm);
            return response;
        }

        public IEnumerable<BusUnit> getRgBuGrpLOV(MctrCreateForm mctrCreateForm)
        {

            logger.Debug("Executing  getRgBuGrpLOV rest service handler.");
            string restApiPath = "MctrCreateFormService/getRgBuGrpLOV";
            logger.Info("Invoking Rest API : " + restApiPath + " with Request : " + mctrCreateForm);
            var response = HandlerUtil<MctrCreateForm>.RestPostProcessor(restApiPath, mctrCreateForm);
            logger.Info("Response received form Rest API : " + restApiPath + " : " + response);
            return response.First().BusUnit;
        }



        public IEnumerable<MctrCreateForm> mctrheaderbutbuwhenbuttonpressedopenlov(MctrCreateForm mctrCreateForm)
        {

            logger.Debug("Executing  getRgBuGrpLOV rest service handler.");
            string restApiPath = "MctrCreateFormService/mctrheaderbutbuwhenbuttonpressedopenlov";
            logger.Info("Invoking Rest API : " + restApiPath + " with Request : " + mctrCreateForm);
            var response = HandlerUtil<MctrCreateForm>.RestGetProcessor(restApiPath, mctrCreateForm);
            logger.Info("Response received form Rest API : " + restApiPath + " : " + response);

            return response;
        }
        public IEnumerable<MctrCreateForm> mctrHeaderPreUpdate(MctrCreateForm mctrCreateForm)
        {

            logger.Debug("Executing  mctrHeaderPreUpdate service handler.");
            string restApiPath = "MctrCreateFormService/mctrHeaderPreUpdate";
            logger.Info("Invoking Rest API : " + restApiPath + " with Request : " + mctrCreateForm);
            var response = HandlerUtil<MctrCreateForm>.RestPostProcessor(restApiPath, mctrCreateForm);
            logger.Info("Response received form Rest API : " + restApiPath + " : " + response);
            return response;
        }
        public IEnumerable<MctrCreateForm> mctrHeaderPreInsert(MctrCreateForm mctrCreateForm)
        {

            logger.Debug("Executing  mctrHeaderPreInsert service handler.");
            string restApiPath = "MctrCreateFormService/mctrHeaderPreInsert";
            logger.Info("Invoking Rest API : " + restApiPath + " with Request : " + mctrCreateForm);
            var response = HandlerUtil<MctrCreateForm>.RestPostProcessor(restApiPath, mctrCreateForm);
            logger.Info("Response received form Rest API : " + restApiPath + " : " + response);
            return response;
        }
        ///*************************************************************
        ///<summary>
        ///Method Name : mctrLineItembutCopyWhenButtonPressed
        ///</summary>
        ///<param name = "MctrCreateForm"></param>
        ///<returns>IEnumerable<MctrCreateForm> </returns>

        public IEnumerable<MctrCreateForm> mctrLineItembutCopyWhenButtonPressed(MctrCreateForm mctrCreateForm)
        {
            if (mctrCreateForm != null)
            {
                logger.Debug("Executing mctrLineItembutCopyWhenButtonPressed rest service handler.");
                string restApiPath = "MctrCreateFormService/mctrLineItembutCopyWhenButtonPressed";
                logger.Info("Invoking Rest API : " + restApiPath + " with Request : " + mctrCreateForm);
                var response = HandlerUtil<MctrCreateForm>.RestPostProcessor(restApiPath, mctrCreateForm);
                logger.Info("Response received form Rest API : " + restApiPath + " : " + response);
                return response;
            }
            else
            {
                logger.Info("The passed parameter mctrCreateForm is NULL.");
                return null;
            }
        }

        public IEnumerable<MctrCreateForm> mctrHeaderbutSubmitWhenButtonPressed(MctrCreateForm mctrCreateForm)
        {

            logger.Debug("Executing  mctrHeaderPreInsert service handler.");
            string restApiPath = "MctrCreateFormService/mctrHeaderbutSubmitWhenButtonPressed";
            logger.Info("Invoking Rest API : " + restApiPath + " with Request : " + mctrCreateForm);
            var response = HandlerUtil<MctrCreateForm>.RestPostProcessor(restApiPath, mctrCreateForm);
            logger.Info("Response received form Rest API : " + restApiPath + " : " + response);
            return response;
        }


        public IEnumerable<MctrCreateForm> MctrHeaderOnLoad(MctrCreateForm mctrCreateForm)
        {

            logger.Debug("Executing  mctrHeaderPreInsert service handler.");
            string restApiPath = "MctrCreateFormService/mctrHeaderonLoad";
            logger.Info("Invoking Rest API : " + restApiPath + " with Request : " + mctrCreateForm);
            var response = HandlerUtil<MctrCreateForm>.RestPostProcessor(restApiPath, mctrCreateForm);
            logger.Info("Response received form Rest API : " + restApiPath + " : " + response);
            return response;
        }

        public IEnumerable<getRgSuper> getRgSuperLOV(CreateMctrLov createMctrLov)
        {

            logger.Debug("Executing  getRgSuperLOV rest service handler.");
            string restApiPath = "CreateMctrLovService/getRgSuperLOV";
            logger.Info("Invoking Rest API : " + restApiPath + " with Request : " + createMctrLov);
            var response = HandlerUtil<CreateMctrLov>.RestPostProcessor(restApiPath, createMctrLov);
            logger.Info("Response received form Rest API : " + restApiPath + " : " + response);
            return response.First().getRgSuper;
        }

        public IEnumerable<MctrRejectCode> getRgLOVRejectJSON(MctrRejectCode mctrRejectCode)
        {
            logger.Debug("Executing  getRgSuperLOV rest service handler.");
            string restApiPath = "MctrCreateFormService/getRgLOVReject";
            logger.Info("Invoking Rest API : " + restApiPath + " ");
            var response = HandlerUtil<MctrRejectCode>.RestPostProcessor(restApiPath,mctrRejectCode);
            logger.Info("Response received form Rest API : " + restApiPath + " : " + response);
            return response;
        }

        public IEnumerable<getRgSuper> getRgFinCtlLOV(CreateMctrLov createMctrLov)
        {

            logger.Debug("Executing  getRgSuperLOV rest service handler.");
            string restApiPath = "CreateMctrLovService/getRgFinCtlLOV";
            logger.Info("Invoking Rest API : " + restApiPath + " with Request : " + createMctrLov);
            var response = HandlerUtil<CreateMctrLov>.RestPostProcessor(restApiPath, createMctrLov);
            logger.Info("Response received form Rest API : " + restApiPath + " : " + response);
            return response.First().getRgSuper;
        }

        public IEnumerable<MctrLineiteminquiry> ttdInqCyrTtdInqCyrOnLoad(MctrLineiteminquiry mctrlineitem)
        {
            logger.Debug("Executing  ttdInqCyrTtdInqCyrOnLoad rest service handler.");
            string restApiPath = "MctrCreateFormService/ttdInqCyrTtdInqCyrOnLoad";
            logger.Info("Invoking Rest API : " + restApiPath + " with Request : " + mctrlineitem);
            var response = HandlerUtil<MctrLineiteminquiry>.RestPostProcessor(restApiPath, mctrlineitem);
            logger.Info("Response received form Rest API : " + restApiPath + " : " + response);
            return response;
        }
        public IEnumerable<MctrLineiteminquiry> ttdInqPyrTtdInqPyrOnLoad(MctrLineiteminquiry mctrlineitem)
        {
            logger.Debug("Executing  ttdInqPyrTtdInqPyrOnLoad rest service handler.");
            string restApiPath = "MctrCreateFormService/ttdInqPyrTtdInqPyrOnLoad";
            logger.Info("Invoking Rest API : " + restApiPath + " with Request : " + mctrlineitem);
            var response = HandlerUtil<MctrLineiteminquiry>.RestPostProcessor(restApiPath, mctrlineitem);
            logger.Info("Response received form Rest API : " + restApiPath + " : " + response);
            return response;
        }

        public IEnumerable<MctrLineiteminquiry> ttdInqFilter(MctrLineiteminquiry mctrlineitem)
        {
            logger.Debug("Executing  ttdInqFilter rest service handler.");
            string restApiPath = "MctrCreateFormService/ttdInqFilter";
            logger.Info("Invoking Rest API : " + restApiPath + " with Request : " + mctrlineitem);
            var response = HandlerUtil<MctrLineiteminquiry>.RestPostProcessor(restApiPath, mctrlineitem);
            logger.Info("Response received form Rest API : " + restApiPath + " : " + response);
            return response;
        }


        public IEnumerable<getRgSuper> getRgAcctLOV(CreateMctrLov createMctrLov)
        {

            logger.Debug("Executing  getRgAcctLOV rest service handler.");
            string restApiPath = "CreateMctrLovService/getRgAcctLOV";
            logger.Info("Invoking Rest API : " + restApiPath + " with Request : " + createMctrLov);
            var response = HandlerUtil<CreateMctrLov>.RestPostProcessor(restApiPath, createMctrLov);
            logger.Info("Response received form Rest API : " + restApiPath + " : " + response);
            return response.First().getRgSuper;
        }

        public IEnumerable<getRgSuper> getRgLbrAcctLOV(CreateMctrLov createMctrLov)
        {

            logger.Debug("Executing  getRgLbrAcctLOV rest service handler.");
            string restApiPath = "CreateMctrLovService/getRgLbrAcctLOV";
            logger.Info("Invoking Rest API : " + restApiPath + " with Request : " + createMctrLov);
            var response = HandlerUtil<CreateMctrLov>.RestPostProcessor(restApiPath, createMctrLov);
            logger.Info("Response received form Rest API : " + restApiPath + " : " + response);
            return response.First().getRgSuper;
        }

        public IEnumerable<getRgSuper> getRgMatlAcctLOV(CreateMctrLov createMctrLov)
        {

            logger.Debug("Executing  getRgMatlAcctLOV rest service handler.");
            string restApiPath = "CreateMctrLovService/getRgMatlAcctLOV";
            logger.Info("Invoking Rest API : " + restApiPath + " with Request : " + createMctrLov);
            var response = HandlerUtil<CreateMctrLov>.RestPostProcessor(restApiPath, createMctrLov);
            logger.Info("Response received form Rest API : " + restApiPath + " : " + response);
            return response.First().getRgSuper;
        }

        public IEnumerable<getRgSuper> getRgCostAcctLOV(CreateMctrLov createMctrLov)
        {

            logger.Debug("Executing  getRgCostAcctLOV rest service handler.");
            string restApiPath = "CreateMctrLovService/getRgCostAcctLOV";
            logger.Info("Invoking Rest API : " + restApiPath + " with Request : " + createMctrLov);
            var response = HandlerUtil<CreateMctrLov>.RestPostProcessor(restApiPath, createMctrLov);
            logger.Info("Response received form Rest API : " + restApiPath + " : " + response);
            return response.First().getRgSuper;
        }

        public IEnumerable<getRgSuper> getRgSrAcctLOV(CreateMctrLov createMctrLov)
        {

            logger.Debug("Executing  getRgSrAcctLOV rest service handler.");
            string restApiPath = "CreateMctrLovService/getRgSrAcctLOV";
            logger.Info("Invoking Rest API : " + restApiPath + " with Request : " + createMctrLov);
            var response = HandlerUtil<CreateMctrLov>.RestPostProcessor(restApiPath, createMctrLov);
            logger.Info("Response received form Rest API : " + restApiPath + " : " + response);
            return response.First().getRgSuper;
        }
        public IEnumerable<MctrCreateForm> getRgYearLOV(MctrCreateForm mctrCreateForm)
        {

            logger.Debug("Executing  getRgYearLOVrest service handler.");
            string restApiPath = "MctrCreateForm/getRgYearLOV";
            logger.Info("Invoking Rest API : " + restApiPath + " with Request : " + mctrCreateForm);
            var response = HandlerUtil<MctrCreateForm>.RestPostProcessor(restApiPath, mctrCreateForm);
            logger.Info("Response received form Rest API : " + restApiPath + " : " + response);
            return response;
        }
        public IEnumerable<MctrCreateForm> getRgReasonLOV(MctrCreateForm mctrCreateForm)
        {

            logger.Debug("Executing  getRgReasonLOVrest service handler.");
            string restApiPath = "MctrCreateForm/getRgReasonLOV";
            logger.Info("Invoking Rest API : " + restApiPath + " with Request : " + mctrCreateForm);
            var response = HandlerUtil<MctrCreateForm>.RestPostProcessor(restApiPath, mctrCreateForm);
            logger.Info("Response received form Rest API : " + restApiPath + " : " + response);
            return response;
        }
        public IEnumerable<CreateMctrLov> getRgApplLOV(CreateMctrLov mctrCreateForm)
        {

            logger.Debug("Executing  getRgApplLOVrest service handler.");
            string restApiPath = "CreateMctrLovService/getRgApplLOV";
            logger.Info("Invoking Rest API : " + restApiPath + " with Request : " + mctrCreateForm);
            var response = HandlerUtil<CreateMctrLov>.RestPostProcessor(restApiPath, mctrCreateForm);
            logger.Info("Response received form Rest API : " + restApiPath + " : " + response);
            return response;
        }

        public IEnumerable<CreateMctrLov> getRgYearLOV(CreateMctrLov createMctrLov)
        {

            logger.Debug("Executing  getRgYearLOV rest service handler.");
            string restApiPath = "CreateMctrLovService/getRgYearLOV";
            logger.Info("Invoking Rest API : " + restApiPath + " with Request : " + createMctrLov);
            var response = HandlerUtil<CreateMctrLov>.RestPostProcessor(restApiPath, createMctrLov);
            logger.Info("Response received form Rest API : " + restApiPath + " : " + response);
            return response;
        }

        public IEnumerable<MctrCreateForm> mctrHeaderbutUnjrnlWhenButtonPressed(MctrCreateForm mctrCreateForm)
        {
            logger.Debug("Executing  mctrHeaderbutUnjrnlWhenButtonPressed rest service handler.");
            string restApiPath = "MctrCreateFormService/mctrHeaderbutUnjrnlWhenButtonPressed";
            logger.Info("Invoking Rest API : " + restApiPath + " with Request : " + mctrCreateForm);
            var response = HandlerUtil<MctrCreateForm>.RestPostProcessor(restApiPath, mctrCreateForm);
            logger.Info("Response received form Rest API : " + restApiPath + " : " + response);
            return response;
        }

        public IEnumerable<CreateMctrLov> getRgProjFromLOV(CreateMctrLov createMctrLov)
        {

            logger.Debug("Executing  getRgProjFromLOV rest service handler.");
            string restApiPath = "CreateMctrLovService/getRgProjFromLOV";
            logger.Info("Invoking Rest API : " + restApiPath + " with Request : " + createMctrLov);
            var response = HandlerUtil<CreateMctrLov>.RestPostProcessor(restApiPath, createMctrLov);
            logger.Info("Response received form Rest API : " + restApiPath + " : " + response);
            return response;
        }

        public IEnumerable<CreateMctrLov> getRgProjFromPromptLOV(CreateMctrLov createMctrLov)
        {

            logger.Debug("Executing  getRgProjFromLOV rest service handler.");
            string restApiPath = "CreateMctrLovService/getRgProjFromPromptLOV";
            logger.Info("Invoking Rest API : " + restApiPath + " with Request : " + createMctrLov);
            var response = HandlerUtil<CreateMctrLov>.RestPostProcessor(restApiPath, createMctrLov);
            logger.Info("Response received form Rest API : " + restApiPath + " : " + response);
            return response;
        }

        public IEnumerable<CreateMctrLov> getRgProjToPromptLOV(CreateMctrLov createMctrLov)
        {

            logger.Debug("Executing  getRgProjFromLOV rest service handler.");
            string restApiPath = "CreateMctrLovService/getRgProjToPromptLOV";
            logger.Info("Invoking Rest API : " + restApiPath + " with Request : " + createMctrLov);
            var response = HandlerUtil<CreateMctrLov>.RestPostProcessor(restApiPath, createMctrLov);
            logger.Info("Response received form Rest API : " + restApiPath + " : " + response);
            return response;
        }

        public IEnumerable<CreateMctrLov> getRgProjToLOV(CreateMctrLov createMctrLov)
        {

            logger.Debug("Executing  getRgProjToLOV rest service handler.");
            string restApiPath = "CreateMctrLovService/getRgProjToLOV";
            logger.Info("Invoking Rest API : " + restApiPath + " with Request : " + createMctrLov);
            var response = HandlerUtil<CreateMctrLov>.RestPostProcessor(restApiPath, createMctrLov);
            logger.Info("Response received form Rest API : " + restApiPath + " : " + response);
            return response;
        }

        public IEnumerable<CreateMctrLov> getRgTransFromLOV(CreateMctrLov createMctrLov)
        {

            logger.Debug("Executing  getRgTransFromLOV rest service handler.");
            string restApiPath = "CreateMctrLovService/getRgTransFromLOV";
            logger.Info("Invoking Rest API : " + restApiPath + " with Request : " + createMctrLov);
            var response = HandlerUtil<CreateMctrLov>.RestPostProcessor(restApiPath, createMctrLov);
            logger.Info("Response received form Rest API : " + restApiPath + " : " + response);
            return response;
        }

        public IEnumerable<CreateMctrLov> getRgListHomeDeptFromLOV(CreateMctrLov createMctrLov)
        {

            logger.Debug("Executing  getRgListHomeDeptFromLOV rest service handler.");
            string restApiPath = "CreateMctrLovService/getRgListHomeDeptFromLOV";
            logger.Info("Invoking Rest API : " + restApiPath + " with Request : " + createMctrLov);
            var response = HandlerUtil<CreateMctrLov>.RestPostProcessor(restApiPath, createMctrLov);
            logger.Info("Response received form Rest API : " + restApiPath + " : " + response);
            return response;
        }
        public IEnumerable<CreateMctrLov> getRgHomeDeptLocFromLOV(CreateMctrLov createMctrLov)
        {

            logger.Debug("Executing  getRgListHomeDeptFromLOV rest service handler.");
            string restApiPath = "CreateMctrLovService/getRgHomeDeptLocFromLOV";
            logger.Info("Invoking Rest API : " + restApiPath + " with Request : " + createMctrLov);
            var response = HandlerUtil<CreateMctrLov>.RestPostProcessor(restApiPath, createMctrLov);
            logger.Info("Response received form Rest API : " + restApiPath + " : " + response);
            return response;
        }
        public IEnumerable<CreateMctrLov> getRgListHomeDeptToLOV(CreateMctrLov createMctrLov)
        {

            logger.Debug("Executing  getRgListHomeDeptToLOV rest service handler.");
            string restApiPath = "CreateMctrLovService/getRgListHomeDeptToLOV";
            logger.Info("Invoking Rest API : " + restApiPath + " with Request : " + createMctrLov);
            var response = HandlerUtil<CreateMctrLov>.RestPostProcessor(restApiPath, createMctrLov);
            logger.Info("Response received form Rest API : " + restApiPath + " : " + response);
            return response;
        }

        public IEnumerable<CreateMctrLov> getRgWorkLocToLOV(CreateMctrLov createMctrLov)
        {

            logger.Debug("Executing  getRgListHomeDeptToLOV rest service handler.");
            string restApiPath = "CreateMctrLovService/getRgWorkLocToLOV";
            logger.Info("Invoking Rest API : " + restApiPath + " with Request : " + createMctrLov);
            var response = HandlerUtil<CreateMctrLov>.RestPostProcessor(restApiPath, createMctrLov);
            logger.Info("Response received form Rest API : " + restApiPath + " : " + response);
            return response;
        }

        public IEnumerable<CreateMctrLov> getRgListWorkLocToLOV(CreateMctrLov createMctrLov)
        {

            logger.Debug("Executing  getRgListHomeDeptToLOV rest service handler.");
            string restApiPath = "CreateMctrLovService/getRgListWorkLocToLOV";
            logger.Info("Invoking Rest API : " + restApiPath + " with Request : " + createMctrLov);
            var response = HandlerUtil<CreateMctrLov>.RestPostProcessor(restApiPath, createMctrLov);
            logger.Info("Response received form Rest API : " + restApiPath + " : " + response);
            return response;
        }

        public IEnumerable<CreateMctrLov> getRgRscToLOV(CreateMctrLov createMctrLov)
        {

            logger.Debug("Executing  getRgListHomeDeptToLOV rest service handler.");
            string restApiPath = "CreateMctrLovService/getRgRscToLOV";
            logger.Info("Invoking Rest API : " + restApiPath + " with Request : " + createMctrLov);
            var response = HandlerUtil<CreateMctrLov>.RestPostProcessor(restApiPath, createMctrLov);
            logger.Info("Response received form Rest API : " + restApiPath + " : " + response);
            return response;
        }

        public IEnumerable<CreateMctrLov> getRgAffiliateFromLOV(CreateMctrLov createMctrLov)
        {

            logger.Debug("Executing  getRgAffiliateFromLOV rest service handler.");
            string restApiPath = "CreateMctrLovService/getRgAffiliateFromLOV";
            logger.Info("Invoking Rest API : " + restApiPath + " with Request : " + createMctrLov);
            var response = HandlerUtil<CreateMctrLov>.RestPostProcessor(restApiPath, createMctrLov);
            logger.Info("Response received form Rest API : " + restApiPath + " : " + response);
            return response;
        }

        public IEnumerable<CreateMctrLov> getRgHomeLocFromLOV(CreateMctrLov createMctrLov)
        {

            logger.Debug("Executing  getRgHomeLocFromLOV rest service handler.");
            string restApiPath = "CreateMctrLovService/getRgHomeLocFromLOV";
            logger.Info("Invoking Rest API : " + restApiPath + " with Request : " + createMctrLov);
            var response = HandlerUtil<CreateMctrLov>.RestPostProcessor(restApiPath, createMctrLov);
            logger.Info("Response received form Rest API : " + restApiPath + " : " + response);
            return response;
        }

        public IEnumerable<CreateMctrLov> getRgListHomeLocFromLOV(CreateMctrLov createMctrLov)
        {

            logger.Debug("Executing  getRgHomeLocFromLOV rest service handler.");
            string restApiPath = "CreateMctrLovService/getRgListHomeLocFromLOV";
            logger.Info("Invoking Rest API : " + restApiPath + " with Request : " + createMctrLov);
            var response = HandlerUtil<CreateMctrLov>.RestPostProcessor(restApiPath, createMctrLov);
            logger.Info("Response received form Rest API : " + restApiPath + " : " + response);
            return response;
        }

        public IEnumerable<CreateMctrLov> getRgClassCodeFromLOV(CreateMctrLov createMctrLov)
        {

            logger.Debug("Executing  getRgHomeLocFromLOV rest service handler.");
            string restApiPath = "CreateMctrLovService/getRgClassCodeFromLOV";
            logger.Info("Invoking Rest API : " + restApiPath + " with Request : " + createMctrLov);
            var response = HandlerUtil<CreateMctrLov>.RestPostProcessor(restApiPath, createMctrLov);
            logger.Info("Response received form Rest API : " + restApiPath + " : " + response);
            return response;
        }

        public IEnumerable<CreateMctrLov> getRgListClassCodeFromLOV(CreateMctrLov createMctrLov)
        {

            logger.Debug("Executing  getRgHomeLocFromLOV rest service handler.");
            string restApiPath = "CreateMctrLovService/getRgListClassCodeFromLOV";
            logger.Info("Invoking Rest API : " + restApiPath + " with Request : " + createMctrLov);
            var response = HandlerUtil<CreateMctrLov>.RestPostProcessor(restApiPath, createMctrLov);
            logger.Info("Response received form Rest API : " + restApiPath + " : " + response);
            return response;
        }
        public IEnumerable<CreateMctrLov> getRgWorkDeptFromLOV(CreateMctrLov createMctrLov)
        {

            logger.Debug("Executing  getRgHomeLocFromLOV rest service handler.");
            string restApiPath = "CreateMctrLovService/getRgWorkDeptFromLOV";
            logger.Info("Invoking Rest API : " + restApiPath + " with Request : " + createMctrLov);
            var response = HandlerUtil<CreateMctrLov>.RestPostProcessor(restApiPath, createMctrLov);
            logger.Info("Response received form Rest API : " + restApiPath + " : " + response);
            return response;
        }

        public IEnumerable<CreateMctrLov> getRgWorkDeptLocFromLOV(CreateMctrLov createMctrLov)
        {

            logger.Debug("Executing  getRgHomeLocFromLOV rest service handler.");
            string restApiPath = "CreateMctrLovService/getRgWorkDeptLocFromLOV";
            logger.Info("Invoking Rest API : " + restApiPath + " with Request : " + createMctrLov);
            var response = HandlerUtil<CreateMctrLov>.RestPostProcessor(restApiPath, createMctrLov);
            logger.Info("Response received form Rest API : " + restApiPath + " : " + response);
            return response;
        }
        public IEnumerable<CreateMctrLov> getRgListWorkDeptFromLOV(CreateMctrLov createMctrLov)
        {

            logger.Debug("Executing  getRgHomeLocFromLOV rest service handler.");
            string restApiPath = "CreateMctrLovService/getRgListWorkDeptFromLOV";
            logger.Info("Invoking Rest API : " + restApiPath + " with Request : " + createMctrLov);
            var response = HandlerUtil<CreateMctrLov>.RestPostProcessor(restApiPath, createMctrLov);
            logger.Info("Response received form Rest API : " + restApiPath + " : " + response);
            return response;
        }

        public IEnumerable<CreateMctrLov> getRgWorkLocFromLOV(CreateMctrLov createMctrLov)
        {

            logger.Debug("Executing  getRgHomeLocFromLOV rest service handler.");
            string restApiPath = "CreateMctrLovService/getRgWorkLocFromLOV";
            logger.Info("Invoking Rest API : " + restApiPath + " with Request : " + createMctrLov);
            var response = HandlerUtil<CreateMctrLov>.RestPostProcessor(restApiPath, createMctrLov);
            logger.Info("Response received form Rest API : " + restApiPath + " : " + response);
            return response;
        }
        public IEnumerable<CreateMctrLov> getRgListWorkLocFromLOV(CreateMctrLov createMctrLov)
        {

            logger.Debug("Executing  getRgHomeLocFromLOV rest service handler.");
            string restApiPath = "CreateMctrLovService/getRgListWorkLocFromLOV";
            logger.Info("Invoking Rest API : " + restApiPath + " with Request : " + createMctrLov);
            var response = HandlerUtil<CreateMctrLov>.RestPostProcessor(restApiPath, createMctrLov);
            logger.Info("Response received form Rest API : " + restApiPath + " : " + response);
            return response;
        }

        public IEnumerable<CreateMctrLov> getRgRscFromLOV(CreateMctrLov createMctrLov)
        {

            logger.Debug("Executing  getRgHomeLocFromLOV rest service handler.");
            string restApiPath = "CreateMctrLovService/getRgRscFromLOV";
            logger.Info("Invoking Rest API : " + restApiPath + " with Request : " + createMctrLov);
            var response = HandlerUtil<CreateMctrLov>.RestPostProcessor(restApiPath, createMctrLov);
            logger.Info("Response received form Rest API : " + restApiPath + " : " + response);
            return response;
        }

        public IEnumerable<CreateMctrLov> getRgWpdFromLOV(CreateMctrLov createMctrLov)
        {

            logger.Debug("Executing  getRgHomeLocFromLOV rest service handler.");
            string restApiPath = "CreateMctrLovService/getRgWpdFromLOV";
            logger.Info("Invoking Rest API : " + restApiPath + " with Request : " + createMctrLov);
            var response = HandlerUtil<CreateMctrLov>.RestPostProcessor(restApiPath, createMctrLov);
            logger.Info("Response received form Rest API : " + restApiPath + " : " + response);
            return response;
        }

        public IEnumerable<CreateMctrLov> getRgBulkFromLOV(CreateMctrLov createMctrLov)
        {

            logger.Debug("Executing  getRgHomeLocFromLOV rest service handler.");
            string restApiPath = "CreateMctrLovService/getRgBulkFromLOV";
            logger.Info("Invoking Rest API : " + restApiPath + " with Request : " + createMctrLov);
            var response = HandlerUtil<CreateMctrLov>.RestPostProcessor(restApiPath, createMctrLov);
            logger.Info("Response received form Rest API : " + restApiPath + " : " + response);
            return response;
        }

        public IEnumerable<CreateMctrLov> getRgCecEpFromLOV(CreateMctrLov createMctrLov)
        {

            logger.Debug("Executing  getRgHomeLocFromLOV rest service handler.");
            string restApiPath = "CreateMctrLovService/getRgCecEpFromLOV";
            logger.Info("Invoking Rest API : " + restApiPath + " with Request : " + createMctrLov);
            var response = HandlerUtil<CreateMctrLov>.RestPostProcessor(restApiPath, createMctrLov);
            logger.Info("Response received form Rest API : " + restApiPath + " : " + response);
            return response;
        }

        public IEnumerable<CreateMctrLov> getRgListCecEpFromLOV(CreateMctrLov createMctrLov)
        {

            logger.Debug("Executing  getRgHomeLocFromLOV rest service handler.");
            string restApiPath = "CreateMctrLovService/getRgListCecEpFromLOV";
            logger.Info("Invoking Rest API : " + restApiPath + " with Request : " + createMctrLov);
            var response = HandlerUtil<CreateMctrLov>.RestPostProcessor(restApiPath, createMctrLov);
            logger.Info("Response received form Rest API : " + restApiPath + " : " + response);
            return response;
        }

        public IEnumerable<CreateMctrLov> getRgHomeLocToLOV(CreateMctrLov createMctrLov)
        {

            logger.Debug("Executing  getRgHomeLocFromLOV rest service handler.");
            string restApiPath = "CreateMctrLovService/getRgHomeLocToLOV";
            logger.Info("Invoking Rest API : " + restApiPath + " with Request : " + createMctrLov);
            var response = HandlerUtil<CreateMctrLov>.RestPostProcessor(restApiPath, createMctrLov);
            logger.Info("Response received form Rest API : " + restApiPath + " : " + response);
            return response;
        }

        public IEnumerable<CreateMctrLov> getRgListHomeLocToLOV(CreateMctrLov createMctrLov)
        {

            logger.Debug("Executing  getRgHomeLocFromLOV rest service handler.");
            string restApiPath = "CreateMctrLovService/getRgListHomeLocToLOV";
            logger.Info("Invoking Rest API : " + restApiPath + " with Request : " + createMctrLov);
            var response = HandlerUtil<CreateMctrLov>.RestPostProcessor(restApiPath, createMctrLov);
            logger.Info("Response received form Rest API : " + restApiPath + " : " + response);
            return response;
        }
        public IEnumerable<CreateMctrLov> getRgClassCodeToLOV(CreateMctrLov createMctrLov)
        {

            logger.Debug("Executing  getRgHomeLocFromLOV rest service handler.");
            string restApiPath = "CreateMctrLovService/getRgClassCodeToLOV";
            logger.Info("Invoking Rest API : " + restApiPath + " with Request : " + createMctrLov);
            var response = HandlerUtil<CreateMctrLov>.RestPostProcessor(restApiPath, createMctrLov);
            logger.Info("Response received form Rest API : " + restApiPath + " : " + response);
            return response;
        }

        public IEnumerable<CreateMctrLov> getRgListClassCodeToLOV(CreateMctrLov createMctrLov)
        {

            logger.Debug("Executing  getRgHomeLocFromLOV rest service handler.");
            string restApiPath = "CreateMctrLovService/getRgListClassCodeToLOV";
            logger.Info("Invoking Rest API : " + restApiPath + " with Request : " + createMctrLov);
            var response = HandlerUtil<CreateMctrLov>.RestPostProcessor(restApiPath, createMctrLov);
            logger.Info("Response received form Rest API : " + restApiPath + " : " + response);
            return response;
        }
        public IEnumerable<CreateMctrLov> getRgWorkDeptToLOV(CreateMctrLov createMctrLov)
        {

            logger.Debug("Executing  getRgHomeLocFromLOV rest service handler.");
            string restApiPath = "CreateMctrLovService/getRgWorkDeptToLOV";
            logger.Info("Invoking Rest API : " + restApiPath + " with Request : " + createMctrLov);
            var response = HandlerUtil<CreateMctrLov>.RestPostProcessor(restApiPath, createMctrLov);
            logger.Info("Response received form Rest API : " + restApiPath + " : " + response);
            return response;
        }
        public IEnumerable<CreateMctrLov> getRgWorkDeptLocToLOV(CreateMctrLov createMctrLov)
        {

            logger.Debug("Executing  getRgHomeLocFromLOV rest service handler.");
            string restApiPath = "CreateMctrLovService/getRgWorkDeptLocToLOV";
            logger.Info("Invoking Rest API : " + restApiPath + " with Request : " + createMctrLov);
            var response = HandlerUtil<CreateMctrLov>.RestPostProcessor(restApiPath, createMctrLov);
            logger.Info("Response received form Rest API : " + restApiPath + " : " + response);
            return response;
        }

        public IEnumerable<CreateMctrLov> getRgListWorkDeptToLOV(CreateMctrLov createMctrLov)
        {

            logger.Debug("Executing  getRgHomeLocFromLOV rest service handler.");
            string restApiPath = "CreateMctrLovService/getRgListWorkDeptToLOV";
            logger.Info("Invoking Rest API : " + restApiPath + " with Request : " + createMctrLov);
            var response = HandlerUtil<CreateMctrLov>.RestPostProcessor(restApiPath, createMctrLov);
            logger.Info("Response received form Rest API : " + restApiPath + " : " + response);
            return response;
        }
        public IEnumerable<CreateMctrLov> getRgBulkToLOV(CreateMctrLov createMctrLov)
        {

            logger.Debug("Executing  getRgHomeLocFromLOV rest service handler.");
            string restApiPath = "CreateMctrLovService/getRgBulkToLOV";
            logger.Info("Invoking Rest API : " + restApiPath + " with Request : " + createMctrLov);
            var response = HandlerUtil<CreateMctrLov>.RestPostProcessor(restApiPath, createMctrLov);
            logger.Info("Response received form Rest API : " + restApiPath + " : " + response);
            return response;
        }

        public IEnumerable<CreateMctrLov> getRgCecEpToLOV(CreateMctrLov createMctrLov)
        {

            logger.Debug("Executing  getRgHomeLocFromLOV rest service handler.");
            string restApiPath = "CreateMctrLovService/getRgCecEpToLOV";
            logger.Info("Invoking Rest API : " + restApiPath + " with Request : " + createMctrLov);
            var response = HandlerUtil<CreateMctrLov>.RestPostProcessor(restApiPath, createMctrLov);
            logger.Info("Response received form Rest API : " + restApiPath + " : " + response);
            return response;
        }

        public IEnumerable<CreateMctrLov> getRgListCecEpToLOV(CreateMctrLov createMctrLov)
        {

            logger.Debug("Executing  getRgHomeLocFromLOV rest service handler.");
            string restApiPath = "CreateMctrLovService/getRgListCecEpToLOV";
            logger.Info("Invoking Rest API : " + restApiPath + " with Request : " + createMctrLov);
            var response = HandlerUtil<CreateMctrLov>.RestPostProcessor(restApiPath, createMctrLov);
            logger.Info("Response received form Rest API : " + restApiPath + " : " + response);
            return response;
        }

        public IEnumerable<CreateMctrLov> getRgLiBemsLOV(CreateMctrLov createMctrLov)
        {

            logger.Debug("Executing  getRgHomeLocFromLOV rest service handler.");
            string restApiPath = "CreateMctrLovService/getRgLiBemsLOV";
            logger.Info("Invoking Rest API : " + restApiPath + " with Request : " + createMctrLov);
            var response = HandlerUtil<CreateMctrLov>.RestPostProcessor(restApiPath, createMctrLov);
            logger.Info("Response received form Rest API : " + restApiPath + " : " + response);
            return response;
        }
        public IEnumerable<ReasonCode> getRgReasonLOV(CreateMctrLov createMctrLov)
        {

            logger.Debug("Executing  getRgSrAcctLOV rest service handler.");
            string restApiPath = "CreateMctrLovService/getRgReasonLOV";
            logger.Info("Invoking Rest API : " + restApiPath + " with Request : " + createMctrLov);
            var response = HandlerUtil<CreateMctrLov>.RestPostProcessor(restApiPath, createMctrLov);
            logger.Info("Response received form Rest API : " + restApiPath + " : " + response);
            return response.First().ReasonCodes;
        }





        ///*************************************************************
        ///<summary>
        ///Method Name : mctrCommentMctrCommentOnLoad
        ///</summary>
        ///<param name = "MctrCreateForm"></param>
        ///<returns>IEnumerable<MctrCreateForm> </returns>

        public IEnumerable<MCTRComments> mctrCommentMctrCommentOnLoad(MCTRComments mctrComments)
        {

            logger.Debug("Executing mctrCommentMctrCommentOnLoad rest service handler.");
            string restApiPath = "MctrCreateFormService/mctrcommentonload";
            logger.Info("Invoking Rest API : " + restApiPath + " with Request : " + mctrComments);
            var response = HandlerUtil<MCTRComments>.RestPostProcessor(restApiPath, mctrComments);
            logger.Info("Response received form Rest API : " + restApiPath + " : " + response);
            return response;
        }

        ///*************************************************************
        ///<summary>
        ///Method Name : mctrCommentcommentsWhenValidateItem
        ///</summary>
        ///<param name = "MctrCreateForm"></param>
        ///<returns>IEnumerable<MctrCreateForm> </returns>

        public IEnumerable<MctrCreateForm> mctrCommentcommentsWhenValidateItem(MctrCreateForm mctrCreateForm)
        {

            logger.Debug("Executing mctrCommentcommentsWhenValidateItem rest service handler.");
            string restApiPath = "MctrCreateForm/mctrCommentcommentsWhenValidateItem";
            logger.Info("Invoking Rest API : " + restApiPath + " with Request : " + mctrCreateForm);
            var response = HandlerUtil<MctrCreateForm>.RestPostProcessor(restApiPath, mctrCreateForm);
            logger.Info("Response received form Rest API : " + restApiPath + " : " + response);
            return response;
        }

        ///*************************************************************
        ///<summary>
        ///Method Name : mctrCommentviewStatementWhenButtonPressed
        ///</summary>
        ///<param name = "MctrCreateForm"></param>
        ///<returns>IEnumerable<MctrCreateForm> </returns>

        public IEnumerable<MctrCreateForm> mctrCommentviewStatementWhenButtonPressed(MctrCreateForm mctrCreateForm)
        {

            logger.Debug("Executing mctrCommentviewStatementWhenButtonPressed rest service handler.");
            string restApiPath = "MctrCreateForm/mctrCommentviewStatementWhenButtonPressed";
            logger.Info("Invoking Rest API : " + restApiPath + " with Request : " + mctrCreateForm);
            var response = HandlerUtil<MctrCreateForm>.RestPostProcessor(restApiPath, mctrCreateForm);
            logger.Info("Response received form Rest API : " + restApiPath + " : " + response);
            return response;
        }

        ///*************************************************************
        ///<summary>
        ///Method Name : mctrCommentnewStatementWhenButtonPressed
        ///</summary>
        ///<param name = "MctrCreateForm"></param>
        ///<returns>IEnumerable<MctrCreateForm> </returns>

        public IEnumerable<MctrCreateForm> mctrCommentnewStatementWhenButtonPressed(MctrCreateForm mctrCreateForm)
        {

            logger.Debug("Executing mctrCommentnewStatementWhenButtonPressed rest service handler.");
            string restApiPath = "MctrCreateForm/mctrCommentnewStatementWhenButtonPressed";
            logger.Info("Invoking Rest API : " + restApiPath + " with Request : " + mctrCreateForm);
            var response = HandlerUtil<MctrCreateForm>.RestPostProcessor(restApiPath, mctrCreateForm);
            logger.Info("Response received form Rest API : " + restApiPath + " : " + response);
            return response;
        }

        ///*************************************************************
        ///<summary>
        ///Method Name : mctrCommentbutSaveWhenButtonPressed
        ///</summary>
        ///<param name = "MctrCreateForm"></param>
        ///<returns>IEnumerable<MctrCreateForm> </returns>

        public IEnumerable<MCTRComments> mctrCommentbutSaveWhenButtonPressed(MCTRComments mctrCreateForm)
        {

            logger.Debug("Executing mctrCommentbutSaveWhenButtonPressed rest service handler.");
            string restApiPath = "MctrCreateFormService/mctrCommentbutSaveWhenButtonPressed";
            logger.Info("Invoking Rest API : " + restApiPath + " with Request : " + mctrCreateForm);
            var response = HandlerUtil<MCTRComments>.RestPostProcessor(restApiPath, mctrCreateForm);
            logger.Info("Response received form Rest API : " + restApiPath + " : " + response);
            return response;
        }

        public IEnumerable<CreateMctrLov> getRgWpdToLOV(CreateMctrLov createMctrLov)
        {

            logger.Debug("Executing  getRgWpdToLOV rest service handler.");
            string restApiPath = "CreateMctrLovService/getRgWpdToLOV";
            logger.Info("Invoking Rest API : " + restApiPath + " with Request : " + createMctrLov);
            var response = HandlerUtil<CreateMctrLov>.RestPostProcessor(restApiPath, createMctrLov);
            logger.Info("Response received form Rest API : " + restApiPath + " : " + response);
            return response;
        }

        public IEnumerable<MctrCreateForm> mctrLineItemamountToPostTextItem(MctrCreateForm mctrCreateForm)
        {

            logger.Debug("Executing  mctrLineItemamountToPostTextItem rest service handler.");
            string restApiPath = "MctrCreateFormService/mctrLineItemamountToPostTextItem";
            logger.Info("Invoking Rest API : " + restApiPath + " with Request : " + mctrCreateForm);
            var response = HandlerUtil<MctrCreateForm>.RestPostProcessor(restApiPath, mctrCreateForm);
            logger.Info("Response received form Rest API : " + restApiPath + " : " + response);
            return response;
        }

        public IEnumerable<HeaderExcel> mctrheaderbuttoxlswhenbuttonpressed(HeaderExcel mctrCreateForm)
        {

            logger.Debug("Executing  mctrheaderbuttoxlswhenbuttonpressed rest service handler.");
            string restApiPath = "MctrCreateFormService/mctrheaderbuttoxlswhenbuttonpressed";
            logger.Info("Invoking Rest API : " + restApiPath + " with Request : " + mctrCreateForm);
            var response = HandlerUtil<HeaderExcel>.RestPostProcessor(restApiPath, mctrCreateForm);
            logger.Info("Response received form Rest API : " + restApiPath + " : " + response);
            return response;
        }

        public IEnumerable<MctrCreateForm> mctrLineItemrscToPostTextItemOpenLOV(MctrCreateForm mctrCreateForm)
        {

            logger.Debug("Executing  mctrLineItemrscToPostTextItemOpenLOV rest service handler.");
            string restApiPath = "MctrCreateFormService/mctrLineItemrscToPostTextItemOpenLOV";
            logger.Info("Invoking Rest API : " + restApiPath + " with Request : " + mctrCreateForm);
            var response = HandlerUtil<MctrCreateForm>.RestPostProcessor(restApiPath, mctrCreateForm);
            logger.Info("Response received form Rest API : " + restApiPath + " : " + response);
            return response;
        }

        public IEnumerable<MctrCreateForm> mctrLineItemhomeDeptToPostTextItemOpenLOV(MctrCreateForm mctrCreateForm)
        {

            logger.Debug("Executing  mctrLineItemhomeDeptToPostTextItemOpenLOV rest service handler.");
            string restApiPath = "MctrCreateFormService/mctrLineItemhomeDeptToPostTextItemOpenLOV";
            logger.Info("Invoking Rest API : " + restApiPath + " with Request : " + mctrCreateForm);
            var response = HandlerUtil<MctrCreateForm>.RestPostProcessor(restApiPath, mctrCreateForm);
            logger.Info("Response received form Rest API : " + restApiPath + " : " + response);
            return response;
        }

        public IEnumerable<MctrCreateForm> mctrLineItemhomeLocToPostTextItemOpenLOV(MctrCreateForm mctrCreateForm)
        {

            logger.Debug("Executing  mctrLineItemhomeDeptToPostTextItemOpenLOV rest service handler.");
            string restApiPath = "MctrCreateFormService/mctrLineItemhomeLocToPostTextItemOpenLOV";
            logger.Info("Invoking Rest API : " + restApiPath + " with Request : " + mctrCreateForm);
            var response = HandlerUtil<MctrCreateForm>.RestPostProcessor(restApiPath, mctrCreateForm);
            logger.Info("Response received form Rest API : " + restApiPath + " : " + response);
            return response;
        }


        public IEnumerable<MctrCreateForm> mctrLineItemworkLocToPostTextItemOpenLOV(MctrCreateForm mctrCreateForm)
        {

            logger.Debug("Executing  mctrLineItemworkLocToPostTextItemOpenLOV rest service handler.");
            string restApiPath = "MctrCreateFormService/mctrLineItemworkLocToPostTextItemOpenLOV";
            logger.Info("Invoking Rest API : " + restApiPath + " with Request : " + mctrCreateForm);
            var response = HandlerUtil<MctrCreateForm>.RestPostProcessor(restApiPath, mctrCreateForm);
            logger.Info("Response received form Rest API : " + restApiPath + " : " + response);
            return response;
        }

        public IEnumerable<MctrCreateForm> mctrLineItemworkDeptToPostTextItemOpenLOV(MctrCreateForm mctrCreateForm)
        {

            logger.Debug("Executing  mctrLineItemworkDeptToPostTextItemOpenLOV rest service handler.");
            string restApiPath = "MctrCreateFormService/mctrLineItemworkDeptToPostTextItemOpenLOV";
            logger.Info("Invoking Rest API : " + restApiPath + " with Request : " + mctrCreateForm);
            var response = HandlerUtil<MctrCreateForm>.RestPostProcessor(restApiPath, mctrCreateForm);
            logger.Info("Response received form Rest API : " + restApiPath + " : " + response);
            return response;
        }

        public IEnumerable<MctrCreateForm> mctrLineItemhomeBuglToPostTextItem(MctrCreateForm mctrCreateForm)
        {

            logger.Debug("Executing  mctrLineItemhomeBuglToPostTextItem rest service handler.");
            string restApiPath = "MctrCreateFormService/mctrLineItemhomeBuglToPostTextItem";
            logger.Info("Invoking Rest API : " + restApiPath + " with Request : " + mctrCreateForm);
            var response = HandlerUtil<MctrCreateForm>.RestPostProcessor(restApiPath, mctrCreateForm);
            logger.Info("Response received form Rest API : " + restApiPath + " : " + response);
            return response;
        }

        public IEnumerable<MctrCreateForm> mctrLineItemaccountToPostTextItem(MctrCreateForm mctrCreateForm)
        {

            logger.Debug("Executing  mctrLineItemaccountToPostTextItem rest service handler.");
            string restApiPath = "MctrCreateFormService/mctrLineItemaccountToPostTextItem";
            logger.Info("Invoking Rest API : " + restApiPath + " with Request : " + mctrCreateForm);
            var response = HandlerUtil<MctrCreateForm>.RestPostProcessor(restApiPath, mctrCreateForm);
            logger.Info("Response received form Rest API : " + restApiPath + " : " + response);
            return response;
        }

        public IEnumerable<MctrCreateForm> mctrLineItemestmtgPricgCdFromPostTextItemOpenLOV(MctrCreateForm mctrCreateForm)
        {

            logger.Debug("Executing  mctrLineItemestmtgPricgCdFromPostTextItemOpenLOV rest service handler.");
            string restApiPath = "MctrCreateFormService/mctrLineItemestmtgPricgCdFromPostTextItemOpenLOV";
            logger.Info("Invoking Rest API : " + restApiPath + " with Request : " + mctrCreateForm);
            var response = HandlerUtil<MctrCreateForm>.RestPostProcessor(restApiPath, mctrCreateForm);
            logger.Info("Response received form Rest API : " + restApiPath + " : " + response);
            return response;
        }

        public IEnumerable<MctrCreateForm> mctrLineItemquantityFromPostTextItem(MctrCreateForm mctrCreateForm)
        {
            logger.Debug("Executing  mctrLineItemquantityFromPostTextItem rest service handler.");
            string restApiPath = "MctrCreateFormService/mctrLineItemquantityFromPostTextItem";
            logger.Info("Invoking Rest API : " + restApiPath + " with Request : " + mctrCreateForm);
            var response = HandlerUtil<MctrCreateForm>.RestPostProcessor(restApiPath, mctrCreateForm);
            logger.Info("Response received form Rest API : " + restApiPath + " : " + response);
            return response;
        }


        public IEnumerable<MctrCreateForm> submitBtnmctrLineItemquantityFromPostTextItem(MctrCreateForm mctrCreateForm)
        {

            logger.Debug("Executing  submitBtnmctrLineItemquantityFromPostTextItem rest service handler.");
            string restApiPath = "MctrCreateFormService/submitBtnmctrLineItemquantityFromPostTextItem";
            logger.Info("Invoking Rest API : " + restApiPath + " with Request : " + mctrCreateForm);
            var response = HandlerUtil<MctrCreateForm>.RestPostProcessor(restApiPath, mctrCreateForm);
            logger.Info("Response received form Rest API : " + restApiPath + " : " + response);
            return response;
        }

        public IEnumerable<MctrCreateForm> mctrLineItemPreInsert(MctrCreateForm mctrCreateForm)
        {
            logger.Debug("Executing  mctrHeaderPreInsert service handler.");
            string restApiPath = "MctrCreateFormService/mctrLineItemPreInsert";
            logger.Info("Invoking Rest API : " + restApiPath + " with Request : " + mctrCreateForm);
            var response = HandlerUtil<MctrCreateForm>.RestPostProcessor(restApiPath, mctrCreateForm);
            logger.Info("Response received form Rest API : " + restApiPath + " : " + response);
            return response;
        }
        public IEnumerable<MctrCreateForm> mctrLineItemPostInsert(MctrCreateForm mctrCreateForm)
        {

            logger.Debug("Executing  mctrHeaderPreInsert service handler.");
            string restApiPath = "MctrCreateFormService/mctrLineItemPostInsert";
            logger.Info("Invoking Rest API : " + restApiPath + " with Request : " + mctrCreateForm);
            var response = HandlerUtil<MctrCreateForm>.RestPostProcessor(restApiPath, mctrCreateForm);
            logger.Info("Response received form Rest API : " + restApiPath + " : " + response);
            return response;
        }
        public IEnumerable<MctrCreateForm> mctrLineItemPreUpdate(MctrCreateForm mctrCreateForm)
        {

            logger.Debug("Executing  mctrHeaderPreInsert service handler.");
            string restApiPath = "MctrCreateFormService/mctrLineItemPreUpdate";
            logger.Info("Invoking Rest API : " + restApiPath + " with Request : " + mctrCreateForm);
            var response = HandlerUtil<MctrCreateForm>.RestPostProcessor(restApiPath, mctrCreateForm);
            logger.Info("Response received form Rest API : " + restApiPath + " : " + response);
            return response;
        }
        public IEnumerable<MctrCreateForm> mctrLineItemPostUpdate(MctrCreateForm mctrCreateForm)
        {

            logger.Debug("Executing  mctrHeaderPreInsert service handler.");
            string restApiPath = "MctrCreateFormService/mctrLineItemPostUpdate";
            logger.Info("Invoking Rest API : " + restApiPath + " with Request : " + mctrCreateForm);
            var response = HandlerUtil<MctrCreateForm>.RestPostProcessor(restApiPath, mctrCreateForm);
            logger.Info("Response received form Rest API : " + restApiPath + " : " + response);
            return response;
        }
        public IEnumerable<MctrCreateForm> mctrLineItemPostDelete(MctrCreateForm mctrCreateForm)
        {

            logger.Debug("Executing  mctrHeaderPreInsert service handler.");
            string restApiPath = "MctrCreateFormService/mctrLineItemPostDelete";
            logger.Info("Invoking Rest API : " + restApiPath + " with Request : " + mctrCreateForm);
            var response = HandlerUtil<MctrCreateForm>.RestPostProcessor(restApiPath, mctrCreateForm);
            logger.Info("Response received form Rest API : " + restApiPath + " : " + response);
            return response;
        }
        public IEnumerable<MctrCreateForm> mctrLineItemPostQuery(MctrCreateForm mctrCreateForm)
        {

            logger.Debug("Executing  mctrHeaderPreInsert service handler.");
            string restApiPath = "MctrCreateFormService/mctrLineItemPostQuery";
            logger.Info("Invoking Rest API : " + restApiPath + " with Request : " + mctrCreateForm);
            var response = HandlerUtil<MctrCreateForm>.RestPostProcessor(restApiPath, mctrCreateForm);
            logger.Info("Response received form Rest API : " + restApiPath + " : " + response);
            return response;
        }




        public IEnumerable<MctrCreateForm> pycystatuscheckbubut(MctrCreateForm mctrCreateForm)
        {
            string restApiPath = "MctrCreateFormService/pycystatuscheckbubut";
            var response = HandlerUtil<MctrCreateForm>.RestPostProcessor(restApiPath, mctrCreateForm);
            return response;
        }

        public IEnumerable<MctrCreateForm> fyearperiodvalidation(MctrCreateForm mctrCreateForm)
        {
            string restApiPath = "MctrCreateFormService/fyearperiodvalidation";
            var response = HandlerUtil<MctrCreateForm>.RestPostProcessor(restApiPath, mctrCreateForm);
            return response;
        }

        public IEnumerable<MctrCreateForm> validApprover(MctrCreateForm mctrCreateForm)
        {
            string restApiPath = "MctrCreateFormService/validApprover";
            var response = HandlerUtil<MctrCreateForm>.RestPostProcessor(restApiPath, mctrCreateForm);
            return response;
        }

        public IEnumerable<MctrCreateForm> mctrLineItemaffiliateFromPostTextItemOpenLOV(MctrCreateForm mctrCreateForm)
        {
            string restApiPath = "MctrCreateFormService/mctrLineItemaffiliateFromPostTextItemOpenLOV";
            var response = HandlerUtil<MctrCreateForm>.RestPostProcessor(restApiPath, mctrCreateForm);
            return response;
        }

        public IEnumerable<MctrCreateForm> mctrLineItemaccountFromPostTextItem(MctrCreateForm mctrCreateForm)
        {
            string restApiPath = "MctrCreateFormService/mctrLineItemaccountFromPostTextItem";
            var response = HandlerUtil<MctrCreateForm>.RestPostProcessor(restApiPath, mctrCreateForm);
            return response;
        }
        public IEnumerable<MctrCreateForm> mctrLineItemClassCditemOpenLOV(MctrCreateForm mctrCreateForm)
        {
            string restApiPath = "MctrCreateFormService/mctrLineItemClassCditemOpenLOV";
            var response = HandlerUtil<MctrCreateForm>.RestPostProcessor(restApiPath, mctrCreateForm);
            return response;
        }
        public IEnumerable<BuProfile> mctrLineItembulkFromPostTextItemOpenLOVBulkFlag(BuProfile buprofile)
        {
            string restApiPath = "MctrCreateFormService/mctrLineItembulkFromPostTextItemOpenLOVBulkFlag";
            var response = HandlerUtil<BuProfile>.RestPostProcessor(restApiPath, buprofile);
            return response;
        }

        public IEnumerable<MctrCreateForm> mctrLineItembulkFromPostTextItemOpenLOV(MctrCreateForm mctrCreateForm)
        {
            string restApiPath = "MctrCreateFormService/mctrLineItembulkFromPostTextItemOpenLOV";
            var response = HandlerUtil<MctrCreateForm>.RestPostProcessor(restApiPath, mctrCreateForm);
            return response;
        }
        public IEnumerable<MctrCreateForm> mctrLineItemamountfromPostTextItemOpenLOV(MctrCreateForm mctrCreateForm)
        {
            string restApiPath = "MctrCreateFormService/mctrLineItemamountfromPostTextItemOpenLOV";
            var response = HandlerUtil<MctrCreateForm>.RestPostProcessor(restApiPath, mctrCreateForm);
            return response;
        }

        public IEnumerable<MctrCreateForm> mctrLineItembutBulkWhenButtonPressedOpenLOV(MctrCreateForm mctrCreateForm)
        {
            string restApiPath = "MctrCreateFormService/mctrLineItembutBulkWhenButtonPressedOpenLOV";
            var response = HandlerUtil<MctrCreateForm>.RestPostProcessor(restApiPath, mctrCreateForm);
            return response;
        }

        
               public IEnumerable<MctrCreateForm> batchModeCheck(MctrCreateForm mctrCreateForm)
        {
            string restApiPath = "MctrCreateFormService/batchModeCheck";
            var response = HandlerUtil<MctrCreateForm>.RestPostProcessor(restApiPath, mctrCreateForm);
            return response;
        }
        public IEnumerable<MctrCreateForm> mctrLineItembutWpdWhenButtonPressedOpenLOV(MctrCreateForm mctrCreateForm)
        {
            string restApiPath = "MctrCreateFormService/mctrLineItembutWpdWhenButtonPressedOpenLOV ";
            var response = HandlerUtil<MctrCreateForm>.RestPostProcessor(restApiPath, mctrCreateForm);
            return response;
        }

        public IEnumerable<MctrCreateForm> mctrLineItemworkLocFromPostTextItemOpenLOV(MctrCreateForm mctrCreateForm)
        {
            string restApiPath = "MctrCreateFormService/mctrLineItemworkLocFromPostTextItemOpenLOV";
            var response = HandlerUtil<MctrCreateForm>.RestPostProcessor(restApiPath, mctrCreateForm);
            return response;
        }

        public IEnumerable<MctrCreateForm> mctrLineItemworkDeptFromPostTextItemOpenLOV(MctrCreateForm mctrCreateForm)
        {
            string restApiPath = "MctrCreateFormService/mctrLineItemworkDeptFromPostTextItemOpenLOV";
            var response = HandlerUtil<MctrCreateForm>.RestPostProcessor(restApiPath, mctrCreateForm);
            return response;
        }

        public IEnumerable<MctrCreateForm> mctrLineItemhomeLocFromPostTextItemOpenLOV(MctrCreateForm mctrCreateForm)
        {
            string restApiPath = "MctrCreateFormService/mctrLineItemhomeLocFromPostTextItemOpenLOV";
            var response = HandlerUtil<MctrCreateForm>.RestPostProcessor(restApiPath, mctrCreateForm);
            return response;
        }


        public IEnumerable<MctrCreateForm> mctrLineItemhomeDeptFromPostTextItemOpenLOV(MctrCreateForm mctrCreateForm)
        {
            string restApiPath = "MctrCreateFormService/mctrLineItemhomeDeptFromPostTextItemOpenLOV";
            var response = HandlerUtil<MctrCreateForm>.RestPostProcessor(restApiPath, mctrCreateForm);
            return response;
        }


        public IEnumerable<MctrCreateForm> mctrLineItemwpdFromPostTextItemOpenLOV(MctrCreateForm mctrCreateForm)
        {
            string restApiPath = "MctrCreateFormService/mctrLineItemwpdFromPostTextItemOpenLOV";
            var response = HandlerUtil<MctrCreateForm>.RestPostProcessor(restApiPath, mctrCreateForm);
            return response;
        }

        public IEnumerable<MctrCreateForm> mctrLineItemrscFromPostTextItemOpenLOV(MctrCreateForm mctrCreateForm)
        {
            string restApiPath = "MctrCreateFormService/mctrLineItemrscFromPostTextItemOpenLOV";
            var response = HandlerUtil<MctrCreateForm>.RestPostProcessor(restApiPath, mctrCreateForm);
            return response;
        }
        public IEnumerable<MctrCreateForm> mctrHeaderbutFiscalYearWhenButtonPressedOpenLOV(MctrCreateForm mctrCreateForm)
        {
            string restApiPath = "MctrCreateFormService/mctrHeaderbutFiscalYearWhenButtonPressedOpenLOV";
            var response = HandlerUtil<MctrCreateForm>.RestPostProcessor(restApiPath, mctrCreateForm);
            return response;
        }
        public IEnumerable<MctrCreateForm> mctrHeaderbutBuWhenButtonPressedOpenLOV(MctrCreateForm mctrCreateForm)
        {
            string restApiPath = "MctrCreateFormService/mctrHeaderbutBuWhenButtonPressedOpenLOV";
            var response = HandlerUtil<MctrCreateForm>.RestPostProcessor(restApiPath, mctrCreateForm);
            return response;
        }
        public IEnumerable<MctrCreateForm> buButPressPTTValidation(MctrCreateForm mctrCreateForm)
        {
            string restApiPath = "MctrCreateFormService/buButPressPTTValidation";
            var response = HandlerUtil<MctrCreateForm>.RestPostProcessor(restApiPath, mctrCreateForm);
            return response;
        }
        [HttpPost]
        public IEnumerable<MctrCreateForm> manRatedFlag(MctrCreateForm mctrCreateForm)
        {
            string restApiPath = "MctrCreateFormService/manRatedFlag";
            var response = HandlerUtil<MctrCreateForm>.RestPostProcessor(restApiPath, mctrCreateForm);
            return response;
        }

        [HttpPost]
        public IEnumerable<MctrCreateForm> mctrHeaderbutRecallWhenButtonPressed(MctrCreateForm mctrCreateForm)
        {
            string restApiPath = "MctrCreateFormService/mctrHeaderbutRecallWhenButtonPressed";
            var response = HandlerUtil<MctrCreateForm>.RestPostProcessor(restApiPath, mctrCreateForm);
            return response;
        }
        public IEnumerable<MctrLineItem> overheadOnLoad(MctrLineItem mctrLineItem)
        {
            string restApiPath = "MctrCreateFormService/overheadOnLoad";
            var response = HandlerUtil<MctrLineItem>.RestPostProcessor(restApiPath, mctrLineItem);
            return response;
        }
        
            public IEnumerable<MctrLineItem> mctrLineItembutTransFromWhenButtonPressedOpenLOV(MctrLineItem mctrLineItem)
        {
            string restApiPath = "MctrCreateFormService/mctrLineItembutTransFromWhenButtonPressedOpenLOV";
            var response = HandlerUtil<MctrLineItem>.RestPostProcessor(restApiPath, mctrLineItem);
            return response;
        }

        public IEnumerable<MctrCreateForm> ValidateActivityID(MctrCreateForm mctrCreateForm)
        {
            string restApiPath = "MctrCreateFormService/ValidateActivityID";
            var response = HandlerUtil<MctrCreateForm>.RestPostProcessor(restApiPath, mctrCreateForm);
            return response;
        }
        public IEnumerable<MctrCreateForm> mctrLineItembutProjToWhenButtonPressedOpenLOV(MctrCreateForm mctrCreateForm)
        {
            string restApiPath = "MctrCreateFormService/mctrLineItembutProjToWhenButtonPressedOpenLOV";
            var response = HandlerUtil<MctrCreateForm>.RestPostProcessor(restApiPath, mctrCreateForm);
            return response;
        }
        public IEnumerable<MctrCreateForm> querymodecheck(MctrCreateForm mctrCreateForm)
        {
            string restApiPath = "MctrCreateFormService/querymodecheck";
            var response = HandlerUtil<MctrCreateForm>.RestPostProcessor(restApiPath, mctrCreateForm);
            return response;
        }
    }
}