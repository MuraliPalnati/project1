///*************************************************************************
/// 
/// BOEING CONFIDENTIAL
/// ___________________
/// 
///  BOEING is a trademark of Boeing Management Company.
///
///  Copyright © 2016 Boeing. All rights reserved.
/// 
/// NOTICE:  All information contained herein is, and remains
/// the property of Boeing and its suppliers, if any.  
/// The intellectual and technical concepts contained
/// herein are proprietary to Boeing and its suppliers and may be 
/// covered by U.S. and Foreign Patents, patents in process, 
/// and are protected by trade secret or copyright law.
/// Dissemination of this information or reproduction of this material
/// is strictly forbidden unless prior written permission is obtained
/// from Boeing. 
///

///************************************************************************
/// Author           : Generated by ATMA ®
/// Revision History :  
using System;
using System.Collections.Generic;
using System.Linq;
using log4net;
using MCTR.DomainEntity;
using AutoMapper;
using System.Data;
using MCTR.DataAccessInterface;
using MCTR.DataEntity;
using Oracle.ManagedDataAccess.Client;
using System.Text;

namespace MCTR.DataAccess
{
    public class TransTypeRepository : BaseRepository, ITransTypeRepository
    {
        private TransType obj;


        ///*************************************************************
        ///<summary>
        ///Method Name : transtypeonload
        ///</summary>
        ///<param name = "transtypes"></param>
        ///<returns>IEnumerable<transtypes> </returns>

        public IEnumerable<TransType> transtypeonload(IEnumerable<TransType> transtypes)
        {
            try
            {
                obj = transtypes.First<TransType>();


                OracleParameter[] parameter1 = new OracleParameter[1];

                string sqlstmt = "select * from mctr_owner.mctr_trans_type where exists ( select lu . business_unit from mctr_role_bu lu where lu.bems = :0 and ( lu.business_unit = CMPON_CD or ( lu.business_unit = '**' and exists ( select bu.business_unit from mctr_bus_unit_v bu where bu . business_unit = CMPON_CD and bu . group_cd7 = lu . group_cd7 ) ) ) ) order by CMPON_CD , proj_trans_type , proj_trans_code";//

                parameter1[0] = new OracleParameter(":lu.bems", OracleDbType.Varchar2, obj.session_bems, ParameterDirection.Input);

                var resultlist = entities.Database.SqlQuery<TransType>(sqlstmt, parameter1).ToList<TransType>();

                return resultlist;
            }
            catch (OracleException e)
            {

                throw e;
            }
            catch (Exception e)
            {

                throw e;
            }

        }

        ///*************************************************************
        ///<summary>
        ///Method Name : transtypeCmponcdPostTextItem
        ///</summary>
        ///<param name = "transtypes"></param>
        ///<returns>IEnumerable<transtypes> </returns>
        public IEnumerable<TransType> transtypeCmponcdPostTextItem(IEnumerable<TransType> transtypes)
        {

            try
            {
                obj = transtypes.First<TransType>();

                //if (obj.CMPON_CD != null)
                //{
                    OracleParameter[] parameters = new OracleParameter[2];

                    string sqlstmt = "select count(*) from mctr_role_bu lu where lu.bems = :0 and (lu.business_unit =:1 or (lu.business_unit = '**' and exists ( select bu.business_unit from MCTR_PS_BUS_UNIT_TBL7_MV bu where bu.business_unit =:1 and bu.group_cd7 = lu.group_cd7 ) ) )";
                    parameters[0] = new OracleParameter(":lu.bems", OracleDbType.Varchar2, obj.session_bems, ParameterDirection.Input);
                    parameters[1] = new OracleParameter(":lu.business_unit", OracleDbType.Varchar2, obj.CMPON_CD, ParameterDirection.Input);

                    obj.v_count = entities.Database.SqlQuery<int>(sqlstmt, parameters).Single<int>();
                //}
                //if (v_count == 0)
                //{
                //    obj.CMPON_CD = null;
                //    throw new Exception("This BU is not in your BU/Group access");
                //    //message ='This BU is not in your BU/Group access';
                //}

                List<TransType> trans = new List<TransType>();
                trans.Add(obj);
                return trans;
            }

            catch (OracleException e)
            {

                throw e;
            }
            catch (Exception e)
            {

                throw e;
            }
        }

        ///*************************************************************
        ///<summary>
        ///Method Name : transtypewhennewforminstance
        ///</summary>
        ///<param name = "transtypes"></param>
        ///<returns>IEnumerable<transtypes> </returns>
        ///    -- find roles for logon bems
        public IEnumerable<TransType> transtypewhennewforminstance(IEnumerable<TransType> TransTypes)
        {
         
            obj = TransTypes.First<TransType>();
            obj.TransCount = new Dictionary<string, int>();
            obj.TransCount.Clear();
            
            StringBuilder sql = new StringBuilder();

            OracleParameter[] parameters = new OracleParameter[3];

            sql = new StringBuilder("SELECT COUNT(*) FROM MCTR_TRANS_TYPE WHERE (CMPON_CD=:0 or CMPON_CD is null) AND (PROJ_TRANS_TYPE=:1 or PROJ_TRANS_TYPE is null) AND (PROJ_TRANS_CODE=:2 or PROJ_TRANS_CODE is null)");

            parameters[0] = new OracleParameter(":0", OracleDbType.Varchar2, obj.CMPON_CD, ParameterDirection.Input);
            parameters[1] = new OracleParameter(":1", OracleDbType.Varchar2, obj.PROJ_TRANS_TYPE, ParameterDirection.Input);
            parameters[2] = new OracleParameter(":2", OracleDbType.Varchar2, obj.PROJ_TRANS_CODE, ParameterDirection.Input);

            if (obj.PROJ_TRANS_CODE != null)
            {
                sql.Append("AND PROJ_TRANS_CODE= '" + obj.PROJ_TRANS_CODE + "'");
            }
            else
            {
                sql.Append("AND PROJ_TRANS_CODE is null ");
            }

            var v_count = entities.Database.SqlQuery<int>(sql.ToString(), parameters).SingleOrDefault();

            obj.TransCount.Add("add", v_count);
            if (v_count == 0)
            {
                OracleParameter[] parameter1 = new OracleParameter[5];
                string query = "insert into MCTR_TRANS_TYPE (CMPON_CD,PROJ_TRANS_TYPE,PROJ_TRANS_CODE,STATISTICS_CODE,UNIT_OF_MEASURE) VALUES (:0,:1,:2,:3,:4);";
                parameter1[0] = new OracleParameter(":CMPON_CD", OracleDbType.Varchar2, obj.CMPON_CD, ParameterDirection.Input);
                parameter1[1] = new OracleParameter(":PROJ_TRANS_TYPE", OracleDbType.Varchar2, obj.PROJ_TRANS_TYPE, ParameterDirection.Input);

                if (obj.PROJ_TRANS_CODE != null)
                {
                    parameter1[2] = new OracleParameter(":PROJ_TRANS_CODE", OracleDbType.Varchar2, obj.PROJ_TRANS_CODE, ParameterDirection.Input);
                }
                else
                {
                    parameter1[2] = new OracleParameter(":PROJ_TRANS_CODE", OracleDbType.Varchar2, DBNull.Value, ParameterDirection.Input);
                }

                if (obj.STATISTICS_CODE != null)
                {
                    parameter1[3] = new OracleParameter(":STATISTICS_CODE", OracleDbType.Varchar2, obj.STATISTICS_CODE, ParameterDirection.Input);
                }
                else
                {
                    parameter1[3] = new OracleParameter(":STATISTICS_CODE", OracleDbType.Varchar2, DBNull.Value, ParameterDirection.Input);
                }

                if (obj.UNIT_OF_MEASURE != null)
                {
                    parameter1[4] = new OracleParameter(":UNIT_OF_MEASURE", OracleDbType.Varchar2, obj.UNIT_OF_MEASURE, ParameterDirection.Input);
                }
                else
                {
                    parameter1[4] = new OracleParameter(":UNIT_OF_MEASURE", OracleDbType.Varchar2, DBNull.Value, ParameterDirection.Input);
                }



                
                
                int result = entities.Database.ExecuteSqlCommand("BEGIN " + query + " END;", parameter1);
            }

            return TransTypes;
        }


        ///*************************************************************
        ///<summary>
        ///Method Name : transtypewhenwindowclosed
        ///</summary>
        ///<param name = "transtypes"></param>
        ///<returns>IEnumerable<transtypes> </returns>

        public IEnumerable<TransType> transtypewhenwindowclosed()
        {
            throw new NotImplementedException();
        }



        ///*************************************************************
        ///<summary>
        ///Method Name : EditTransType
        ///</summary>
        ///<param name = "transtypes"></param>
        ///<returns>IEnumerable<transtypes> </returns>
        public IEnumerable<TransTypeEdit> EditTransType(IEnumerable<TransTypeEdit> TransTypes)
        {
            try
            {
                var transTypes = TransTypes.First<TransTypeEdit>();
                var row = transTypes.Row;
                var editedRow = transTypes.EditedRow;
                transTypes.TransCount = new Dictionary<string, int>();
                transTypes.TransCount.Clear();
                StringBuilder sql = new StringBuilder();
                OracleParameter[] parameters = new OracleParameter[5];
                sql = new StringBuilder("SELECT COUNT(*) FROM MCTR_TRANS_TYPE WHERE CMPON_CD=:0 AND PROJ_TRANS_TYPE=:1 AND PROJ_TRANS_CODE=:2 AND STATISTICS_CODE=:3 AND UNIT_OF_MEASURE = :4 ");
                parameters[0] = new OracleParameter(":0", OracleDbType.Varchar2, editedRow.CMPON_CD, ParameterDirection.Input);
                parameters[1] = new OracleParameter(":1", OracleDbType.Varchar2, editedRow.PROJ_TRANS_TYPE, ParameterDirection.Input);
                parameters[2] = new OracleParameter(":2", OracleDbType.Varchar2, editedRow.PROJ_TRANS_CODE, ParameterDirection.Input);
                parameters[3] = new OracleParameter(":3", OracleDbType.Varchar2, editedRow.STATISTICS_CODE, ParameterDirection.Input);
                parameters[4] = new OracleParameter(":4", OracleDbType.Varchar2, editedRow.UNIT_OF_MEASURE, ParameterDirection.Input);
                var v_count = entities.Database.SqlQuery<int>(sql.ToString(), parameters).SingleOrDefault();
                transTypes.TransCount.Add("add", v_count);
                if (v_count == 0)
                {
                    if (!(row.CMPON_CD == editedRow.CMPON_CD && row.PROJ_TRANS_CODE == editedRow.PROJ_TRANS_CODE && row.PROJ_TRANS_TYPE == editedRow.PROJ_TRANS_TYPE && row.STATISTICS_CODE == editedRow.STATISTICS_CODE && row.UNIT_OF_MEASURE == editedRow.UNIT_OF_MEASURE))
                    {
                        var rowList = new List<TransType>();
                        var editedRowList = new List<TransType>();
                        rowList.Add(row);
                        editedRowList.Add(editedRow);
                        DeleteTransType(rowList);
                        transtypewhennewforminstance(editedRowList);
                    }
                }
            }
            catch (Exception exp)
            {
                string ExceptionMessage = exp.InnerException.Message;
            }
            return TransTypes;
        }

        ///*************************************************************
        ///<summary>
        ///Method Name : DeleteTransType
        ///</summary>
        ///<param name = "transtypes"></param>
        ///<returns>IEnumerable<transtypes> </returns>
        public IEnumerable<TransType> DeleteTransType(IEnumerable<TransType> TransTypes)
        {
            try
            {
                obj = TransTypes.First<TransType>();
                OracleParameter[] parameter1 = new OracleParameter[5];
                string query = "delete from MCTR_TRANS_TYPE where (CMPON_CD=:0 or CMPON_CD is null) and (PROJ_TRANS_TYPE=:1 or PROJ_TRANS_TYPE is null) and (PROJ_TRANS_CODE=:2 or PROJ_TRANS_CODE is null) and (STATISTICS_CODE=:3 or STATISTICS_CODE is null) and (UNIT_OF_MEASURE=:4 or UNIT_OF_MEASURE is null);";
                parameter1[0] = new OracleParameter(":CMPON_CD", OracleDbType.Varchar2, obj.CMPON_CD, ParameterDirection.Input);
                parameter1[1] = new OracleParameter(":PROJ_TRANS_TYPE", OracleDbType.Varchar2, obj.PROJ_TRANS_TYPE, ParameterDirection.Input);
                parameter1[2] = new OracleParameter(":PROJ_TRANS_CODE", OracleDbType.Varchar2, obj.PROJ_TRANS_CODE, ParameterDirection.Input);
                parameter1[3] = new OracleParameter(":STATISTICS_CODE", OracleDbType.Varchar2, obj.STATISTICS_CODE, ParameterDirection.Input);
                parameter1[4] = new OracleParameter(":UNIT_OF_MEASURE", OracleDbType.Varchar2, obj.UNIT_OF_MEASURE, ParameterDirection.Input);
                int result = entities.Database.ExecuteSqlCommand("BEGIN " + query + " END;", parameter1);

            }
            catch (Exception exp)
            {
                string ExceptionMessage = exp.Message;
            }

            return TransTypes;
        }

    }
}