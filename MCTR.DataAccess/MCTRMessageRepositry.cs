///*************************************************************************
/// 
/// BOEING CONFIDENTIAL
/// ___________________
/// 
///  BOEING is a trademark of Boeing Management Company.
///
///  Copyright © 2016 Boeing. All rights reserved.
/// 
/// NOTICE:  All information contained herein is, and remains
/// the property of Boeing and its suppliers, if any.  
/// The intellectual and technical concepts contained
/// herein are proprietary to Boeing and its suppliers and may be 
/// covered by U.S. and Foreign Patents, patents in process, 
/// and are protected by trade secret or copyright law.
/// Dissemination of this information or reproduction of this material
/// is strictly forbidden unless prior written permission is obtained
/// from Boeing. 
///

///************************************************************************
/// Author           : Generated by ATMA ®
/// Revision History :  
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using MCTR.DomainEntities;
using System.Diagnostics;
using MCTR.DataAccessInterface;
using System.Data.SqlClient;
using AutoMapper;
using Oracle.ManagedDataAccess.Client;
using System.Data;
using MCTR.DataEntity;
using log4net;

namespace MCTR.DataAccess
{
    public class MCTRMessageRepositry : BaseRepository, IMCTRMessageRepositry
    {
        private MctrMessageStatus mctrMes = new MctrMessageStatus(); 
        private readonly ILog logger = LogManager.GetLogger(System.Reflection.MethodBase.GetCurrentMethod().DeclaringType);

        public IEnumerable<MctrMessageStatus> mctrMessageStatusOnInsert(IEnumerable<MctrMessageStatus> mctrMessageStatus)

        {
            mctrMes = mctrMessageStatus.First<MctrMessageStatus>();
            OracleParameter[] parameter1 = new OracleParameter[2];
            string sqlstmt = "update mctr_message set message_status = :0 , message_text = :1 where message_status in ( '0' , '1' , '2' );";
            parameter1[0] = new OracleParameter(":message_status", OracleDbType.Int32, mctrMes.MESSAGE_STATUS, ParameterDirection.Input);
            parameter1[1] = new OracleParameter(":message_text", OracleDbType.Varchar2, mctrMes.MESSAGE_TEXT , ParameterDirection.Input);

            int  result = entities.Database.ExecuteSqlCommand("BEGIN "+ sqlstmt +" END; ",parameter1);
            return mctrMessageStatus;


        }

        public IEnumerable<MctrMessageStatus> getMessageStatus()
        {
             IEnumerable<MctrMessageStatus> retrievedTransType = new List<MctrMessageStatus>();
             var msgStatus = entities.MCTR_MESSAGE.SqlQuery("select * from MCTR_Message").ToList();
             var targetRates = Mapper.DynamicMap<IEnumerable<MCTR_MESSAGE>, IEnumerable<MctrMessageStatus>>(msgStatus);
             return targetRates;
        }
    }
}
