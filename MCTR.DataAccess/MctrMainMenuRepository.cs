///*************************************************************************
/// 
/// BOEING CONFIDENTIAL
/// ___________________
/// 
///  BOEING is a trademark of Boeing Management Company.
///
///  Copyright © 2016 Boeing. All rights reserved.
/// 
/// NOTICE:  All information contained herein is, and remains
/// the property of Boeing and its suppliers, if any.  
/// The intellectual and technical concepts contained
/// herein are proprietary to Boeing and its suppliers and may be 
/// covered by U.S. and Foreign Patents, patents in process, 
/// and are protected by trade secret or copyright law.
/// Dissemination of this information or reproduction of this material
/// is strictly forbidden unless prior written permission is obtained
/// from Boeing. 
///

///************************************************************************
/// Author           : Generated by ATMA ®
/// Revision History :  

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using AutoMapper;
using System.Data;
using log4net;
using Oracle.ManagedDataAccess.Client;

using MCTR.DomainEntity;
//using MCTR.DataEntity;
using MCTR.DataAccessInterface;
using System.Collections;
using MCTR.DataEntity;

namespace MCTR.DataAccess
{
    ///*********************************************************************
    ///<summary>
    ///MctrMainMenuRepository is a data access implementation which holds all 
    ///the data access logic in it.
    ///</summary>
    public class MctrMainMenuRepository : BaseRepository, IMctrMainMenuRepository 
    {

        private readonly ILog logger = null;

        MctrMainMenu mctrmainmenu = new MctrMainMenu();

        List<MctrMainMenu> mctrmainmenulist = new List<MctrMainMenu>();

        public MctrMainMenuRepository()
        {
            logger = LogManager.GetLogger(System.Reflection.MethodBase.GetCurrentMethod().DeclaringType);
        }

        //************************************************************
        ///<summary>
        ///Method Name : buttonPalettebutAdminTblsWhenButtonPressed
        ///</summary>
        ///<param name = "MctrMainMenu"></param>
        ///<returns>IEnumerable<MctrMainMenuAdminDomainAdded> </returns>

        public IEnumerable<MctrMainMenu> buttonPalettebutAdminTblsWhenButtonPressed(IEnumerable<MctrMainMenu> mctrMainMenu)
        {

            logger.Debug("Executing buttonPalettebutAdminTblsWhenButtonPressed with input:");
            try {
                //MctrMainMenuAdminDomainAdded domain = new MctrMainMenuAdminDomainAdded();
                //List<MctrMainMenuAdminDomainAdded> list = new List<MctrMainMenuAdminDomainAdded>();


                var obj = mctrMainMenu.First<MctrMainMenu>();

                OracleParameter[] parameter1 = new OracleParameter[1];


                StringBuilder query = new StringBuilder("select bems_id as messageadmin from mctr_message_admin  where bems_id = :0");
                parameter1[0] = new OracleParameter(":lu.bems_id", OracleDbType.Varchar2, obj.session_bems, ParameterDirection.Input);


                var result = entities.Database.SqlQuery<MctrMainMenu>(query.ToString(), parameter1).ToList<MctrMainMenu>();

                return result;
            }
            catch (Exception ex)
            {
                logger.Error("Error thrown from MCTRlogOrigChgRepository.Get(): " + ex.Message);
                throw;
            }
        }

        /// <summary>
        /// </summary>
        /// method name populateActionTree
        /// <param name="mctrMainMenu"></param>
        /// <returns>mctrMainMenu</returns>
        ///  -- mctr header table entries used to populate main menu in-tray
        public IEnumerable<MctrMainMenu> populateActionTree(IEnumerable<MctrMainMenu> mctrMainMenu)
        {

            logger.Debug("Executing populateActionTree ");
            try
            {
                var item = mctrMainMenu.First();
                int stat_pad_length = 0;

               // var b = cursorGenericMethod(mctrMainMenu);
                //mctrmainmenulist.AddRange(b);

                OracleParameter[] parameter1 = new OracleParameter[1];
                parameter1[0] = new OracleParameter(":a.bems_orig", OracleDbType.Varchar2, item.session_bems, ParameterDirection.Input);

                string maxlength = "select max ( length ( mctr_no ) )  from  mctr_header ";
                stat_pad_length = entities.Database.SqlQuery<int>(maxlength).Single<int>();

                //cursor pa

                StringBuilder querypa = new StringBuilder(@"select tbl.mctr_no, tbl.title, tbl.status_id, tbl.orig_bu, tbl.bems_id,
          to_char(abs(round(sum(nvl(tli.amount_from, 0) + nvl(tli.adjustment_from, 0)), 0)), '999,999,999') as fmtamt
     from(select a.mctr_no, a.title, a.status_id, a.orig_bu,
                  decode(a.status_id, 'SA', a.bems_super,
                                     'LA', 'various',
                                     'FA', a.bems_fin_ctl,
                                     'AA', a.bems_acct,
                                     'LB', a.bems_lbr_acct,
                                     'LM', 'various',
                                     'MA', a.bems_matl_acct,
                                     'CA', a.bems_cost_acct,
                                     'SR', a.bems_sr_acct,
                                     'JA', a.bems_acct,
                                     'IP', a.bems_acct) as bems_id
             from mctr_header a
            where (a.status_id in ('SA', 'LA', 'FA', 'AA', 'LB', 'LM', 'MA', 'CA', 'SR', 'JA', 'IP') and
                   a.bems_orig = :0) or
                  (a.status_id in ('SA', 'LA', 'FA', 'LB', 'LM', 'MA', 'CA', 'SR', 'IP') and
                          (a.bems_acct = :0 or
                          (exists(select bems from mctr_role r
                                    where r.bems = :0 and r.accountant_role = 'Y') and
                           exists(select bems from mctr_role_bu rb
                                    where rb.bems = :0 and
                                         (rb.business_unit = a.orig_bu or
                                         (rb.group_cd7 = a.orig_group and rb.business_unit = '**'))))))) tbl,
          mctr_line_item tli where tbl.mctr_no = tli.mctr_no(+)
    group by tbl.mctr_no, tbl.title, tbl.status_id, tbl.orig_bu, tbl.bems_id
    order by tbl.orig_bu, tbl.status_id, tbl.mctr_no desc ");
                parameter1 = new OracleParameter[1];
                parameter1[0] = new OracleParameter(":a.bems_orig", OracleDbType.Varchar2, item.session_bems, ParameterDirection.Input);
                var pa = entities.Database.SqlQuery<MctrMainMenu>(querypa.ToString(), parameter1).ToList();

                StringBuilder countquerypa = new StringBuilder("select count(*) from mctr_header a where (a.status_id in ('SA' , 'LA', 'FA', 'AA', 'LB', 'LM', 'MA', 'CA', 'SR', 'JA', 'IP') and a.bems_orig = :0) or(a.status_id in ('SA' , 'LA', 'FA', 'LB', 'LM', 'MA', 'CA', 'SR', 'IP') and(a.bems_acct = :0 or(exists(select bems from mctr_role r where r.bems = :0 and r.accountant_role = 'Y') and exists(select bems from mctr_role_bu rb where rb.bems = :0 and(rb.business_unit = a.orig_bu or(rb.group_cd7 = a.orig_group and rb.business_unit = '**'))))) )");
                parameter1 = new OracleParameter[1];
                parameter1[0] = new OracleParameter(":a.bems_orig", OracleDbType.Varchar2, item.session_bems, ParameterDirection.Input);
                var countpa = entities.Database.SqlQuery<int>(countquerypa.ToString(), parameter1).Single<int>();

                if (countpa > 0)
                {
                    string query = " ";
                    var fullname = " ";
                    foreach (var pendingaccount in pa)
                    {
                        try
                        {
                            query = "select(e.last_name || ', ' || e.first_name) as v_full_name from mctr_employee_v e where e.bems_id = " + pendingaccount.BEMS_ID;
                            fullname = entities.Database.SqlQuery<string>(query).Single<string>();
                            pendingaccount.full_name = fullname;
                            pendingaccount.pendingApprovals = true;
                        }
                        catch (Exception e)
                        {
                            pendingaccount.full_name = "unknown";
                            pendingaccount.pendingApprovals = true;
                            logger.Error("Error from MCTR.DataAccess.LineItemRepository.mctrLineItemPostQuery" + e.Message);

                        }
                        if (pendingaccount.STATUS_ID == "various")
                        {
                            pendingaccount.full_name = "various";
                            pendingaccount.pendingApprovals = true;
                        }

                    }
                    mctrmainmenulist.AddRange(pa);

                }

                // cursor aa
                StringBuilder queryaa = new StringBuilder("select tbl.mctr_no , tbl.title , tbl.status_id , tbl.orig_bu , tbl.full_name , to_char ( abs ( round ( sum ( nvl ( tli . amount_from , 0 ) + nvl ( tli . adjustment_from , 0 ) ) , 0 ) ) , '999,999,999' ) as fmtamt from ( select a.mctr_no , a.title , a.status_id , a.orig_bu , (e.last_name || ', ' ||e.first_name ) full_name from mctr_header a , mctr_employee_v e where a.status_id = 'AA' and a.bems_acct =e.bems_id ( + ) and ( a.bems_acct = :0 or ( exists ( select bems from mctr_role r where r . bems = :0 and r . accountant_role = 'Y' ) and exists ( select bems from mctr_role_bu rb where rb . bems = :0 and ( rb . business_unit = a.orig_bu or ( rb . group_cd7 = a.orig_group and rb . business_unit = '**' ) ) ) ) ) ) tbl , mctr_line_item tli where tbl.mctr_no = tli . mctr_no ( + ) group by tbl.mctr_no , tbl.title , tbl.status_id , tbl.orig_bu , tbl.full_name order by tbl.orig_bu , tbl.mctr_no desc");
                // StringBuilder queryaa = new StringBuilder("select tbl.mctr_no , tbl.title , tbl.status_id , tbl.orig_bu , tbl.last_name , tbl.first_name , to_char ( abs ( round ( sum ( nvl ( tli . amount_from , 0 ) + nvl ( tli . adjustment_from , 0 ) ) , 0 ) ) , '999,999,999' ) as fmtamt from ( select a.mctr_no , a.title , a.status_id , a.orig_bu , e.last_name , e.first_name   from mctr_header a , mctr_employee_v e where a.status_id = 'AA' and a.bems_acct =e.bems_id ( + ) and ( a.bems_acct = :0 or ( exists ( select bems from mctr_role r where r . bems = :0 and r . accountant_role = 'Y' ) and exists ( select bems from mctr_role_bu rb where rb . bems = :0 and ( rb . business_unit = a.orig_bu or ( rb . group_cd7 = a.orig_group and rb . business_unit = '**' ) ) ) ) ) ) tbl , mctr_line_item tli where tbl.mctr_no = tli . mctr_no ( + ) group by tbl.mctr_no , tbl.title , tbl.status_id , tbl.orig_bu, tbl.last_name , tbl.first_name  order by tbl.orig_bu , tbl.mctr_no desc");
                parameter1 = new OracleParameter[1];
                parameter1[0] = new OracleParameter(":a.bems_orig", OracleDbType.Varchar2, item.session_bems, ParameterDirection.Input);
                var aa = entities.Database.SqlQuery<MctrMainMenu>(queryaa.ToString(), parameter1).ToList();
                mctrmainmenulist.AddRange(aa);


                // cursor lb
                StringBuilder querylb = new StringBuilder("select a.mctr_no , a.title , a.status_id , a.orig_bu , (e.last_name || ', ' ||e.first_name ) full_name from mctr_header a , mctr_employee_v e where a.status_id in ( 'LB' , 'LM' ) and ( ( a.bems_lbr_acct = :0 and a.appr_cd_lbr_acct is null ) or ( exists ( select bems from mctr_role r where r . bems = :0 and r . lbr_acct_role = 'Y' ) and exists ( select bems from mctr_role_bu rb where rb . bems = :0 and ( rb . business_unit = a.orig_bu or ( rb . group_cd7 = a.orig_group and rb . business_unit = '**' ) ) ) ) ) and a.bems_lbr_acct =e.bems_id ( + ) order by a.orig_bu , a.mctr_no desc");
                parameter1 = new OracleParameter[1];
                parameter1[0] = new OracleParameter(":a.bems_orig", OracleDbType.Varchar2, item.session_bems, ParameterDirection.Input);
                var lb = entities.Database.SqlQuery<MctrMainMenu>(querylb.ToString(), parameter1).ToList();
                mctrmainmenulist.AddRange(lb);

                // cursor ma
                StringBuilder queryma = new StringBuilder("select a.mctr_no , a.title , a.status_id , a.orig_bu , (e.last_name || ', ' ||e.first_name ) full_name from mctr_header a , mctr_employee_v e where a.status_id in ( 'MA' , 'LM' ) and ( ( a.bems_matl_acct = :0 and a.appr_cd_matl_acct is null ) or ( exists ( select bems from mctr_role r where r . bems = :0 and r . matl_acct_role = 'Y' ) and exists ( select bems from mctr_role_bu rb where rb . bems = :0 and ( rb . business_unit = a.orig_bu or ( rb . group_cd7 = a.orig_group and rb . business_unit = '**' ) ) ) ) ) and a.bems_matl_acct =e.bems_id ( + ) order by a.orig_bu , a.mctr_no desc");
                parameter1 = new OracleParameter[1];
                parameter1[0] = new OracleParameter(":a.bems_orig", OracleDbType.Varchar2, item.session_bems, ParameterDirection.Input);
                var ma = entities.Database.SqlQuery<MctrMainMenu>(queryma.ToString(), parameter1).ToList();
                mctrmainmenulist.AddRange(ma);

                // cursor ca
                StringBuilder queryca = new StringBuilder("select a.mctr_no , a.title , a.status_id , a.orig_bu , (e.last_name || ', ' ||e.first_name ) full_name from mctr_header a , mctr_employee_v e where a.status_id = 'CA' and ( a.bems_cost_acct = :0 or ( exists ( select bems from mctr_role r where r . bems = :0 and r . cost_acct_role = 'Y' ) and exists ( select bems from mctr_role_bu rb where rb . bems = :0 and ( rb . business_unit = a.orig_bu or ( rb . group_cd7 = a.orig_group and rb . business_unit = '**' ) ) ) ) ) and a.bems_cost_acct =e.bems_id ( + ) order by a.orig_bu , a.mctr_no desc");
                parameter1 = new OracleParameter[1];
                parameter1[0] = new OracleParameter(":a.bems_orig", OracleDbType.Varchar2, item.session_bems, ParameterDirection.Input);
                var ca = entities.Database.SqlQuery<MctrMainMenu>(queryca.ToString(), parameter1).ToList();
                mctrmainmenulist.AddRange(ca);

                // cursor sr
                StringBuilder querysr = new StringBuilder("select a.mctr_no , a.title , a.status_id , a.orig_bu , (e.last_name || ', ' ||e.first_name ) full_name from mctr_header a , mctr_employee_v e where a.status_id = 'SR' and ( a.bems_sr_acct = :0 or ( exists ( select bems from mctr_role r where r . bems = :0 and r . sr_acct_role = 'Y' ) and exists ( select bems from mctr_role_bu rb where rb . bems = :0 and ( rb . business_unit = a.orig_bu or ( rb . group_cd7 = a.orig_group and rb . business_unit = '**' ) ) ) ) ) and a.bems_sr_acct =e.bems_id ( + ) order by a.orig_bu , a.mctr_no desc");
                parameter1 = new OracleParameter[1];
                parameter1[0] = new OracleParameter(":a.bems_orig", OracleDbType.Varchar2, item.session_bems, ParameterDirection.Input);
                var sr = entities.Database.SqlQuery<MctrMainMenu>(querysr.ToString(), parameter1).ToList();
                mctrmainmenulist.AddRange(sr);

                // cursor ja
                //StringBuilder queryja = new StringBuilder("select a.mctr_no , a.title , a.status_id , a.orig_bu , (e.last_name || ', ' ||e.first_name ) full_name from mctr_header a , mctr_employee_v e where a.status_id = 'JA' and ( a.bems_acct = :0 or ( exists ( select bems from mctr_role r where r . bems = :0 and r . accountant_role = 'Y' ) and exists ( select bems from mctr_role_bu rb where rb . bems = :0 and ( rb . business_unit = a.orig_bu or ( rb . group_cd7 = a.orig_group and rb . business_unit = '**' ) ) ) ) ) and a.bems_acct =e.bems_id ( + ) order by a.orig_bu , a.mctr_no desc");
                StringBuilder queryja = new StringBuilder("select a.mctr_no , a.title , a.status_id , a.orig_bu , (e.last_name || ', ' ||e.first_name ) full_name from mctr_header a , mctr_employee_v e where a.status_id = 'JA' and ( a.bems_acct = :0 or ( exists ( select bems from mctr_role r where r . bems = :0 and r . accountant_role = 'Y' ) and exists ( select bems from mctr_role_bu rb where rb . bems = :0 and ( rb . business_unit = a.orig_bu or ( rb . group_cd7 = a.orig_group and rb . business_unit = '**' ) ) ) ) ) and a.bems_acct =e.bems_id ( + ) order by a.orig_bu , a.mctr_no desc");
                parameter1 = new OracleParameter[1];
                parameter1[0] = new OracleParameter(":a.bems_orig", OracleDbType.Varchar2, item.session_bems, ParameterDirection.Input);
                var ja = entities.Database.SqlQuery<MctrMainMenu>(queryja.ToString(), parameter1).ToList();
                mctrmainmenulist.AddRange(ja);

                // cursor jip
                StringBuilder queryjip = new StringBuilder("select a.mctr_no , a.title , a.status_id , a.orig_bu , (e.last_name || ', ' ||e.first_name ) full_name from mctr_header a , mctr_employee_v e where a.status_id = 'IP' and ( a.bems_acct = :0 or ( exists ( select bems from mctr_role r where r . bems = :0 and r . accountant_role = 'Y' ) and exists ( select bems from mctr_role_bu rb where rb . bems = :0 and ( rb . business_unit = a.orig_bu or ( rb . group_cd7 = a.orig_group and rb . business_unit = '**' ) ) ) ) ) and a.bems_acct =e.bems_id ( + ) order by a.orig_bu , a.mctr_no desc");
                parameter1 = new OracleParameter[1];
                parameter1[0] = new OracleParameter(":a.bems_orig", OracleDbType.Varchar2, item.session_bems, ParameterDirection.Input);
                var jip = entities.Database.SqlQuery<MctrMainMenu>(queryjip.ToString(), parameter1).ToList();
                mctrmainmenulist.AddRange(jip);

               // OracleParameter[] parameter1 = new OracleParameter[1];
               // parameter1[0] = new OracleParameter(":a.bems_orig", OracleDbType.Varchar2, item.session_bems, ParameterDirection.Input);

               // string maxlength = "select max ( length ( mctr_no ) )  from  mctr_header ";
               // stat_pad_length = entities.Database.SqlQuery<int>(maxlength).Single<int>();

                // cursor oa 
                StringBuilder queryoa = new StringBuilder("select a.mctr_no , a.title , a.status_id , a.orig_bu , e.last_name as LAST_NAME, e.first_name as FIRST_NAME from mctr_header a ,mctr_employee_v e  where a.status_id = 'OA' and a.bems_orig = :0   and e.bems_id=:0  order by a.orig_bu , a.mctr_no desc");
                parameter1[0] = new OracleParameter(":a.bems_orig", OracleDbType.Varchar2, item.session_bems, ParameterDirection.Input);
                var oa = entities.Database.SqlQuery<MctrMainMenu>(queryoa.ToString(), parameter1).ToList();

                mctrmainmenulist.AddRange(oa);


                StringBuilder countqueryoa = new StringBuilder("select count(*) as v_count from mctr_header where status_id = 'OA' and bems_orig = :0");
                var countoa = entities.Database.SqlQuery<int>(countqueryoa.ToString(), parameter1).Single<int>();

                //cursor orj

                StringBuilder queryorj = new StringBuilder("select a.mctr_no , a.title , a.status_id , a.orig_bu , e.last_name as LAST_NAME, e.first_name as FIRST_NAME from mctr_header a ,mctr_employee_v e  where a.status_id = 'OR' and a.bems_orig = :0  and e.bems_id=:0   order by a.orig_bu , a.mctr_no desc");
                var orj = entities.Database.SqlQuery<MctrMainMenu>(queryorj.ToString(), parameter1).ToList();
                mctrmainmenulist.AddRange(orj);

                // cursor sa
                StringBuilder querysa = new StringBuilder("select a.mctr_no , a.title , a.status_id , a.orig_bu , e.last_name as LAST_NAME, e.first_name as FIRST_NAME from mctr_header a,mctr_employee_v e  where a.status_id = 'SA' and a.bems_super = :0   and e.bems_id=:0   order by a.orig_bu , a.mctr_no desc");
                var sa = entities.Database.SqlQuery<MctrMainMenu>(querysa.ToString(), parameter1).ToList();
                mctrmainmenulist.AddRange(sa);

                // cursor la
                StringBuilder queryla = new StringBuilder("select distinct a.mctr_no , a.title , a.status_id , a.orig_bu , 'various' from mctr_header a , mctr_line_item b,mctr_employee_v e  where a.status_id = 'LA' and a.mctr_no = b . mctr_no and ( ( b . bems_1 = :0 and b . appr_cd_1 is null ) or ( b . bems_2 = :0 and b . appr_cd_2 is null ) or ( b . bems_3 = :0 and b . appr_cd_3 is null ) )  and e.bems_id=:0   order by a.orig_bu , a.mctr_no desc");
                var la = entities.Database.SqlQuery<MctrMainMenu>(queryla.ToString(), parameter1).ToList();
                mctrmainmenulist.AddRange(la);

                //cursor fa
                StringBuilder queryfa = new StringBuilder("select a.mctr_no , a.title , a.status_id , a.orig_bu , e.last_name as LAST_NAME, e.first_name as FIRST_NAME from mctr_header a,mctr_employee_v e  where a.status_id = 'FA' and a.bems_fin_ctl = :0 and e.bems_id=:0 order by a.orig_bu , a.mctr_no desc");
                var fa = entities.Database.SqlQuery<MctrMainMenu>(queryfa.ToString(), parameter1).ToList();
                mctrmainmenulist.AddRange(fa);

                // cursor c99
                StringBuilder queryc99 = new StringBuilder("select a.mctr_no , a.title , a.status_id , a.orig_bu , e.last_name as LAST_NAME, e.first_name as FIRST_NAME from mctr_header a , mctr_employee_v e where a.bems_orig = :0 and a.status_id = '99' and e.bems_id=:0 order by a.orig_bu , a.mctr_no desc");
                var c99 = entities.Database.SqlQuery<MctrMainMenu>(queryc99.ToString(), parameter1).ToList();
                mctrmainmenulist.AddRange(c99);

                // cursor xx
                StringBuilder queryxx = new StringBuilder("select a.mctr_no , a.title , a.status_id , a.orig_bu , e.last_name as LAST_NAME, e.first_name as FIRST_NAME from mctr_header a,mctr_employee_v e  where a.bems_orig = :0 and a.status_id in ( 'XS' , 'XX' ) and e.bems_id=:0  order by a.orig_bu , a.mctr_no desc");
                var xx = entities.Database.SqlQuery<MctrMainMenu>(queryxx.ToString(), parameter1).ToList();
                mctrmainmenulist.AddRange(xx);

                return mctrmainmenulist;
            }
            catch (Exception ex)
            {
                logger.Error("Error thrown from MCTRlogOrigChgRepository.PopulateActionTree(): " + ex.Message);
                throw;
            }

        }
        /// <summary>
        /// method name populateAssignedAtree
        /// </summary>
        /// <param name="mctrMainMenu"></param>
        /// <returns>mctrMainMenu</returns>
        ///   -- mctr header table entries used to populate main menu in-tray where bems is matched to role bems.
        public IEnumerable<MctrMainMenu> populateAssignedAtree(IEnumerable<MctrMainMenu> mctrMainMenu)
        {
            logger.Debug("Executing populateAssignedAtree with input:");
            try
            {
                var item = mctrMainMenu.First();

                OracleParameter[] parameter1 = new OracleParameter[1];
                parameter1[0] = new OracleParameter(":a.bems_orig", OracleDbType.Varchar2, item.session_bems, ParameterDirection.Input);

                //var b = cursorGenericMethod(mctrMainMenu);
                //mctrmainmenulist.AddRange(b);

                //cursor for pa
                StringBuilder querypa = new StringBuilder("select tbl.mctr_no , tbl.title , tbl.status_id , tbl.orig_bu , tbl.bems_id , to_char ( abs ( round ( sum ( nvl ( tli . amount_from , 0 ) + nvl ( tli . adjustment_from , 0 ) ) , 0 ) ) , '999,999,999' ) as fmtamt from ( select a.mctr_no , a.title , a.status_id , a.orig_bu , decode ( a.status_id , 'SA' , a.bems_super , 'LA' , 'various' , 'FA' , a.bems_fin_ctl , 'AA' , a.bems_acct , 'LB' , a.bems_lbr_acct , 'LM' , 'various' , 'MA' , a.bems_matl_acct , 'CA' , a.bems_cost_acct , 'SR' , a.bems_sr_acct , 'JA' , a.bems_acct , 'IP' , a.bems_acct ) as bems_id from mctr_header a where ( a.status_id in ( 'SA' , 'LA' , 'FA' , 'AA' , 'LB' , 'LM' , 'MA' , 'CA' , 'SR' , 'JA' , 'IP' ) and a.bems_orig = :0 ) or ( a.status_id in ( 'SA' , 'LA' , 'FA' , 'LB' , 'LM' , 'MA' , 'CA' , 'SR' , 'IP' ) and a.bems_acct = :0 ) ) tbl , mctr_line_item tli where tbl.mctr_no = tli . mctr_no ( + ) group by tbl.mctr_no , tbl.title , tbl.status_id , tbl.orig_bu , tbl.bems_id order by tbl.orig_bu , tbl.status_id , tbl.mctr_no desc");
                parameter1 = new OracleParameter[1];
                parameter1[0] = new OracleParameter(":a.bems_orig", OracleDbType.Varchar2, item.session_bems, ParameterDirection.Input);
                var pa = entities.Database.SqlQuery<MctrMainMenu>(querypa.ToString(), parameter1).ToList();

                StringBuilder countquerypa = new StringBuilder("select count (*)  from mctr_header a  where ( a.status_id in ( 'SA' , 'LA' , 'FA' , 'AA' , 'LB' , 'LM' , 'MA' , 'CA' , 'SR' , 'JA' , 'IP' ) and a.bems_orig = :0 ) or ( a.status_id in ( 'SA' , 'LA' , 'FA' , 'LB' , 'LM' , 'MA' , 'CA' , 'SR' , 'IP' )) and a.bems_acct = :0");
                parameter1 = new OracleParameter[1];
                parameter1[0] = new OracleParameter(":a.bems_orig", OracleDbType.Varchar2, item.session_bems, ParameterDirection.Input);
                var countpa = entities.Database.SqlQuery<int>(countquerypa.ToString(), parameter1).Single<int>();

                if (countpa > 0)
                {
                    string query = " ";
                    var fullname = " ";
                    foreach (var pendingaccount in pa)
                    {
                        try
                        {
                            query = "select(e.last_name || ', ' || e.first_name) as v_full_name from mctr_employee_v e where e.bems_id =" + pendingaccount.BEMS_ID;
                            fullname = entities.Database.SqlQuery<string>(query).Single<string>();
                             string[] values = fullname.Split(',');
                            pendingaccount.FIRST_NAME = values[1];
                            pendingaccount.LAST_NAME =values[0];

                            pendingaccount.pendingApprovals = true;
                        }
                        catch (Exception e)
                        {
                            pendingaccount.full_name = "unknown";
                            logger.Error("Error from MCTR.DataAccess.LineItemRepository.mctrLineItemPostQuery" + e.Message);
                            pendingaccount.pendingApprovals = true;

                        }
                        if (pendingaccount.STATUS_ID == "various")
                        {
                            pendingaccount.full_name = "various";
                            pendingaccount.pendingApprovals = true;

                        }
                    }
                    mctrmainmenulist.AddRange(pa);
                }


                //cursor for aa
                //StringBuilder queryaa = new StringBuilder("select tbl.mctr_no , tbl.title , tbl.status_id , tbl.orig_bu , tbl.full_name , to_char ( abs ( round ( sum ( nvl ( tli . amount_from , 0 ) + nvl ( tli . adjustment_from , 0 ) ) , 0 ) ) , '999,999,999' ) as fmtamt from ( select a.mctr_no , a.title , a.status_id , a.orig_bu , (e.last_name || ', ' ||e.first_name ) full_name from mctr_header a , mctr_employee_v e where a.status_id = 'AA' and a.bems_acct =e.bems_id ( + ) and a.bems_acct = :0 ) tbl , mctr_line_item tli where tbl.mctr_no = tli . mctr_no ( + ) group by tbl.mctr_no , tbl.title , tbl.status_id , tbl.orig_bu , tbl.full_name order by tbl.orig_bu , tbl.mctr_no desc");
                StringBuilder queryaa = new StringBuilder(@"select tbl.mctr_no, tbl.title, tbl.status_id, tbl.orig_bu, tbl.full_name,
          to_char(abs(round(sum(nvl(tli.amount_from, 0) + nvl(tli.adjustment_from, 0)), 0)), '999,999,999') as fmtamt
     from(select a.mctr_no, a.title, a.status_id, a.orig_bu, (e.last_name || ', ' || e.first_name) full_name
                  from mctr_header a, mctr_employee_v e
                 where a.status_id = 'AA'
                   and a.bems_acct = e.bems_id(+)
                   and a.bems_acct = :bems_orig) tbl,
          mctr_line_item tli where tbl.mctr_no = tli.mctr_no(+)
    group by tbl.mctr_no, tbl.title, tbl.status_id, tbl.orig_bu, tbl.full_name
    order by tbl.orig_bu, tbl.mctr_no desc");
                parameter1 = new OracleParameter[1];
                parameter1[0] = new OracleParameter(":a.bems_orig", OracleDbType.Varchar2, item.session_bems, ParameterDirection.Input);
                var aa = entities.Database.SqlQuery<MctrMainMenu>(queryaa.ToString(), parameter1).ToList();
                mctrmainmenulist.AddRange(aa);

                //cursor for ja
                StringBuilder queryja = new StringBuilder("select a.mctr_no , a.title , a.status_id , a.orig_bu , (e.last_name || ', ' ||e.first_name ) full_name from mctr_header a , mctr_employee_v e where a.status_id = 'JA' and a.bems_acct = :0 and a.bems_acct =e.bems_id ( + ) order by a.orig_bu , a.mctr_no desc");
                parameter1 = new OracleParameter[1];
                parameter1[0] = new OracleParameter(":a.bems_orig", OracleDbType.Varchar2, item.session_bems, ParameterDirection.Input);
                var ja = entities.Database.SqlQuery<MctrMainMenu>(queryja.ToString(), parameter1).ToList();
                mctrmainmenulist.AddRange(ja);

                //cursor for lb
                StringBuilder querylb = new StringBuilder("select a.mctr_no , a.title , a.status_id , a.orig_bu , (e.last_name || ', ' ||e.first_name ) full_name from mctr_header a , mctr_employee_v e where a.status_id in ( 'LB' , 'LM' ) and a.bems_lbr_acct = :0 and a.appr_cd_lbr_acct is null and a.bems_lbr_acct =e.bems_id ( + ) order by a.orig_bu , a.mctr_no desc");
                parameter1 = new OracleParameter[1];
                parameter1[0] = new OracleParameter(":a.bems_orig", OracleDbType.Varchar2, item.session_bems, ParameterDirection.Input);
                var lb = entities.Database.SqlQuery<MctrMainMenu>(querylb.ToString(), parameter1).ToList();
                mctrmainmenulist.AddRange(lb);

                //cursor for ma
                StringBuilder queryma = new StringBuilder("select a.mctr_no , a.title , a.status_id , a.orig_bu , (e.last_name || ', ' ||e.first_name ) full_name from mctr_header a , mctr_employee_v e where a.status_id in ( 'MA' , 'LM' ) and a.bems_matl_acct = :0 and a.appr_cd_matl_acct is null and a.bems_matl_acct =e.bems_id ( + ) order by a.orig_bu , a.mctr_no desc");
                parameter1 = new OracleParameter[1];
                parameter1[0] = new OracleParameter(":a.bems_orig", OracleDbType.Varchar2, item.session_bems, ParameterDirection.Input);
                var ma = entities.Database.SqlQuery<MctrMainMenu>(queryma.ToString(), parameter1).ToList();
                mctrmainmenulist.AddRange(ma);

                //cursor for ca
                StringBuilder queryca = new StringBuilder("select a.mctr_no , a.title , a.status_id , a.orig_bu , (e.last_name || ', ' ||e.first_name ) full_name from mctr_header a , mctr_employee_v e where a.status_id = 'CA' and a.bems_cost_acct = :0 and a.bems_cost_acct =e.bems_id ( + ) order by a.orig_bu , a.mctr_no desc");
                parameter1 = new OracleParameter[1];
                parameter1[0] = new OracleParameter(":a.bems_orig", OracleDbType.Varchar2, item.session_bems, ParameterDirection.Input);
                var ca = entities.Database.SqlQuery<MctrMainMenu>(queryca.ToString(), parameter1).ToList();
                mctrmainmenulist.AddRange(ca);

                //cursor for sr
                StringBuilder querysr = new StringBuilder("select a.mctr_no , a.title , a.status_id , a.orig_bu , (e.last_name || ', ' ||e.first_name ) full_name from mctr_header a , mctr_employee_v e where a.status_id = 'SR' and a.bems_sr_acct = :0 and a.bems_sr_acct =e.bems_id ( + ) order by a.orig_bu , a.mctr_no desc");
                parameter1 = new OracleParameter[1];
                parameter1[0] = new OracleParameter(":a.bems_orig", OracleDbType.Varchar2, item.session_bems, ParameterDirection.Input);
                var sr = entities.Database.SqlQuery<MctrMainMenu>(querysr.ToString(), parameter1).ToList();
                mctrmainmenulist.AddRange(sr);

                //cursor for jip
                StringBuilder queryjip = new StringBuilder("select a.mctr_no , a.title , a.status_id , a.orig_bu , (e.last_name || ', ' ||e.first_name ) full_name from mctr_header a , mctr_employee_v e where a.status_id = 'IP' and a.bems_acct = :0  and a.bems_acct =e.bems_id ( + ) order by a.orig_bu , a.mctr_no desc");
                parameter1 = new OracleParameter[1];
                parameter1[0] = new OracleParameter(":a.bems_orig", OracleDbType.Varchar2, item.session_bems, ParameterDirection.Input);
                var jip = entities.Database.SqlQuery<MctrMainMenu>(queryjip.ToString(), parameter1).ToList();
                mctrmainmenulist.AddRange(jip);

                // cursor oa 
                StringBuilder queryoa = new StringBuilder("select a.mctr_no , a.title , a.status_id , a.orig_bu , e.last_name as LAST_NAME, e.first_name as FIRST_NAME from mctr_header a ,mctr_employee_v e  where a.status_id = 'OA' and a.bems_orig = :0   and e.bems_id=:0  order by a.orig_bu , a.mctr_no desc");
                parameter1[0] = new OracleParameter(":a.bems_orig", OracleDbType.Varchar2, item.session_bems, ParameterDirection.Input);
                var oa = entities.Database.SqlQuery<MctrMainMenu>(queryoa.ToString(), parameter1).ToList();

                mctrmainmenulist.AddRange(oa);


                StringBuilder countqueryoa = new StringBuilder("select count(*) as v_count from mctr_header where status_id = 'OA' and bems_orig = :0");
                var countoa = entities.Database.SqlQuery<int>(countqueryoa.ToString(), parameter1).Single<int>();

                //cursor orj

                StringBuilder queryorj = new StringBuilder("select a.mctr_no , a.title , a.status_id , a.orig_bu , e.last_name as LAST_NAME, e.first_name as FIRST_NAME from mctr_header a ,mctr_employee_v e  where a.status_id = 'OR' and a.bems_orig = :0  and e.bems_id=:0   order by a.orig_bu , a.mctr_no desc");
                var orj = entities.Database.SqlQuery<MctrMainMenu>(queryorj.ToString(), parameter1).ToList();
                mctrmainmenulist.AddRange(orj);

                // cursor sa
                StringBuilder querysa = new StringBuilder("select a.mctr_no , a.title , a.status_id , a.orig_bu , e.last_name as LAST_NAME, e.first_name as FIRST_NAME from mctr_header a,mctr_employee_v e  where a.status_id = 'SA' and a.bems_super = :0   and e.bems_id=:0   order by a.orig_bu , a.mctr_no desc");
                var sa = entities.Database.SqlQuery<MctrMainMenu>(querysa.ToString(), parameter1).ToList();
                mctrmainmenulist.AddRange(sa);

                // cursor la
                StringBuilder queryla = new StringBuilder("select distinct a.mctr_no , a.title , a.status_id , a.orig_bu , 'various' from mctr_header a , mctr_line_item b,mctr_employee_v e  where a.status_id = 'LA' and a.mctr_no = b . mctr_no and ( ( b . bems_1 = :0 and b . appr_cd_1 is null ) or ( b . bems_2 = :0 and b . appr_cd_2 is null ) or ( b . bems_3 = :0 and b . appr_cd_3 is null ) )  and e.bems_id=:0   order by a.orig_bu , a.mctr_no desc");
                var la = entities.Database.SqlQuery<MctrMainMenu>(queryla.ToString(), parameter1).ToList();
                mctrmainmenulist.AddRange(la);

                //cursor fa
                StringBuilder queryfa = new StringBuilder("select a.mctr_no , a.title , a.status_id , a.orig_bu , e.last_name as LAST_NAME, e.first_name as FIRST_NAME from mctr_header a,mctr_employee_v e  where a.status_id = 'FA' and a.bems_fin_ctl = :0 and e.bems_id=:0 order by a.orig_bu , a.mctr_no desc");
                var fa = entities.Database.SqlQuery<MctrMainMenu>(queryfa.ToString(), parameter1).ToList();
                mctrmainmenulist.AddRange(fa);

                // cursor c99
                StringBuilder queryc99 = new StringBuilder("select a.mctr_no , a.title , a.status_id , a.orig_bu , e.last_name as LAST_NAME, e.first_name as FIRST_NAME from mctr_header a , mctr_employee_v e where a.bems_orig = :0 and a.status_id = '99' and e.bems_id=:0 order by a.orig_bu , a.mctr_no desc");
                var c99 = entities.Database.SqlQuery<MctrMainMenu>(queryc99.ToString(), parameter1).ToList();
                mctrmainmenulist.AddRange(c99);

                // cursor xx
                StringBuilder queryxx = new StringBuilder("select a.mctr_no , a.title , a.status_id , a.orig_bu , e.last_name as LAST_NAME, e.first_name as FIRST_NAME from mctr_header a,mctr_employee_v e  where a.bems_orig = :0 and a.status_id in ( 'XS' , 'XX' ) and e.bems_id=:0  order by a.orig_bu , a.mctr_no desc");
                var xx = entities.Database.SqlQuery<MctrMainMenu>(queryxx.ToString(), parameter1).ToList();
                mctrmainmenulist.AddRange(xx);

                return mctrmainmenulist;
            }
            catch (Exception ex)
            {
                logger.Error("Error thrown from MCTRlogOrigChgRepository.populateAssignedAtree(): " + ex.Message);
                throw;
            }
        }

        ///*************************************************************
        /// <summary>
        /// Method Name : cursorGenericMethod
        /// </summary>
        /// <param >mctrMainMenu </param>
        /// <returns>IEnumerable<MctrLog></returns>
        //public List<MctrMainMenu> cursorGenericMethod(IEnumerable<MctrMainMenu> mctrMainMenu)
        //{
        //    logger.Debug("Executing cursorGenericMethod with input:");
        //    try {
        //        int stat_pad_length = 0;
        //        var item = mctrMainMenu.First();

        //        OracleParameter[] parameter1 = new OracleParameter[1];
        //        parameter1[0] = new OracleParameter(":a.bems_orig", OracleDbType.Varchar2, item.session_bems, ParameterDirection.Input);

        //        string maxlength = "select max ( length ( mctr_no ) )  from  mctr_header ";
        //        stat_pad_length = entities.Database.SqlQuery<int>(maxlength).Single<int>();

        //        // cursor oa 
        //        StringBuilder queryoa = new StringBuilder("select a.mctr_no , a.title , a.status_id , a.orig_bu , e.last_name as LAST_NAME, e.first_name as FIRST_NAME from mctr_header a ,mctr_employee_v e  where a.status_id = 'OA' and a.bems_orig = :0   and e.bems_id=:0  order by a.orig_bu , a.mctr_no desc");
        //        parameter1[0] = new OracleParameter(":a.bems_orig", OracleDbType.Varchar2, item.session_bems, ParameterDirection.Input);
        //        var oa = entities.Database.SqlQuery<MctrMainMenu>(queryoa.ToString(), parameter1).ToList();

        //        mctrmainmenulist.AddRange(oa);


        //        StringBuilder countqueryoa = new StringBuilder("select count(*) as v_count from mctr_header where status_id = 'OA' and bems_orig = :0");
        //        var countoa = entities.Database.SqlQuery<int>(countqueryoa.ToString(), parameter1).Single<int>();

        //        //cursor orj

        //        StringBuilder queryorj = new StringBuilder("select a.mctr_no , a.title , a.status_id , a.orig_bu , e.last_name as LAST_NAME, e.first_name as FIRST_NAME from mctr_header a ,mctr_employee_v e  where a.status_id = 'OR' and a.bems_orig = :0  and e.bems_id=:0   order by a.orig_bu , a.mctr_no desc");
        //        var orj = entities.Database.SqlQuery<MctrMainMenu>(queryorj.ToString(), parameter1).ToList();
        //        mctrmainmenulist.AddRange(orj);

        //        // cursor sa
        //        StringBuilder querysa = new StringBuilder("select a.mctr_no , a.title , a.status_id , a.orig_bu , e.last_name as LAST_NAME, e.first_name as FIRST_NAME from mctr_header a,mctr_employee_v e  where a.status_id = 'SA' and a.bems_super = :0   and e.bems_id=:0   order by a.orig_bu , a.mctr_no desc");
        //        var sa = entities.Database.SqlQuery<MctrMainMenu>(querysa.ToString(), parameter1).ToList();
        //        mctrmainmenulist.AddRange(sa);

        //        // cursor la
        //        StringBuilder queryla = new StringBuilder("select distinct a.mctr_no , a.title , a.status_id , a.orig_bu , 'various' from mctr_header a , mctr_line_item b,mctr_employee_v e  where a.status_id = 'LA' and a.mctr_no = b . mctr_no and ( ( b . bems_1 = :0 and b . appr_cd_1 is null ) or ( b . bems_2 = :0 and b . appr_cd_2 is null ) or ( b . bems_3 = :0 and b . appr_cd_3 is null ) )  and e.bems_id=:0   order by a.orig_bu , a.mctr_no desc");
        //        var la = entities.Database.SqlQuery<MctrMainMenu>(queryla.ToString(), parameter1).ToList();
        //        mctrmainmenulist.AddRange(la);

        //        //cursor fa
        //        StringBuilder queryfa = new StringBuilder("select a.mctr_no , a.title , a.status_id , a.orig_bu , e.last_name as LAST_NAME, e.first_name as FIRST_NAME from mctr_header a,mctr_employee_v e  where a.status_id = 'FA' and a.bems_fin_ctl = :0 and e.bems_id=:0 order by a.orig_bu , a.mctr_no desc");
        //        var fa = entities.Database.SqlQuery<MctrMainMenu>(queryfa.ToString(), parameter1).ToList();
        //        mctrmainmenulist.AddRange(fa);

        //        // cursor c99
        //        StringBuilder queryc99 = new StringBuilder("select a.mctr_no , a.title , a.status_id , a.orig_bu , e.last_name as LAST_NAME, e.first_name as FIRST_NAME from mctr_header a , mctr_employee_v e where a.bems_orig = :0 and a.status_id = '99' and e.bems_id=:0 order by a.orig_bu , a.mctr_no desc");
        //        var c99 = entities.Database.SqlQuery<MctrMainMenu>(queryc99.ToString(), parameter1).ToList();
        //        mctrmainmenulist.AddRange(c99);

        //        // cursor xx
        //        StringBuilder queryxx = new StringBuilder("select a.mctr_no , a.title , a.status_id , a.orig_bu , e.last_name as LAST_NAME, e.first_name as FIRST_NAME from mctr_header a,mctr_employee_v e  where a.bems_orig = :0 and a.status_id in ( 'XS' , 'XX' ) and e.bems_id=:0  order by a.orig_bu , a.mctr_no desc");
        //        var xx = entities.Database.SqlQuery<MctrMainMenu>(queryxx.ToString(), parameter1).ToList();
        //        mctrmainmenulist.AddRange(xx);

        //        return mctrmainmenulist;
        //    }
        //    catch (Exception ex)
        //    {
        //        logger.Error("Error thrown from MCTRlogOrigChgRepository.cursorGenericMethod(): " + ex.Message);
        //        throw;
        //    }
        //}
        ///*************************************************************
        /// <summary>
        /// Method Name : getDescription
        /// </summary>
        /// <param ></param>
     
        public IEnumerable<Status> getDescription()
        {
            logger.Debug("Executing getDescription :");
            try
            {
                StringBuilder query = new StringBuilder("select status_descr from mctr_status");
                var result = entities.Database.SqlQuery<Status>(query.ToString()).ToList();
                return result;
            }
            catch (Exception ex)
            {
                logger.Error("Error thrown from MCTRlogOrigChgRepository.cursorGenericMethod(): " + ex.Message);
                throw;
            }

        }
    }

}

