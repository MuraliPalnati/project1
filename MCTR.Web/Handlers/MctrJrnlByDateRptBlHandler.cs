///*************************************************************************
/// 
/// BOEING CONFIDENTIAL
/// ___________________
/// 
///  BOEING is a trademark of Boeing Management Company.
///
///  Copyright © 2016 Boeing. All rights reserved.
/// 
/// NOTICE:  All information contained herein is, and remains
/// the property of Boeing and its suppliers, if any.  
/// The intellectual and technical concepts contained
/// herein are proprietary to Boeing and its suppliers and may be 
/// covered by U.S. and Foreign Patents, patents in process, 
/// and are protected by trade secret or copyright law.
/// Dissemination of this information or reproduction of this material
/// is strictly forbidden unless prior written permission is obtained
/// from Boeing. 
///

///************************************************************************
/// Author           : Generated by ATMA ®
/// Revision History :  

using System.Collections.Generic;
using log4net;
using MCTR.DomainEntity;

namespace MCTR.Web.Handlers
{
    ///*********************************************************************
    ///<summary>
    ///MctrJrnlByDateRptBlHandler provides a level of abstraction for consuming the REST api.
    ///</summary>
    public class MctrJrnlByDateRptBlHandler
    {
         private readonly ILog logger;

        public MctrJrnlByDateRptBlHandler()
        {
            logger = LogManager.GetLogger(System.Reflection.MethodBase.GetCurrentMethod().DeclaringType);
        }
        ///*************************************************************
        ///<summary>
        ///Method Name : selectionbutBuWhenButtonPressedOpenLOV
        ///</summary>
        ///<param name = "MctrJrnlByDateRptBl"></param>
        ///<returns>IEnumerable<MctrJrnlByDateRptBl> </returns>
        public IEnumerable<MctrJrnlByDate> selectionbutBuWhenButtonPressedOpenLOV(MctrJrnlByDate mctrJrnlByDateRptBl)
        {

            logger.Debug("Executing selectionbutRptWhenButtonPressed rest service handler.");
            string restApiPath = "MctrJrnlByDateRptBlSevice/selectionbutBuWhenButtonPressedOpenLOV";
            logger.Info("Invoking Rest API : " + restApiPath + " with Request : " + mctrJrnlByDateRptBl);
            var response = HandlerUtil<MctrJrnlByDate>.RestPostProcessor(restApiPath, mctrJrnlByDateRptBl);
            logger.Info("Response received form Rest API : " + restApiPath + " : " + response);
            return response;
        }
        ///*************************************************************
        ///<summary>
        ///Method Name : selectionbutBuWhenButtonPressedOpenLOV
        ///</summary>
        ///<param name = "MctrJrnlByDateRptBl"></param>
        ///<returns>IEnumerable<MctrJrnlByDateRptBl> </returns>
        public IEnumerable<MctrJrnlByDate> selectionbutFromDateWhenButtonPressedOpenLOV(MctrJrnlByDate mctrJrnlByDateRptBl)
        {

            logger.Debug("Executing selectionbutRptWhenButtonPressed rest service handler.");
            string restApiPath = "MctrJrnlByDateRptBlSevice/selectionbutBuWhenButtonPressedOpenLOV";
            logger.Info("Invoking Rest API : " + restApiPath + " with Request : " + mctrJrnlByDateRptBl);
            var response = HandlerUtil<MctrJrnlByDate>.RestPostProcessor(restApiPath, mctrJrnlByDateRptBl);
            logger.Info("Response received form Rest API : " + restApiPath + " : " + response);
            return response;
        }
        ///*************************************************************
        ///<summary>
        ///Method Name : selectionbutBuWhenButtonPressedOpenLOV
        ///</summary>
        ///<param name = "MctrJrnlByDateRptBl"></param>
        ///<returns>IEnumerable<MctrJrnlByDateRptBl> </returns>
        public IEnumerable<MctrJrnlByDate> selectionbutToDateWhenButtonPressedOpenLOV(MctrJrnlByDate mctrJrnlByDateRptBl)
        {

            logger.Debug("Executing selectionbutRptWhenButtonPressed rest service handler.");
            string restApiPath = "MctrJrnlByDateRptBlSevice/selectionbutBuWhenButtonPressedOpenLOV";
            logger.Info("Invoking Rest API : " + restApiPath + " with Request : " + mctrJrnlByDateRptBl);
            var response = HandlerUtil<MctrJrnlByDate>.RestPostProcessor(restApiPath, mctrJrnlByDateRptBl);
            logger.Info("Response received form Rest API : " + restApiPath + " : " + response);
            return response;
        }
        ///*************************************************************
        ///<summary>
        ///Method Name : selectionbutBuWhenButtonPressedOpenLOV
        ///</summary>
        ///<param name = "MctrJrnlByDateRptBl"></param>
        ///<returns>IEnumerable<MctrJrnlByDateRptBl> </returns>
        public IEnumerable<MctrJrnlByDate> selectionbutOrigWhenButtonPressedOpenLOV(MctrJrnlByDate mctrJrnlByDateRptBl)
        {

            logger.Debug("Executing selectionbutRptWhenButtonPressed rest service handler.");
            string restApiPath = "MctrJrnlByDateRptBlSevice/selectionbutBuWhenButtonPressedOpenLOV";
            logger.Info("Invoking Rest API : " + restApiPath + " with Request : " + mctrJrnlByDateRptBl);
            var response = HandlerUtil<MctrJrnlByDate>.RestPostProcessor(restApiPath, mctrJrnlByDateRptBl);
            logger.Info("Response received form Rest API : " + restApiPath + " : " + response);
            return response;
        }
        ///*************************************************************
        ///<summary>
        ///Method Name : selectionbutBuWhenButtonPressedOpenLOV
        ///</summary>
        ///<param name = "MctrJrnlByDateRptBl"></param>
        ///<returns>IEnumerable<MctrJrnlByDateRptBl> </returns>
        public IEnumerable<MctrJrnlByDate> selectionbutFinCtlWhenButtonPressedOpenLOV(MctrJrnlByDate mctrJrnlByDateRptBl)
        {

            logger.Debug("Executing selectionbutRptWhenButtonPressed rest service handler.");
            string restApiPath = "MctrJrnlByDateRptBlSevice/selectionbutBuWhenButtonPressedOpenLOV";
            logger.Info("Invoking Rest API : " + restApiPath + " with Request : " + mctrJrnlByDateRptBl);
            var response = HandlerUtil<MctrJrnlByDate>.RestPostProcessor(restApiPath, mctrJrnlByDateRptBl);
            logger.Info("Response received form Rest API : " + restApiPath + " : " + response);
            return response;
        }
        ///*************************************************************
        ///<summary>
        ///Method Name : selectionbutRptWhenButtonPressed
        ///</summary>
        ///<param name = "MctrJrnlByDateRptBl"></param>
        ///<returns>IEnumerable<MctrJrnlByDateRptBl> </returns>

        public IEnumerable<MctrJrnlByDate> selectionbutRptWhenButtonPressed(MctrJrnlByDate mctrJrnlByDateRptBl)
        {

            logger.Debug("Executing selectionbutRptWhenButtonPressed rest service handler.");
            string restApiPath = "MctrJrnlByDateRptBlSevice/selectionbutRptWhenButtonPressed";
            logger.Info("Invoking Rest API : " + restApiPath + " with Request : " + mctrJrnlByDateRptBl);
            var response = HandlerUtil<MctrJrnlByDate>.RestPostProcessor(restApiPath, mctrJrnlByDateRptBl);
            logger.Info("Response received form Rest API : " + restApiPath + " : " + response);
            return response;
        }

        ///*************************************************************
        ///<summary>
        ///Method Name : selectionbutExcelWhenButtonPressed
        ///</summary>
        ///<param name = "MctrJrnlByDateRptBl"></param>
        ///<returns>IEnumerable<MctrJrnlByDateRptBl> </returns>

        public IEnumerable<MctrJrnlByDate> selectionbutExcelWhenButtonPressed(MctrJrnlByDate mctrJrnlByDateRptBl)
        {

            logger.Debug("Executing selectionbutExcelWhenButtonPressed rest service handler.");
            string restApiPath = "MctrJrnlByDateRptBlSevice/selectionbutExcelWhenButtonPressed";
            logger.Info("Invoking Rest API : " + restApiPath + " with Request : " + mctrJrnlByDateRptBl);
            var response = HandlerUtil<MctrJrnlByDate>.RestPostProcessor(restApiPath, mctrJrnlByDateRptBl);
            logger.Info("Response received form Rest API : " + restApiPath + " : " + response);
            return response;
        }

        ///*************************************************************
        ///<summary>
        ///Method Name : webutildummyWhenButtonPressed
        ///</summary>
        ///<param name = "MctrJrnlByDateRptBl"></param>
        ///<returns>IEnumerable<MctrJrnlByDateRptBl> </returns>

        public IEnumerable<MctrJrnlByDate> webutildummyWhenButtonPressed(MctrJrnlByDate mctrJrnlByDateRptBl)
        {

            logger.Debug("Executing webutildummyWhenButtonPressed rest service handler.");
            string restApiPath = "MctrJrnlByDateRptBlSevice/webutildummyWhenButtonPressed";
            logger.Info("Invoking Rest API : " + restApiPath + " with Request : " + mctrJrnlByDateRptBl);
            var response = HandlerUtil<MctrJrnlByDate>.RestPostProcessor(restApiPath, mctrJrnlByDateRptBl);
            logger.Info("Response received form Rest API : " + restApiPath + " : " + response);
            return response;
        }

        ///*************************************************************
        ///<summary>
        ///Method Name : webutilwebutilClientinfoFunctionsWhenCustomItemEvent
        ///</summary>
        ///<param name = "MctrJrnlByDateRptBl"></param>
        ///<returns>IEnumerable<MctrJrnlByDateRptBl> </returns>

        public IEnumerable<MctrJrnlByDate> webutilwebutilClientinfoFunctionsWhenCustomItemEvent(MctrJrnlByDate mctrJrnlByDateRptBl)
        {

            logger.Debug("Executing webutilwebutilClientinfoFunctionsWhenCustomItemEvent rest service handler.");
            string restApiPath = "MctrJrnlByDateRptBlSevice/webutilwebutilClientinfoFunctionsWhenCustomItemEvent";
            logger.Info("Invoking Rest API : " + restApiPath + " with Request : " + mctrJrnlByDateRptBl);
            var response = HandlerUtil<MctrJrnlByDate>.RestPostProcessor(restApiPath, mctrJrnlByDateRptBl);
            logger.Info("Response received form Rest API : " + restApiPath + " : " + response);
            return response;
        }

        ///*************************************************************
        ///<summary>
        ///Method Name : webutilwebutilFileFunctionsWhenCustomItemEvent
        ///</summary>
        ///<param name = "MctrJrnlByDateRptBl"></param>
        ///<returns>IEnumerable<MctrJrnlByDateRptBl> </returns>

        public IEnumerable<MctrJrnlByDate> webutilwebutilFileFunctionsWhenCustomItemEvent(MctrJrnlByDate mctrJrnlByDateRptBl)
        {

            logger.Debug("Executing webutilwebutilFileFunctionsWhenCustomItemEvent rest service handler.");
            string restApiPath = "MctrJrnlByDateRptBlSevice/webutilwebutilFileFunctionsWhenCustomItemEvent";
            logger.Info("Invoking Rest API : " + restApiPath + " with Request : " + mctrJrnlByDateRptBl);
            var response = HandlerUtil<MctrJrnlByDate>.RestPostProcessor(restApiPath, mctrJrnlByDateRptBl);
            logger.Info("Response received form Rest API : " + restApiPath + " : " + response);
            return response;
        }

        ///*************************************************************
        ///<summary>
        ///Method Name : webutilwebutilHostFunctionsWhenCustomItemEvent
        ///</summary>
        ///<param name = "MctrJrnlByDateRptBl"></param>
        ///<returns>IEnumerable<MctrJrnlByDateRptBl> </returns>

        public IEnumerable<MctrJrnlByDate> webutilwebutilHostFunctionsWhenCustomItemEvent(MctrJrnlByDate mctrJrnlByDateRptBl)
        {

            logger.Debug("Executing webutilwebutilHostFunctionsWhenCustomItemEvent rest service handler.");
            string restApiPath = "MctrJrnlByDateRptBlSevice/webutilwebutilHostFunctionsWhenCustomItemEvent";
            logger.Info("Invoking Rest API : " + restApiPath + " with Request : " + mctrJrnlByDateRptBl);
            var response = HandlerUtil<MctrJrnlByDate>.RestPostProcessor(restApiPath, mctrJrnlByDateRptBl);
            logger.Info("Response received form Rest API : " + restApiPath + " : " + response);
            return response;
        }

        ///*************************************************************
        ///<summary>
        ///Method Name : webutilwebutilSessionFunctionsWhenCustomItemEvent
        ///</summary>
        ///<param name = "MctrJrnlByDateRptBl"></param>
        ///<returns>IEnumerable<MctrJrnlByDateRptBl> </returns>

        public IEnumerable<MctrJrnlByDate> webutilwebutilSessionFunctionsWhenCustomItemEvent(MctrJrnlByDate mctrJrnlByDateRptBl)
        {

            logger.Debug("Executing webutilwebutilSessionFunctionsWhenCustomItemEvent rest service handler.");
            string restApiPath = "MctrJrnlByDateRptBlSevice/webutilwebutilSessionFunctionsWhenCustomItemEvent";
            logger.Info("Invoking Rest API : " + restApiPath + " with Request : " + mctrJrnlByDateRptBl);
            var response = HandlerUtil<MctrJrnlByDate>.RestPostProcessor(restApiPath, mctrJrnlByDateRptBl);
            logger.Info("Response received form Rest API : " + restApiPath + " : " + response);
            return response;
        }

        ///*************************************************************
        ///<summary>
        ///Method Name : webutilwebutilFiletransferFunctionsWhenCustomItemEvent
        ///</summary>
        ///<param name = "MctrJrnlByDateRptBl"></param>
        ///<returns>IEnumerable<MctrJrnlByDateRptBl> </returns>

        public IEnumerable<MctrJrnlByDate> webutilwebutilFiletransferFunctionsWhenCustomItemEvent(MctrJrnlByDate mctrJrnlByDateRptBl)
        {

            logger.Debug("Executing webutilwebutilFiletransferFunctionsWhenCustomItemEvent rest service handler.");
            string restApiPath = "MctrJrnlByDateRptBlSevice/webutilwebutilFiletransferFunctionsWhenCustomItemEvent";
            logger.Info("Invoking Rest API : " + restApiPath + " with Request : " + mctrJrnlByDateRptBl);
            var response = HandlerUtil<MctrJrnlByDate>.RestPostProcessor(restApiPath, mctrJrnlByDateRptBl);
            logger.Info("Response received form Rest API : " + restApiPath + " : " + response);
            return response;
        }

        ///*************************************************************
        ///<summary>
        ///Method Name : webutilwebutilOleFunctionsWhenCustomItemEvent
        ///</summary>
        ///<param name = "MctrJrnlByDateRptBl"></param>
        ///<returns>IEnumerable<MctrJrnlByDateRptBl> </returns>

        public IEnumerable<MctrJrnlByDate> webutilwebutilOleFunctionsWhenCustomItemEvent(MctrJrnlByDate mctrJrnlByDateRptBl)
        {

            logger.Debug("Executing webutilwebutilOleFunctionsWhenCustomItemEvent rest service handler.");
            string restApiPath = "MctrJrnlByDateRptBlSevice/webutilwebutilOleFunctionsWhenCustomItemEvent";
            logger.Info("Invoking Rest API : " + restApiPath + " with Request : " + mctrJrnlByDateRptBl);
            var response = HandlerUtil<MctrJrnlByDate>.RestPostProcessor(restApiPath, mctrJrnlByDateRptBl);
            logger.Info("Response received form Rest API : " + restApiPath + " : " + response);
            return response;
        }

        ///*************************************************************
        ///<summary>
        ///Method Name : webutilwebutilCApiFunctionsWhenCustomItemEvent
        ///</summary>
        ///<param name = "MctrJrnlByDateRptBl"></param>
        ///<returns>IEnumerable<MctrJrnlByDateRptBl> </returns>

        public IEnumerable<MctrJrnlByDate> webutilwebutilCApiFunctionsWhenCustomItemEvent(MctrJrnlByDate mctrJrnlByDateRptBl)
        {

            logger.Debug("Executing webutilwebutilCApiFunctionsWhenCustomItemEvent rest service handler.");
            string restApiPath = "MctrJrnlByDateRptBlSevice/webutilwebutilCApiFunctionsWhenCustomItemEvent";
            logger.Info("Invoking Rest API : " + restApiPath + " with Request : " + mctrJrnlByDateRptBl);
            var response = HandlerUtil<MctrJrnlByDate>.RestPostProcessor(restApiPath, mctrJrnlByDateRptBl);
            logger.Info("Response received form Rest API : " + restApiPath + " : " + response);
            return response;
        }

        ///*************************************************************
        ///<summary>
        ///Method Name : webutilwebutilBrowserFunctionsWhenCustomItemEvent
        ///</summary>
        ///<param name = "MctrJrnlByDateRptBl"></param>
        ///<returns>IEnumerable<MctrJrnlByDateRptBl> </returns>

        public IEnumerable<MctrJrnlByDate> webutilwebutilBrowserFunctionsWhenCustomItemEvent(MctrJrnlByDate mctrJrnlByDateRptBl)
        {

            logger.Debug("Executing webutilwebutilBrowserFunctionsWhenCustomItemEvent rest service handler.");
            string restApiPath = "MctrJrnlByDateRptBlSevice/webutilwebutilBrowserFunctionsWhenCustomItemEvent";
            logger.Info("Invoking Rest API : " + restApiPath + " with Request : " + mctrJrnlByDateRptBl);
            var response = HandlerUtil<MctrJrnlByDate>.RestPostProcessor(restApiPath, mctrJrnlByDateRptBl);
            logger.Info("Response received form Rest API : " + restApiPath + " : " + response);
            return response;
        }

        ///*************************************************************
        ///<summary>
        ///Method Name : getRgBuLOV()
        ///</summary>
        ///<param name = "MctrJrnlByDateRptBl"></param>
        ///<returns>IEnumerable<MctrJrnlByDateRptBl> </returns>

        public IEnumerable<MctrJrnlByDate> getRgBuLOV(MctrJrnlByDate mctrJrnlByDateRptBl)
        {

            logger.Debug("Executing getRgBuLOV() rest service handler.");
            string restApiPath = "MctrJrnlByDateRptBlSevice/getRgBuLOV()";
            logger.Info("Invoking Rest API : " + restApiPath + " with Request : " + mctrJrnlByDateRptBl);
            var response = HandlerUtil<MctrJrnlByDate>.RestPostProcessor(restApiPath, mctrJrnlByDateRptBl);
            logger.Info("Response received form Rest API : " + restApiPath + " : " + response);
            return response;
        }

        ///*************************************************************
        ///<summary>
        ///Method Name : getRgFinCtlLOV()
        ///</summary>
        ///<param name = "mctrJrnlByDateRptBl"></param>
        ///<returns>IEnumerable<MctrJrnlByDate> </returns>

        public IEnumerable<MctrJrnlByDate> getRgFinCtlLOV(MctrJrnlByDate mctrJrnlByDateRptBl)
        {

            logger.Debug("Executing getRgFinCtlLOV() rest service handler.");
            string restApiPath = "MctrJrnlByDateRptBlSevice/getRgFinCtlLOV";
            logger.Info("Invoking Rest API : " + restApiPath + " with Request : " + mctrJrnlByDateRptBl);
            var response = HandlerUtil<MctrJrnlByDate>.RestPostProcessor(restApiPath, mctrJrnlByDateRptBl);
            logger.Info("Response received form Rest API : " + restApiPath + " : " + response);
            return response;
        }

        ///*************************************************************
        ///<summary>
        ///Method Name : getRgOrigLOV()
        ///</summary>
        ///<param name = "mctrJrnlByDateRptBl"></param>
        ///<returns>IEnumerable<MctrJrnlByDate> </returns>

        public IEnumerable<MctrJrnlByDate> getRgOrigLOV(MctrJrnlByDate mctrJrnlByDateRptBl)
        {

            logger.Debug("Executing getRgOrigLOV() rest service handler.");
            string restApiPath = "MctrJrnlByDateRptBlSevice/getRgOrigLOV";
            logger.Info("Invoking Rest API : " + restApiPath + " with Request : " + mctrJrnlByDateRptBl);
            var response = HandlerUtil<MctrJrnlByDate>.RestPostProcessor(restApiPath, mctrJrnlByDateRptBl);
            logger.Info("Response received form Rest API : " + restApiPath + " : " + response);
            return response;
        }

        ///*************************************************************
        ///<summary>
        ///Method Name : getRgFromDateLOV()
        ///</summary>
        ///<param name = "MctrJrnlByDateRptBl"></param>
        ///<returns>IEnumerable<MctrJrnlByDateRptBl> </returns>

        public IEnumerable<MctrJrnlByDate> getRgFromDateLOV(MctrJrnlByDate mctrJrnlByDateRptBl)
        {

            logger.Debug("Executing getRgFromDateLOV() rest service handler.");
            string restApiPath = "MctrJrnlByDateRptBlSevice/getRgFromDateLOV";
            logger.Info("Invoking Rest API : " + restApiPath + " with Request : " + mctrJrnlByDateRptBl);
            var response = HandlerUtil<MctrJrnlByDate>.RestPostProcessor(restApiPath, mctrJrnlByDateRptBl);
            logger.Info("Response received form Rest API : " + restApiPath + " : " + response);
            return response;
        }

        ///*************************************************************
        ///<summary>
        ///Method Name : getRgToDateLOV()
        ///</summary>
        ///<param name = "MctrJrnlByDateRptBl"></param>
        ///<returns>IEnumerable<MctrJrnlByDateRptBl> </returns>

        public IEnumerable<MctrJrnlByDate> getRgToDateLOV(MctrJrnlByDate mctrJrnlByDateRptBl)
        {

            logger.Debug("Executing getRgToDateLOV() rest service handler.");
            string restApiPath = "MctrJrnlByDateRptBlSevice/getRgToDateLOV";
            logger.Info("Invoking Rest API : " + restApiPath + " with Request : " + mctrJrnlByDateRptBl);
            var response = HandlerUtil<MctrJrnlByDate>.RestPostProcessor(restApiPath, mctrJrnlByDateRptBl);
            logger.Info("Response received form Rest API : " + restApiPath + " : " + response);
            return response;
        }

        ///*************************************************************
        ///<summary>
        ///Method Name : mctrJrnlByDateRptBlWhenWindowClosed
        ///</summary>
        ///<param name = "MctrJrnlByDateRptBl"></param>
        ///<returns>IEnumerable<MctrJrnlByDateRptBl> </returns>

        public IEnumerable<MctrJrnlByDate> mctrJrnlByDateRptBlWhenWindowClosed(MctrJrnlByDate mctrJrnlByDateRptBl)
        {

            logger.Debug("Executing mctrJrnlByDateRptBlWhenWindowClosed rest service handler.");
            string restApiPath = "MctrJrnlByDateRptBlSevice/mctrJrnlByDateRptBlWhenWindowClosed";
            logger.Info("Invoking Rest API : " + restApiPath + " with Request : " + mctrJrnlByDateRptBl);
            var response = HandlerUtil<MctrJrnlByDate>.RestPostProcessor(restApiPath, mctrJrnlByDateRptBl);
            logger.Info("Response received form Rest API : " + restApiPath + " : " + response);
            return response;
        }


    }
}



