///*************************************************************************
/// 
/// BOEING CONFIDENTIAL
/// ___________________
/// 
///  BOEING is a trademark of Boeing Management Company.
///
///  Copyright © 2016 Boeing. All rights reserved.
/// 
/// NOTICE:  All information contained herein is, and remains
/// the property of Boeing and its suppliers, if any.  
/// The intellectual and technical concepts contained
/// herein are proprietary to Boeing and its suppliers and may be 
/// covered by U.S. and Foreign Patents, patents in process, 
/// and are protected by trade secret or copyright law.
/// Dissemination of this information or reproduction of this material
/// is strictly forbidden unless prior written permission is obtained
/// from Boeing. 
///

///************************************************************************
/// Author           : Generated by ATMA ®
/// Revision History :  

using System.Collections.Generic;
using MCTR.DomainEntity;

namespace MCTR.BusinessInterface
{

    ///*********************************************************************
    ///<summary>
    ///IMctrCompRatesBusiness is an interface for the MctrCompRatesBusiness   
    ///which facilitates the dependency injection.
    ///</summary>
    public interface IMctrCompRatesBusiness
    {
        ///*************************************************************
        ///<summary>
        ///Method Name : crtetbl
        ///</summary>
        ///<param name = "mctrCompRates"></param>
        ///<returns>IEnumerable<mctrCompRates> </returns>
        IEnumerable<MctrCompRates> crtetbl(IEnumerable<MctrCompRates> mctrCompRates);
        ///*************************************************************
        ///<summary>
        ///Method Name : genericLovCall
        ///</summary>
        ///<param name = "mctrCompRates"></param>
        ///<returns>IEnumerable<mctrCompRates> </returns>
        IEnumerable<MctrCompRates> genericLovCall(IEnumerable<MctrCompRates> mctrCompRates);
        ///*************************************************************
        ///<summary>
        ///Method Name : getrgrateclov
        ///</summary>
        ///<param name = "mctrCompRates"></param>
        ///<returns>IEnumerable<mctrCompRates> </returns>
        IEnumerable<MctrCompRates> getrgrateclov(IEnumerable<MctrCompRates> mctrCompRates);
        ///*************************************************************
        ///<summary>
        ///Method Name : getrgrateilov
        ///</summary>
        ///<param name = "mctrCompRates"></param>
        ///<returns>IEnumerable<mctrCompRates> </returns>
        IEnumerable<MctrCompRates> getrgrateilov(IEnumerable<MctrCompRates> mctrCompRates);
        ///*************************************************************
        ///<summary>
        ///Method Name : mctrCompRatescascadeFlgWhenMouseClick
        ///</summary>
        ///<param name = "mctrCompRates"></param>
        ///<returns>IEnumerable<mctrCompRates> </returns>
        IEnumerable<MctrCompRates> mctrCompRatescascadeFlgWhenMouseClick(IEnumerable<MctrCompRates> mctrCompRates);
        ///*************************************************************
        ///<summary>
        ///Method Name : mctrCompRatescmponCdPostTextItem
        ///</summary>
        ///<param name = "mctrCompRates"></param>
        ///<returns>IEnumerable<mctrCompRates> </returns>
        IEnumerable<MctrCompRates> mctrCompRatescmponCdPostTextItem(IEnumerable<MctrCompRates> mctrCompRates);
        ///*************************************************************
        ///<summary>
        ///Method Name : mctrCompRatesKeyDelrec
        ///</summary>
        ///<param name = "mctrCompRates"></param>
        ///<returns>IEnumerable<mctrCompRates> </returns>
        IEnumerable<MctrCompRates> mctrCompRatesKeyDelrec(IEnumerable<MctrCompRates> mctrCompRates);
        ///*************************************************************
        ///<summary>
        ///Method Name : crtetbl
        ///</summary>
        ///<param name = "mctrcompratesonload"></param>
        ///<returns>IEnumerable<mctrCompRates> </returns>
        IEnumerable<MctrCompRates> mctrcompratesonload(IEnumerable<MctrCompRates> mctrCompRates);
        ///*************************************************************
        ///<summary>
        ///Method Name : crtetbl
        ///</summary>
        ///<param name = "mctrCompRatespoolOutputPostChange"></param>
        ///<returns>IEnumerable<mctrCompRates> </returns>
        IEnumerable<MctrCompRates> mctrCompRatespoolOutputPostChange(IEnumerable<MctrCompRates> mctrCompRates);
        ///*************************************************************
        ///<summary>
        ///Method Name : crtetbl
        ///</summary>
        ///<param name = "mctrCompRatesrscOutputPostChange"></param>
        ///<returns>IEnumerable<mctrCompRates> </returns>
        IEnumerable<MctrCompRates> mctrCompRatesrscOutputPostChange(IEnumerable<MctrCompRates> mctrCompRates);
        ///*************************************************************
        ///<summary>
        ///Method Name : crtetbl
        ///</summary>
        ///<param name = "mctrCompRatesWhenNewFormInstance"></param>
        ///<returns>IEnumerable<mctrCompRates> </returns>
        IEnumerable<MctrCompRates> mctrCompRatesWhenNewFormInstance(IEnumerable<MctrCompRates> mctrCompRates);
        ///*************************************************************
        ///<summary>
        ///Method Name : selectBlockbutCopyWhenButtonPressed
        ///</summary>
        ///<param name = "mctrCompRates"></param>
        ///<returns>IEnumerable<mctrCompRates> </returns>
        IEnumerable<MctrCompRates> selectBlockbutCopyWhenButtonPressed(IEnumerable<MctrCompRates> mctrCompRates);
        ///*************************************************************
        ///<summary>
        ///Method Name : compositeDelete
        ///</summary>
        ///<param name = "mctrCompRates"></param>
        ///<returns>IEnumerable<mctrCompRates> </returns>

        IEnumerable<MctrCompRates> compositeDelete(IEnumerable<MctrCompRates> mctrCompRates);

        ///*************************************************************
        ///<summary>
        ///Method Name : compositeInsert
        ///</summary>
        ///<param name = "mctrCompRates"></param>
        ///<returns>IEnumerable<mctrCompRates> </returns>
        IEnumerable<MctrCompRates> compositeInsert(IEnumerable<MctrCompRates> mctrCompRates);
    }

}


