///*************************************************************************
/// 
/// BOEING CONFIDENTIAL
/// ___________________
/// 
///  BOEING is a trademark of Boeing Management Company.
///
///  Copyright © 2016 Boeing. All rights reserved.
/// 
/// NOTICE:  All information contained herein is, and remains
/// the property of Boeing and its suppliers, if any.  
/// The intellectual and technical concepts contained
/// herein are proprietary to Boeing and its suppliers and may be 
/// covered by U.S. and Foreign Patents, patents in process, 
/// and are protected by trade secret or copyright law.
/// Dissemination of this information or reproduction of this material
/// is strictly forbidden unless prior written permission is obtained
/// from Boeing. 
///

///************************************************************************
/// Author           : Generated by ATMA ®
/// Revision History :  


using System;
using System.Collections.Generic;
using System.Linq;
using System.Net;
using System.Net.Http;
using System.Web.Http;
using log4net;

using MCTR.DomainEntity;
using MCTR.BusinessInterface;
using MCTR.Business;

namespace MCTR.RESTService.Controllers
{
    ///*********************************************************************
    ///<summary>
    ///MctrIncrRatesServiceController is a Rest controller implementation  
    ///which acts as a wrapper to the MctrIncrRatesBusiness implementation and
    /// provides api path for each methods exposed.
    ///</summary>

    public class MctrIncrRatesServiceController : ApiController
    {

         private readonly ILog logger;

        public MctrIncrRatesServiceController()
        {
            logger = LogManager.GetLogger(System.Reflection.MethodBase.GetCurrentMethod().DeclaringType);
        }

        ///*************************************************************
        ///<summary>
        ///Method Name : selectionbutRatesListWhenButtonPressed
        ///</summary>
        ///<param name = "MctrIncrRates"></param>
        ///<returns>IEnumerable<MctrIncrRates> </returns>

        [HttpPost]
        [ActionName("selectionbutRatesListWhenButtonPressed")]
        public HttpResponseMessage selectionbutRatesListWhenButtonPressed([FromBody]IEnumerable<MctrIncrRates> mctrIncrRates)
        {
            try
            {
                logger.Info("Executing MCTR.RESTService.Controllers.MctrIncrRatesService.selectionbutRatesListWhenButtonPressed() with request : " + mctrIncrRates);
                if (mctrIncrRates != null)
                {
                    IMctrIncrRatesBusiness mctrIncrRatesBusiness = new MctrIncrRatesBusiness();
                    var response = mctrIncrRatesBusiness.selectionbutRatesListWhenButtonPressed(mctrIncrRates);
                    logger.Info("Response received from MCTR.RESTService.Controllers.MctrIncrRatesService.selectionbutRatesListWhenButtonPressed()  : " + response);
                    return Request.CreateResponse(HttpStatusCode.OK, response);
                }
                return null;
            }
            catch (Exception e)
            {
                logger.Error("Error from MCTR.RESTService.Controllers.MctrIncrRatesService.selectionbutRatesListWhenButtonPressed() " + e.Message);
                throw;
            }
        }

        ///*************************************************************
        ///<summary>
        ///Method Name : mctrIncrRatesMctrIncrRatesOnLoad
        ///</summary>
        ///<param name = "MctrIncrRates"></param>
        ///<returns>IEnumerable<MctrIncrRates> </returns>

        [HttpPost]
        [ActionName("mctrIncrRatesMctrIncrRatesOnLoad")]
        public HttpResponseMessage mctrIncrRatesMctrIncrRatesOnLoad([FromBody]IEnumerable<MctrIncrRates> mctrIncrRates)
        {
            try
            {
                logger.Info("Executing MCTR.RESTService.Controllers.MctrIncrRatesService.mctrIncrRatesMctrIncrRatesOnLoad() with request : " + mctrIncrRates);
                if (mctrIncrRates != null)
                {
                    IMctrIncrRatesBusiness mctrIncrRatesBusiness = new MctrIncrRatesBusiness();
                    var response = mctrIncrRatesBusiness.mctrIncrRatesMctrIncrRatesOnLoad(mctrIncrRates);
                    logger.Info("Response received from  MCTR.RESTService.Controllers.MctrIncrRatesService.mctrIncrRatesMctrIncrRatesOnLoad() : " + response);
                    return Request.CreateResponse(HttpStatusCode.OK, response);
                }
                return null;
            }
            catch (Exception e)
            {
                logger.Error("Error from  MCTR.RESTService.Controllers.MctrIncrRatesService.mctrIncrRatesMctrIncrRatesOnLoad()" + e.Message);
                throw;
            }
        }
        ///*************************************************************
        ///<summary>
        ///Method Name : mctrIncrRatescmponCdPostTextItem
        ///</summary>
        ///<param name = "MctrIncrRates"></param>
        ///<returns>IEnumerable<MctrIncrRates> </returns>

        [HttpPost]
        [ActionName("mctrIncrRatescmponCdPostTextItem")]
        public HttpResponseMessage mctrIncrRatescmponCdPostTextItem([FromBody]IEnumerable<MctrIncrRates> mctrIncrRates)
        {
            try
            {
                logger.Info("Executing MCTR.RESTService.Controllers.MctrIncrRatesService.mctrIncrRatescmponCdPostTextItem() with request : " + mctrIncrRates);
                if (mctrIncrRates != null)
                {
                    IMctrIncrRatesBusiness mctrIncrRatesBusiness = new MctrIncrRatesBusiness();
                    var response = mctrIncrRatesBusiness.mctrIncrRatescmponCdPostTextItem(mctrIncrRates);
                    logger.Info("Response received fromMCTR.RESTService.Controllers.MctrIncrRatesService.mctrIncrRatescmponCdPostTextItem(): " + response);
                    return Request.CreateResponse(HttpStatusCode.OK, response);
                }
                return null;
            }
            catch (Exception e)
            {

                logger.Error("Error from MCTR.RESTService.Controllers.MctrIncrRatesService.mctrIncrRatescmponCdPostTextItem()" + e.Message);
                return Request.CreateErrorResponse(HttpStatusCode.InternalServerError, e.Message);
            }
        }

        ///*************************************************************
        ///<summary>
        ///Method Name : mctrIncrRatescascadeFlgWhenMouseClick
        ///</summary>
        ///<param name = "MctrIncrRates"></param>
        ///<returns>IEnumerable<MctrIncrRates> </returns>

        [HttpPost]
        [ActionName("mctrIncrRatescascadeFlgWhenMouseClick")]
        public HttpResponseMessage mctrIncrRatescascadeFlgWhenMouseClick([FromBody]IEnumerable<MctrIncrRates> mctrIncrRates)
        {
            try
            {
                logger.Info("Executing MCTR.RESTService.Controllers.MctrIncrRatesService.mctrIncrRatescascadeFlgWhenMouseClick() with request : " + mctrIncrRates);
                if (mctrIncrRates != null)
                {
                    IMctrIncrRatesBusiness mctrIncrRatesBusiness = new MctrIncrRatesBusiness();
                    var response = mctrIncrRatesBusiness.mctrIncrRatescascadeFlgWhenMouseClick(mctrIncrRates);
                    logger.Info("Response received from MCTR.RESTService.Controllers.MctrIncrRatesService.mctrIncrRatescascadeFlgWhenMouseClick() : " + response);
                    return Request.CreateResponse(HttpStatusCode.OK, response);
                }
                return null;
            }
            catch (Exception e)
            {
                logger.Error("Error from MCTR.RESTService.Controllers.MctrIncrRatesService.mctrIncrRatescascadeFlgWhenMouseClick()" + e.Message);
                throw;
            }
        }

        ///*************************************************************
        ///<summary>
        ///Method Name : mctrIncrRatesPreUpdate
        ///</summary>
        ///<param name = "MctrIncrRates"></param>
        ///<returns>IEnumerable<MctrIncrRates> </returns>

        [HttpPost]
        [ActionName("mctrIncrRatesPreUpdate")]
        public HttpResponseMessage mctrIncrRatesPreUpdate([FromBody]IEnumerable<MctrIncrRates> mctrIncrRates)
        {
            try
            {
                logger.Info("Executing MCTR.RESTService.Controllers.MctrIncrRatesService.mctrIncrRatesPreUpdate() with request : " + mctrIncrRates);
                if (mctrIncrRates != null)
                {
                    IMctrIncrRatesBusiness mctrIncrRatesBusiness = new MctrIncrRatesBusiness();
                    var response = mctrIncrRatesBusiness.mctrIncrRatesPreUpdate(mctrIncrRates);
                    logger.Info("Response received from  MCTR.RESTService.Controllers.MctrIncrRatesService.mctrIncrRatesPreUpdate() : " + response);
                    return Request.CreateResponse(HttpStatusCode.OK, response);
                }
                return null;
            }
            catch (Exception e)
            {
                logger.Error("Error from MCTR.RESTService.Controllers.MctrIncrRatesService.mctrIncrRatesPreUpdate()" + e.Message);
                throw;
            }
        }

        ///*************************************************************
        ///<summary>
        ///Method Name : mctrIncrRatesPostQuery
        ///</summary>
        ///<param name = "MctrIncrRates"></param>
        ///<returns>IEnumerable<MctrIncrRates> </returns>

        [HttpPost]
        [ActionName("mctrIncrRatesPostQuery")]
        public HttpResponseMessage mctrIncrRatesPostQuery([FromBody]IEnumerable<MctrIncrRates> mctrIncrRates)
        {
            try
            {
                if (mctrIncrRates != null)
                {
                    logger.Info("Executing MCTR.RESTService.Controllers.MctrIncrRatesService.mctrIncrRatesPostQuery() with request : " + mctrIncrRates);
                    IMctrIncrRatesBusiness mctrIncrRatesBusiness = new MctrIncrRatesBusiness();
                    var response = mctrIncrRatesBusiness.mctrIncrRatesPostQuery(mctrIncrRates);
                    logger.Info("Response received from MCTR.RESTService.Controllers.MctrIncrRatesService.mctrIncrRatesPostQuery() : " + response);
                    return Request.CreateResponse(HttpStatusCode.OK, response);
                }
                return null;
            }
            catch (Exception e)
            {
                logger.Error("Error from MCTR.RESTService.Controllers.MctrIncrRatesService.mctrIncrRatesPostQuery()" + e.Message);
                throw;
            }
        }

        ///*************************************************************
        ///<summary>
        ///Method Name : webutildummyWhenButtonPressed
        ///</summary>
        ///<param name = "MctrIncrRates"></param>
        ///<returns>IEnumerable<MctrIncrRates> </returns>

        [HttpPost]
        [ActionName("webutildummyWhenButtonPressed")]
        public HttpResponseMessage webutildummyWhenButtonPressed([FromBody]IEnumerable<MctrIncrRates> mctrIncrRates)
        {
            logger.Info("Executing MCTR.RESTService.Controllers.MctrIncrRatesServicewebutildummyWhenButtonPressed() with request : " + mctrIncrRates);
            if (mctrIncrRates != null)
            {
                IMctrIncrRatesBusiness mctrIncrRatesBusiness = new MctrIncrRatesBusiness();
                var response = mctrIncrRatesBusiness.webutildummyWhenButtonPressed(mctrIncrRates);
                logger.Info("Response received from mctrIncrRatesBusiness.webutildummyWhenButtonPressed() : " + response);
                return Request.CreateResponse(HttpStatusCode.OK, response);
            }
            return null;
        }

        ///*************************************************************
        ///<summary>
        ///Method Name : webutilwebutilClientinfoFunctionsWhenCustomItemEvent
        ///</summary>
        ///<param name = "MctrIncrRates"></param>
        ///<returns>IEnumerable<MctrIncrRates> </returns>

        [HttpPost]
        [ActionName("webutilwebutilClientinfoFunctionsWhenCustomItemEvent")]
        public HttpResponseMessage webutilwebutilClientinfoFunctionsWhenCustomItemEvent([FromBody]IEnumerable<MctrIncrRates> mctrIncrRates)
        {
            logger.Info("Executing MCTR.RESTService.Controllers.MctrIncrRatesServicewebutilwebutilClientinfoFunctionsWhenCustomItemEvent() with request : " + mctrIncrRates);
            if (mctrIncrRates != null)
            {
                IMctrIncrRatesBusiness mctrIncrRatesBusiness = new MctrIncrRatesBusiness();
                var response = mctrIncrRatesBusiness.webutilwebutilClientinfoFunctionsWhenCustomItemEvent(mctrIncrRates);
                logger.Info("Response received from mctrIncrRatesBusiness.webutilwebutilClientinfoFunctionsWhenCustomItemEvent() : " + response);
                return Request.CreateResponse(HttpStatusCode.OK, response);
            }
            return null;
        }

        ///*************************************************************
        ///<summary>
        ///Method Name : webutilwebutilFileFunctionsWhenCustomItemEvent
        ///</summary>
        ///<param name = "MctrIncrRates"></param>
        ///<returns>IEnumerable<MctrIncrRates> </returns>

        [HttpPost]
        [ActionName("webutilwebutilFileFunctionsWhenCustomItemEvent")]
        public HttpResponseMessage webutilwebutilFileFunctionsWhenCustomItemEvent([FromBody]IEnumerable<MctrIncrRates> mctrIncrRates)
        {
            logger.Info("Executing MCTR.RESTService.Controllers.MctrIncrRatesServicewebutilwebutilFileFunctionsWhenCustomItemEvent() with request : " + mctrIncrRates);
            if (mctrIncrRates != null)
            {
                IMctrIncrRatesBusiness mctrIncrRatesBusiness = new MctrIncrRatesBusiness();
                var response = mctrIncrRatesBusiness.webutilwebutilFileFunctionsWhenCustomItemEvent(mctrIncrRates);
                logger.Info("Response received from mctrIncrRatesBusiness.webutilwebutilFileFunctionsWhenCustomItemEvent() : " + response);
                return Request.CreateResponse(HttpStatusCode.OK, response);
            }
            return null;
        }

        ///*************************************************************
        ///<summary>
        ///Method Name : webutilwebutilHostFunctionsWhenCustomItemEvent
        ///</summary>
        ///<param name = "MctrIncrRates"></param>
        ///<returns>IEnumerable<MctrIncrRates> </returns>

        [HttpPost]
        [ActionName("webutilwebutilHostFunctionsWhenCustomItemEvent")]
        public HttpResponseMessage webutilwebutilHostFunctionsWhenCustomItemEvent([FromBody]IEnumerable<MctrIncrRates> mctrIncrRates)
        {
            logger.Info("Executing MCTR.RESTService.Controllers.MctrIncrRatesServicewebutilwebutilHostFunctionsWhenCustomItemEvent() with request : " + mctrIncrRates);
            if (mctrIncrRates != null)
            {
                IMctrIncrRatesBusiness mctrIncrRatesBusiness = new MctrIncrRatesBusiness();
                var response = mctrIncrRatesBusiness.webutilwebutilHostFunctionsWhenCustomItemEvent(mctrIncrRates);
                logger.Info("Response received from mctrIncrRatesBusiness.webutilwebutilHostFunctionsWhenCustomItemEvent() : " + response);
                return Request.CreateResponse(HttpStatusCode.OK, response);
            }
            return null;
        }

        ///*************************************************************
        ///<summary>
        ///Method Name : webutilwebutilSessionFunctionsWhenCustomItemEvent
        ///</summary>
        ///<param name = "MctrIncrRates"></param>
        ///<returns>IEnumerable<MctrIncrRates> </returns>

        [HttpPost]
        [ActionName("webutilwebutilSessionFunctionsWhenCustomItemEvent")]
        public HttpResponseMessage webutilwebutilSessionFunctionsWhenCustomItemEvent([FromBody]IEnumerable<MctrIncrRates> mctrIncrRates)
        {
            logger.Info("Executing MCTR.RESTService.Controllers.MctrIncrRatesServicewebutilwebutilSessionFunctionsWhenCustomItemEvent() with request : " + mctrIncrRates);
            if (mctrIncrRates != null)
            {
                IMctrIncrRatesBusiness mctrIncrRatesBusiness = new MctrIncrRatesBusiness();
                var response = mctrIncrRatesBusiness.webutilwebutilSessionFunctionsWhenCustomItemEvent(mctrIncrRates);
                logger.Info("Response received from mctrIncrRatesBusiness.webutilwebutilSessionFunctionsWhenCustomItemEvent() : " + response);
                return Request.CreateResponse(HttpStatusCode.OK, response);
            }
            return null;
        }

        ///*************************************************************
        ///<summary>
        ///Method Name : webutilwebutilFiletransferFunctionsWhenCustomItemEvent
        ///</summary>
        ///<param name = "MctrIncrRates"></param>
        ///<returns>IEnumerable<MctrIncrRates> </returns>

        [HttpPost]
        [ActionName("webutilwebutilFiletransferFunctionsWhenCustomItemEvent")]
        public HttpResponseMessage webutilwebutilFiletransferFunctionsWhenCustomItemEvent([FromBody]IEnumerable<MctrIncrRates> mctrIncrRates)
        {
            logger.Info("Executing MCTR.RESTService.Controllers.MctrIncrRatesServicewebutilwebutilFiletransferFunctionsWhenCustomItemEvent() with request : " + mctrIncrRates);
            if (mctrIncrRates != null)
            {
                IMctrIncrRatesBusiness mctrIncrRatesBusiness = new MctrIncrRatesBusiness();
                var response = mctrIncrRatesBusiness.webutilwebutilFiletransferFunctionsWhenCustomItemEvent(mctrIncrRates);
                logger.Info("Response received from mctrIncrRatesBusiness.webutilwebutilFiletransferFunctionsWhenCustomItemEvent() : " + response);
                return Request.CreateResponse(HttpStatusCode.OK, response);
            }
            return null;
        }

        ///*************************************************************
        ///<summary>
        ///Method Name : webutilwebutilOleFunctionsWhenCustomItemEvent
        ///</summary>
        ///<param name = "MctrIncrRates"></param>
        ///<returns>IEnumerable<MctrIncrRates> </returns>

        [HttpPost]
        [ActionName("webutilwebutilOleFunctionsWhenCustomItemEvent")]
        public HttpResponseMessage webutilwebutilOleFunctionsWhenCustomItemEvent([FromBody]IEnumerable<MctrIncrRates> mctrIncrRates)
        {
            logger.Info("Executing MCTR.RESTService.Controllers.MctrIncrRatesServicewebutilwebutilOleFunctionsWhenCustomItemEvent() with request : " + mctrIncrRates);
            if (mctrIncrRates != null)
            {
                IMctrIncrRatesBusiness mctrIncrRatesBusiness = new MctrIncrRatesBusiness();
                var response = mctrIncrRatesBusiness.webutilwebutilOleFunctionsWhenCustomItemEvent(mctrIncrRates);
                logger.Info("Response received from mctrIncrRatesBusiness.webutilwebutilOleFunctionsWhenCustomItemEvent() : " + response);
                return Request.CreateResponse(HttpStatusCode.OK, response);
            }
            return null;
        }

        ///*************************************************************
        ///<summary>
        ///Method Name : webutilwebutilCApiFunctionsWhenCustomItemEvent
        ///</summary>
        ///<param name = "MctrIncrRates"></param>
        ///<returns>IEnumerable<MctrIncrRates> </returns>

        [HttpPost]
        [ActionName("webutilwebutilCApiFunctionsWhenCustomItemEvent")]
        public HttpResponseMessage webutilwebutilCApiFunctionsWhenCustomItemEvent([FromBody]IEnumerable<MctrIncrRates> mctrIncrRates)
        {
            logger.Info("Executing MCTR.RESTService.Controllers.MctrIncrRatesServicewebutilwebutilCApiFunctionsWhenCustomItemEvent() with request : " + mctrIncrRates);
            if (mctrIncrRates != null)
            {
                IMctrIncrRatesBusiness mctrIncrRatesBusiness = new MctrIncrRatesBusiness();
                var response = mctrIncrRatesBusiness.webutilwebutilCApiFunctionsWhenCustomItemEvent(mctrIncrRates);
                logger.Info("Response received from mctrIncrRatesBusiness.webutilwebutilCApiFunctionsWhenCustomItemEvent() : " + response);
                return Request.CreateResponse(HttpStatusCode.OK, response);
            }
            return null;
        }

        ///*************************************************************
        ///<summary>
        ///Method Name : webutilwebutilBrowserFunctionsWhenCustomItemEvent
        ///</summary>
        ///<param name = "MctrIncrRates"></param>
        ///<returns>IEnumerable<MctrIncrRates> </returns>

        [HttpPost]
        [ActionName("webutilwebutilBrowserFunctionsWhenCustomItemEvent")]
        public HttpResponseMessage webutilwebutilBrowserFunctionsWhenCustomItemEvent([FromBody]IEnumerable<MctrIncrRates> mctrIncrRates)
        {
            logger.Info("Executing MCTR.RESTService.Controllers.MctrIncrRatesServicewebutilwebutilBrowserFunctionsWhenCustomItemEvent() with request : " + mctrIncrRates);
            if (mctrIncrRates != null)
            {
                IMctrIncrRatesBusiness mctrIncrRatesBusiness = new MctrIncrRatesBusiness();
                var response = mctrIncrRatesBusiness.webutilwebutilBrowserFunctionsWhenCustomItemEvent(mctrIncrRates);
                logger.Info("Response received from mctrIncrRatesBusiness.webutilwebutilBrowserFunctionsWhenCustomItemEvent() : " + response);
                return Request.CreateResponse(HttpStatusCode.OK, response);
            }
            return null;
        }

        ///*************************************************************
        ///<summary>
        ///Method Name : mctrIncrRatesWhenNewFormInstance
        ///</summary>
        ///<param name = "MctrIncrRates"></param>
        ///<returns>IEnumerable<MctrIncrRates> </returns>

        [HttpGet]
        [ActionName("mctrIncrRatesWhenNewFormInstance")]
        public HttpResponseMessage mctrIncrRatesWhenNewFormInstance()
        {
            try
            {
                logger.Info("Executing MCTR.RESTService.Controllers.MctrIncrRatesService.mctrIncrRatesWhenNewFormInstance()with request : " );
                IMctrIncrRatesBusiness mctrIncrRatesBusiness = new MctrIncrRatesBusiness();
                var response = mctrIncrRatesBusiness.mctrIncrRatesWhenNewFormInstance();
                logger.Info("Response received from  MCTR.RESTService.Controllers.MctrIncrRatesService.mctrIncrRatesWhenNewFormInstance() : " + response);
                return Request.CreateResponse(HttpStatusCode.OK, response);
            }
            catch (Exception e)
            {
                logger.Error("Error from MCTR.RESTService.Controllers.MctrIncrRatesService.mctrIncrRatesWhenNewFormInstance()" + e.Message);
                throw;
            }
        }

        ///*************************************************************
        ///<summary>
        ///Method Name : mctrIncrRatesOnError
        ///</summary>
        ///<param name = "MctrIncrRates"></param>
        ///<returns>IEnumerable<MctrIncrRates> </returns>

        [HttpPost]
        [ActionName("mctrIncrRatesOnError")]
        public HttpResponseMessage mctrIncrRatesOnError([FromBody]IEnumerable<MctrIncrRates> mctrIncrRates)
        {
            try
            {
                logger.Info("Executing  MCTR.RESTService.Controllers.MctrIncrRatesService.mctrIncrRatesOnError() with request : " + mctrIncrRates);
                if (mctrIncrRates != null)
                {
                    IMctrIncrRatesBusiness mctrIncrRatesBusiness = new MctrIncrRatesBusiness();
                    var response = mctrIncrRatesBusiness.mctrIncrRatesOnError(mctrIncrRates);
                    logger.Info("Response received from MCTR.RESTService.Controllers.MctrIncrRatesService.mctrIncrRatesOnError() : " + response);
                    return Request.CreateResponse(HttpStatusCode.OK, response);
                }
                return null;
            }
            catch (Exception e)
            {

                logger.Error("Error from MCTR.RESTService.Controllers.MctrIncrRatesService.mctrIncrRatesOnError()" + e.Message);
                throw;
            }
        }

        ///*************************************************************
        ///<summary>
        ///Method Name : mctrIncrRatesWhenWindowClosed
        ///</summary>
        ///<param name = "MctrIncrRates"></param>
        ///<returns>IEnumerable<MctrIncrRates> </returns>

        [HttpPost]
        [ActionName("mctrIncrRatesWhenWindowClosed")]
        public HttpResponseMessage mctrIncrRatesWhenWindowClosed([FromBody]IEnumerable<MctrIncrRates> mctrIncrRates)
        {
            try
            {
                logger.Info("Executing MCTR.RESTService.Controllers.MctrIncrRatesService.mctrIncrRatesWhenWindowClosed() with request : " + mctrIncrRates);
                if (mctrIncrRates != null)
                {
                    IMctrIncrRatesBusiness mctrIncrRatesBusiness = new MctrIncrRatesBusiness();
                    var response = mctrIncrRatesBusiness.mctrIncrRatesWhenWindowClosed(mctrIncrRates);
                    logger.Info("Response received from MCTR.RESTService.Controllers.MctrIncrRatesService.mctrIncrRatesWhenWindowClosed() : " + response);
                    return Request.CreateResponse(HttpStatusCode.OK, response);
                }
                return null;
            }
            catch (Exception e)
            {
                logger.Error("Error from MCTR.RESTService.Controllers.MctrIncrRatesService.mctrIncrRatesWhenWindowClosed()" + e.Message);
                throw;
            }
        }
        


        ///*************************************************************
        ///<summary>
        ///Method Name : PostStatusDirect
        ///</summary>
        ///<param name = "MctrIncrRates"></param>
        ///<returns>HttpResponseMessage</returns>
        [HttpPost]
        [ActionName("Create")]
        public HttpResponseMessage Create([FromBody]IEnumerable<MctrIncrRates> mctrIncrRates)
        {
            try
            {
                IMctrIncrRatesBusiness mctrincBusiness = new MctrIncrRatesBusiness();
                logger.Info("Executing statusBusiness.PostStatusDirect()");
                var response = mctrincBusiness.Create(mctrIncrRates);
                logger.Info("Response received from MCTR.RESTService.Controllers.MctrIncrRatesService.PostStatusDirect() : " + response);
                return Request.CreateResponse(HttpStatusCode.OK, response);
            }
            catch (Exception e)
            {
                logger.Error("Error from MCTR.RESTService.Controllers.MctrIncrRatesService." + e.Message);
                return Request.CreateErrorResponse(HttpStatusCode.InternalServerError, e.Message);
            }
        }
        ///*************************************************************
        ///<summary>
        ///Method Name : PostStatusDelete
        ///</summary>
        ///<param name = "MctrIncrRates"></param>
        ///<returns>HttpResponseMessage</returns>
        [HttpPost]
        [ActionName("DeleteIncr")]
        public HttpResponseMessage PostStatusDelete([FromBody]IEnumerable<MctrIncrRates> mctrIncrRates)
        {
            try
            {
                IMctrIncrRatesBusiness mctrincBusiness = new MctrIncrRatesBusiness();
                logger.Info("Executing statusBusiness.PostStatusDelete()");
                var response = mctrincBusiness.DeleteStatus(mctrIncrRates);
                logger.Info("Response received from statusBusiness.PostStatusDelete() : " + response);
                return Request.CreateResponse(HttpStatusCode.OK, response);
            }
            catch (Exception e)
            {
                logger.Error("Error from MCTR.RESTService: " + e.Message);
                return Request.CreateErrorResponse(HttpStatusCode.InternalServerError, e.Message);
            }
        }

        ///*************************************************************
        ///<summary>
        ///Method Name : PostStatusEdit
        ///</summary>
        ///<param name = "MctrIncrRates"></param>
        ///<returns>HttpResponseMessage</returns>
        [HttpPost]
        [ActionName("EditIncr")]
        public HttpResponseMessage PostStatusEdit([FromBody]IEnumerable<IncrRateEdit> mctrIncrRates)
        {
            try
            {
                IMctrIncrRatesBusiness mctrincBusiness = new MctrIncrRatesBusiness();
                logger.Info("Executing statusBusiness.PostStatusEdit()");
                var response = mctrincBusiness.EditStatus(mctrIncrRates);
                logger.Info("Response received from statusBusiness.PostStatusEdit() : " + response);
                return Request.CreateResponse(HttpStatusCode.OK, response);
            }
            catch (Exception e)
            {
                logger.Error("Error from MCTR.RESTService: " + e.Message);
                return Request.CreateErrorResponse(HttpStatusCode.InternalServerError, e.Message);
            }
        }

    }

}

