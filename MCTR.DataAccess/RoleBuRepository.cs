///*************************************************************************
/// 
/// BOEING CONFIDENTIAL
/// ___________________
/// 
///  BOEING is a trademark of Boeing Management Company.
///
///  Copyright © 2016 Boeing. All rights reserved.
/// 
/// NOTICE:  All information contained herein is, and remains
/// the property of Boeing and its suppliers, if any.  
/// The intellectual and technical concepts contained
/// herein are proprietary to Boeing and its suppliers and may be 
/// covered by U.S. and Foreign Patents, patents in process, 
/// and are protected by trade secret or copyright law.
/// Dissemination of this information or reproduction of this material
/// is strictly forbidden unless prior written permission is obtained
/// from Boeing. 
///

///************************************************************************
/// Author           : Generated by ATMA ®
/// Revision History :

using log4net;
using MCTR.DataAccessInterface;
using MCTR.DomainEntity;
using MCTR.DataEntity;
using Oracle.ManagedDataAccess.Client;
using System;
using System.Collections.Generic;
using System.Data;
using System.Linq;
using AutoMapper;

namespace MCTR.DataAccess
{
    ///*********************************************************************
    ///<summary>
    ///RoleBuRepository is a data access implementation which holds all 
    ///the data access logic in it.
    ///</summary>
    public class RoleBuRepository : BaseRepository, IRoleBuRepository
    {

        private readonly ILog logger = null;
        IEnumerable<RoleBu> responseList = new List<RoleBu>();
        RoleBu obj = new RoleBu();
        public RoleBuRepository()
        {
            logger = LogManager.GetLogger(System.Reflection.MethodBase.GetCurrentMethod().DeclaringType);
        }
        ///*************************************************************
        ///<summary>
        ///Method Name : rolebuonload
        ///</summary>
        ///<param name = "roleBu"></param>
        ///<returns>IEnumerable<roleBu> </returns>

        public IEnumerable<RoleBu> rolebuonload(IEnumerable<RoleBu> roleBu)
        {
            logger.Debug("Executing MCTR.DataAccess.RoleBuRepository.rolebuonload with input : " + roleBu);
            var response = entities.Database.SqlQuery<RoleBu>("select * from MCTR_ROLE_BU where bems =" + roleBu.First().BEMS).ToList();
           // var list = AutoMapper.Mapper.Map<IEnumerable<MCTR_ROLE_BU>, IEnumerable<RoleBu>>(response);
            return response;
        }
        ///*************************************************************
        ///<summary>
        ///Method Name : roleBuopenLOV
        ///</summary>
        ///<param name = "roleBu"></param>
        ///<returns>IEnumerable<roleBu> </returns>

        public IEnumerable<MctrBusUnit> roleBuopenLOV()
        {
            logger.Debug("Executing MCTR.DataAccess.RoleBuRepository.roleBuopenLOV");
             var response = entities.Database.SqlQuery<MctrBusUnit>("select a.group_cd7, a.business_unit, a.eff_status, a.descr from mctr_bus_unit_v a where exists (select business_unit from mctr_bu_profile where business_unit = a.business_unit) union  select distinct  b.group_cd7, '**', ' ', 'all business units in group'  from mctr_bus_unit_v b where exists (select business_unit from mctr_bu_profile where business_unit = b.business_unit) order by group_cd7, business_unit").ToList();
           
            return response;
        }
        ///*************************************************************
        ///<summary>
        ///Method Name : roleBuPostQuery
        ///</summary>
        ///<param name = "roleBu"></param>
        ///<returns>IEnumerable<roleBu> </returns>

        public IEnumerable<RoleBu> roleBuPostQuery(IEnumerable<RoleBu> roleBu)
        {

            List<RoleBu> robj = new List<RoleBu>();
            MCTR_ROLE role = new MCTR_ROLE();
            logger.Debug("Executing MCTR.DataAccess.RoleBuRepository.roleBuPostQuery with input : " + roleBu);
            try
            {
                foreach (var item in roleBu)
                {
                    obj.BEMS = item.BEMS;
                    obj.BUSINESS_UNIT = item.BUSINESS_UNIT;
                    obj.GROUP_CD7 = item.GROUP_CD7;
                    var response = entities.MCTR_ROLE.SqlQuery("select *  from  mctr_role where bems =" + obj.BEMS).ToList<MCTR_ROLE>();
                    if (response.Capacity != 0)
                    {
                        role = response.First<MCTR_ROLE>();
                        obj.MCTR_ROLE = AutoMapper.Mapper.Map<MCTR_ROLE, Role>(role);
                    }
                    robj.Add(obj);
                }
                return robj;
            }
            catch(Exception e)
            {
                throw e;
            }
        }

        ///*************************************************************
        ///<summary>
        ///Method Name : roleBuPreRecord
        ///</summary>
        ///<param name = "roleBu"></param>
        ///<returns>IEnumerable<roleBu> </returns>

        public IEnumerable<RoleBu> roleBuPreRecord(IEnumerable<RoleBu> roleBu)
        {

            logger.Debug("Executing MCTR.DataAccess.RoleBuRepository.rolebuonload with input : " + roleBu);
            //TODO: Move the Data Access logic from the Business implementation class to here.
            return roleBu;
        }

        ///*************************************************************
        ///<summary>
        ///Method Name : roleBuPostDelete
        ///</summary>
        ///<param name = "roleBu"></param>
        ///<returns>IEnumerable<roleBu> </returns>

        public IEnumerable<RoleBu> roleBuPostDelete(IEnumerable<RoleBu> roleBu)
        {
            RoleBu recObj = roleBu.First<RoleBu>();
            List<RoleBu> msgRespList = new List<RoleBu>();
            RoleBu mObj = new RoleBu();
            OracleParameter[] parameter = new OracleParameter[7];
            logger.Debug("Executing MCTR.DataAccess.RoleBuRepository.roleBuPostDelete with input : " + roleBu);
            try
            {
                var TargetRoleBuToUpdate = Mapper.DynamicMap<IEnumerable<RoleBu>, IEnumerable<MCTR_ROLE_BU>>(roleBu);
                foreach (var roleBuDelete in TargetRoleBuToUpdate)
                {
                    entities.MCTR_ROLE_BU.Attach(roleBuDelete);
                    entities.MCTR_ROLE_BU.Remove(roleBuDelete);
                    entities.SaveChanges();
                }
                Role previous = new Role();
                var resp = entities.MCTR_ROLE.SqlQuery("select * from MCTR_OWNER.MCTR_ROLE where BEMS=" + roleBu.First().sessionBems).ToList<MCTR_ROLE>();
                var UsrDetails = AutoMapper.Mapper.Map<MCTR_ROLE, Role>(resp.First());
                string query = "INSERT INTO MCTR_ROLE_CHG_LOG(LOG_DATE,LOG_BEMS,LOG_ACTION,ROLE_BEMS,FIELD_CHGD,FIELD_BEFORE,FIELD_AFTER) VALUES(current_timestamp,:0,:1,:2,:3,:4,:5);";
                parameter = new OracleParameter[6];
                parameter[0] = new OracleParameter(":LOG_BEMS", OracleDbType.Varchar2, UsrDetails.BEMS, ParameterDirection.Input);
                parameter[1] = new OracleParameter(":LOG_ACTION", OracleDbType.Varchar2, "DEL", ParameterDirection.Input);
                parameter[2] = new OracleParameter(":ROLE_BEMS", OracleDbType.Varchar2, UsrDetails.BEMS_ADMIN, ParameterDirection.Input);
                parameter[3] = new OracleParameter(":FIELD_CHGD", OracleDbType.Varchar2, "GROUP CODE", ParameterDirection.Input);
                parameter[4] = new OracleParameter(":FIELD_BEFORE", OracleDbType.Varchar2, null, ParameterDirection.Input);
                parameter[5] = new OracleParameter(":FIELD_AFTER", OracleDbType.Varchar2, roleBu.First().GROUP_CD7, ParameterDirection.Input);
                int result = entities.Database.ExecuteSqlCommand("BEGIN " + query + " END;", parameter);

                string query1 = "INSERT INTO MCTR_ROLE_CHG_LOG(LOG_DATE,LOG_BEMS,LOG_ACTION,ROLE_BEMS,FIELD_CHGD,FIELD_BEFORE,FIELD_AFTER) VALUES(current_timestamp,:0,:1,:2,:3,:4,:5);";
                parameter = new OracleParameter[6];
                parameter[0] = new OracleParameter(":LOG_BEMS", OracleDbType.Varchar2, UsrDetails.BEMS, ParameterDirection.Input);
                parameter[1] = new OracleParameter(":LOG_ACTION", OracleDbType.Varchar2, "DEL", ParameterDirection.Input);
                parameter[2] = new OracleParameter(":ROLE_BEMS", OracleDbType.Varchar2, UsrDetails.BEMS_ADMIN, ParameterDirection.Input);
                parameter[3] = new OracleParameter(":FIELD_CHGD", OracleDbType.Varchar2, "BUSINESS UNIT", ParameterDirection.Input);
                parameter[4] = new OracleParameter(":FIELD_BEFORE", OracleDbType.Varchar2, null, ParameterDirection.Input);
                parameter[5] = new OracleParameter(":FIELD_AFTER", OracleDbType.Varchar2, roleBu.First().BUSINESS_UNIT, ParameterDirection.Input);
                int result1 = entities.Database.ExecuteSqlCommand("BEGIN " + query1 + " END;", parameter);

                //string query2 = "UPDATE MCTR_ROLE_BU SET  GROUP_CD7= :1, BUSINESS_UNIT=:2 WHERE BEMS=:0 ; ";
                //parameter = new OracleParameter[3];
                //parameter[0] = new OracleParameter(":BEMS", OracleDbType.Varchar2, UsrDetails.BEMS, ParameterDirection.Input);
                //parameter[1] = new OracleParameter(":GROUP_CD7", OracleDbType.Varchar2, roleBu.First().GROUP_CD7, ParameterDirection.Input);
                //parameter[2] = new OracleParameter(":BUSINESS_UNIT", OracleDbType.Varchar2, roleBu.First().BUSINESS_UNIT, ParameterDirection.Input);
                //int result2 = entities.Database.ExecuteSqlCommand("BEGIN " + query2 + " END;", parameter);



                string query2 = "update mctr_role set date_update = CURRENT_TIMESTAMP, bems_admin =:1 where bems =:0 ;";
                parameter = new OracleParameter[2];
                parameter[0] = new OracleParameter(":bems_admin", OracleDbType.Varchar2, roleBu.First().sessionBems, ParameterDirection.Input);
                parameter[1] = new OracleParameter(":bems", OracleDbType.Varchar2, roleBu.First().BEMS, ParameterDirection.Input);
                int result2 = entities.Database.ExecuteSqlCommand("BEGIN " + query2 + " END;", parameter);

                if (result == -1 && result1 == -1 && result2==-1)
                {
                    msgRespList.Add(recObj);
                    return msgRespList;
                }
                else
                {
                    throw new Exception();
                }

            }
            catch (Exception ex)
            {
                throw ex;
            }
        }
        ///*************************************************************
        ///<summary>
        ///Method Name : roleBuPostInsert
        ///</summary>
        ///<param name = "roleBu"></param>
        ///<returns>IEnumerable<roleBu> </returns>

        public IEnumerable<RoleBu> roleBuPostInsert(IEnumerable<RoleBu> roleBu)
        {
            List<RoleBu> msgRespList = new List<RoleBu>();
            RoleBu recObj = roleBu.First<RoleBu>();
            OracleParameter[] parameter = new OracleParameter[10];
            logger.Debug("Executing MCTR.DataAccess.RoleBuRepository.roleBuPostInsert with input : " + roleBu);
            try
            {
                var TargetRoleBuToInsert = Mapper.DynamicMap<IEnumerable<RoleBu>, IEnumerable<MCTR_ROLE_BU>>(roleBu);
                foreach (var roleBuInsert in TargetRoleBuToInsert)
                {
                    entities.MCTR_ROLE_BU.Add(roleBuInsert);
                    entities.SaveChanges();
                }

                Role previous = new Role();
                var resp = entities.MCTR_ROLE.SqlQuery("select * from MCTR_OWNER.MCTR_ROLE where BEMS=" + roleBu.First().sessionBems).ToList<MCTR_ROLE>();
                var UsrDetails = AutoMapper.Mapper.DynamicMap<MCTR_ROLE, Role>(resp.First());
                string query = "INSERT INTO MCTR_ROLE_CHG_LOG(LOG_DATE,LOG_BEMS,LOG_ACTION,ROLE_BEMS,FIELD_CHGD,FIELD_BEFORE,FIELD_AFTER)VALUES(:0,:1,:2,:3,:4,:5,:6);";
                parameter[0] = new OracleParameter(":LOG_DATE", OracleDbType.Varchar2, DateTime.Now.ToString("dd-MMM-yy"), ParameterDirection.Input);
                parameter[1] = new OracleParameter(":LOG_BEMS", OracleDbType.Varchar2, UsrDetails.BEMS, ParameterDirection.Input);
                parameter[2] = new OracleParameter(":LOG_ACTION", OracleDbType.Varchar2, "ADD", ParameterDirection.Input);
                parameter[3] = new OracleParameter(":ROLE_BEMS", OracleDbType.Varchar2, UsrDetails.BEMS_ADMIN, ParameterDirection.Input);
                parameter[4] = new OracleParameter(":FIELD_CHGD", OracleDbType.Varchar2, "GROUP CODE", ParameterDirection.Input);
                parameter[5] = new OracleParameter(":FIELD_BEFORE", OracleDbType.Varchar2,null, ParameterDirection.Input);
                parameter[6] = new OracleParameter(":FIELD_AFTER", OracleDbType.Varchar2, roleBu.First().GROUP_CD7, ParameterDirection.Input);
                int result = entities.Database.ExecuteSqlCommand("BEGIN " + query + " END;", parameter);

                string query1 = "INSERT INTO MCTR_ROLE_CHG_LOG(LOG_DATE,LOG_BEMS,LOG_ACTION,ROLE_BEMS,FIELD_CHGD,FIELD_BEFORE,FIELD_AFTER)VALUES(:0,:1,:2,:3,:4,:5,:6);";
                parameter[0] = new OracleParameter(":LOG_DATE", OracleDbType.Varchar2, DateTime.Now.ToString("dd-MMM-yy"), ParameterDirection.Input);
                parameter[1] = new OracleParameter(":LOG_BEMS", OracleDbType.Varchar2, UsrDetails.BEMS, ParameterDirection.Input);
                parameter[2] = new OracleParameter(":LOG_ACTION", OracleDbType.Varchar2, "ADD", ParameterDirection.Input);
                parameter[3] = new OracleParameter(":ROLE_BEMS", OracleDbType.Varchar2, UsrDetails.BEMS_ADMIN, ParameterDirection.Input);
                parameter[4] = new OracleParameter(":FIELD_CHGD", OracleDbType.Varchar2, "BUSINESS UNIT", ParameterDirection.Input);
                parameter[5] = new OracleParameter(":FIELD_BEFORE", OracleDbType.Varchar2, null, ParameterDirection.Input);
                parameter[6] = new OracleParameter(":FIELD_AFTER", OracleDbType.Varchar2, roleBu.First().BUSINESS_UNIT, ParameterDirection.Input);
                int result1 = entities.Database.ExecuteSqlCommand("BEGIN " + query1 + " END;", parameter);

                string query2 = "update mctr_role set date_update ="+DateTime.Now.ToString("dd-MMM-yy")+", bems_admin ="+roleBu.First().sessionBems+" where bems ="+roleBu.First().BEMS+"";
                int result2 = entities.Database.ExecuteSqlCommand("BEGIN " + query2 + " END;", parameter);


                if (result > 0 && result1>0 && result2>0)
                {
                    msgRespList.Add(recObj);
                    return msgRespList;
                }
                else
                {
                    throw new Exception();
                }
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }
        ///*************************************************************
        ///<summary>
        ///Method Name : roleBuPostUpdate
        ///</summary>
        ///<param name = "roleBu"></param>
        ///<returns>IEnumerable<roleBu> </returns>

        public IEnumerable<RoleBu> roleBuPostUpdate(IEnumerable<RoleBu> roleBu)
        {


            RoleBu recObj = roleBu.First<RoleBu>();
          List<RoleBu> msgRespList = new List<RoleBu>();
            RoleBu mObj = new RoleBu();
            OracleParameter[] parameter = new OracleParameter[10];
            logger.Debug("Executing MCTR.DataAccess.RoleBuRepository.roleBuPostUpdate with input : " + roleBu);
            try
            {

                string sql = "DELETE FROM MCTR_ROLE_BU WHERE BEMS=:0 ;";
                parameter = new OracleParameter[1];
                parameter[0] = new OracleParameter(":BEMS", OracleDbType.Varchar2, recObj.BEMS, ParameterDirection.Input);
                var DeleteStatus = entities.Database.ExecuteSqlCommand("BEGIN "+sql+" END;",parameter);

                foreach (var rolebu in roleBu)
                {
                    sql = "insert into mctr_role_bu(BEMS,GROUP_CD7,BUSINESS_UNIT) values(:0,:1,:2);";
                    parameter = new OracleParameter[3];
                    parameter[0] = new OracleParameter(":BEMS", OracleDbType.Varchar2, rolebu.BEMS, ParameterDirection.Input);
                    parameter[1] = new OracleParameter(":GROUP_CD_7", OracleDbType.Varchar2, rolebu.GROUP_CD7, ParameterDirection.Input);
                    parameter[2] = new OracleParameter(":BUSSINESS_UNIT", OracleDbType.Varchar2, rolebu.BUSINESS_UNIT, ParameterDirection.Input);
                    var InsertStatus = entities.Database.ExecuteSqlCommand("BEGIN " + sql + " END;", parameter);

                }




                // foreach (var rolebu in roleBu)
                //    {
                //         var rolebus = AutoMapper.Mapper.DynamicMap<RoleBu, MCTR_ROLE_BU>(rolebu);
                //      entities.MCTR_ROLE_BU.Attach(rolebus);
                //     entities.MCTR_ROLE_BU.Add(rolebus);
                //    entities.SaveChanges();

                //   }


                Role previous = new Role();
                var UsrDetails = entities.Database.SqlQuery<Role>("select * from MCTR_OWNER.MCTR_ROLE where BEMS=" + roleBu.First().sessionBems).Single<Role>();
                 
                string query = "INSERT INTO MCTR_ROLE_CHG_LOG(LOG_DATE,LOG_BEMS,LOG_ACTION,ROLE_BEMS,FIELD_CHGD,FIELD_BEFORE,FIELD_AFTER) VALUES(current_timestamp,:0,:1,:2,:3,:4,:5);";
                parameter = new OracleParameter[6];
                parameter[0] = new OracleParameter(":LOG_BEMS", OracleDbType.Varchar2, UsrDetails.BEMS, ParameterDirection.Input);
                parameter[1] = new OracleParameter(":LOG_ACTION", OracleDbType.Varchar2, "ADD", ParameterDirection.Input);
                parameter[2] = new OracleParameter(":ROLE_BEMS", OracleDbType.Varchar2, roleBu.First().BEMS, ParameterDirection.Input);
                parameter[3] = new OracleParameter(":FIELD_CHGD", OracleDbType.Varchar2, "GROUP CODE", ParameterDirection.Input);
                parameter[4] = new OracleParameter(":FIELD_BEFORE", OracleDbType.Varchar2,null , ParameterDirection.Input);
                parameter[5] = new OracleParameter(":FIELD_AFTER", OracleDbType.Varchar2, roleBu.Last().GROUP_CD7, ParameterDirection.Input);
                int result = entities.Database.ExecuteSqlCommand("BEGIN " + query + " END;", parameter);

                string query1 = "INSERT INTO MCTR_ROLE_CHG_LOG(LOG_DATE,LOG_BEMS,LOG_ACTION,ROLE_BEMS,FIELD_CHGD,FIELD_BEFORE,FIELD_AFTER) VALUES(current_timestamp,:0,:1,:2,:3,:4,:5);";
                parameter = new OracleParameter[6];
                parameter[0] = new OracleParameter(":LOG_BEMS", OracleDbType.Varchar2, UsrDetails.BEMS, ParameterDirection.Input);
                parameter[1] = new OracleParameter(":LOG_ACTION", OracleDbType.Varchar2, "ADD", ParameterDirection.Input);
                parameter[2] = new OracleParameter(":ROLE_BEMS", OracleDbType.Varchar2, roleBu.First().BEMS, ParameterDirection.Input);
                parameter[3] = new OracleParameter(":FIELD_CHGD", OracleDbType.Varchar2, "BUSINESS UNIT", ParameterDirection.Input);
                parameter[4] = new OracleParameter(":FIELD_BEFORE", OracleDbType.Varchar2, null, ParameterDirection.Input);
                parameter[5] = new OracleParameter(":FIELD_AFTER", OracleDbType.Varchar2, roleBu.Last().BUSINESS_UNIT, ParameterDirection.Input);
                int result1 = entities.Database.ExecuteSqlCommand("BEGIN " + query1 + " END;", parameter);

                string query2 = "UPDATE MCTR_ROLE_BU SET  GROUP_CD7= :1, BUSINESS_UNIT=:2 WHERE BEMS=:0 ; ";
                parameter = new OracleParameter[3];
                parameter[0] = new OracleParameter(":BEMS", OracleDbType.Varchar2, UsrDetails.BEMS, ParameterDirection.Input);
                parameter[1] = new OracleParameter(":GROUP_CD7", OracleDbType.Varchar2, roleBu.First().GROUP_CD7, ParameterDirection.Input);
                parameter[2] = new OracleParameter(":BUSINESS_UNIT", OracleDbType.Varchar2, roleBu.First().BUSINESS_UNIT, ParameterDirection.Input);
                int result2 = entities.Database.ExecuteSqlCommand("BEGIN " + query2 + " END;", parameter);


               query2 = "update mctr_role set date_update = current_timestamp , bems_admin =" + roleBu.First().sessionBems + " where bems =" + roleBu.First().BEMS + ";";
                var result3 = entities.Database.ExecuteSqlCommand("BEGIN " + query2 + " END;");


           //     if (result > 0 && result1 > 0 && result3 > 0)
                {
                    msgRespList.Add(recObj);
                    return roleBu;
                }
           //    else
                {
            //        throw new Exception();
                }

            }
            catch (Exception ex)
            {
                throw ex;
            }
        }
        ///*************************************************************
        ///<summary>
        ///Method Name : roleBuWhenNewFormInstance
        ///</summary>
        ///<param name = "roleBu"></param>
        ///<returns>IEnumerable<roleBu> </returns>

        public IEnumerable<RoleBu> roleBuWhenNewFormInstance(IEnumerable<RoleBu> roleBu)
        {

            logger.Debug("Executing MCTR.DataAccess.RoleBuRepository.roleBuWhenNewFormInstance with input : " + roleBu);
            //TODO: Move the Data Access logic from the Business implementation class to here.
            return roleBu;
        }

    }

}

