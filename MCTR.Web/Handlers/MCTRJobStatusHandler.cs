///*************************************************************************
/// 
/// BOEING CONFIDENTIAL
/// ___________________
/// 
///  BOEING is a trademark of Boeing Management Company.
///
///  Copyright © 2016 Boeing. All rights reserved.
/// 
/// NOTICE:  All information contained herein is, and remains
/// the property of Boeing and its suppliers, if any.  
/// The intellectual and technical concepts contained
/// herein are proprietary to Boeing and its suppliers and may be 
/// covered by U.S. and Foreign Patents, patents in process, 
/// and are protected by trade secret or copyright law.
/// Dissemination of this information or reproduction of this material
/// is strictly forbidden unless prior written permission is obtained
/// from Boeing. 
///

///************************************************************************
/// Author           : Generated by ATMA ®

using System.Collections.Generic;
using log4net;
using MCTR.DomainEntity;

namespace MCTR.Web.Handlers
{
    public class MCTRJobStatusHandler
    {
         private readonly ILog logger;
        public MCTRJobStatusHandler()
        {
            logger = LogManager.GetLogger(System.Reflection.MethodBase.GetCurrentMethod().DeclaringType);
        }
        public IEnumerable<MCTRJobStatus> MCTRJobStatusOnInsert(MCTRJobStatus MCTRJobStatus)
        {

            logger.Debug("Executing MCTRJobStatusOnInsert rest service handler.");
            string restApiPath = "MCTRJobStatus/MCTRJobStatusOnInsert";
            logger.Info("Invoking Rest API : " + restApiPath + " with Request : " + MCTRJobStatus);
            var response = HandlerUtil<MCTRJobStatus>.RestPostProcessor(restApiPath, MCTRJobStatus);
            logger.Info("Response received form Rest API : " + restApiPath + " : " + response);
            return response;
        }


        public IEnumerable<MCTRJobStatus> GetData()
        {
            logger.Debug("Executing Get Data rest service handler.");
            string restApiPath = "MCTRJobStatus/GetData";
            var response = HandlerUtil<MCTRJobStatus>.RestGetProcessor(restApiPath, null);
            logger.Info("Response received form Rest API : " + restApiPath + " : " + response);
            return response;
        }

    }

}

