///*************************************************************************
///
/// BOEING CONFIDENTIAL
/// ___________________
///
///  BOEING is a trademark of Boeing Management Company.
///
///  Copyright © 2016 Boeing. All rights reserved.
///
/// NOTICE:  All information contained herein is, and remains
/// the property of Boeing and its suppliers, if any.
/// The intellectual and technical concepts contained
/// herein are proprietary to Boeing and its suppliers and may be
/// covered by U.S. and Foreign Patents, patents in process,
/// and are protected by trade secret or copyright law.
/// Dissemination of this information or reproduction of this material
/// is strictly forbidden unless prior written permission is obtained
/// from Boeing.
///
///************************************************************************
/// Author           : Generated by ATMA ®
/// Revision History :
using log4net;
using MCTR.BusinessInterface;
using MCTR.DataAccess;
using MCTR.DataAccessInterface;
using MCTR.DomainEntity;
using System;
using System.Collections.Generic;

namespace MCTR.Business
{
    ///*********************************************************************
    ///<summary>
    ///RoleListNewuserBusiness is the business logic implementation class which holds all
    ///business logic in it.
    ///</summary>
    public class RoleListNewuserBusiness : BaseBusiness, IRoleListNewuserBusiness
    {
        private IRoleListNewuserDataRepository DbRepo = new RoleListNewuserDataRepository();
         private readonly ILog logger=null;
        public RoleListNewuserBusiness()
        {
            logger = LogManager.GetLogger(System.Reflection.MethodBase.GetCurrentMethod().DeclaringType);
        }
        public void initialize()
        {
            //TODO: initialize input from controller
        }

        ///*************************************************************
        ///<summary>
        ///Method Name : emplListbutFindWhenButtonPressed
        ///</summary>
        ///<param name = "roleListnewuser"></param>
        ///<returns>IEnumerable<RoleListNewuser></returns>
        public IEnumerable<RoleListNewuser> emplListbutFindWhenButtonPressed(IEnumerable<RoleListNewuser> roleListnewuser)
        {
            try
            {
                logger.Info("Executing MCTR.Business.RoleListNewuserBusiness.emplListbutFindWhenButtonPressed() with request : " + roleListnewuser);
                var response = DbRepo.emplListbutFindWhenButtonPressed(roleListnewuser);
                logger.Info("Response received from MCTR.Business.RoleListNewuserBusiness.emplListbutFindWhenButtonPressed()" + response);
                return response;
            }
            catch (Exception e)
            {
                logger.Error("Error from MCTR.Business.RoleListBusiness.emplListbutFindWhenButtonPressed():" + e.Message);
                throw;
            }
        }

        ///*************************************************************
        ///<summary>
        ///Method Name : roleListNewuserWhenNewFormInstance
        ///</summary>
        ///<param name = "roleListnewuser"></param>
        ///<returns>IEnumerable<RoleListNewuser></returns>
        public IEnumerable<RoleListNewuser> roleListNewuserWhenNewFormInstance(IEnumerable<RoleListNewuser> roleListnewuser)
        {
            try
            {
                logger.Info("Executing MCTR.Business.RoleListNewuserBusiness.roleListNewuserWhenNewFormInstance() with request : " + roleListnewuser);
                var response = DbRepo.roleListNewuserWhenNewFormInstance(roleListnewuser);
                logger.Info("Response received from MCTR.Business.RoleListNewuserBusiness.roleListNewuserWhenNewFormInstance()" + response);
                return response;
            }
            catch (Exception e)
            {
                logger.Error("Error from MCTR.Business.RoleListBusiness.roleListNewuserWhenNewFormInstance():" + e.Message);
                throw;
            }
        }

        ///*************************************************************
        ///<summary>
        ///Method Name : GetAll
        ///</summary>
        ///<returns>IEnumerable<RoleListNewuser></returns>
        public IEnumerable<RoleListNewuser> empllistonload(IEnumerable<RoleListNewuser> emplist)
        {
            try
            {
                logger.Info("Executing MCTR.Business.RoleListNewuserBusiness.GetAll()");
                var response = DbRepo.empllistonload(emplist);
                logger.Info("Response received from MCTR.Business.RoleListNewuserBusiness.GetAll()" + response);
                return response;
            }
            catch (Exception e)
            {
                logger.Error("Error from MCTR.Business.RoleListNewuserBusiness.GetAll():" + e.Message);
                throw;
            }
        }
    }
}