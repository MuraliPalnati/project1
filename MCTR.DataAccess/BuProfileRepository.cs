///*************************************************************************
/// 
/// BOEING CONFIDENTIAL
/// ___________________
/// 
///  BOEING is a trademark of Boeing Management Company.
///
///  Copyright © 2016 Boeing. All rights reserved.
/// 
/// NOTICE:  All information contained herein is, and remains
/// the property of Boeing and its suppliers, if any.  
/// The intellectual and technical concepts contained
/// herein are proprietary to Boeing and its suppliers and may be 
/// covered by U.S. and Foreign Patents, patents in process, 
/// and are protected by trade secret or copyright law.
/// Dissemination of this information or reproduction of this material
/// is strictly forbidden unless prior written permission is obtained
/// from Boeing. 
///

///************************************************************************
/// Author           : Generated by ATMA ®
/// Revision History :  

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using AutoMapper;
using System.Data;
using System.Configuration;
using log4net;
using Oracle.ManagedDataAccess.Client;
using System.Collections.Specialized;
using MCTR.DomainEntity;
using System.Reflection;
using MCTR.DataAccessInterface;
using System.Diagnostics;
using MCTR.DataEntity;
using System.Resources;
using System.Data.Entity;

namespace MCTR.DataAccess
{
    ///*********************************************************************
    ///<summary>
    ///BuProfileRepository is a data access implementation which holds all 
    ///the data access logic in it.
    ///</summary>

    public class BuProfileRepository : BaseRepository, IBuProfileRepository
    {
        private readonly ILog logger;
        BuProfile buprofileRes;
        BuProfile buprofileReq;
        List<BuProfile> buprofileRespList;
        int v_count;
        string errorMsg = "";
        string query = "";

        public BuProfileRepository()
        {
            logger = LogManager.GetLogger(System.Reflection.MethodBase.GetCurrentMethod().DeclaringType);
            buprofileRes = new BuProfile();
            buprofileRespList = new List<BuProfile>();
            buprofileReq = new BuProfile();
        }

        ///*************************************************************
        /// <summary>
        /// Method Name : validateBuProfie
        /// To Validate Bu Profile Before Insert
        /// </summary>
        /// <param ></param>
        /// <returns>IEnumerable<BuProfile></returns>
        bool validateBuProfie(IEnumerable<BuProfile> buProfile)
        {
            var acitivityFlag = buProfileoffsetActivityPostTextItem(buProfile).First().V_Count["offset2"];
            var projectCount = buProfileoffsetProjectPostTextItem(buProfile).First().V_Count["project1"];
            var accountFlag = buProfileoffsetAccountPostTextItem(buProfile).First().V_Count["account1"];
            if (acitivityFlag==0 || projectCount==0 || accountFlag==0)
            {
                return false;
            }
            else
            {
                return true;
            }
            
        }
        ///*************************************************************
        /// <summary>
        /// Method Name : buProfileBuProfileOnLoad
        /// </summary>
        /// <param ></param>
        /// <returns>IEnumerable<BuProfile></returns>
        public IEnumerable<BuProfile> buProfileBuProfileOnLoad()
        {
            logger.Debug("Executing MCTR.DataAccess.BuProfileRepository.buProfileoffsetActivityPostTextItem ");
            try
            {
                var resultlist = entities.MCTR_BU_PROFILE.SqlQuery("select * from MCTR_BU_PROFILE").ToList<MCTR_BU_PROFILE>();
                var list = AutoMapper.Mapper.DynamicMap<IEnumerable<MCTR_BU_PROFILE>, IEnumerable<BuProfile>>(resultlist);
                logger.Info("Response Received MCTR.DataAccess.BuProfileRepository.buProfileoffsetActivityPostTextItem: " + list);
                foreach (var item in list)
                {
                    buprofileRes = new BuProfile();
                    buprofileRes.Bems_Admin = item.Bems_Admin;
                    buprofileRes.Bulk_Flg = item.Bulk_Flg;
                    buprofileRes.Business_Unit = item.Business_Unit;
                    buprofileRes.Cls_Vdt_Flg = item.Cls_Vdt_Flg;
                    buprofileRes.Hold_Account = item.Hold_Account;
                    buprofileRes.Hold_Activity = item.Hold_Activity;
                    buprofileRes.Hold_Project = item.Hold_Project;
                    buprofileRes.Hold_Text = item.Hold_Text;
                    buprofileRes.Man_Rated_Flg = item.Man_Rated_Flg;
                    buprofileRes.Offset_Account = item.Offset_Account;
                    buprofileRes.Offset_Activity = item.Offset_Activity;
                    buprofileRes.Offset_Project = item.Offset_Project;
                    buprofileRes.Pyr_Only_Flg = item.Pyr_Only_Flg;
                    buprofileRes.Reject_Flg = item.Reject_Flg;
                    buprofileRes.Rsc_Lbr_Flg = item.Rsc_Lbr_Flg;
                    if (item.Bems_Admin != null && Convert.ToInt32(item.Bems_Admin) > 1)
                    {
                        var result1 = entities.MCTR_EMPLOYEE_V.SqlQuery("select * from MCTR_EMPLOYEE_V where BEMS_ID=" + item.Bems_Admin).ToList<MCTR_EMPLOYEE_V>();
                        buprofileRes.LastName = result1.First().LAST_NAME + ", " + result1.First().FIRST_NAME;
                    }
                    else
                    {
                        buprofileRes.LastName = string.Empty;
                    }
                    buprofileRespList.Add(buprofileRes);
                }

                return buprofileRespList;
            }
            catch (Exception e)
            {
                logger.Error("Exception thrown from MCTR.DataAccess.BuProfileRepository.buProfileBuProfileOnLoad:" + e.Message);
                throw;
            }
        }

        ///*************************************************************
        /// <summary>
        /// Method Name : buProfilebusinessUnitPostTextItem
        /// </summary>
        /// <param name="buProfile"></param>
        /// <returns>IEnumerable<BuProfile></returns>

        public IEnumerable<BuProfile> buProfilebusinessUnitPostTextItem(IEnumerable<BuProfile> buProfile)
        {
            logger.Debug("Executing MCTR.DataAccess.BuProfileRepository.buProfilebusinessUnitPostTextItem ");
            OracleParameter[] parameters = new OracleParameter[1];
            buprofileReq = buProfile.First<BuProfile>();
            buprofileReq.V_Count = new Dictionary<string, int>();
            buprofileReq.V_Count.Clear();

            if (buprofileReq.Business_Unit != null)
            {
                try
                {
                    query = "select count(*) from MCTR_PS_BUS_UNIT_TBL7_MV where business_unit =:0";
                    parameters[0] = new OracleParameter(":business_unit", OracleDbType.Varchar2, buprofileReq.Business_Unit, ParameterDirection.Input);
                    v_count = entities.Database.SqlQuery<int>(query, parameters).Single<int>();
                    buprofileReq.V_Count.Add("bucount1", v_count);

                    Debug.Write(v_count);

                    if (v_count == 1)
                    {
                        query = "select count(*) from mctr_bu_profile where business_unit =:0";
                        parameters[0] = new OracleParameter(":business_unit", OracleDbType.Varchar2, buprofileReq.Business_Unit, ParameterDirection.Input);
                        v_count = entities.Database.SqlQuery<int>(query, parameters).Single<int>();
                        buprofileReq.V_Count.Add("bucount2", v_count);
                    }
                }
                catch (Exception e)
                {
                    logger.Error("Exception thrown from :" + e.Message);
                    throw;
                }

            }


            buprofileRespList.Add(buprofileReq);
            logger.Info("Response Received MCTR.DataAccess.BuProfileRepository.buProfilebusinessUnitPostTextItem: " + buprofileRespList);
            return buprofileRespList;

        }

        ///*************************************************************
        /// <summary>
        /// Method Name : buProfileoffsetActivityPreTextItem
        /// </summary>
        /// <param name="buProfile"></param>
        /// <returns>IEnumerable<BuProfile></returns>
        public IEnumerable<BuProfile> buProfileoffsetActivityPreTextItem(IEnumerable<BuProfile> buProfile)
        {
            logger.Debug("Executing MCTR.DataAccess.BuProfileRepository.buProfileoffsetActivityPreTextItem ");
            try
            {
                buprofileReq = buProfile.First<BuProfile>();
                //TODO: Move the Data Access logic from the Business implementation class to here.
                buprofileReq.Hold_Activity = buprofileReq.Offset_Activity;
                buprofileRespList.Add(buprofileRes);
                logger.Info("Response Received : MCTR.DataAccess.BuProfileRepository.buProfileoffsetActivityPreTextItem  " + buprofileRespList);
                return buprofileRespList;
            }
            catch (Exception e)
            {
                logger.Error("Exception thrown from :" + e.Message);
                throw;
            }

        }
        ///*************************************************************
        /// <summary>
        /// Method Name : buProfileoffsetActivityPostTextItem
        /// </summary>
        /// <param name="buProfile"></param>
        /// <returns>IEnumerable<BuProfile></returns>
        public IEnumerable<BuProfile> buProfileoffsetActivityPostTextItem(IEnumerable<BuProfile> buProfile)
        {
            OracleParameter[] parameters = new OracleParameter[3];
            logger.Debug("Executing MCTR.DataAccess.BuProfileRepository.buProfileoffsetActivityPostTextItem" + buProfile);
            //TODO: Move the Data Access logic from the Business implementation class to here.
            buprofileReq = buProfile.First<BuProfile>();
            buprofileReq.V_Count = new Dictionary<string, int>();
            buprofileReq.V_Count.Clear();
            buprofileReq.V_Count.Add("offset1", -1);
            buprofileReq.V_Count.Add("offset2", -1);
            try
            {

                if (buprofileReq.Offset_Activity != null)
                {
                    if (buprofileReq.Offset_Project != null)
                    {
                        query = "select count(*) FROM MCTR_ACTIVITY_V WHERE ACTIVITY_ID =:0 AND PROJECT_ID =:1 AND Business_Unit_GL =:2 AND EFF_STATUS =\'A\'";
                        parameters[0] = new OracleParameter(":ACTIVITY_ID", OracleDbType.Varchar2, buprofileReq.Offset_Activity, ParameterDirection.Input);
                        parameters[1] = new OracleParameter(":PROJECT_ID", OracleDbType.Varchar2, buprofileReq.Offset_Project, ParameterDirection.Input);
                        parameters[2] = new OracleParameter(":Business_Unit_GL", OracleDbType.Varchar2, buprofileReq.Business_Unit, ParameterDirection.Input);
                        v_count = entities.Database.SqlQuery<int>(query, parameters).Single<int>();
                        buprofileReq.V_Count["offset1"] = v_count;
                    }
                    parameters = new OracleParameter[2];
                    query = "select count(*) FROM MCTR_ACTIVITY_V WHERE ACTIVITY_ID =:0 AND Business_Unit_GL =:1 AND EFF_STATUS =\'A\'";
                    parameters[0] = new OracleParameter(":ACTIVITY_ID", OracleDbType.Varchar2, buprofileReq.Offset_Activity, ParameterDirection.Input);
                    parameters[1] = new OracleParameter(":Business_Unit_GL", OracleDbType.Varchar2, buprofileReq.Business_Unit, ParameterDirection.Input);
                    v_count = entities.Database.SqlQuery<int>(query, parameters).Single<int>();
                    buprofileReq.V_Count["offset2"] = v_count;

                }
            }
            catch (Exception ex)
            {
                logger.Error("Exception thrown from MCTR.DataAccess.BuProfileRepository.buProfileoffsetActivityPostTextItem :" + ex.Message);
                errorMsg = ex.Message;
                throw;
            }
            buprofileRespList.Add(buprofileReq);
            logger.Info("Response Received MCTR.DataAccess.BuProfileRepository.buProfileoffsetActivityPostTextItem: " + buprofileRespList);
            return buprofileRespList;
        }
        ///*************************************************************
        /// <summary>
        /// Method Name : buProfileoffsetProjectPreTextItem
        /// </summary>
        /// <param name="buProfile"></param>
        /// <returns>IEnumerable<BuProfile></returns>
        public IEnumerable<BuProfile> buProfileoffsetProjectPreTextItem(IEnumerable<BuProfile> buProfile)
        {

            logger.Debug("Executing MCTR.DataAccess.BuProfileRepository.buProfileoffsetProjectPreTextItem" + buProfile);
            try
            {
                //TODO: Move the Data Access logic from the Business implementation class to here.
                buprofileReq = buProfile.First<BuProfile>();

                buprofileReq.Hold_Activity = buprofileReq.Offset_Activity;
                buprofileRespList.Add(buprofileRes);
                logger.Info("Response Received  MCTR.DataAccess.BuProfileRepository.buProfileoffsetProjectPreTextItem: " + buprofileRespList);
                return buprofileRespList;
            }
            catch (Exception e)
            {
                logger.Error("Exception thrown from :" + e.Message);
                throw;
            }
        }
        ///*************************************************************
        /// <summary>
        /// Method Name : buProfileoffsetProjectPostTextItem
        /// </summary>
        /// <param name="buProfile"></param>
        /// <returns>IEnumerable<BuProfile></returns>
        public IEnumerable<BuProfile> buProfileoffsetProjectPostTextItem(IEnumerable<BuProfile> buProfile)
        {
            OracleParameter[] parameters = new OracleParameter[3];
            logger.Debug("Executing MCTR.DataAccess.BuProfileRepository.buProfileoffsetProjectPostTextItem" + buProfile);
            //TODO: Move the Data Access logic from the Business implementation class to here.

            buprofileReq = buProfile.First<BuProfile>();
            buprofileReq.V_Count = new Dictionary<string, int>();
            buprofileReq.V_Count.Clear();
            buprofileReq.V_Count.Add("project1", -1);
            try
            {

                if (buprofileReq.Offset_Project != null)
                {
                    if (buprofileReq.Offset_Activity != null)
                    {

                        try
                        {
                            query = "select count(*) FROM mctr_activity_v WHERE ACTIVITY_ID =:0 AND PROJECT_ID =:1 AND Business_Unit_GL =:2 AND EFF_STATUS ='A'";
                            parameters[0] = new OracleParameter(":ACTIVITY_ID", OracleDbType.Varchar2, buprofileReq.Offset_Activity, ParameterDirection.Input);
                            parameters[1] = new OracleParameter(":PROJECT_ID", OracleDbType.Varchar2, buprofileReq.Offset_Project, ParameterDirection.Input);
                            parameters[2] = new OracleParameter(":Business_Unit_GL", OracleDbType.Varchar2, buprofileReq.Business_Unit, ParameterDirection.Input);
                            v_count = entities.Database.SqlQuery<int>(query, parameters).Single<int>();
                            buprofileReq.V_Count["project1"] = v_count;
                        }
                        catch (Exception ex)
                        {
                            buprofileReq.V_Count["project1"] = 0;
                        }
                    }
                }

            }
            catch (Exception ex)
            {
                errorMsg = ex.Message;
                logger.Error("Exception thrown from MCTR.DataAccess.BuProfileRepository.buProfileoffsetProjectPostTextItem :" + ex.Message);
                throw new Exception();
            }

            buprofileRespList.Add(buprofileReq);
            logger.Info("Response Received MCTR.DataAccess.BuProfileRepository.buProfileoffsetProjectPostTextItem: " + buprofileRespList);
            return buprofileRespList;

        }
        ///*************************************************************
        /// <summary>
        /// Method Name : buProfileoffsetAccountPreTextItem
        /// </summary>
        /// <param name="buProfile"></param>
        /// <returns>IEnumerable<BuProfile></returns>

        public IEnumerable<BuProfile> buProfileoffsetAccountPreTextItem(IEnumerable<BuProfile> buProfile)
        {
            logger.Debug("Executing MCTR.DataAccess.BuProfileRepository.buProfileoffsetAccountPreTextItem");
            try
            {
                //TODO: Move the Data Access logic from the Business implementation class to here.
                buprofileReq = buProfile.First<BuProfile>();
                buprofileReq.Hold_Activity = buprofileReq.Offset_Activity;
                buprofileRespList.Add(buprofileRes);
                logger.Info("Response Received MCTR.DataAccess.BuProfileRepository.buProfileoffsetAccountPreTextItem: " + buprofileRespList);
                return buprofileRespList;
            }
            catch (Exception ex)
            {
                errorMsg = ex.Message;
                logger.Error("Exception thrown from MCTR.DataAccess.BuProfileRepository.buProfileoffsetProjectPostTextItem :" + ex.Message);
                throw new Exception();
            }
        }
        ///*************************************************************
        /// <summary>
        /// Method Name : buProfileoffsetAccountPostTextItem
        /// </summary>
        /// <param name="buProfile"></param>
        /// <returns>IEnumerable<BuProfile></returns>

        public IEnumerable<BuProfile> buProfileoffsetAccountPostTextItem(IEnumerable<BuProfile> buProfile)
        {

            OracleParameter[] parameters = new OracleParameter[2];
            logger.Debug("Executing MCTR.DataAccess.BuProfileRepository.buProfileoffsetAccountPostTextItem" + buProfile);
            //TODO: Move the Data Access logic from the Business implementation class to here.
            buprofileReq = buProfile.First<BuProfile>();
            buprofileReq.V_Count = new Dictionary<string, int>();
            buprofileReq.V_Count.Clear();
            buprofileReq.V_Count.Add("account1", -1);
            try
            {


                if (buprofileReq.Offset_Activity != null)
                {
                    query = "select count(*) from MCTR_OWNER.MCTR_ACCOUNT_V where account =:0 and setid=:1 and eff_status = 'A'";

                    parameters[0] = new OracleParameter(":account", OracleDbType.Varchar2, buprofileReq.Offset_Account, ParameterDirection.Input);
                    parameters[1] = new OracleParameter(":setid", OracleDbType.Varchar2, buprofileReq.Business_Unit, ParameterDirection.Input);

                    v_count = entities.Database.SqlQuery<int>(query, parameters).SingleOrDefault<int>();
                    buprofileReq.V_Count["account1"] = v_count;
                    if (v_count == 0)
                    {
                        query = "select count(*) from mctr_project_v where project_id = :0 and business_unit_gl = :1 and eff_status = 'A' and account= :2 ";
                        parameters = new OracleParameter[3];
                        parameters[0] = new OracleParameter(":offset_project", OracleDbType.Varchar2, buprofileReq.Offset_Project, ParameterDirection.Input);
                        parameters[1] = new OracleParameter(":business_unit", OracleDbType.Varchar2, buprofileReq.Business_Unit, ParameterDirection.Input);
                        parameters[2] = new OracleParameter(":offset_account", OracleDbType.Varchar2, buprofileReq.Offset_Account, ParameterDirection.Input);
                        v_count = entities.Database.SqlQuery<int>(query, parameters).Single<int>();
                        buprofileReq.V_Count["account1"] = v_count;

                    }

                }
                else
                {
                    buprofileReq.V_Count["account1"] = -1;

                }

                buprofileRespList.Add(buprofileReq);
                logger.Info("Response Received MCTR.DataAccess.BuProfileRepository.buProfileoffsetAccountPostTextItem: " + buprofileRespList);
                return buprofileRespList;
            }
            catch (Exception ex)
            {
                logger.Error("Exception thrown from MCTR.DataAccess.BuProfileRepository.buProfileoffsetAccountPostTextItem :" + ex.Message);
                throw;
            }

        }
        ///*************************************************************
        /// <summary>
        /// Method Name : buProfileopenLOV
        /// </summary>
        /// <param name="buProfile"></param>
        /// <returns>IEnumerable<BuProfile></returns>
        public IEnumerable<BuProfile> buProfileopenLOV(IEnumerable<BuProfile> buProfile)
        {

            logger.Debug("Executing MCTR.DataAccess.BuProfileRepository.buProfileopenLOV");
            //TODO: Move the Data Access logic from the Business implementation class to here.
            OracleParameter[] parameters = new OracleParameter[1];
            buprofileReq = buProfile.First<BuProfile>();
            bool a_value_choosen = buprofileReq.AdminName == "" ? true : false;
            try
            {
                if (a_value_choosen)
                {
                    errorMsg = "A value is not selected";
                    throw new Exception(errorMsg);
                }
                else
                {
                    query = "select * from mctr_employee_v where bems_id = :0;";
                    parameters[0] = new OracleParameter(":bems_id", OracleDbType.Varchar2, buprofileReq.Bems_Admin, ParameterDirection.Input);
                    buprofileReq.AdminName = entities.Database.SqlQuery<string>(query, parameters).Single<string>();
                }
                buprofileRespList.Add(buprofileRes);
                logger.Info("Response Received MCTR.DataAccess.BuProfileRepository.buProfileopenLOV : " + buprofileRespList);
                return buprofileRespList;
            }
            catch (Exception ex)
            {
                logger.Error("Exception thrown from  MCTR.DataAccess.BuProfileRepository.buProfileopenLOV :" + ex.Message);
                throw;
            }


        }
        ///*************************************************************
        /// <summary>
        /// Method Name : buProfilebemsAdminPostTextItem
        /// </summary>
        /// <param name="buProfile"></param>
        /// <returns>IEnumerable<BuProfile></returns>
        public IEnumerable<BuProfile> buProfilebemsAdminPostTextItem(IEnumerable<BuProfile> buProfile)
        {
            OracleParameter[] parameters = new OracleParameter[1];
            logger.Debug("Executing MCTR.DataAccess.BuProfileRepository.buProfilebemsAdminPostTextItem" + buProfile);
            buprofileReq = buProfile.First<BuProfile>();
            try
            {
                if (buprofileReq.Bems_Admin == "")
                {
                    errorMsg = "Select the Bems Admin";
                    throw new Exception(errorMsg);
                }
                else
                {
                    query = "select * from mctr_employee_v where bems_id = :0";
                    parameters[0] = new OracleParameter(":bems_id", OracleDbType.Varchar2, buprofileReq.Bems_Admin, ParameterDirection.Input);
                    var result = entities.MCTR_EMPLOYEE_V.SqlQuery(query, parameters).ToList<MCTR_EMPLOYEE_V>();
                    buprofileReq.AdminName = result[0].FIRST_NAME + " , " + result[0].LAST_NAME;
                }

            }
            catch (Exception ex)
            {
                logger.Error("Exception thrown from MCTR.DataAccess.BuProfileRepository.buProfilebemsAdminPostTextItem:" + ex.Message);
                throw;
            }

            buprofileRespList.Add(buprofileReq);
            logger.Info("Response Received MCTR.DataAccess.BuProfileRepository.buProfilebemsAdminPostTextItem: " + buprofileRespList);
            return buprofileRespList;

        }
        ///*************************************************************
        /// <summary>
        /// Method Name : buProfilePostQuery
        /// </summary>
        /// <param name="buProfile"></param>
        /// <returns>IEnumerable<BuProfile></returns>
        public IEnumerable<BuProfile> buProfilePostQuery(IEnumerable<BuProfile> buProfile)
        {
            logger.Debug("Executing MCTR.DataAccess.BuProfileRepository.buProfilePostQuery" + buProfile);
            try
            {
                buprofileReq = buProfile.First<BuProfile>();
                buprofileRespList.Add(buprofileRes);
                logger.Info("Response Received MCTR.DataAccess.BuProfileRepository.buProfilePostQuery : " + buprofileRespList);
                return buprofileRespList;
            }
            catch (Exception ex)
            {
                errorMsg = ex.Message;
                logger.Error("Exception thrown from MCTR.DataAccess.BuProfileRepository.buProfilePostQuery  :" + ex.Message);
                throw new Exception();
            }
        }

        ///*************************************************************
        /// <summary>
        /// Method Name : buProfilePreInsert
        /// </summary>
        /// <param name="buProfile"></param>
        /// <returns>IEnumerable<BuProfile></returns>
        public IEnumerable<BuProfile> buProfilePreInsert(IEnumerable<BuProfile> buProfile)
        {
            OracleParameter[] parameters = new OracleParameter[10];
            logger.Debug("Executing MCTR.DataAccess.BuProfileRepository.buProfilePreInsert" + buProfile);
            //TODO: Move the Data Access logic from the Business implementation class to here.
            buprofileReq = buProfile.First<BuProfile>();
            try
            {
                if (buprofileReq.Offset_Activity == null || buprofileReq.Offset_Project == null || buprofileReq.Offset_Account == null)
                {
                    errorMsg = "offset accounting information has an error due to missing value. please recheck and correct. offset accounting information has an error due to missing value. please recheck and correct.";
                    throw new Exception(errorMsg);
                }
                else
                {
                    if (buprofileReq.Bems_Admin == null)
                    {
                        buprofileReq.Bems_Admin = buprofileReq.session_bems;
                        query = "select last_name || ', ' || first_name from mctr_employee_v where bems_id = :0;";
                        parameters[0] = new OracleParameter(":bems_id", OracleDbType.Varchar2, buprofileReq.Bems_Admin, ParameterDirection.Input);
                        buprofileReq.AdminName = entities.MCTR_EMPLOYEE_V.SqlQuery("BEGIN " + query + " END;", parameters).ToString();
                    }

                }

            }
            catch (Exception ex)
            {

                logger.Error("Exception thrown from MCTR.DataAccess.BuProfileRepository.buProfilePreInsert :" + ex.Message);
                throw;
            }
            buprofileRespList.Add(buprofileRes);
            logger.Info("Response Received MCTR.DataAccess.BuProfileRepository.buProfilePreInsert: " + buprofileRespList);
            return buprofileRespList;
        }
        ///*************************************************************
        /// <summary>
        /// Method Name : buProfilePreUpdate
        /// </summary>
        /// <param name="buProfile"></param>
        /// <returns>IEnumerable<BuProfile></returns>
        public IEnumerable<BuProfile> buProfilePreUpdate(IEnumerable<BuProfile> buProfile)
        {
            logger.Debug("Executing MCTR.DataAccess.BuProfileRepository.buProfilePreUpdate" + buProfile);
            //TODO: Move the Data Access logic from the Business implementation class to here.
            buprofileReq = buProfile.First<BuProfile>();
            try
            {
                buprofileRespList = buProfilePreInsert(buProfile).ToList(); ;
            }
            catch (Exception ex)
            {
                logger.Error("Exception thrown from MCTR.DataAccess.BuProfileRepository.buProfilePreUpdate :" + ex.Message);
                throw;

            }

            buprofileRespList.Add(buprofileRes);
            logger.Info("Response Received MCTR.DataAccess.BuProfileRepository.buProfilePreUpdate : " + buprofileRespList);
            return buprofileRespList;
        }
        ///*************************************************************
        /// <summary>
        /// Method Name : buProfileWhenNewFormInstance
        /// </summary>
        /// <param name="buProfile"></param>
        /// <returns>IEnumerable<BuProfile></returns>
        ///  -- find roles for logon bems
        public IEnumerable<BuProfile> buProfileWhenNewFormInstance(IEnumerable<BuProfile> buProfile)
        {
            OracleParameter[] parameters = new OracleParameter[10];
            logger.Debug("Executing MCTR.DataAccess.BuProfileRepository.buProfileWhenNewFormInstance" + buProfile);
            //TODO: Move the Data Access logic from the Business implementation class to here.
            buprofileReq = buProfile.First<BuProfile>();
            try
            {
                query = "select accountant_role  from mctr_role where bems=:0 and exists (select bems_id from mctr_message_admin where bems_id=mctr_role.bems);";
                parameters[0] = new OracleParameter(":bems", OracleDbType.Varchar2, buprofileReq.session_bems, ParameterDirection.Input);
                var logon_r1 = entities.Database.SqlQuery<string>(query, parameters).Single<string>();


                if (logon_r1 == "n" || logon_r1 == "")
                {
                    buprofileRes.Hold_Text = "Not Admin";

                }

            }
            catch (Exception ex)
            {
                logger.Error("Exception thrown from MCTR.DataAccess.BuProfileRepository.buProfileWhenNewFormInstance :" + ex.Message);
                throw;
            }
            buprofileRespList.Add(buprofileRes);
            logger.Info("Response Received MCTR.DataAccess.BuProfileRepository.buProfileWhenNewFormInstance : " + buprofileRespList);
            return buprofileRespList;
        }
        ///*************************************************************
        /// <summary>
        /// Method Name : buProfileWhenWindowClosed
        /// </summary>
        /// <param name="buProfile"></param>
        /// <returns>IEnumerable<BuProfile></returns>

        public IEnumerable<BuProfile> buProfileWhenWindowClosed(IEnumerable<BuProfile> buProfile)
        {
            logger.Debug("Executing MCTR.DataAccess.BuProfileRepository.buProfileWhenWindowClosed" + buProfile);
            try
            {
                //TODO: Move the Data Access logic from the Business implementation class to here.
                logger.Info("Response Received MCTR.DataAccess.BuProfileRepository.buProfileWhenWindowClosed : " + buprofileRespList);
                return null;
            }
            catch (Exception ex)
            {
                logger.Error("Exception thrown from MCTR.DataAccess.BuProfileRepository.buProfileWhenWindowClosed:" + ex.Message);
                throw;
            }
        }
        ///*************************************************************
        /// <summary>
        /// Method Name : GetAdmin
        /// </summary>
        /// <param name="buProfile"></param>
        /// <returns>IEnumerable<BuProfile></returns>
        public IEnumerable<MctrEmployee> GetAdmin(IEnumerable<MctrEmployee> list)
        {
            OracleParameter[] parameters = new OracleParameter[1];
            MctrEmployee employee = list.First();
            logger.Debug("Executing MCTR.DataAccess.BuProfileRepository.GetAdmin" + list);
            try
            {

                query = "SELECT * from (Select  e.last_name, e.first_name, e.bems_id, e.component, e.acctg_loc_cdm, e.deptno, e.mail_code, e.work_phone from mctr_employee_v e, mctr_role r where e.bems_id = r.bems and r.admin_role = 'Y' and r.active = 'Y' and e.emp_status = 'A' and exists (select rb.BUSINESS_UNIT from mctr_role_bu rb where rb.bems = r.bems and (rb.business_unit = :0 or(rb.business_unit = '**' and exists(select bu.group_cd7 from MCTR_PS_BUS_UNIT_TBL7_MV bu where bu.group_cd7 = rb.group_cd7 and bu.business_unit = :0 ))))union Select  e.last_name, e.first_name, e.bems_id, e.component, e.acctg_loc_cdm, e.deptno, e.mail_code, e.work_phone from mctr_employee_v e, mctr_role r, mctr_message_admin m where m.bems_id = r.bems and e.bems_id = r.bems and r.admin_role = 'Y' and r.active = 'Y' and e.emp_status = 'A' ) order by last_name, first_name, bems_id";
                parameters[0] = new OracleParameter(":BUSINESS_UNIT", OracleDbType.Varchar2, employee.BUS_UNIT, ParameterDirection.Input);
                var resultList = entities.Database.SqlQuery<MctrEmployee>(query, parameters).ToList<MctrEmployee>();
                logger.Info("Response Received  MCTR.DataAccess.BuProfileRepository.GetAdmin : " + buprofileRespList);
                return resultList;
            }
            catch (Exception ex)
            {
                logger.Error("Exception thrown from  MCTR.DataAccess.BuProfileRepository.GetAdmin:" + ex.Message);
                throw;
            }
        }
        ///*************************************************************
        /// <summary>
        /// Method Name : buProfilePostInsert
        /// </summary>
        /// <param name="buProfile"></param>
        /// <returns>IEnumerable<BuProfile></returns>

        public IEnumerable<BuProfile> buProfilePostInsert(IEnumerable<BuProfile> buProfile)
        {
            var validate = validateBuProfie(buProfile);
            if (validate)
            {
                buprofileReq = buProfile.First<BuProfile>();
                buprofileReq.BuCount = new Dictionary<string, int>(); ;
                buprofileReq.BuCount.Clear();
                try
                {
                    OracleParameter[] parameter1 = new OracleParameter[11];
                    var sql = new StringBuilder("SELECT COUNT(*) FROM MCTR_BU_PROFILE WHERE BUSINESS_UNIT=:0 AND BULK_FLG=:1 AND OFFSET_ACTIVITY=:2 AND OFFSET_PROJECT=:3  AND OFFSET_ACCOUNT = :4 AND RSC_LBR_FLG= :5 AND BEMS_ADMIN = :6 AND CLS_VDT_FLG = :7 AND REJECT_FLG= :8 AND MAN_RATED_FLG = :9 AND PYR_ONLY_FLG = :10 ");
                    parameter1[0] = new OracleParameter(":0", OracleDbType.Varchar2, buprofileReq.Business_Unit, ParameterDirection.Input);
                    parameter1[1] = new OracleParameter(":1", OracleDbType.Varchar2, buprofileReq.Bulk_Flg, ParameterDirection.Input);
                    parameter1[2] = new OracleParameter(":2", OracleDbType.Varchar2, buprofileReq.Offset_Activity, ParameterDirection.Input);
                    parameter1[3] = new OracleParameter(":3", OracleDbType.Varchar2, buprofileReq.Offset_Project, ParameterDirection.Input);
                    parameter1[4] = new OracleParameter(":4", OracleDbType.Varchar2, buprofileReq.Offset_Account, ParameterDirection.Input);
                    parameter1[5] = new OracleParameter(":5", OracleDbType.Varchar2, buprofileReq.Rsc_Lbr_Flg, ParameterDirection.Input);
                    parameter1[6] = new OracleParameter(":6", OracleDbType.Varchar2, buprofileReq.Bems_Admin, ParameterDirection.Input);
                    parameter1[7] = new OracleParameter(":7", OracleDbType.Varchar2, buprofileReq.Cls_Vdt_Flg, ParameterDirection.Input);
                    parameter1[8] = new OracleParameter(":8", OracleDbType.Varchar2, buprofileReq.Reject_Flg, ParameterDirection.Input);
                    parameter1[9] = new OracleParameter(":9", OracleDbType.Varchar2, buprofileReq.Man_Rated_Flg, ParameterDirection.Input);
                    parameter1[10] = new OracleParameter(":10", OracleDbType.Varchar2, buprofileReq.Pyr_Only_Flg, ParameterDirection.Input);
                    v_count = entities.Database.SqlQuery<int>(sql.ToString(), parameter1).SingleOrDefault();

                    buprofileReq.BuCount.Add("add", v_count);
                    if (v_count == 0)
                    {
                        OracleParameter[] parameters = new OracleParameter[11];
                        StringBuilder queryBulider = new StringBuilder("INSERT INTO MCTR_BU_PROFILE(BUSINESS_UNIT,BULK_FLG,OFFSET_ACTIVITY,OFFSET_PROJECT,OFFSET_ACCOUNT,RSC_LBR_FLG,BEMS_ADMIN,CLS_VDT_FLG,REJECT_FLG,MAN_RATED_FLG,PYR_ONLY_FLG) VALUES(:0,:1,:2,:3,:4,:5,:6,:7,:8,:9,:10); ");

                        parameters[0] = new OracleParameter(":BUSINESS_UNIT", OracleDbType.Varchar2, buprofileReq.Business_Unit, ParameterDirection.Input);
                        parameters[1] = new OracleParameter(":BULK_FLG", OracleDbType.Varchar2, buprofileReq.Bulk_Flg, ParameterDirection.Input);
                        parameters[2] = new OracleParameter(":OFFSET_ACTIVITY", OracleDbType.Varchar2, buprofileReq.Offset_Activity, ParameterDirection.Input);
                        parameters[3] = new OracleParameter(":OFFSET_PROJECT", OracleDbType.Varchar2, buprofileReq.Offset_Project, ParameterDirection.Input);
                        parameters[4] = new OracleParameter(":OFFSET_ACCOUNT", OracleDbType.Varchar2, buprofileReq.Offset_Account, ParameterDirection.Input);
                        parameters[5] = new OracleParameter(":RSC_LBR_FLG", OracleDbType.Varchar2, buprofileReq.Rsc_Lbr_Flg, ParameterDirection.Input);
                        parameters[6] = new OracleParameter(":BEMS_ADMIN", OracleDbType.Varchar2, buprofileReq.Bems_Admin, ParameterDirection.Input);
                        parameters[7] = new OracleParameter(":CLS_VDT_FLG", OracleDbType.Varchar2, buprofileReq.Cls_Vdt_Flg, ParameterDirection.Input);
                        parameters[8] = new OracleParameter(":REJECT_FLG", OracleDbType.Varchar2, buprofileReq.Reject_Flg, ParameterDirection.Input);
                        parameters[9] = new OracleParameter(":MAN_RATED_FLG", OracleDbType.Varchar2, buprofileReq.Man_Rated_Flg, ParameterDirection.Input);
                        parameters[10] = new OracleParameter(":PYR_ONLY_FLG", OracleDbType.Varchar2, buprofileReq.Pyr_Only_Flg, ParameterDirection.Input);

                        entities.Database.ExecuteSqlCommand("BEGIN " + queryBulider.ToString() + " END;", parameters);
                    }
                }
                catch (Exception ex)
                {
                    logger.Error("Exception thrown from MCTR.DataAccess.BuProfileRepository.buProfilePostInsert :" + ex.Message);
                    throw;
                }
            }
            
                return buProfile;
        }

        ///*************************************************************
        /// <summary>
        /// Method Name : buProfilePostUpdate
        /// </summary>
        /// <param name="buProfile"></param>
        /// <returns>IEnumerable<BuProfile></returns>
        public IEnumerable<BuProfile> buProfilePostUpdate(IEnumerable<BuProfile> buProfile)
        {
            var validate = validateBuProfie(buProfile);
            if (validate)
            {
                logger.Debug("Executing MCTR.DataAccess.BuProfileRepository.buProfilePostUpdate" + buProfile);
                buprofileReq = buProfile.First<BuProfile>();
                try
                {
                    var result = Mapper.DynamicMap<IEnumerable<BuProfile>, IEnumerable<MCTR_BU_PROFILE>>(buProfile);
                    foreach (var item in result)
                    {
                        entities.MCTR_BU_PROFILE.Attach(item);
                        var entry = entities.Entry(item);
                        entry.State = EntityState.Modified;
                        entities.SaveChanges();
                    }
                }
                catch (Exception ex)
                {
                    logger.Error("Exception thrown from MCTR.DataAccess.BuProfileRepository.buProfilePostUpdate :" + ex.Message);
                    throw;
                }
            }
            else
            {
                throw new Exception("Validation Failed");
            }
            
            buprofileRespList.Add(buprofileReq);
            logger.Info("Response Received MCTR.DataAccess.BuProfileRepository.buProfilePostUpdate : " + buprofileRespList);
            return buprofileRespList;
        }

        ///*************************************************************
        /// <summary>
        /// Method Name : buProfileDelete
        /// </summary>
        /// <param name="buProfile"></param>
        /// <returns>IEnumerable<BuProfile></returns>

        public IEnumerable<BuProfile> buProfileDelete(IEnumerable<BuProfile> buProfile)
        {
            logger.Debug("Executing MCTR.DataAccess.BuProfileRepository.buProfileDelete" + buProfile);
            try
            {
                var result = Mapper.DynamicMap<IEnumerable<BuProfile>, IEnumerable<MCTR_BU_PROFILE>>(buProfile);
                foreach (var item in result)
                {
                    entities.MCTR_BU_PROFILE.Attach(item);
                    entities.MCTR_BU_PROFILE.Remove(item);
                    entities.SaveChanges();
                }

            }
            catch (Exception ex)
            {
                logger.Error("Exception thrown from MCTR.DataAccess.BuProfileRepository.buProfileDelete :" + ex.Message);
                throw;
            }
            buprofileRespList.Add(buprofileRes);
            logger.Info("Response Received MCTR.DataAccess.BuProfileRepository.buProfileDelete : " + buprofileRespList);
            return buprofileRespList;
        }

    }

}

