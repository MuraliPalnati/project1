///*************************************************************************
/// 
/// BOEING CONFIDENTIAL
/// ___________________
/// 
///  BOEING is a trademark of Boeing Management Company.
///
///  Copyright © 2016 Boeing. All rights reserved.
/// 
/// NOTICE:  All information contained herein is, and remains
/// the property of Boeing and its suppliers, if any.  
/// The intellectual and technical concepts contained
/// herein are proprietary to Boeing and its suppliers and may be 
/// covered by U.S. and Foreign Patents, patents in process, 
/// and are protected by trade secret or copyright law.
/// Dissemination of this information or reproduction of this material
/// is strictly forbidden unless prior written permission is obtained
/// from Boeing. 
///

///************************************************************************
/// Author           : Generated by ATMA ®
/// Revision History :  
using System;
using System.Collections.Generic;
using System.Linq;
using AutoMapper;
using System.Data;
using log4net;
using Oracle.ManagedDataAccess.Client;
using MCTR.DataEntity;
using MCTR.DomainEntity;
using MCTR.DataAccessInterface;
using System.Text;
using System.Data.Entity.Validation;
using System.Diagnostics;
using System.Data.Entity;
using System.Configuration;

namespace MCTR.DataAccess
{

    public class MctrCreateFormRepository : BaseRepository, IMctrCreateFormRepository
    {

        /// <summary>
        /// 5 Methods 
        /// </summary>

        private readonly ILog logger;
        MctrCreateForm obj = new MctrCreateForm();
        List<MctrCreateForm> list = new List<MctrCreateForm>();
        public MctrCreateFormRepository()
        {
            logger = LogManager.GetLogger(System.Reflection.MethodBase.GetCurrentMethod().DeclaringType);
        }
        public IEnumerable<MctrCreateForm> mctrLineItembutCopyWhenButtonPressed(IEnumerable<MctrCreateForm> mctrCreateForm)
        {
            MctrCreateForm mctrcreateform = mctrCreateForm.First();
            MctrLineItem mctrlineitem = mctrcreateform.mctrLineItem.First();

            mctrcreateform.V_Count = new Dictionary<string, int>();
            mctrcreateform.V_Count.Clear();
            String sql = "";
            var v_count = 0;
            OracleParameter[] parameters;
            try
                {
                    sql = @" select count(*) 
           from mctr_major_acct_v
          where major_account_nbr7 = substr(:account_to,1,4)
            and eff_status = 'A'
            and wpd_indirect_flg7 = 'Y'
            and :proj_trans_type_to = 'LBR'";

                    parameters = new OracleParameter[2];
                    parameters[0] = new OracleParameter(":account_to", OracleDbType.Varchar2, mctrlineitem.ACCOUNT_TO, ParameterDirection.Input);
                    parameters[1] = new OracleParameter(":proj_trans_type_to", OracleDbType.Varchar2, mctrlineitem.PROJ_TRANS_TYPE_TO, ParameterDirection.Input);

                    v_count = entities.Database.SqlQuery<int>(sql, parameters).SingleOrDefault();
                    mctrcreateform.V_Count.Add("copyCount", v_count);
                }
                catch (Exception e)
                {
                    logger.Error("Error from  Mctr.DataAccess.mctrLineItembutCopyWhenButtonPressed():" + e.Message);
                    mctrcreateform.V_Count.Add("copyCount", 0);
                }
            return mctrCreateForm;
        }
        public IEnumerable<MctrCreateForm> mctrLineItembutCopyWhenButtonPressedAlert(IEnumerable<MctrCreateForm> mctrCreateForm)
        {
            int v_count = 0;
            MctrCreateForm CreateForm = mctrCreateForm.First();
            //if (CreateForm.ProjTransTypeTo == "LBR" && CreateForm.AccountTo != null)
            //{
                MCTR_MAJOR_ACCT_V obj = new MCTR_MAJOR_ACCT_V();
                OracleParameter[] parameters = new OracleParameter[3];
                string sqlstmt = ("select count ( * )  from  mctr_major_acct_v where major_account_nbr7 = :0 and eff_status = :1 and wpd_indirect_flg7 = :2 and : proj_trans_type_to = :3 ");
                parameters[0] = new OracleParameter(":0", OracleDbType.Varchar2, obj.MAJOR_ACCOUNT_NBR7, ParameterDirection.Input);
                parameters[1] = new OracleParameter(":1", OracleDbType.Varchar2, obj.EFF_STATUS, ParameterDirection.Input);
                parameters[2] = new OracleParameter(":2", OracleDbType.Varchar2, obj.WPD_INDIRECT_FLG7, ParameterDirection.Input);
                parameters[3] = new OracleParameter(":3", OracleDbType.Varchar2, CreateForm.ProjTransTypeTo, ParameterDirection.Input);
                v_count = entities.Database.SqlQuery<int>(sqlstmt, parameters).Single<int>();
            //}
            //if (v_count == 0)
            //{
            //    obj.ProjTransTypeTo = null;
            //    throw new Exception(" Exception");
            //}
            return mctrCreateForm;

        }

        public IEnumerable<MctrCreateForm> mctrLineItembutCopyWhenButtonPressedAlertbox(IEnumerable<MctrCreateForm> mctrCreateForm)
        {
            int v_count = 0;
            MctrCreateForm CreateForm = mctrCreateForm.First();
            if (CreateForm.ProjTransTypeTo == "LBR" && CreateForm.AccountTo != null)
            {
                MCTR_MAJOR_ACCT_V obj = new MCTR_MAJOR_ACCT_V();
                OracleParameter[] parameters = new OracleParameter[3];
                string sqlstmt = ("select count ( * )  from  mctr_major_acct_v where major_account_nbr7 = :0 and eff_status = :1 and wpd_indirect_flg7 = :2 and : proj_trans_type_to = :3 ");
                parameters[0] = new OracleParameter(":0", OracleDbType.Varchar2, obj.MAJOR_ACCOUNT_NBR7, ParameterDirection.Input);
                parameters[1] = new OracleParameter(":1", OracleDbType.Varchar2, obj.EFF_STATUS, ParameterDirection.Input);
                parameters[2] = new OracleParameter(":2", OracleDbType.Varchar2, obj.WPD_INDIRECT_FLG7, ParameterDirection.Input);
                parameters[3] = new OracleParameter(":3", OracleDbType.Varchar2, CreateForm.ProjTransTypeTo, ParameterDirection.Input);
                v_count = entities.Database.SqlQuery<int>(sqlstmt, parameters).Single<int>();
            }
            if (v_count == 0)
            {
                obj.ProjTransTypeTo = null;
                throw new Exception(" Exception");
            }
            return mctrCreateForm;
        }


        /// <essummary>
        /// CursorLI
        /// Cursor for Journal button      
        /// </summary>
        /// <param name="mctrCreateForm"></param>
        /// <returns></returns>
        public IEnumerable<LineItem> CursorLI(MctrCreateForm mctr)
        {
            StringBuilder query = new StringBuilder(@"select li.Mctr_No, li.line_no,li.activity_id_from,
li.project_id_from,
li.account_from,
li.bum_cd7_from,
li.cust_type_cd7_from,
li.affiliate_from,
li.home_dept_from,
li.home_loc_from,
li.home_bugl_from,
li.home_pool_from,
li.labor_rate_cd7_from,
li.class_cd_from,
li.work_dept_from,
li.work_loc_from,
li.work_bugl_from,
li.work_pool_from,
li.rsc_from,
li.wpd_from,
li.bulk_from,
li.proj_trans_type_from,
li.proj_trans_code_from,
li.stat_code_from,
li.uom_from,
li.oh_base_yr_from,
li.quantity_from,
li.amount_from,
li.adjustment_from,
li.causal_id_from,       
li.estmtg_pricg_cd_from,  
li.po_id_from,
li.part_no_from,
li.epacs_ctt_from,
li.shop_order_from,
li.po_line_from,
li.material_quantity_from,
li.activity_id_to,
li.project_id_to,
li.account_to,
li.bum_cd7_to,
li.cust_type_cd7_to,
li.affiliate_to,
li.home_dept_to,
li.home_loc_to,
li.home_bugl_to,
li.home_pool_to,
li.labor_rate_cd7_to,
li.class_cd_to,
li.work_dept_to,
li.work_loc_to,
li.work_bugl_to,
li.work_pool_to,
li.rsc_to,
li.wpd_to,
li.bulk_to,
li.proj_trans_type_to,
li.proj_trans_code_to,
li.stat_code_to,
li.uom_to,
li.oh_base_yr_to,
li.quantity_to,
li.amount_to,
li.adjustment_to,
li.causal_id_to,       
li.estmtg_pricg_cd_to,  
li.po_id_to,
li.part_no_to,
li.epacs_ctt_to,
li.shop_order_to,
li.po_line_to,
li.material_quantity_to,
h.appl_jrnl_id,
h.jv_item_cd
       from mctr_header h,
            mctr_line_item li
      where li.mctr_no = :0
        and h.mctr_no = :1 and li.mtl_jrnl = 'N'
 ");
            OracleParameter[] parameters = new OracleParameter[2];

            parameters[0] = new OracleParameter(":mctr_no", OracleDbType.Int32, mctr.MctrNo, ParameterDirection.Input);
            parameters[1] = new OracleParameter(":mctr_no", OracleDbType.Int32, mctr.MctrNo, ParameterDirection.Input);
            var response = entities.Database.SqlQuery<LineItem>(query.ToString(), parameters).ToList<LineItem>();

            return response;
        }
        /// <summary>
        /// Cursor for Journal button  
        ///         
        /// 
        /// </summary>
        /// <param name="mctrCreateForm"></param>
        /// <returns></returns>
        public IEnumerable<LineItem> CursorOS(MctrCreateForm mctr)
        {

            StringBuilder query = new StringBuilder(@" select os.mctr_no,
            os.line_no,
            os.activity_id_from,
            os.project_id_from,
            os.account_from,
            os.affiliate_from,
            os.home_dept_from,
            os.home_loc_from,
            os.home_bugl_from,
            os.home_pool_from,
            os.labor_rate_cd7_from,
            os.class_cd_from,
            os.work_dept_from,
            os.work_loc_from,
            os.work_bugl_from,
            os.work_pool_from,
            os.rsc_from,
            os.proj_trans_type_from,
            os.proj_trans_code_from,
            os.stat_code_from,
            os.uom_from,
            os.oh_base_yr_from,
            os.quantity_from,
            os.amount_from,
            h.appl_jrnl_id,
            h.jv_item_cd
       from mctr_header h,
            mctr_offset os
      where h.mctr_no = :0
        and os.mctr_no = :0");
            OracleParameter[] parameters = new OracleParameter[2];

            parameters[0] = new OracleParameter(":mctr_no", OracleDbType.Int32, mctr.MctrNo, ParameterDirection.Input);
            parameters[1] = new OracleParameter(":mctr_no", OracleDbType.Int32, mctr.MctrNo, ParameterDirection.Input);
            var response = entities.Database.SqlQuery<LineItem>(query.ToString(), parameters).ToList<LineItem>();
            return response;
        }
        /// <summary>
        /// Cursor for Journal button  
        ///         
        /// 
        /// </summary>
        /// <param name="mctrCreateForm"></param>
        /// <returns></returns>
        public IEnumerable<LineItem> CursorOH(MctrCreateForm mctr)
        {

            StringBuilder query = new StringBuilder(@" select oh.mctr_no,
            oh.line_no,
            oh.from_to,
            oh.line_no_oh,
            oh.activity_id_from,
            oh.project_id_from,
            oh.account_from,
            oh.bum_cd7_from,
            oh.cus_type_cd7_from,
            oh.affiliate_from,
            oh.home_dept_from,
            oh.home_loc_from,
            oh.home_bugl_from,
            oh.home_pool_from,
            oh.labor_rate_cd7_from,
            oh.class_cd_from,
            oh.work_dept_from,
            oh.work_loc_from,
            oh.work_bugl_from,
            oh.work_pool_from,
            oh.rsc_from,
            oh.wpd_from,
            oh.bulk_alctn_cd7,
            oh.proj_trans_type_from,
            oh.proj_trans_code_from,
            oh.stat_code_from,
            oh.uom_from,
            oh.oh_base_yr_from,
            oh.quantity_from,
            oh.amount_from,
            h.appl_jrnl_id,
            h.jv_item_cd
       from mctr_header h,
            mctr_ovrhd oh
      where h.mctr_no = :0
        and oh.mctr_no = :0");
            OracleParameter[] parameters = new OracleParameter[2];

            parameters[0] = new OracleParameter(":mctr_no", OracleDbType.Int32, mctr.MctrNo, ParameterDirection.Input);
            parameters[1] = new OracleParameter(":mctr_no", OracleDbType.Int32, mctr.MctrNo, ParameterDirection.Input);

            var response = entities.Database.SqlQuery<LineItem>(query.ToString(), parameters).ToList<LineItem>();


            return response;
        }

        public IEnumerable<MctrCreateForm> justificationsave(IEnumerable<MctrCreateForm> mctrCreateForm)
        {
            try
            {
                var sql = "UPDATE MCTR_HEADER SET JUSTIFICATION = :0,PREVENTATIVE_MEASURES = :1 WHERE MCTR_NO = :2";
                OracleParameter[] parameters = new OracleParameter[3];
                parameters[0] = new OracleParameter(":0", OracleDbType.Varchar2, mctrCreateForm.First().justification, ParameterDirection.Input);
                parameters[1] = new OracleParameter(":1", OracleDbType.Varchar2, mctrCreateForm.First().preventativeMeasures, ParameterDirection.Input);
                parameters[2] = new OracleParameter(":2", OracleDbType.Int32, mctrCreateForm.First().MctrNo, ParameterDirection.Input);
                var result = entities.Database.ExecuteSqlCommand(sql, parameters);
                return mctrCreateForm;
            }
            catch (Exception e)
            {
                logger.Error("Error from MCTR.DataAccess.justificationsave" + e.Message);
                throw;
            }
        }
        public IEnumerable<MctrLineiteminquiry> ttdInqCyrTtdInqCyrOnLoad(IEnumerable<MctrLineiteminquiry> mctrlineitem)
        {
            try
            {

                MctrLineiteminquiry recievedValues = mctrlineitem.First();



                OracleParameter[] parameters = new OracleParameter[28];
                string sqlstmt = @"select fiscal_year, accounting_period , ovrhd_base_yr_cd7 , account , project_id , activity_id , analysis_type , 
resource_sub_cat , wpd_id7 , proj_trans_type , proj_trans_code , bus_unit_gl_from , home_location_cd7 , deptid_from , 
business_unit_gl , work_location_cd7 , deptid , bulk_alctn_cd7 , sum ( ttd_quantity7 ) as ttd_quantity7 , sum ( ttd_domestic_amt7 ) 
as ttd_domestic_amt7 , class_cd7 , max(null) as affiliate, max('NAC') as tag from mctr_rp_master_v 
where activity_id = :activityid
and project_id = :project_id and account = :globalg_account and business_unit_gl = :globalg_bugl_work 
and bus_unit_gl_from = :globalg_bugl_home and analysis_type = 'ACT' and ( ovrhd_base_yr_cd7 = :globalg_oh_year 
or :globalg_oh_year is null )  
and ( home_location_cd7 = :globalg_home_loc or :globalg_home_loc is null ) 
and ( deptid_from = :globalg_home_dept or :globalg_home_dept is null ) 
and ( work_location_cd7 = :globalg_work_loc or :globalg_work_loc is null ) 
and ( deptid = :globalg_work_dept or :globalg_work_dept is null ) 
and ( resource_sub_cat = :globalg_rsc or :globalg_rsc is null ) 
and ( proj_trans_type = :globalg_proj_trans_type or ( proj_trans_type like 'LB%' 
and :globalg_proj_trans_type = 'LBR' ) or ( proj_trans_type not like 'LB%' and :globalg_proj_trans_type = 'OTH' ) ) 
and ( proj_trans_code = :globalg_proj_trans_code or :globalg_proj_trans_code is null ) 
and ( class_cd7 = :globalg_class_cd or :globalg_class_cd is null ) and ( wpd_id7 = :globalg_wpd or :globalg_wpd is null ) 
and ( bulk_alctn_cd7 = :globalg_bulk or :globalg_bulk is null ) 
group by fiscal_year , accounting_period , ovrhd_base_yr_cd7 , account , project_id , activity_id , analysis_type , 
resource_sub_cat , wpd_id7 , proj_trans_type , proj_trans_code , bus_unit_gl_from , home_location_cd7 , deptid_from , 
business_unit_gl , work_location_cd7 , deptid , bulk_alctn_cd7 , class_cd7 order by ovrhd_base_yr_cd7 desc , proj_trans_type , proj_trans_code , 
bus_unit_gl_from , deptid_from , home_location_cd7 , deptid , work_location_cd7 , resource_sub_cat , class_cd7 , wpd_id7 , bulk_alctn_cd7";


                parameters[0] = new OracleParameter(":activityid", OracleDbType.Varchar2, recievedValues.ACTIVITY_ID, ParameterDirection.Input);
                parameters[1] = new OracleParameter(":project_id", OracleDbType.Varchar2, recievedValues.PROJECT_ID, ParameterDirection.Input);
                parameters[2] = new OracleParameter(":globalg_account", OracleDbType.Varchar2, recievedValues.ACCOUNT, ParameterDirection.Input);
                parameters[3] = new OracleParameter(":globalg_bugl_work", OracleDbType.Varchar2, recievedValues.BUSINESS_UNIT_GL, ParameterDirection.Input);
                parameters[4] = new OracleParameter(":globalg_bugl_home", OracleDbType.Varchar2, recievedValues.BUS_UNIT_GL_FROM, ParameterDirection.Input);
                parameters[5] = new OracleParameter(":globalg_oh_year", OracleDbType.Varchar2, recievedValues.OVRHD_BASE_YR_CD7, ParameterDirection.Input);
                parameters[6] = new OracleParameter(":globalg_oh_year", OracleDbType.Varchar2, recievedValues.OVRHD_BASE_YR_CD7, ParameterDirection.Input);
                parameters[7] = new OracleParameter(":globalg_home_loc", OracleDbType.Varchar2, recievedValues.HOME_LOCATION_CD7, ParameterDirection.Input);
                parameters[8] = new OracleParameter(":globalg_home_loc", OracleDbType.Varchar2, recievedValues.HOME_LOCATION_CD7, ParameterDirection.Input);
                parameters[9] = new OracleParameter(":globalg_home_dept", OracleDbType.Varchar2, recievedValues.DEPTID_FROM, ParameterDirection.Input);
                parameters[10] = new OracleParameter(":globalg_home_dept", OracleDbType.Varchar2, recievedValues.DEPTID_FROM, ParameterDirection.Input);
                parameters[11] = new OracleParameter(":globalg_work_loc", OracleDbType.Varchar2, recievedValues.WORK_LOCATION_CD7, ParameterDirection.Input);
                parameters[12] = new OracleParameter(":globalg_work_loc", OracleDbType.Varchar2, recievedValues.WORK_LOCATION_CD7, ParameterDirection.Input);
                parameters[13] = new OracleParameter(":globalg_work_dept", OracleDbType.Varchar2, recievedValues.DEPTID, ParameterDirection.Input);
                parameters[14] = new OracleParameter(":globalg_work_dept", OracleDbType.Varchar2, recievedValues.DEPTID, ParameterDirection.Input);
                parameters[15] = new OracleParameter(":globalg_rsc", OracleDbType.Varchar2, recievedValues.RESOURCE_SUB_CAT, ParameterDirection.Input);
                parameters[16] = new OracleParameter(":globalg_rsc", OracleDbType.Varchar2, recievedValues.RESOURCE_SUB_CAT, ParameterDirection.Input);
                parameters[17] = new OracleParameter(":globalg_proj_trans_type", OracleDbType.Varchar2, recievedValues.PROJ_TRANS_TYPE, ParameterDirection.Input);
                parameters[18] = new OracleParameter(":globalg_proj_trans_type", OracleDbType.Varchar2, recievedValues.PROJ_TRANS_TYPE, ParameterDirection.Input);
                parameters[19] = new OracleParameter(":globalg_proj_trans_type", OracleDbType.Varchar2, recievedValues.PROJ_TRANS_TYPE, ParameterDirection.Input);
                parameters[20] = new OracleParameter(":globalg_proj_trans_code", OracleDbType.Varchar2, recievedValues.PROJ_TRANS_CODE, ParameterDirection.Input);
                parameters[21] = new OracleParameter(":globalg_proj_trans_code", OracleDbType.Varchar2, recievedValues.PROJ_TRANS_CODE, ParameterDirection.Input);
                parameters[22] = new OracleParameter(":globalg_class_cd", OracleDbType.Varchar2, recievedValues.CLASS_CD7, ParameterDirection.Input);
                parameters[23] = new OracleParameter(":globalg_class_cd", OracleDbType.Varchar2, recievedValues.CLASS_CD7, ParameterDirection.Input);
                parameters[24] = new OracleParameter(":globalg_wpd", OracleDbType.Varchar2, recievedValues.WPD_ID7, ParameterDirection.Input);
                parameters[25] = new OracleParameter(":globalg_wpd", OracleDbType.Varchar2, recievedValues.WPD_ID7, ParameterDirection.Input);
                parameters[26] = new OracleParameter(":globalg_bulk", OracleDbType.Varchar2, recievedValues.BULK_ALCTN_CD7, ParameterDirection.Input);
                parameters[27] = new OracleParameter(":globalg_bulk", OracleDbType.Varchar2, recievedValues.BULK_ALCTN_CD7, ParameterDirection.Input);



                var response = entities.Database.SqlQuery<MctrRpMasterV>(sqlstmt, parameters).ToList();
                recievedValues.MctrRpMasterV = response;
                return mctrlineitem;
            }
            catch (Exception e)
            {
                logger.Error("Error from  Mctr.DataAccess.ttdInqCyrTtdInqCyrOnLoad():" + e.Message);
                throw;
            }
        }

        public IEnumerable<MctrLineiteminquiry> ttdInqFilter(IEnumerable<MctrLineiteminquiry> mctrlineitem)
        {
            try
            {

                MctrLineiteminquiry recievedValues = mctrlineitem.First();



                OracleParameter[] parameters = new OracleParameter[28];
                string sqlstmt = @"select fiscal_year as fyear , accounting_period , ovrhd_base_yr_cd7 , account , project_id , activity_id , analysis_type , 
resource_sub_cat , wpd_id7 , proj_trans_type , proj_trans_code , bus_unit_gl_from , home_location_cd7 , deptid_from , 
business_unit_gl , work_location_cd7 , deptid , bulk_alctn_cd7 , sum ( ttd_quantity7 ) as ttd_quantity7 , sum ( ttd_domestic_amt7 ) 
as ttd_domestic_amt7 , class_cd7 , max ( null ) as tag from mctr_rp_master_v 
where activity_id = :activityid
and project_id = :project_id and account = :globalg_account and business_unit_gl  = :globalg_bugl_work 
and bus_unit_gl_from = :globalg_bugl_home and analysis_type = 'ACT' and ( ovrhd_base_yr_cd7 like '%'||:globalg_oh_year||'%' 
or :globalg_oh_year is null )  
and ( home_location_cd7 like '%'||:globalg_home_loc||'%' or :globalg_home_loc is null ) 
and ( deptid_from like '%'||:globalg_home_dept||'%' or :globalg_home_dept is null ) 
and ( work_location_cd7 like '%'||:globalg_work_loc||'%' or :globalg_work_loc is null ) 
and ( deptid like '%'||:globalg_work_dept||'%' or :globalg_work_dept is null ) 
and ( resource_sub_cat like '%'||:globalg_rsc||'%' or :globalg_rsc is null ) 
and ( proj_trans_type = :globalg_proj_trans_type or ( proj_trans_type like 'LB%' 
and :globalg_proj_trans_type = 'LBR' ) or ( proj_trans_type not like 'LB%' and :globalg_proj_trans_type = 'OTH' ) ) 
and ( proj_trans_code like '%'||:globalg_proj_trans_code||'%' or :globalg_proj_trans_code is null ) 
and ( class_cd7 like '%'||:globalg_class_cd||'%' or :globalg_class_cd is null ) and ( wpd_id7 like '%'||:globalg_wpd||'%' or :globalg_wpd is null ) 
and ( bulk_alctn_cd7 like '%'||:globalg_bulk||'%' or :globalg_bulk is null ) 
group by fiscal_year , accounting_period , ovrhd_base_yr_cd7 , account , project_id , activity_id , analysis_type , 
resource_sub_cat , wpd_id7 , proj_trans_type , proj_trans_code , bus_unit_gl_from , home_location_cd7 , deptid_from , 
business_unit_gl , work_location_cd7 , deptid , bulk_alctn_cd7 , class_cd7 order by ovrhd_base_yr_cd7 desc , proj_trans_type , proj_trans_code , 
bus_unit_gl_from , deptid_from , home_location_cd7 , deptid , work_location_cd7 , resource_sub_cat , class_cd7 , wpd_id7 , bulk_alctn_cd7";


                parameters[0] = new OracleParameter(":activityid", OracleDbType.Varchar2, recievedValues.ACTIVITY_ID, ParameterDirection.Input);
                parameters[1] = new OracleParameter(":project_id", OracleDbType.Varchar2, recievedValues.PROJECT_ID, ParameterDirection.Input);
                parameters[2] = new OracleParameter(":globalg_account", OracleDbType.Varchar2, recievedValues.ACCOUNT, ParameterDirection.Input);
                parameters[3] = new OracleParameter(":globalg_bugl_work", OracleDbType.Varchar2, recievedValues.BUSINESS_UNIT_GL, ParameterDirection.Input);
                parameters[4] = new OracleParameter(":globalg_bugl_home", OracleDbType.Varchar2, recievedValues.BUS_UNIT_GL_FROM, ParameterDirection.Input);
                parameters[5] = new OracleParameter(":globalg_oh_year", OracleDbType.Varchar2, recievedValues.OVRHD_BASE_YR_CD7, ParameterDirection.Input);
                parameters[6] = new OracleParameter(":globalg_oh_year", OracleDbType.Varchar2, recievedValues.OVRHD_BASE_YR_CD7, ParameterDirection.Input);
                parameters[7] = new OracleParameter(":globalg_home_loc", OracleDbType.Varchar2, recievedValues.HOME_LOCATION_CD7, ParameterDirection.Input);
                parameters[8] = new OracleParameter(":globalg_home_loc", OracleDbType.Varchar2, recievedValues.HOME_LOCATION_CD7, ParameterDirection.Input);
                parameters[9] = new OracleParameter(":globalg_home_dept", OracleDbType.Varchar2, recievedValues.DEPTID_FROM, ParameterDirection.Input);
                parameters[10] = new OracleParameter(":globalg_home_dept", OracleDbType.Varchar2, recievedValues.DEPTID_FROM, ParameterDirection.Input);
                parameters[11] = new OracleParameter(":globalg_work_loc", OracleDbType.Varchar2, recievedValues.WORK_LOCATION_CD7, ParameterDirection.Input);
                parameters[12] = new OracleParameter(":globalg_work_loc", OracleDbType.Varchar2, recievedValues.WORK_LOCATION_CD7, ParameterDirection.Input);
                parameters[13] = new OracleParameter(":globalg_work_dept", OracleDbType.Varchar2, recievedValues.DEPTID, ParameterDirection.Input);
                parameters[14] = new OracleParameter(":globalg_work_dept", OracleDbType.Varchar2, recievedValues.DEPTID, ParameterDirection.Input);
                parameters[15] = new OracleParameter(":globalg_rsc", OracleDbType.Varchar2, recievedValues.RESOURCE_SUB_CAT, ParameterDirection.Input);
                parameters[16] = new OracleParameter(":globalg_rsc", OracleDbType.Varchar2, recievedValues.RESOURCE_SUB_CAT, ParameterDirection.Input);
                parameters[17] = new OracleParameter(":globalg_proj_trans_type", OracleDbType.Varchar2, recievedValues.PROJ_TRANS_TYPE, ParameterDirection.Input);
                parameters[18] = new OracleParameter(":globalg_proj_trans_type", OracleDbType.Varchar2, recievedValues.PROJ_TRANS_TYPE, ParameterDirection.Input);
                parameters[19] = new OracleParameter(":globalg_proj_trans_type", OracleDbType.Varchar2, recievedValues.PROJ_TRANS_TYPE, ParameterDirection.Input);
                parameters[20] = new OracleParameter(":globalg_proj_trans_code", OracleDbType.Varchar2, recievedValues.PROJ_TRANS_CODE, ParameterDirection.Input);
                parameters[21] = new OracleParameter(":globalg_proj_trans_code", OracleDbType.Varchar2, recievedValues.PROJ_TRANS_CODE, ParameterDirection.Input);
                parameters[22] = new OracleParameter(":globalg_class_cd", OracleDbType.Varchar2, recievedValues.CLASS_CD7, ParameterDirection.Input);
                parameters[23] = new OracleParameter(":globalg_class_cd", OracleDbType.Varchar2, recievedValues.CLASS_CD7, ParameterDirection.Input);
                parameters[24] = new OracleParameter(":globalg_wpd", OracleDbType.Varchar2, recievedValues.WPD_ID7, ParameterDirection.Input);
                parameters[25] = new OracleParameter(":globalg_wpd", OracleDbType.Varchar2, recievedValues.WPD_ID7, ParameterDirection.Input);
                parameters[26] = new OracleParameter(":globalg_bulk", OracleDbType.Varchar2, recievedValues.BULK_ALCTN_CD7, ParameterDirection.Input);
                parameters[27] = new OracleParameter(":globalg_bulk", OracleDbType.Varchar2, recievedValues.BULK_ALCTN_CD7, ParameterDirection.Input);



                var response = entities.Database.SqlQuery<MctrRpMasterV>(sqlstmt, parameters).ToList();
                recievedValues.MctrRpMasterV = response;
                return mctrlineitem;
            }
            catch (Exception e)
            {
                logger.Error("Error from  Mctr.DataAccess.MctrLogAcctRepository.mctrHeaderMctrHeaderOnLoad():" + e.Message);
                throw;
            }
        }
        //actual Inquiry prior Year

        public IEnumerable<MctrLineiteminquiry> ttdInqPyrTtdInqPyrOnLoad(IEnumerable<MctrLineiteminquiry> mctrlineitem)
        {
            try
            {

                MctrLineiteminquiry recievedValues = mctrlineitem.First();



                OracleParameter[] parameters = new OracleParameter[28];
                string sqlstmt = @"select fiscal_year, accounting_period , ovrhd_base_yr_cd7 , account , project_id , activity_id , analysis_type , 
resource_sub_cat , wpd_id7 , proj_trans_type , proj_trans_code , bus_unit_gl_from , home_location_cd7 , deptid_from , 
business_unit_gl , work_location_cd7 , deptid , bulk_alctn_cd7 , sum ( ttd_quantity7 ) as ttd_quantity7 , sum ( ttd_domestic_amt7 ) 
as ttd_domestic_amt7 , class_cd7, affiliate, max('AFF') as tag from mctr_rp_master_vw 
where activity_id = :activityid
and project_id = :project_id and account = :globalg_account and business_unit_gl = :globalg_bugl_work 
and bus_unit_gl_from = :globalg_bugl_home and analysis_type = 'ACT' and ( ovrhd_base_yr_cd7 = :globalg_oh_year 
or :globalg_oh_year is null )  
and ( home_location_cd7 = :globalg_home_loc or :globalg_home_loc is null ) 
and ( deptid_from = :globalg_home_dept or :globalg_home_dept is null ) 
and ( work_location_cd7 = :globalg_work_loc or :globalg_work_loc is null ) 
and ( deptid = :globalg_work_dept or :globalg_work_dept is null ) 
and ( resource_sub_cat = :globalg_rsc or :globalg_rsc is null ) 
and ( proj_trans_type = :globalg_proj_trans_type or ( proj_trans_type like 'LB%' 
and :globalg_proj_trans_type = 'LBR' ) or ( proj_trans_type not like 'LB%' and :globalg_proj_trans_type = 'OTH' ) ) 
and ( proj_trans_code = :globalg_proj_trans_code or :globalg_proj_trans_code is null ) 
and ( class_cd7 = :globalg_class_cd or :globalg_class_cd is null ) and ( wpd_id7 = :globalg_wpd or :globalg_wpd is null ) 
and ( bulk_alctn_cd7 = :globalg_bulk or :globalg_bulk is null )
group by fiscal_year , accounting_period , ovrhd_base_yr_cd7 , account , project_id , activity_id , analysis_type , 
resource_sub_cat , wpd_id7 , proj_trans_type , proj_trans_code , bus_unit_gl_from , home_location_cd7 , deptid_from , 
business_unit_gl , work_location_cd7 , deptid , bulk_alctn_cd7 , class_cd7,affiliate order by ovrhd_base_yr_cd7 desc , proj_trans_type , proj_trans_code , 
bus_unit_gl_from , deptid_from , home_location_cd7 , deptid , work_location_cd7 , resource_sub_cat , class_cd7 , wpd_id7 , bulk_alctn_cd7";


                parameters[0] = new OracleParameter(":activityid", OracleDbType.Varchar2, recievedValues.ACTIVITY_ID, ParameterDirection.Input);
                parameters[1] = new OracleParameter(":project_id", OracleDbType.Varchar2, recievedValues.PROJECT_ID, ParameterDirection.Input);
                parameters[2] = new OracleParameter(":globalg_account", OracleDbType.Varchar2, recievedValues.ACCOUNT, ParameterDirection.Input);
                parameters[3] = new OracleParameter(":globalg_bugl_work", OracleDbType.Varchar2, recievedValues.BUSINESS_UNIT_GL, ParameterDirection.Input);
                parameters[4] = new OracleParameter(":globalg_bugl_home", OracleDbType.Varchar2, recievedValues.BUS_UNIT_GL_FROM, ParameterDirection.Input);
                parameters[5] = new OracleParameter(":globalg_oh_year", OracleDbType.Varchar2, recievedValues.OVRHD_BASE_YR_CD7, ParameterDirection.Input);
                parameters[6] = new OracleParameter(":globalg_oh_year", OracleDbType.Varchar2, recievedValues.OVRHD_BASE_YR_CD7, ParameterDirection.Input);
                parameters[7] = new OracleParameter(":globalg_home_loc", OracleDbType.Varchar2, recievedValues.HOME_LOCATION_CD7, ParameterDirection.Input);
                parameters[8] = new OracleParameter(":globalg_home_loc", OracleDbType.Varchar2, recievedValues.HOME_LOCATION_CD7, ParameterDirection.Input);
                parameters[9] = new OracleParameter(":globalg_home_dept", OracleDbType.Varchar2, recievedValues.DEPTID_FROM, ParameterDirection.Input);
                parameters[10] = new OracleParameter(":globalg_home_dept", OracleDbType.Varchar2, recievedValues.DEPTID_FROM, ParameterDirection.Input);
                parameters[11] = new OracleParameter(":globalg_work_loc", OracleDbType.Varchar2, recievedValues.WORK_LOCATION_CD7, ParameterDirection.Input);
                parameters[12] = new OracleParameter(":globalg_work_loc", OracleDbType.Varchar2, recievedValues.WORK_LOCATION_CD7, ParameterDirection.Input);
                parameters[13] = new OracleParameter(":globalg_work_dept", OracleDbType.Varchar2, recievedValues.DEPTID, ParameterDirection.Input);
                parameters[14] = new OracleParameter(":globalg_work_dept", OracleDbType.Varchar2, recievedValues.DEPTID, ParameterDirection.Input);
                parameters[15] = new OracleParameter(":globalg_rsc", OracleDbType.Varchar2, recievedValues.RESOURCE_SUB_CAT, ParameterDirection.Input);
                parameters[16] = new OracleParameter(":globalg_rsc", OracleDbType.Varchar2, recievedValues.RESOURCE_SUB_CAT, ParameterDirection.Input);
                parameters[17] = new OracleParameter(":globalg_proj_trans_type", OracleDbType.Varchar2, recievedValues.PROJ_TRANS_TYPE, ParameterDirection.Input);
                parameters[18] = new OracleParameter(":globalg_proj_trans_type", OracleDbType.Varchar2, recievedValues.PROJ_TRANS_TYPE, ParameterDirection.Input);
                parameters[19] = new OracleParameter(":globalg_proj_trans_type", OracleDbType.Varchar2, recievedValues.PROJ_TRANS_TYPE, ParameterDirection.Input);
                parameters[20] = new OracleParameter(":globalg_proj_trans_code", OracleDbType.Varchar2, recievedValues.PROJ_TRANS_CODE, ParameterDirection.Input);
                parameters[21] = new OracleParameter(":globalg_proj_trans_code", OracleDbType.Varchar2, recievedValues.PROJ_TRANS_CODE, ParameterDirection.Input);
                parameters[22] = new OracleParameter(":globalg_class_cd", OracleDbType.Varchar2, recievedValues.CLASS_CD7, ParameterDirection.Input);
                parameters[23] = new OracleParameter(":globalg_class_cd", OracleDbType.Varchar2, recievedValues.CLASS_CD7, ParameterDirection.Input);
                parameters[24] = new OracleParameter(":globalg_wpd", OracleDbType.Varchar2, recievedValues.WPD_ID7, ParameterDirection.Input);
                parameters[25] = new OracleParameter(":globalg_wpd", OracleDbType.Varchar2, recievedValues.WPD_ID7, ParameterDirection.Input);
                parameters[26] = new OracleParameter(":globalg_bulk", OracleDbType.Varchar2, recievedValues.BULK_ALCTN_CD7, ParameterDirection.Input);
                parameters[27] = new OracleParameter(":globalg_bulk", OracleDbType.Varchar2, recievedValues.BULK_ALCTN_CD7, ParameterDirection.Input);



                var response = entities.Database.SqlQuery<MctrRpMasterV>(sqlstmt, parameters).ToList();
                recievedValues.MctrRpMasterV = response;
                return mctrlineitem;
            }
            catch (Exception e)
            {
                logger.Error("Error from  Mctr.DataAccess.ttdInqPyrTtdInqPyrOnLoad():" + e.Message);
                throw;
            }
        }
        public IEnumerable<MctrLineItem> mctrLineItemInsert(IEnumerable<MctrLineItem> mctrLineItem)
        {

            try
            {
                var result = Mapper.DynamicMap<IEnumerable<MctrLineItem>, IEnumerable<MCTR_LINE_ITEM>>(mctrLineItem);
                var result1 = entities.MCTR_LINE_ITEM.SqlQuery("SELECT * FROM MCTR_LINE_ITEM where MCTR_NO=" + mctrLineItem.First().MCTR_NO).ToList<MCTR_LINE_ITEM>();
                MCTRDbEntities entities1 = new MCTRDbEntities(BaseRepository.MCTRConnectionString);


                if (result1.Count > 0)
                {
                    foreach (MCTR_LINE_ITEM item in result)
                    {
                        // item.MTL_JRNL = item.MTL_JRNL == "true" ? "Y" : "N";
                        item.ADJUSTMENT_FROM = item.ADJUSTMENT_FROM ?? 0;
                        item.ADJUSTMENT_FROM = item.ADJUSTMENT_TO ?? 0;
                        item.AMOUNT_FROM = item.AMOUNT_FROM ?? 0;
                        item.AMOUNT_TO = item.AMOUNT_TO ?? 0;
                    
                        var set = entities.Set<MCTR_LINE_ITEM>();

                        var entry = entities.Entry<MCTR_LINE_ITEM>(item);
                        MCTR_LINE_ITEM attachedEntity1 = set.Local.SingleOrDefault(e => e.MCTR_NO == item.MCTR_NO && e.LINE_NO == item.LINE_NO);
                        if (attachedEntity1 == null)
                        {
                            //MCTR_LINE_ITEM attachedEntity2 = set.Local.SingleOrDefault(e => e.LINE_NO == item.LINE_NO);  // You need to have access to key

                            entities.MCTR_LINE_ITEM.Add(item);
                            entities.SaveChanges();
                        }
                        else
                        {

                            // This should attach entity
                            entities1.Entry(item).State = EntityState.Modified;
                            entities1.SaveChanges();
                        }
                        entities.SaveChanges();
                    }
                    entities1.Dispose();
                }

                else
                {
                    foreach (var item in result)
                    {
                        item.MTL_JRNL = item.MTL_JRNL == "true" ? "Y" : "N";
                        item.ADJUSTMENT_FROM = item.ADJUSTMENT_FROM ?? 0;
                        item.ADJUSTMENT_FROM = item.ADJUSTMENT_TO ?? 0;
                        item.AMOUNT_FROM = item.AMOUNT_FROM ?? 0;
                        item.AMOUNT_TO = item.AMOUNT_TO ?? 0;
                        if (item.LINE_NO != 0)
                        {
                            entities.MCTR_LINE_ITEM.Add(item);
                        }
                    }
                    entities.SaveChanges();
                }
            }
            catch (DbEntityValidationException dbEx)
            {

                foreach (var validationErrors in dbEx.EntityValidationErrors)
                {
                    foreach (var validationError in validationErrors.ValidationErrors)
                    {
                        Trace.TraceInformation("Property: {0} Error: {1}",
                                                validationError.PropertyName,
                                                validationError.ErrorMessage);
                    }
                }

            }
            catch (Exception e)
            {
                logger.Error("Error from MCTR.DataAccess.LineItemRepository.mctrLineItemPostQuery" + e.Message);

                throw;
            }


            return mctrLineItem;
        }

        public IEnumerable<MctrLineItem> mctrLineItemDelete(IEnumerable<MctrLineItem> mctrCreateForm)
        {
            MctrLineItem mctrcreateform = mctrCreateForm.First();
            StringBuilder sql = new StringBuilder();

            OracleParameter[] parameters = new OracleParameter[2];
            // SQL: delete from mctr_ovrhd where mctr_no = : mctr_line_item . mctr_no and line_no = : mctr_line_item . line_no
            sql = new StringBuilder(" delete from mctr_line_item where mctr_no=:0 and line_no=:1;");
            parameters[0] = new OracleParameter(":mctr_no", OracleDbType.Int32, mctrcreateform.MCTR_NO, ParameterDirection.Input);
            parameters[1] = new OracleParameter(":line_no", OracleDbType.Int32, mctrcreateform.LINE_NO, ParameterDirection.Input);
            var DeletedStatus = entities.Database.ExecuteSqlCommand("BEGIN " + sql.ToString() + " END;", parameters);
            return mctrCreateForm;
        }

        public IEnumerable<MctrRejectCode> getRgLOVReject(MctrRejectCode mctrRejectCode)
        {
            try
            {
                string sql = "select op_segment_7 from mctr_bus_unit_v where business_unit = :orig_bu";
                OracleParameter[] parameters = new OracleParameter[1];
                parameters[0] = new OracleParameter(":orig_bu", OracleDbType.Varchar2, mctrRejectCode.origBu, ParameterDirection.Input);
                string opSeg;
                try {
                    opSeg = entities.Database.SqlQuery<string>(sql, parameters).SingleOrDefault();
                }
                catch(Exception e)
                {
                    opSeg = null;
                }
                if (opSeg=="BT")
                {
                    string sqlstmt = "select h.REJECT_CODE, h.REJECT_REASON from MCTR_REJECT_CODE h order by h.REJECT_CODE";

                    var rejectLov = entities.Database.SqlQuery<MctrRejectCode>(sqlstmt).ToList();
                    return rejectLov;
                }
                else
                {
                    return null;
                }
            }
            catch (Exception e)
            {
                logger.Error("Error from  Mctr.DataAccess.mctrLineItemDelete():" + e.Message);
                throw;
            }

        }

        public IEnumerable<BusUnit> getRgBuGrpLOV(IEnumerable<MctrCreateForm> mctrCreateForm)
        {

            MctrCreateForm mctrcreateForm = mctrCreateForm.First();
            OracleParameter[] parameters = new OracleParameter[4];

            string sqlstmt = "select  b.business_unit,  b.group_cd7,  b.descr,  b.effdt, b.eff_status  from mctr_bus_unit_v b  where (:mctr_headerorig_bu is null  or (:mctr_headerorig_bu is not null and  b.business_unit <> :mctr_headerorig_bu)) and exists  (select rb.business_unit from mctr_role_bu rb   where rb.bems = :globalsession_bems and        (rb.business_unit = b.business_unit or        (rb.group_cd7 = b.group_cd7 and         rb.business_unit = '**'))) and exists (select bp.business_unit from mctr_bu_profile bp  where bp.business_unit = b.business_unit) order by b.business_unit";
            //where (:orig_bu is null or (:orig_bu is not null and  b.business_unit <> :orig_bu)) and exists  (select rb.business_unit from MCTR_ROLE_BU rb   where rb.bems = :bems and (rb.business_unit = b.business_unit or (rb.group_cd7 = b.group_cd7 and  rb.business_unit = '**'))) and exists (select bp.business_unit from mctr_bu_profile bp  where bp.business_unit = b.business_unit) order by b.business_unit";

            parameters[0] = new OracleParameter(":mctr_headerorig_bu", OracleDbType.Varchar2, mctrcreateForm.OrigBu, ParameterDirection.Input);
            parameters[1] = new OracleParameter(":mctr_headerorig_bu", OracleDbType.Varchar2, mctrcreateForm.OrigBu, ParameterDirection.Input);
            parameters[2] = new OracleParameter(":mctr_headerorig_bu", OracleDbType.Varchar2, mctrcreateForm.OrigBu, ParameterDirection.Input);
            parameters[3] = new OracleParameter(":globalsession_bems", OracleDbType.Varchar2, mctrcreateForm.SessionBems, ParameterDirection.Input);

            var name_1 = entities.Database.SqlQuery<BusUnit>(sqlstmt, parameters).ToList();

            // return name_1;
            return name_1;

        }
        public IEnumerable<MctrCreateForm> mctrHeaderbutUnjrnlWhenButtonPressed(IEnumerable<MctrCreateForm> mctrCreateForm)
        {
            MctrCreateForm CreateForm = mctrCreateForm.First();

            mctrCreateForm.First().V_Countstring = new Dictionary<string, string>();

            mctrCreateForm.First().V_Countstring.Add("error","");

            if (CreateForm.MctrNo != 0)
            {
                var sql = @"select count(*) from mctr_journal where mctr_no = " + CreateForm.MctrNo + " and not exists (select * from mctr_journal_history where mctr_no = " + CreateForm.MctrNo + ") and not exists(select * from mctr_journal_wkly where mctr_no = " + CreateForm.MctrNo + ")";
                int v_count = entities.Database.SqlQuery<int>(sql).Single<int>();
                if (v_count > 0)
                {
                    if (mctrCreateForm.First().StatusId == "IP")
                    {
                        string sql1 = @"delete from mctr_journal where mctr_no = :0 ;";
                        OracleParameter[] parameters1 = new OracleParameter[1];
                        parameters1[0] = new OracleParameter(":0", OracleDbType.Int32, CreateForm.MctrNo, ParameterDirection.Input);
                        var result = entities.Database.SqlQuery<int>(sql1, parameters1);
                        string sql2 = @"update mctr_status_hist set date_time_left := sysdate where mctr_no = :0 and date_time_left is null;";
                        OracleParameter[] parameters2 = new OracleParameter[1];
                        parameters2[0] = new OracleParameter(":0", OracleDbType.Int32, CreateForm.MctrNo, ParameterDirection.Input);
                        var result1 = entities.Database.SqlQuery<int>(sql2, parameters2);
                        var sql3 = @"insert into mctr_status_hist
                                    (mctr_no,date_time_entered,prior_status,next_status,date_time_left)
                                    values (" + CreateForm.MctrNo + ",sysdate,'IP','JA',null);";
                        int result3 = entities.Database.ExecuteSqlCommand("BEGIN " + sql3 + " END;");
                    }
                    mctrCreateForm.First().StatusId = "JA";

                    var sql4 = @"select status_descr from mctr_status where status_id = '" + mctrCreateForm.First().StatusId + "'";
                    mctrCreateForm.First().StatusDescription = entities.Database.SqlQuery<string>(sql4).SingleOrDefault();
                    
                }
                else
                {
                    mctrCreateForm.First().V_Countstring["error"]="Unable to perform this function. Journals may have been processed.";
                }
            }
            // var mctrCreateFormResp = mctrHeaderonLoad(mctrCreateForm);
            return mctrCreateForm;
        }

        /// <summary>
        /// mctrHeaderbutJrnlWhenButtonPressed
        ///         
        /// 
        /// </summary>
        /// <param name="mctrCreateForm"></param>
        /// <returns></returns>
        public IEnumerable<MctrCreateForm> mctrHeaderbutJrnlWhenButtonPressed(IEnumerable<MctrCreateForm> mctrCreateForm)
        {
            // SQL: select * from mctr_owner . mctr_header where mctr_no = : parameter . p_mctr_no or ( : parameter . p_mctr_no = 0 and ( exists ( select lu . business_unit from mctr_role_bu lu where lu . bems = : global . session_bems and ( lu . business_unit = m . orig_bu or ( lu . business_unit = '**' and exists ( select bu . business_unit from mctr_bus_unit_v bu where bu . business_unit = m . orig_bu and bu . group_cd7 = lu . group_cd7 ) ) ) ) or exists ( select op_segment_7 from mctr_bus_unit_v buv where group_cd7 = m . orig_group and exists ( select group_cd7 from mctr_role_bu rbu where bems = : global . session_bems and exists ( select group_cd7 from mctr_bus_unit_v where op_segment_7 = buv . op_segment_7 and group_cd7 = rbu . group_cd7 ) ) and m . mctr_no = : mctr_header . mctr_no ) ) ) orderby mctr_no
            // entities.Dispose();
            MctrCreateForm mctrcreateform = mctrCreateForm.First();
            DateTime v_accountingDate = new DateTime();
            int v_count = 0, v_jhcnt = 0, v_jwcnt = 0;
            bool flag = true;
            int FromTo = 0;
            int v_role_count = 0;
            try
            {

                // SQL: select count ( * ) into v_role_count from mctr_role where bems = : global . session_bems and accountant_role = 'Y'
                StringBuilder query = new StringBuilder(" select count ( * )  from mctr_role where bems = :session_bems and accountant_role = 'Y'");

                OracleParameter[] parameters = new OracleParameter[1];
                parameters[0] = new OracleParameter(":session_bems", OracleDbType.Varchar2, mctrcreateform.session_bems, ParameterDirection.Input);
                v_role_count = entities.Database.SqlQuery<int>(query.ToString(), parameters).Single<int>();

                if (v_role_count > 0)
                {
                    if (mctrcreateform.ReasonCode != "")
                    {
                        // SQL: select appl_jrnl_id , jv_item_cd  from mctr_header where mctr_no = : mctr_header . mctr_no
                        query = new StringBuilder(" select appl_jrnl_id as ApplJrnlId , jv_item_cd as JvItemCd  from mctr_header where mctr_no = :mctr_no");
                        parameters = new OracleParameter[1];
                        parameters[0] = new OracleParameter(":mctr_no", OracleDbType.Int32, mctrcreateform.MctrNo, ParameterDirection.Input);
                        var result = entities.Database.SqlQuery<MctrCreateForm>(query.ToString(), parameters).Single<MctrCreateForm>();
                        if (result.JvItemCd != null && result.ApplJrnlId != null)
                        {
                            try
                            {
                                // SQL: select end_dt into v_accounting_dt from mctr_cow_v;
                                query = new StringBuilder(" select end_dt from mctr_cow_v");
                                v_accountingDate = entities.Database.SqlQuery<DateTime>(query.ToString()).Single();

                            }
                            catch (Exception ex)
                            {
                                logger.Error("Exception occured " + ex.Message);
                                v_accountingDate = DateTime.Now;
                            }
                            try
                            {
                                query = new StringBuilder("delete from mctr_journal where mctr_no = :2 and not exists (select * from mctr_journal_history where mctr_no = :0) and not exists (select * from mctr_journal_wkly where mctr_no = :1);");
                                parameters = new OracleParameter[3];
                                parameters[0] = new OracleParameter(":mctr_no", OracleDbType.Int32, mctrcreateform.MctrNo, ParameterDirection.Input);
                                parameters[1] = new OracleParameter(":mctr_no", OracleDbType.Int32, mctrcreateform.MctrNo, ParameterDirection.Input);
                                parameters[2] = new OracleParameter(":mctr_no", OracleDbType.Int32, mctrcreateform.MctrNo, ParameterDirection.Input);
                                int deletedStatus = entities.Database.ExecuteSqlCommand("BEGIN " + query.ToString() + " END;", parameters);
                            }
                            catch (Exception ex)
                            {
                                logger.Error("Exception occured in mctrHeaderbutJrnlWhenButtonPressed " + ex.Message);
                            }
                            try
                            {
                                query = new StringBuilder(@" select *
                                                    from mctr_journal
                                                    where mctr_no = :0");
                                parameters = new OracleParameter[1];
                                parameters[0] = new OracleParameter(":mctr_no", OracleDbType.Int32, mctrcreateform.MctrNo, ParameterDirection.Input);
                                v_count = entities.Database.SqlQuery<MCTR_JOURNAL>(query.ToString(), parameters).Count();
                            }
                            catch (Exception ex)
                            {
                                logger.Error("Exception occured in mctrHeaderbutJrnlWhenButtonPressed " + ex.Message);
                            }
                            try
                            {
                                query = new StringBuilder(@"  select count(*) 
                                                        from mctr_journal_history
                                                        where mctr_no = :0");
                                parameters = new OracleParameter[1];
                                parameters[0] = new OracleParameter(":mctr_no", OracleDbType.Int32, mctrcreateform.MctrNo, ParameterDirection.Input);
                                v_jhcnt = entities.Database.SqlQuery<int>(query.ToString(), parameters).Single<int>();
                            }
                            catch (Exception ex)
                            {
                                logger.Error("Exception occured in mctrHeaderbutJrnlWhenButtonPressed " + ex.Message);
                            }
                            try
                            {
                                query = new StringBuilder(@"  select count(*) 
                                                        from mctr_journal_wkly
                                                        where mctr_no = :0");
                                parameters = new OracleParameter[1];
                                parameters[0] = new OracleParameter(":mctr_no", OracleDbType.Int32, mctrcreateform.MctrNo, ParameterDirection.Input);
                                v_jwcnt = entities.Database.SqlQuery<int>(query.ToString(), parameters).Single<int>();
                            }
                            catch (Exception ex)
                            {
                                logger.Error("Exception occured in mctrHeaderbutJrnlWhenButtonPressed " + ex.Message);
                            }

                            if (v_count == 0 && v_jhcnt == 0 && v_jwcnt == 0)
                            {
                                MCTRDbEntities entities1 = new MCTRDbEntities(BaseRepository.MCTRConnectionString);
                                List<LineItem>[] cursors = new List<LineItem>[3];
                                cursors[0] = CursorLI(mctrcreateform) as List<LineItem>;
                                cursors[1] = CursorOH(mctrcreateform) as List<LineItem>;
                                cursors[2] = CursorOS(mctrcreateform) as List<LineItem>;


                                string user2 = " ";
                                string user3 = " ";
                                string user4 = " ";
                                string user5 = " ";
                                string user6 = " ";
                                string user7 = " ";

                                try
                                {


                                    for (int i = 0; i < cursors.Count(); i++)
                                    {



                                        foreach (var lineItem in cursors[i])
                                        {
                                            if (flag)
                                            {

                                                if (lineItem.HOME_BUGL_FROM != "cg")
                                                {
                                                    user2 = lineItem.MCTR_NO.ToString();
                                                    user3 = "MCTR";
                                                    user4 = lineItem.LINE_NO.ToString();

                                                }
                                                else
                                                {
                                                    user5 = "MCTR";
                                                    user6 = lineItem.LINE_NO.ToString();
                                                    user7 = lineItem.MCTR_NO.ToString();
                                                }

                                            }
                                            else
                                            {

                                                if (lineItem.HOME_BUGL_FROM == "cg")
                                                {
                                                    user2 = lineItem.MCTR_NO.ToString();
                                                    user3 = "MCTR";
                                                    user4 = lineItem.LINE_NO.ToString();

                                                }
                                                else
                                                {
                                                    user5 = "MCTR";
                                                    user6 = lineItem.LINE_NO.ToString();
                                                    user7 = lineItem.MCTR_NO.ToString();
                                                }

                                            }

                                            FromTo = i == 0 ? 1 : 0;

                                            for (int j = 0; j <= FromTo; j++)
                                            {
                                                MCTR_JOURNAL jrnlHist = new MCTR_JOURNAL();
                                                jrnlHist.MCTR_NO = lineItem.MCTR_NO;
                                                jrnlHist.LINE_NO = lineItem.LINE_NO;
                                                if (!flag)
                                                {
                                                    jrnlHist.LINE_NO_OH = lineItem.LINE_NO;
                                                }
                                                else
                                                {
                                                    jrnlHist.LINE_NO_OH = 0;
                                                }
                                                jrnlHist.INTFC_LINE_NUM = 0;
                                                if (i == 2)
                                                {
                                                    jrnlHist.FROM_TO = "O";

                                                }
                                                else if (i == 0)
                                                {
                                                    jrnlHist.FROM_TO = j == 0 ? "F" : "T";
                                                }
                                                else
                                                {
                                                    jrnlHist.FROM_TO = lineItem.from_to ?? "F";

                                                }

                                                jrnlHist.BUSINESS_UNIT = " ";
                                                jrnlHist.PROJECT_ID = (j == 0 ? lineItem.PROJECT_ID_FROM : lineItem.PROJECT_ID_TO) ?? " ";
                                                jrnlHist.ACTIVITY_ID = (j == 0 ? lineItem.ACTIVITY_ID_FROM : lineItem.ACTIVITY_ID_TO) ?? " ";
                                                jrnlHist.LEDGER_GROUP = " ";
                                                jrnlHist.BUSINESS_UNIT_GL = (j == 0 ? lineItem.WORK_BUGL_FROM : lineItem.WORK_BUGL_TO) ?? " ";
                                                jrnlHist.JOURNAL_ID = " ";
                                                jrnlHist.INTFC_STATUS = " ";
                                                jrnlHist.LOAD_STATUS = " ";
                                                jrnlHist.ACTIVITY_TYPE = " ";
                                                jrnlHist.LEDGER = " ";
                                                jrnlHist.OPRID = " ";
                                                jrnlHist.ACCOUNT = (j == 0 ? lineItem.ACCOUNT_FROM : lineItem.ACCOUNT_TO) ?? " ";
                                                jrnlHist.MAJOR_ACCOUNT_NBR7 = " ";
                                                jrnlHist.DEPTID = (j == 0 ? lineItem.WORK_DEPT_FROM : lineItem.WORK_DEPT_TO) ?? " ";
                                                jrnlHist.OVRHD_ALCTN_CD7 = (j == 0 ? lineItem.WORK_POOL_FROM : lineItem.WORK_POOL_TO) ?? " ";
                                                jrnlHist.AFFILIATE = (j == 0 ? lineItem.AFFILIATE_FROM : lineItem.AFFILIATE_TO) ?? " ";
                                                jrnlHist.DEPTID_FROM = (j == 0 ? lineItem.HOME_DEPT_FROM : lineItem.HOME_DEPT_TO) ?? " ";
                                                jrnlHist.OVRHD_ALC_CD_FROM7 = (j == 0 ? lineItem.HOME_POOL_FROM : lineItem.HOME_POOL_TO) ?? " ";
                                                jrnlHist.BUS_UNIT_GL_FROM = (j == 0 ? lineItem.HOME_BUGL_FROM : lineItem.HOME_BUGL_TO) ?? " ";
                                                jrnlHist.CURRENCY_CD = " ";
                                                jrnlHist.STATISTICS_CODE = (j == 0 ? lineItem.STAT_CODE_FROM : lineItem.STAT_CODE_TO) ?? " ";
                                                jrnlHist.ANALYSIS_TYPE = "act";
                                                jrnlHist.RESOURCE_TYPE = " ";
                                                jrnlHist.RESOURCE_SUB_CAT = (j == 0 ? lineItem.RSC_FROM : lineItem.RSC_TO) ?? " ";
                                                jrnlHist.TRANS_DT = v_accountingDate;
                                                jrnlHist.ACCOUNTING_DT = v_accountingDate;
                                                jrnlHist.DTTM_STAMP = null;
                                                jrnlHist.JRNL_LN_REF = " ";
                                                jrnlHist.OPEN_ITEM_STATUS = " ";
                                                jrnlHist.LINE_DESCR = " ";
                                                jrnlHist.JOURNAL_LINE_DATE = null;
                                                jrnlHist.FOREIGN_CURRENCY = "USD";
                                                jrnlHist.RT_TYPE = " ";
                                                jrnlHist.FOREIGN_AMOUNT = (j == 0 ? lineItem.AMOUNT_FROM.Value : lineItem.AMOUNT_TO.Value);
                                                jrnlHist.RATE_MULT = 1;
                                                jrnlHist.CUR_EFFDT = null;
                                                jrnlHist.PROCESS_INSTANCE = 0;
                                                jrnlHist.PROJ_TRANS_TYPE = (j == 0 ? lineItem.PROJ_TRANS_TYPE_FROM : lineItem.PROJ_TRANS_TYPE_TO) ?? " ";
                                                jrnlHist.PROJ_TRANS_CODE = (j == 0 ? lineItem.PROJ_TRANS_CODE_FROM : lineItem.PROJ_TRANS_CODE_TO) ?? " ";
                                                jrnlHist.SYSTEM_SOURCE = " ";
                                                jrnlHist.UNIT_OF_MEASURE = (j == 0 ? lineItem.UOM_FROM : lineItem.UOM_TO) ?? " ";
                                                jrnlHist.EMPLID = " ";
                                                jrnlHist.BUSINESS_UNIT_AP = " ";
                                                jrnlHist.VENDOR_ID = " ";
                                                jrnlHist.VOUCHER_ID = " ";
                                                jrnlHist.VOUCHER_LINE_NUM = 0;
                                                jrnlHist.APPL_JRNL_ID = lineItem.appl_jrnl_id ?? " ";
                                                jrnlHist.PO_ID = " ";
                                                jrnlHist.BUSINESS_UNIT_AM = " ";
                                                jrnlHist.ASSET_ID = " ";
                                                jrnlHist.CUST_ID = " ";
                                                jrnlHist.ITEM = " ";
                                                jrnlHist.RESOURCE_QUANTITY = (j == 0 ? lineItem.QUANTITY_FROM.Value : lineItem.QUANTITY_TO.Value);
                                                jrnlHist.RESOURCE_AMOUNT = (j == 0 ? lineItem.AMOUNT_FROM.Value : lineItem.AMOUNT_TO.Value);
                                                jrnlHist.RES_USER1 = " ";
                                                jrnlHist.RES_USER2 = user2;
                                                jrnlHist.RES_USER3 = user3;
                                                jrnlHist.RES_USER4 = user4;
                                                jrnlHist.RES_USER5 = user5;
                                                jrnlHist.RES_USER6 = user6;
                                                jrnlHist.RES_USER7 = user7;
                                                jrnlHist.RES_USER8 = " ";
                                                jrnlHist.RES_USER9 = " ";
                                                jrnlHist.RES_USER10 = " ";
                                                jrnlHist.RES_USER11 = " ";
                                                jrnlHist.EXT_REFERENCE_ID7 = " ";
                                                jrnlHist.WORK_LOCATION_CD7 = (j == 0 ? lineItem.WORK_LOC_FROM : lineItem.WORK_LOC_TO) ?? " ";
                                                jrnlHist.HOME_LOCATION_CD7 = (j == 0 ? lineItem.HOME_LOC_FROM : lineItem.HOME_LOC_TO) ?? " ";
                                                jrnlHist.PROJECT_ID_FROM7 = " ";
                                                jrnlHist.ACTIVITY_ID_FROM7 = " ";
                                                jrnlHist.WPD_ID7 = " ";
                                                jrnlHist.CAUSAL_ID7 = " ";
                                                jrnlHist.ESTMTG_PRICG_CD7 = " ";
                                                jrnlHist.WORK_GROUP_CD7 = " ";
                                                jrnlHist.WORK_GROUP_FROM7 = " ";
                                                jrnlHist.LABOR_RATE_CD7 = (j == 0 ? lineItem.LABOR_RATE_CD7_FROM : lineItem.LABOR_RATE_CD7_TO) ?? " ";
                                                jrnlHist.BULK_ALCTN_CD7 = " ";
                                                jrnlHist.OVRHD_BASE_YR_CD7 = (j == 0 ? lineItem.OH_BASE_YR_FROM.ToString() : lineItem.OH_BASE_YR_TO.ToString()) ?? " ";
                                                jrnlHist.CLASS_CD7 = (j == 0 ? lineItem.CLASS_CD_FROM : lineItem.CLASS_CD_TO) ?? " ";
                                                jrnlHist.JV_ITEM_CD7 = lineItem.jv_item_cd ?? " ";
                                                jrnlHist.ACCOUNTING_PERIOD = 0;
                                                jrnlHist.DUE_DATE = null;
                                                jrnlHist.FISCAL_YEAR = 0;
                                                jrnlHist.FC_TRANSLATION_CD7 = " ";
                                                jrnlHist.VARIABLE_DT7 = null;
                                                jrnlHist.AVG_RT_SELECT_CD7 = " ";
                                                jrnlHist.EXT_SYSTEM_CD7 = " ";
                                                jrnlHist.BUSINESS_UNIT_BD = " ";
                                                jrnlHist.BUSINESS_UNIT_AR = " ";
                                                jrnlHist.BUSINESS_UNIT_PO = " ";
                                                jrnlHist.PROFILE_ID = " ";
                                                jrnlHist.REQ_ID = " ";
                                                jrnlHist.RES_DETAIL_ID7 = 0;
                                                jrnlHist.GROUPBYNUM = 0;

                                                var sql = "select count(*) from mctr_journal where mctr_no=" + lineItem.MCTR_NO + " and line_no=" + lineItem.LINE_NO + " and FROM_TO='" + jrnlHist.FROM_TO + "' and LINE_NO_OH=" + jrnlHist.LINE_NO_OH;
                                                var exists = entities1.Database.SqlQuery<int>(sql).Single();

                                                if (exists == 0)
                                                {

                                                    try
                                                    {

                                                        entities1.Entry(jrnlHist).State = EntityState.Added;
                                                        entities1.SaveChanges();
                                                    }
                                                    catch (DbEntityValidationException dbEx)
                                                    {

                                                        foreach (var validationErrors in dbEx.EntityValidationErrors)
                                                        {
                                                            foreach (var validationError in validationErrors.ValidationErrors)
                                                            {
                                                                Trace.TraceInformation("Property: {0} Error: {1}",
                                                                                        validationError.PropertyName,
                                                                                        validationError.ErrorMessage);
                                                            }
                                                        }

                                                    }
                                                }
                                            }
                                        }
                                        flag = !flag;

                                    }
                                    mctrcreateform.StatusId = "IP";
                                    mctrcreateform.DateJournal = DateTime.Today;

                                    query = new StringBuilder(@"update mctr_status_hist
                                                            set date_time_left = current_timestamp
                                                            where mctr_no = :mctr_no and date_time_left is null; ");
                                    parameters = new OracleParameter[1];
                                    parameters[0] = new OracleParameter(":mctr_no", OracleDbType.Int32, mctrcreateform.MctrNo, ParameterDirection.Input);

                                    int updateStatus = entities.Database.ExecuteSqlCommand("BEGIN " + query.ToString() + " END;", parameters);
                                    query = new StringBuilder(@" insert into mctr_status_hist
                                                              (mctr_no,date_time_entered,prior_status,next_status,date_time_left)
                                                       values (:0,current_timestamp,'JA','IP',null);");

                                    parameters = new OracleParameter[1];
                                    parameters[0] = new OracleParameter(":mctr_no", OracleDbType.Int32, mctrcreateform.MctrNo, ParameterDirection.Input);

                                    int insertStatus = entities.Database.ExecuteSqlCommand("BEGIN " + query.ToString() + " END;", parameters);
                                    //Email Notification
                                    // e_mail_notification(:mctr_header.mctr_no,v_bems,:bems_orig,:status_id);
                                    try
                                    {
                                        query = new StringBuilder(@"  select status_descr 
                                                                from mctr_status
                                                            where status_id = :0");
                                        parameters = new OracleParameter[1];
                                        parameters[0] = new OracleParameter(":status_id", OracleDbType.Varchar2, mctrcreateform.StatusId, ParameterDirection.Input);
                                        mctrcreateform.StatusDescription = entities.Database.SqlQuery<string>(query.ToString(), parameters).Single<string>();
                                    }
                                    catch (Exception ex)
                                    {
                                        logger.Error("Exception occured in mctrHeaderbutJrnlWhenButtonPressed " + ex.Message);
                                        mctrcreateform.StatusDescription = "";
                                    }

                                }
                                catch (Exception ex)
                                {
                                    logger.Error("Exception occured in mctrHeaderbutJrnlWhenButtonPressed " + ex.Message);
                                }

                                finally
                                {
                                    entities1.Dispose();
                                    //entities.Dispose();
                                }

                                List<MctrCreateForm> mctrCreateFormResp = new List<MctrCreateForm>();
                                mctrCreateFormResp.Add(mctrcreateform);

                                return mctrCreateFormResp;

                            }

                            else
                            {
                                throw new Exception("processed journals found. special handling may be needed. please contact administrator.");
                            }

                        }
                        else
                        {
                            throw new Exception("appl jrnl id and jv item cd must be entered and saved first.");
                        }
                    }
                    else
                    {
                        throw new Exception("reason code must be entered and saved first.");
                    }
                }
                else
                {
                    throw new Exception("accountant role access is required to perform this function.");
                }
            }

            catch (Exception ex)
            {
                logger.Error("Exception Occured at :mctrHeaderbutJrnlWhenButtonPressed " + ex);
                throw;
            }


        }

        public IEnumerable<MctrCreateForm> getRgYearLOV(IEnumerable<MctrCreateForm> mctrCreateForm)
        {
            MctrCreateForm obj = mctrCreateForm.First();
            MctrCreateForm globalValues = mctrCreateForm.Last();
            OracleParameter[] parameters = new OracleParameter[10];
            string sqlstmt = "select fiscal_year from(select distinct fiscal_year from mctr_incr_rates  where cmpon_cd = :0  and exists(select business_unit from mctr_bu_profile  where business_unit = :0 and man_rated_flg = 'N')  union select distinct fiscal_year from mctr_incr_rates   where fiscal_year > 2007   and exists(select business_unit from mctr_bu_profile  where business_unit = :0 and man_rated_flg = 'Y')  union select distinct fiscal_year from mctr_mth_cal_mv  where setid = 'MDC'  and calendar_id = '01'  and begin_dt <= trunc(sysdate)  and end_dt >= trunc(sysdate)  and exists(select business_unit from mctr_bu_profile  where business_unit = :0 and pyr_only_flg = 'N')) where:1 is null or(:1 is not null and :1 <> fiscal_year) order by 1 desc;";
            parameters[0] = new OracleParameter(":orig_bu", OracleDbType.Int32, obj.OrigBu, ParameterDirection.Input);
            parameters[1] = new OracleParameter(":global.session_bems", OracleDbType.Int32, globalValues.bems, ParameterDirection.Input);
            var response = entities.Database.SqlQuery<MctrCreateForm>(sqlstmt, parameters).ToList();
            return response;
        }

        public IEnumerable<MctrCreateForm> getRgReasonLOV(IEnumerable<MctrCreateForm> mctrCreateForm)
        {
            MctrCreateForm recievedValues = mctrCreateForm.First();
            OracleParameter[] parameters = new OracleParameter[10];
            string sqlstmt = "select a.reason_code, a.reason_descr from mctr_reason_code a where exists (select op_segment_7 from mctr_bus_unit_v where business_unit = :0 and op_segment_7 = a.op_segment_7 and a.reason_code not in ('blt','cna','ff','wac','wap')) order by a.reason_code;";
            parameters[0] = new OracleParameter(":mctr_header.orig_bu", OracleDbType.Int32, recievedValues.OrigBu, ParameterDirection.Input);
            var response = entities.Database.SqlQuery<MctrCreateForm>(sqlstmt, parameters).ToList();
            return response;
        }

        public IEnumerable<MctrCreateForm> getRgApplLOV(IEnumerable<MctrCreateForm> mctrCreateForm)
        {
            MctrCreateForm recievedValues = mctrCreateForm.First();
            MctrCreateForm globalValues = mctrCreateForm.Last();
            OracleParameter[] parameters = new OracleParameter[10];
            string sqlstmt = "select a.appl_jrnl_id, a.descr  from   mctr_appl_id_v a  where a.eff_status = 'A' and a.effdt = (select max(a_ed.effdt) from mctr_appl_id_v a_ed where a.appl_jrnl_id = a_ed.appl_jrnl_id and a_ed.effdt <= sysdate) and ((:0 = 'cy' and a.appl_jrnl_id <> 'pyr') or(:0 = 'py' and a.appl_jrnl_id <> 'LBR' and a.appl_jrnl_id <> 'MTL')) order by a.appl_jrnl_id;";
            parameters[0] = new OracleParameter(":global.py_cy_status", OracleDbType.Int32, globalValues.py_cy_status, ParameterDirection.Input);
            var response = entities.Database.SqlQuery<MctrCreateForm>(sqlstmt, parameters).ToList();
            return response;
        }

        public IEnumerable<MctrCreateForm> getRgSuperLOV(IEnumerable<MctrCreateForm> mctrCreateForm)
        {
            MctrCreateForm recievedValues = mctrCreateForm.First();
            MctrCreateForm globalValues = mctrCreateForm.Last();

            OracleParameter[] parameters = new OracleParameter[10];
            string sqlstmt = "select  e.last_name,  e.first_name,  r.bems,  e.component,  e.acctg_loc_cdm,   e.deptno,  e.mail_code,  e.work_phone, null nv_cd, null nv_date from mctr_role r, mctr_employee_v e  where r.bems = e.bems_id(+) and r.active = 'Y'  and exists (select lu.business_unit from MCTR_ROLE_BU lu  where lu.bems = r.bems and       (lu.business_unit = :0 or (lu.group_cd7 = :1 and lu.business_unit = '**'))) union select  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ',  ' ', null, null from mctr_role r2 where r2.bems = :1 order by last_name, first_name;";

            //Need to check session bems

            parameters[0] = new OracleParameter(":orig_bu", OracleDbType.Int32, recievedValues.OrigBu, ParameterDirection.Input);
            parameters[1] = new OracleParameter(":orig_group", OracleDbType.Int32, recievedValues.fyear, ParameterDirection.Input);
            parameters[2] = new OracleParameter(":global.session_bems", OracleDbType.Int32, globalValues.bems, ParameterDirection.Input);
            var response = entities.Database.SqlQuery<MctrCreateForm>(sqlstmt, parameters).ToList();
            return response;
        }

        public IEnumerable<MctrCreateForm> mctrHeaderPreInsert(IEnumerable<MctrCreateForm> mctrCreateForm)
        {
            MctrCreateForm recievedValue = mctrCreateForm.First();
            if (recievedValue.MctrNo == 0)
            {
                OracleParameter[] parameters = new OracleParameter[1];
                OracleParameter[] parameters1 = new OracleParameter[1];
                OracleParameter[] parameters2 = new OracleParameter[1];
                // SQL: select mctr_seq_no . nextval into : mctr_header . mctr_no from dual

                string sqlstmt = "select mctr_seq_no.nextval from dual";
                parameters[0] = new OracleParameter(":mctrno", OracleDbType.Int32, ParameterDirection.Output);
                int response = entities.Database.SqlQuery<int>(sqlstmt).Single<int>();

                // SQL: select last_name || ', ' || first_name into : orig_name from mctr_employee_v where bems_id = : mctr_header . bems_orig

                string sqlstmt1 = "select last_name || ', ' || first_name from mctr_employee_v where bems_id = :0";

                parameters1[0] = new OracleParameter(":bems_orig", OracleDbType.Varchar2, recievedValue.BemsOrig, ParameterDirection.Input);

                var response1 = entities.Database.SqlQuery<string>(sqlstmt1, parameters1).Single<string>();

                recievedValue.MctrNo = response;
                recievedValue.OrigFullName = response1.ToString();
                // SQL: select status_descr into : status_description from mctr_status where status_id = : status_id

                string sqlstmt2 = "select status_descr from mctr_status where status_id = :0";

                // "mctr sequence unavailable - contact system support";
                //  parameters[0] = new OracleParameter(":status_description", OracleDbType.Int32, ParameterDirection.Input);
                parameters2[0] = new OracleParameter(":status_id", OracleDbType.Varchar2, recievedValue.StatusId, ParameterDirection.Input);

                var response2 = entities.Database.SqlQuery<string>(sqlstmt2, parameters2).Single<string>();
                recievedValue.StatusDescription = response2.ToString();
                recievedValue.DateEnter = DateTime.Today;
                string d = DateTime.Now.ToString("dd-MMM-yy");
                DateTime n = DateTime.Now;

                try
                {
                    //string sqlstmtn = "INSERT INTO mctr_header(MCTR_NO,TITLE,DATE_ENTER,FISCAL_YEAR,BEMS_ORIG,STATUS_ID,ORIG_BU,ORIG_GROUP) VALUES(" + recievedValue.MctrNo + ",'"+ recievedValue.title + "','"+d+"' ,"+ recievedValue.fyear + ","+ recievedValue.BemsOrig + ",'" + recievedValue.StatusId + "','" + recievedValue.OrigBu + "','" + recievedValue.OrigGroup + "');";
                    //int responsen = entities.Database.ExecuteSqlCommand(sqlstmtn);
                    string sqlstmt3 = "INSERT INTO mctr_header(MCTR_NO,TITLE,DATE_ENTER,FISCAL_YEAR,BEMS_ORIG,STATUS_ID,ORIG_BU,ORIG_GROUP) VALUES(:0,:1,:2,:3,:4,:5,:6,:7);";

                    OracleParameter[] parameter1 = new OracleParameter[8];
                    OracleParameter[] params1 = new OracleParameter[1];

                    parameter1[0] = new OracleParameter(":MCTR_NO", OracleDbType.Int32, recievedValue.MctrNo, ParameterDirection.Input);
                    parameter1[1] = new OracleParameter(":TITLE", OracleDbType.Varchar2, recievedValue.title, ParameterDirection.Input);
                    parameter1[2] = new OracleParameter(":DATE_ENTER", OracleDbType.Date, n, ParameterDirection.Input);
                    parameter1[3] = new OracleParameter(":FISCAL_YEAR", OracleDbType.Int32, recievedValue.fyear, ParameterDirection.Input);
                    parameter1[4] = new OracleParameter(":BEMS_ORIG", OracleDbType.Varchar2, recievedValue.BemsOrig, ParameterDirection.Input);
                    parameter1[5] = new OracleParameter(":STATUS_ID", OracleDbType.Varchar2, recievedValue.StatusId, ParameterDirection.Input);
                    parameter1[6] = new OracleParameter(":ORIG_BU", OracleDbType.Varchar2, recievedValue.OrigBu, ParameterDirection.Input);
                    parameter1[7] = new OracleParameter(":ORIG_GROUP", OracleDbType.Varchar2, recievedValue.OrigGroup, ParameterDirection.Input);

                    int result1 = entities.Database.ExecuteSqlCommand("BEGIN " + sqlstmt3 + " END;", parameter1);
                    //add new history status entry
                    string sqlstmt4 = "insert into mctr_status_hist(mctr_no, date_time_entered, date_time_left, prior_status, next_status)values(:0, sysdate, null, 'oa', 'oa');";
                    params1[0] = new OracleParameter(":MCTR_NO", OracleDbType.Int32, recievedValue.MctrNo, ParameterDirection.Input);
                    int result2 = entities.Database.ExecuteSqlCommand("BEGIN " + sqlstmt4 + " END;", params1);
                    var responseDates = GetDates(recievedValue);
                    recievedValue.PeriodFrom = responseDates.PeriodFrom;
                    recievedValue.PeriodTo = responseDates.PeriodTo;
                    recievedValue.COW = responseDates.COW;

                    List<MctrCreateForm> result = new List<MctrCreateForm>();
                    result.Add(recievedValue);
                    return result;

                }
                catch (Exception e)
                {
                    logger.Error("Error from MCTR.DataAccess.mctrHeaderPreInsert" + e.Message);

                    throw;

                }

            }
            else
            {
                IEnumerable<MCTR_HEADER> retrievedTransType = new List<MCTR_HEADER>();
                string sqlstmt2 = "select status_descr from mctr_status where status_id = :0";
                OracleParameter[] parameters = new OracleParameter[1];
                if (recievedValue.StatusId == null)
                {
                    string sqlstmts = "select status_id from mctr_header where mctr_no = :0";
                    parameters[0] = new OracleParameter(":mctr_no", OracleDbType.Int32, recievedValue.MctrNo, ParameterDirection.Input);
                    var responses = entities.Database.SqlQuery<string>(sqlstmts, parameters).Single<string>();
                    recievedValue.StatusId = responses;
                }
                parameters[0] = new OracleParameter(":status_id", OracleDbType.Varchar2, recievedValue.StatusId, ParameterDirection.Input);
                sqlstmt2 = "select status_descr from mctr_status where status_id = :0";
                var response2 = entities.Database.SqlQuery<string>(sqlstmt2, parameters).Single<string>();
                sqlstmt2 = "select preventative_measures from mctr_header where mctr_no=:0";
                parameters[0] = new OracleParameter(":mctr_no", OracleDbType.Int32, recievedValue.MctrNo, ParameterDirection.Input);

                var response3 = entities.Database.SqlQuery<string>(sqlstmt2, parameters).Single<string>();
                string prevs = response3 == null ? "" : response3.ToString();
                if (prevs == null)
                {
                    prevs = "";
                }
                sqlstmt2 = "select justification from mctr_header where MCTR_NO=:0";
                parameters[0] = new OracleParameter(":mctr_no", OracleDbType.Int32, recievedValue.MctrNo, ParameterDirection.Input);
                string preMes = response3 == null ? "" : response3.ToString();
                if (preMes == null)
                {
                    preMes = "";
                }

                var response4 = entities.Database.SqlQuery<string>(sqlstmt2, parameters).Single<string>();
                string justific = response4 == null ? "" : response4.ToString();
                if (justific == null)
                {
                    justific = "";
                }
                sqlstmt2 = "select bems_orig from mctr_header where MCTR_NO=:0";
                parameters[0] = new OracleParameter(":mctr_no", OracleDbType.Int32, recievedValue.MctrNo, ParameterDirection.Input);

                var response5 = entities.Database.SqlQuery<string>(sqlstmt2, parameters).Single<string>();

                sqlstmt2 = "select count(*) from mctr_line_item where MCTR_NO=:0";
                parameters[0] = new OracleParameter(":mctr_no", OracleDbType.Int32, recievedValue.MctrNo, ParameterDirection.Input);

                var response6 = entities.Database.SqlQuery<int>(sqlstmt2, parameters).Single<int>();
                sqlstmt2 = "select sum(amount_from) from mctr_line_item where MCTR_NO=:0";
                parameters[0] = new OracleParameter(":mctr_no", OracleDbType.Int32, recievedValue.MctrNo, ParameterDirection.Input);
                try
                {
                    var response7 = entities.Database.SqlQuery<Decimal>(sqlstmt2, parameters).Single<Decimal>();
                    mctrCreateForm.First().TotalAmtFrom = Convert.ToDecimal(response7.ToString());
                }
                catch (Exception e)
                {
                    var response7 = entities.Database.SqlQuery<String>(sqlstmt2, parameters).Single<String>();
                    mctrCreateForm.First().TotalAmtFrom = response7 == null ? Convert.ToDecimal("0.0") : Convert.ToDecimal(response7.ToString());
                    logger.Error("Exception occured in mctrHeaderbutJrnlWhenButtonPressed " + e.Message);
                }
                sqlstmt2 = "select sum(amount_to) from mctr_line_item where MCTR_NO=:0";
                parameters[0] = new OracleParameter(":mctr_no", OracleDbType.Int32, recievedValue.MctrNo, ParameterDirection.Input);
                try
                {
                    var response8 = entities.Database.SqlQuery<decimal?>(sqlstmt2, parameters).Single<decimal?>();
                    mctrCreateForm.First().TotalAmtTo = response8 == null ? Convert.ToDecimal("0.0") : Convert.ToDecimal(response8.ToString());
                }
                catch (Exception e)
                {
                    var response8 = entities.Database.SqlQuery<String>(sqlstmt2, parameters).Single<String>();
                    mctrCreateForm.First().TotalAmtTo = response8 == null ? Convert.ToDecimal("0.0") : Convert.ToDecimal(response8.ToString());
                    logger.Error("Exception occured in mctrHeaderbutJrnlWhenButtonPressed " + e.Message);
                }

                StringBuilder sqlz = new StringBuilder();

                OracleParameter[] parametersq = new OracleParameter[1];
                // SQL: select sum ( amount_from ) into : oh_amt_from from mctr_ovrhd where mctr_no = : mctr_line_item . mctr_no and line_no = : mctr_line_item . line_no and from_to = 'F'
                sqlz = new StringBuilder("select sum ( amount_from ) as oh_amt_from from mctr_ovrhd where mctr_no = :0 and from_to =\'F\'");
                parametersq[0] = new OracleParameter(":mctr_no", OracleDbType.Int32, recievedValue.MctrNo, ParameterDirection.Input);
                try
                {
                    var response9 = entities.Database.SqlQuery<Decimal>(sqlz.ToString(), parametersq).Single();
                    mctrCreateForm.First().totalOhFrom = response9 == 0 ? Convert.ToDecimal("0.0") : Convert.ToDecimal(response9.ToString());
                }
                catch (Exception e)
                {
                    var response9 = entities.Database.SqlQuery<String>(sqlz.ToString(), parametersq).Single();
                    mctrCreateForm.First().totalOhFrom = response9 == null ? Convert.ToDecimal("0.0") : Convert.ToDecimal(response9.ToString());
                    logger.Error("Error from  Mctr.DataAccess.mctrcreateformrepository:" + e.Message);
                }

                // SQL: select sum ( amount_from ) into : oh_amt_to from mctr_ovrhd where mctr_no = : mctr_line_item . mctr_no and line_no = : mctr_line_item . line_no and from_to = 't'
                sqlz = new StringBuilder("select sum ( amount_from ) as oh_amt_to from mctr_ovrhd where mctr_no = :0 and from_to =\'T\'");
                parametersq[0] = new OracleParameter(":mctr_no", OracleDbType.Int32, recievedValue.MctrNo, ParameterDirection.Input);
                try
                {
                    var response10 = entities.Database.SqlQuery<Decimal>(sqlz.ToString(), parametersq).Single();
                    mctrCreateForm.First().totalOhTo = response10 == 0 ? Convert.ToDecimal("0.0") : Convert.ToDecimal(response10.ToString());

                }
                catch (Exception e)
                {
                    var response10 = entities.Database.SqlQuery<String>(sqlz.ToString(), parametersq).Single();
                    mctrCreateForm.First().totalOhTo = response10 == null ? Convert.ToDecimal("0.0") : Convert.ToDecimal(response10.ToString());
                    logger.Error("Error from  Mctr.DataAccess.MctrCreateFormrepository:" + e.Message);
                }

                sqlz = new StringBuilder("select sum(quantity_from) from mctr_line_item where MCTR_NO=:0");
                parameters[0] = new OracleParameter(":mctr_no", OracleDbType.Int32, recievedValue.MctrNo, ParameterDirection.Input);
                try
                {
                    var response15 = entities.Database.SqlQuery<Decimal?>(sqlz.ToString(), parameters).Single<Decimal?>();
                    mctrCreateForm.First().TotalQtyFrom = response15 == null ? Convert.ToDecimal("0.0") : Convert.ToDecimal(response15.ToString());
                }
                catch (Exception e)
                {
                    var response15 = entities.Database.SqlQuery<String>(sqlz.ToString(), parameters).Single<String>();
                    mctrCreateForm.First().TotalQtyFrom = response15 == null ? Convert.ToDecimal("0.0") : Convert.ToDecimal(response15.ToString());
                    logger.Error("Error from  Mctr.DataAccess.MctrCreateFormrepository():" + e.Message);
                }

                sqlz = new StringBuilder("select sum(quantity_to) from mctr_line_item where MCTR_NO=:0");
                parameters[0] = new OracleParameter(":mctr_no", OracleDbType.Int32, recievedValue.MctrNo, ParameterDirection.Input);
                try
                {
                    var response16 = entities.Database.SqlQuery<Decimal?>(sqlz.ToString(), parameters).Single<Decimal?>();
                    mctrCreateForm.First().TotalQtyTo = response16 == null ? Convert.ToDecimal("0.0") : Convert.ToDecimal(response16.ToString());
                }
                catch
                {
                    var response16 = entities.Database.SqlQuery<String>(sqlz.ToString(), parameters).Single<String>();
                    mctrCreateForm.First().TotalQtyTo = response16 == null ? Convert.ToDecimal("0.0") : Convert.ToDecimal(response16.ToString());
                }
                mctrCreateForm.First().totalOh = mctrCreateForm.First().totalOhTo + mctrCreateForm.First().totalOhFrom;

                var MctrHeadertoUpdate = Mapper.DynamicMap<IEnumerable<MctrCreateForm>, IEnumerable<MctrHeader>>(mctrCreateForm);
                var objecttoupdate = Mapper.DynamicMap<IEnumerable<MctrHeader>, IEnumerable<MCTR_HEADER>>(MctrHeadertoUpdate);
                sqlstmt2 = "select count(*) from mctr_ovrhd where mctr_no = :0 and from_to =\'T\'";
                parameters[0] = new OracleParameter(":mctr_no", OracleDbType.Int32, recievedValue.MctrNo, ParameterDirection.Input);
                try
                {
                    var response17 = entities.Database.SqlQuery<int>(sqlstmt2, parameters).Single<int>();
                    mctrCreateForm.First().LinesOhTo = Convert.ToInt32(response17.ToString());
                }
                catch (Exception e)
                {
                    mctrCreateForm.First().LinesOhTo = 0;
                    logger.Error("Error from  Mctr.DataAccess.MctrCreateFormrepository:" + e.Message);
                }
                sqlstmt2 = "select count(*) from mctr_ovrhd where mctr_no = :0 and from_to =\'F\'";
                parameters[0] = new OracleParameter(":mctr_no", OracleDbType.Int32, recievedValue.MctrNo, ParameterDirection.Input);
                try
                {
                    var response18 = entities.Database.SqlQuery<int>(sqlstmt2, parameters).Single<int>();
                    mctrCreateForm.First().LinesOhFrom = Convert.ToInt32(response18.ToString());
                }
                catch (Exception e)
                {
                    mctrCreateForm.First().LinesOhFrom = 0;
                    logger.Error("Error from  Mctr.DataAccess.MctrCreateFormrepository:" + e.Message);
                }
                sqlstmt2 = "select sum(amount_from) from mctr_offset where mctr_no = :mctr_no";
                parameters[0] = new OracleParameter(":mctr_no", OracleDbType.Int32, recievedValue.MctrNo, ParameterDirection.Input);
                try
                {
                    var response19 = entities.Database.SqlQuery<Decimal>(sqlstmt2, parameters).Single<Decimal>();
                    mctrCreateForm.First().totalOffset = Convert.ToDecimal(response19.ToString());
                }
                catch (Exception e)
                {
                    mctrCreateForm.First().totalOffset = 0;
                    logger.Error("Error from  Mctr.DataAccess.MctrCreateFormrepository:" + e.Message);
                }
                try
                {
                    sqlstmt2 = "select count(*) from mctr_offset where mctr_no = :mctr_no";
                    parameters[0] = new OracleParameter(":mctr_no", OracleDbType.Int32, recievedValue.MctrNo, ParameterDirection.Input);
                    mctrCreateForm.First().OffsetLines = entities.Database.SqlQuery<int>(sqlstmt2, parameters).Single<int>(); 


                }
                catch (Exception e)
                {

                }
                foreach (var item in objecttoupdate)
                {
                    item.MCTR_NO = recievedValue.MctrNo;
                    item.ORIG_BU = recievedValue.OrigBu;
                    item.ORIG_GROUP = recievedValue.OrigGroup;
                    item.BEMS_ORIG = response5.ToString();
                    item.FISCAL_YEAR = Convert.ToInt16(recievedValue.fyear);
                    item.DATE_ENTER = Convert.ToDateTime(recievedValue.DateEnter);
                    item.APPL_JRNL_ID = recievedValue.ApplJrnlId;
                    item.APPR_CD_ACCT = recievedValue.ApprCdAcct;
                    item.APPR_CD_COST_ACCT = recievedValue.ApprCdCostAcct;
                    item.APPR_CD_FIN_CTL = recievedValue.ApprCdFinCtl;
                    item.APPR_CD_LBR_ACCT = recievedValue.ApprCdLbrAcct;
                    item.APPR_CD_MATL_ACCT = recievedValue.ApprCdMatlAcct;
                    item.APPR_CD_SR_ACCT = recievedValue.ApprCdSrAcct;
                    item.APPR_CD_SUPER = recievedValue.ApprCdSuper;
                    item.BEMS_ACCT = recievedValue.BemsAcct;
                    item.BEMS_COST_ACCT = recievedValue.BemsCostAcct;
                    item.BEMS_FIN_CTL = recievedValue.BemsFinCtl;
                    item.BEMS_LBR_ACCT = recievedValue.BemsLbrAcct;
                    item.BEMS_MATL_ACCT = recievedValue.BemsMatlAcct;
                    item.BEMS_SR_ACCT = recievedValue.BemsSrAcct;
                    item.BEMS_SUPER = recievedValue.BemsSuper;
                    if (recievedValue.DateApprAcct != null)
                    {
                        item.DATE_APPR_ACCT = Convert.ToDateTime(recievedValue.DateApprAcct);
                    }
                    if (recievedValue.DateApprCostAcct != null)
                    {
                        item.DATE_APPR_COST_ACCT = Convert.ToDateTime(recievedValue.DateApprCostAcct);
                    }
                    if (recievedValue.DateApprFinCtl != null)
                    {
                        item.DATE_APPR_FIN_CTL = Convert.ToDateTime(recievedValue.DateApprFinCtl);
                    }
                    if (recievedValue.DateApprLbrAcct != null)
                    {
                        item.DATE_APPR_LBR_ACCT = Convert.ToDateTime(recievedValue.DateApprLbrAcct);
                    }
                    if (recievedValue.DateApprMatlAcct != null)
                    {
                        item.DATE_APPR_MATL_ACCT = Convert.ToDateTime(recievedValue.DateApprMatlAcct);
                    }
                    if (recievedValue.DateApprSrAcct != null)
                    {
                        item.DATE_APPR_SR_ACCT = Convert.ToDateTime(recievedValue.DateApprSrAcct);
                    }
                    if (recievedValue.DateApprSuper != null)
                    {
                        item.DATE_APPR_SUPER = Convert.ToDateTime(recievedValue.DateApprSuper);
                    }
                    if (recievedValue.DateJournal != null)
                    {
                        item.DATE_JOURNAL = Convert.ToDateTime(recievedValue.DateJournal);
                    }
                        item.JV_ITEM_CD = recievedValue.JvItemCd;
                    item.STATUS_ID = recievedValue.StatusId;
                    //    item.MCTR_ATTACH = recievedValue.MCTRATTACH;
                    //      item.MCTR_COMMENT = recievedValue.MCTRCOMMENT;
                    //    item.MCTR_COMMENT = recievedValue.MCTRCOMMENT;
                    //    item.MCTR_LINE_ITEM = recievedValue.MCTRLINEITEM;
                    //    item.MCTR_OFFSET = recievedValue.MCTROFFSET;
                    //    item.MCTR_ROLE = recievedValue.MCTRROLE;
                    //   item.MCTR_ROLE1 = recievedValue.MCTRROLE1;
                    //   item.MCTR_ROLE2 = recievedValue.MCTRROLE2;
                    //   item.MCTR_ROLE3 = recievedValue.MCTRROLE3;
                    //    item.MCTR_ROLE4 = recievedValue.MCTRROLE4;
                    //    item.MCTR_ROLE5 = recievedValue.MCTRROLE5;
                    //     item.MCTR_ROLE6 = recievedValue.MCTRROLE6;
                    // item.MCTR_STATUS = recievedValue.MCTRSTATUS;
                    //  item.MCTR_STATUS_HIST = recievedValue.MCTRSTATUSHIST;                  
                    item.JUSTIFICATION = justific;
                    item.REASON_CODE = recievedValue.ReasonCode;
                    item.PREVENTATIVE_MEASURES = preMes;
                    entities.MCTR_HEADER.Attach(item);
                    var entry = entities.Entry(item);
                    entry.State = EntityState.Modified;
                    entities.SaveChanges();
                }
                mctrCreateForm.First().Linesfrom = Convert.ToInt32(response6.ToString());

                mctrCreateForm.First().LinesTo = Convert.ToInt32(response6.ToString());



                mctrCreateForm.First().CalAmount = Convert.ToDecimal(mctrCreateForm.First().TotalAmtFrom + mctrCreateForm.First().TotalAmtTo);


                mctrCreateForm.First().StatusDescription = response2.ToString();
                return mctrCreateForm;
            }

        }

        public IEnumerable<MctrCreateForm> mctrHeaderonLoad(IEnumerable<MctrCreateForm> mctrCreateForm)
        {
            MctrCreateForm recievedValue = mctrCreateForm.First();
            OracleParameter[] parameters = new OracleParameter[1];
            try
            {
                parameters[0] = new OracleParameter(":0", OracleDbType.Int32, recievedValue.MctrNo, ParameterDirection.Input);
                // parameters[1] = new OracleParameter(":1", OracleDbType.Varchar2, recievedValue.BemsOrig, ParameterDirection.Input);

                string query = "select * from mctr_header where mctr_no = :0";
                var result = entities.MCTR_HEADER.SqlQuery(query, parameters).ToList<MCTR_HEADER>();
                var parameters2 = new OracleParameter[1];
                parameters2[0] = new OracleParameter(":0", OracleDbType.Varchar2, result.First().BEMS_ORIG, ParameterDirection.Input);

                string query1 = "select last_name ||', '||  first_name from mctr_employee_v where bems_id =:0";
                var empFullName = entities.Database.SqlQuery<string>(query1, parameters2).Single<string>();
                string sqlstmt2 = "select status_descr from mctr_status where status_id = :0";
                foreach (var item in result)
                {
                    recievedValue.MctrNo = item.MCTR_NO;
                    recievedValue.OrigBu = item.ORIG_BU;
                    recievedValue.OrigGroup = item.ORIG_GROUP;
                    recievedValue.BemsOrig = item.BEMS_ORIG;
                    recievedValue.fyear = item.FISCAL_YEAR.ToString();
                    recievedValue.DateEnter = Convert.ToDateTime(item.DATE_ENTER);
                    recievedValue.ApplJrnlId = item.APPL_JRNL_ID;
                    recievedValue.ApprCdAcct = item.APPR_CD_ACCT;
                    recievedValue.ApprCdCostAcct = item.APPR_CD_COST_ACCT;
                    recievedValue.ApprCdFinCtl = item.APPR_CD_FIN_CTL;
                    recievedValue.ApprCdLbrAcct = item.APPR_CD_LBR_ACCT;
                    recievedValue.ApprCdMatlAcct = item.APPR_CD_MATL_ACCT;
                    recievedValue.ApprCdSrAcct = item.APPR_CD_SR_ACCT;
                    recievedValue.ApprCdSuper = item.APPR_CD_SUPER;
                    recievedValue.BemsAcct = item.BEMS_ACCT;
                    recievedValue.BemsCostAcct = item.BEMS_COST_ACCT;
                    recievedValue.BemsFinCtl = item.BEMS_FIN_CTL;
                    recievedValue.BemsLbrAcct = item.BEMS_LBR_ACCT;
                    recievedValue.BemsMatlAcct = item.BEMS_MATL_ACCT;
                    recievedValue.BemsSrAcct = item.BEMS_SR_ACCT;
                    recievedValue.BemsSuper = item.BEMS_SUPER;
                    recievedValue.DateApprAcct = item.DATE_APPR_ACCT.ToString();
                    recievedValue.DateApprCostAcct = item.DATE_APPR_COST_ACCT.ToString();
                    recievedValue.DateApprFinCtl = item.DATE_APPR_FIN_CTL.ToString();
                    recievedValue.DateApprLbrAcct = item.DATE_APPR_LBR_ACCT.ToString();
                    recievedValue.DateApprMatlAcct = item.DATE_APPR_MATL_ACCT.ToString();
                    recievedValue.DateApprSrAcct = item.DATE_APPR_SR_ACCT.ToString();
                    recievedValue.DateApprSuper = item.DATE_APPR_SUPER.ToString();
                    if (item.DATE_JOURNAL != null)
                    {
                        recievedValue.DateJournal = Convert.ToDateTime(item.DATE_JOURNAL);
                    }
                    recievedValue.JvItemCd = item.JV_ITEM_CD;
                    recievedValue.StatusId = item.STATUS_ID;
                    recievedValue.title = item.TITLE;
                    recievedValue.OrigFullName = empFullName;
                    recievedValue.ReasonCode = item.REASON_CODE;
                    recievedValue.preventativeMeasures = item.PREVENTATIVE_MEASURES == null ? "" : item.PREVENTATIVE_MEASURES;
                    //string sql = "select  COUNT(*) as LINE_NO,SUM(NVL(QUANTITY_FROM,0)) as QUANTITY_FROM,SUM(NVL(QUANTITY_TO,0)) as QUANTITY_TO, SUM(NVL(AMOUNT_FROM,0)) as AMOUNT_FROM, SUM(NVL(AMOUNT_TO,0)) as AMOUNT_TO  from MCTR_LINE_ITEM where MCTR_NO=" + item.MCTR_NO + "";
                    //var result1 = entities.Database.SqlQuery<MctrLineItem>(sql).SingleOrDefault();

                }
                parameters2[0] = new OracleParameter(":status_id", OracleDbType.Varchar2, recievedValue.StatusId, ParameterDirection.Input);

                var response2 = entities.Database.SqlQuery<string>(sqlstmt2, parameters2).Single<string>();
                recievedValue.StatusDescription = response2.ToString();
                if (result.First().BEMS_SUPER != null)
                {
                    parameters2[0] = new OracleParameter(":0", OracleDbType.Varchar2, result.First().BEMS_SUPER, ParameterDirection.Input);
                    var empFullName1 = entities.Database.SqlQuery<string>(query1, parameters2).Single<string>();

                    recievedValue.SuprApprFullName = empFullName1.ToString();
                }
                if (result.First().BEMS_ACCT != null)
                {
                    parameters2[0] = new OracleParameter(":0", OracleDbType.Varchar2, result.First().BEMS_ACCT, ParameterDirection.Input);
                    var empFullName2 = entities.Database.SqlQuery<string>(query1, parameters2).Single<string>();
                    recievedValue.AccApprFullName = empFullName2.ToString();
                }
                if (result.First().BEMS_COST_ACCT != null)
                {
                    parameters2[0] = new OracleParameter(":0", OracleDbType.Varchar2, result.First().BEMS_COST_ACCT, ParameterDirection.Input);
                    var empFullName2 = entities.Database.SqlQuery<string>(query1, parameters2).Single<string>();
                    recievedValue.CostAccApprFullName = empFullName2.ToString();
                }
                if (result.First().BEMS_FIN_CTL != null)
                {
                    parameters2[0] = new OracleParameter(":0", OracleDbType.Varchar2, result.First().BEMS_FIN_CTL, ParameterDirection.Input);
                    var empFullName2 = entities.Database.SqlQuery<string>(query1, parameters2).Single<string>();
                    recievedValue.FinApprFullName = empFullName2.ToString();
                }
                if (result.First().BEMS_SR_ACCT != null)
                {
                    parameters2[0] = new OracleParameter(":0", OracleDbType.Varchar2, result.First().BEMS_SR_ACCT, ParameterDirection.Input);
                    var empFullName2 = entities.Database.SqlQuery<string>(query1, parameters2).Single<string>();
                    recievedValue.JournApprFullName = empFullName2.ToString();
                }
                if (result.First().BEMS_LBR_ACCT != null)
                {
                    parameters2[0] = new OracleParameter(":0", OracleDbType.Varchar2, result.First().BEMS_LBR_ACCT, ParameterDirection.Input);
                    var empFullName2 = entities.Database.SqlQuery<string>(query1, parameters2).Single<string>();
                    recievedValue.LbrApprFullName = empFullName2.ToString();
                }
                if (result.First().BEMS_MATL_ACCT != null)
                {
                    parameters2[0] = new OracleParameter(":0", OracleDbType.Varchar2, result.First().BEMS_MATL_ACCT, ParameterDirection.Input);
                    var empFullName2 = entities.Database.SqlQuery<string>(query1, parameters2).Single<string>();
                    recievedValue.MatApprFullName = empFullName2.ToString();
                }
                string sqlstmt5 = "select count(*) from mctr_line_item where MCTR_NO=:0";
                parameters[0] = new OracleParameter(":mctr_no", OracleDbType.Int32, result.First().MCTR_NO, ParameterDirection.Input);

                var response6 = entities.Database.SqlQuery<int>(sqlstmt5, parameters).Single<int>();
                sqlstmt5 = "select sum(amount_from) from mctr_line_item where MCTR_NO=:0";
                parameters[0] = new OracleParameter(":mctr_no", OracleDbType.Int32, result.First().MCTR_NO, ParameterDirection.Input);
                try
                {
                    var response7 = entities.Database.SqlQuery<Decimal?>(sqlstmt5, parameters).Single<Decimal?>();
                    recievedValue.TotalAmtFrom = Convert.ToDecimal(response7 == null ? Convert.ToDecimal("0.0") : Convert.ToDecimal(response7.ToString()));
                }
                catch (Exception e)
                {
                    recievedValue.TotalAmtFrom = Convert.ToDecimal("0.0");
                    logger.Error("Error from  Mctr.DataAccess.MctrCreateFormRepository:" + e.Message);
                }

                sqlstmt5 = "select sum(amount_to) from mctr_line_item where MCTR_NO=:0";
                parameters[0] = new OracleParameter(":mctr_no", OracleDbType.Int32, result.First().MCTR_NO, ParameterDirection.Input);
                try
                {
                    var response8 = entities.Database.SqlQuery<Decimal>(sqlstmt5, parameters).Single<Decimal>();
                    recievedValue.TotalAmtTo = Convert.ToDecimal(response8 == 0 ? Convert.ToDecimal("0.0") : Convert.ToDecimal(response8.ToString()));
                }
                catch (Exception e)
                {
                    recievedValue.TotalAmtTo = Convert.ToDecimal("0.0");
                    logger.Error("Error from  Mctr.DataAccess.MctrCreateformrepository:" + e.Message);
                }

                sqlstmt5 = "select sum(quantity_from) from mctr_line_item where MCTR_NO=:0";
                parameters[0] = new OracleParameter(":mctr_no", OracleDbType.Int32, result.First().MCTR_NO, ParameterDirection.Input);
                try
                {
                    var response9 = entities.Database.SqlQuery<Decimal>(sqlstmt5, parameters).Single<Decimal>();
                    recievedValue.TotalQtyFrom = Convert.ToDecimal(response9 == 0 ? "0.0" : response9.ToString());
                }
                catch (Exception e)
                {
                    recievedValue.TotalQtyFrom = Convert.ToDecimal("0.0");
                    logger.Error("Error from  Mctr.DataAccess.MctrCreateFormrepository:" + e.Message);
                }

                sqlstmt5 = "select sum(quantity_to) from mctr_line_item where MCTR_NO=:0";
                parameters[0] = new OracleParameter(":mctr_no", OracleDbType.Int32, result.First().MCTR_NO, ParameterDirection.Input);
                try
                {
                    var response10 = entities.Database.SqlQuery<Decimal?>(sqlstmt5, parameters).Single<Decimal?>();
                    recievedValue.TotalQtyTo = Convert.ToDecimal(response10 == null ? "0.0" : response10.ToString());
                }
                catch (Exception e)
                {
                    recievedValue.TotalQtyTo = Convert.ToDecimal("0.0");
                    logger.Error("Error from  Mctr.DataAccess.MctrCreateFormRepository:" + e.Message);
                }



                StringBuilder sqlz = new StringBuilder();

                OracleParameter[] parametersq = new OracleParameter[1];
                // SQL: select sum ( amount_from ) into : oh_amt_from from mctr_ovrhd where mctr_no = : mctr_line_item . mctr_no and line_no = : mctr_line_item . line_no and from_to = 'F'
                sqlz = new StringBuilder("select sum ( amount_from ) as oh_amt_from from mctr_ovrhd where mctr_no = :0 and from_to =\'F\'");
                parametersq[0] = new OracleParameter(":mctr_no", OracleDbType.Int32, result.First().MCTR_NO, ParameterDirection.Input);
                try
                {
                    var response11 = entities.Database.SqlQuery<Decimal?>(sqlz.ToString(), parametersq).Single();
                    recievedValue.totalOhFrom = response11 == null ? Convert.ToDecimal(0.0) : Convert.ToDecimal(response11.ToString());
                }
                catch (Exception e)
                {
                    var response11 = entities.Database.SqlQuery<String>(sqlz.ToString(), parametersq).Single();
                    recievedValue.totalOhFrom = response11 == null ? Convert.ToDecimal(0.0) : Convert.ToDecimal(response11.ToString());
                    logger.Error("Error from  Mctr.DataAccess.MctrCreateFormrepository:" + e.Message);

                }

                // SQL: select sum ( amount_from ) into : oh_amt_to from mctr_ovrhd where mctr_no = : mctr_line_item . mctr_no and line_no = : mctr_line_item . line_no and from_to = 't'
                sqlz = new StringBuilder("select sum ( amount_from ) as oh_amt_to from mctr_ovrhd where mctr_no = :0 and from_to =\'T\'");
                parametersq[0] = new OracleParameter(":mctr_no", OracleDbType.Int32, result.First().MCTR_NO, ParameterDirection.Input);

                try
                {
                    var response12 = entities.Database.SqlQuery<Decimal?>(sqlz.ToString(), parametersq).Single();
                    recievedValue.totalOhTo = response12 == null ? Convert.ToDecimal("0.0") : Convert.ToDecimal(response12.ToString());
                }
                catch (Exception e)
                {
                    var response12 = entities.Database.SqlQuery<String>(sqlz.ToString(), parametersq).Single();
                    recievedValue.totalOhTo = response12 == null ? Convert.ToDecimal("0.0") : Convert.ToDecimal(response12.ToString());
                    logger.Error("Error from  Mctr.DataAccess.MctrCreateformRepository:" + e.Message);
                }
                sqlstmt2 = "select count(*) from mctr_ovrhd where mctr_no = :0 and from_to =\'T\'";
                parameters[0] = new OracleParameter(":mctr_no", OracleDbType.Int32, result.First().MCTR_NO, ParameterDirection.Input);
                try
                {
                    var response17 = entities.Database.SqlQuery<int>(sqlstmt2, parameters).Single<int>();
                    recievedValue.LinesOhTo = Convert.ToInt32(response17.ToString());
                }
                catch (Exception e)
                {
                    logger.Error("Error from  Mctr.DataAccess.MctrCreateFormrepository:" + e.Message);
                    recievedValue.LinesOhTo = 0;
                }
                sqlstmt2 = "select count(*) from mctr_ovrhd where mctr_no = :0 and from_to =\'F\'";
                parameters[0] = new OracleParameter(":mctr_no", OracleDbType.Int32, result.First().MCTR_NO, ParameterDirection.Input);
                try
                {
                    var response18 = entities.Database.SqlQuery<int>(sqlstmt2, parameters).Single<int>();
                    recievedValue.LinesOhFrom = Convert.ToInt32(response18.ToString());
                }
                catch (Exception e)
                {
                    logger.Error("Error from  Mctr.DataAccess.MctrCreateFormrepository:" + e.Message);
                    recievedValue.LinesOhFrom = 0;
                }

                sqlstmt2 = "select nvl(sum ( amount_from ),0) from mctr_offset where mctr_no = :0 ";

                parameters[0] = new OracleParameter(":MCTR_NO", OracleDbType.Int32, result.First().MCTR_NO, ParameterDirection.Input);
                try
                {
                    recievedValue.totalOffset = entities.Database.SqlQuery<Decimal>(sqlstmt2, parameters).SingleOrDefault();
                }
                catch (Exception e)
                {
                    logger.Error("Error from  Mctr.DataAccess.MctrCreateFormrepository:" + e.Message);
                    recievedValue.totalOffset = 0;
                }

                var attachmntSql = "select count(*) from mctr_attach where mctr_no = :0 ";
                OracleParameter[] parameterAttchSql = new OracleParameter[1];
                parameterAttchSql[0] = new OracleParameter(":MCTR_NO", OracleDbType.Int32, result.First().MCTR_NO, ParameterDirection.Input);
                recievedValue.AttachmentCount = entities.Database.SqlQuery<int>(attachmntSql, parameterAttchSql).SingleOrDefault();


                var commentsSql = "select count(*) from mctr_comment where mctr_no = :0 ";
                OracleParameter[] parameterCommentSql = new OracleParameter[1];
                parameterCommentSql[0] = new OracleParameter(":MCTR_NO", OracleDbType.Int32, result.First().MCTR_NO, ParameterDirection.Input);
                recievedValue.CommentsCount = entities.Database.SqlQuery<int>(commentsSql, parameterCommentSql).SingleOrDefault();


                recievedValue.totalOh = Convert.ToDecimal(recievedValue.totalOhFrom + recievedValue.totalOhTo);
                recievedValue.Linesfrom = Convert.ToInt32(response6 == null ? "0.0" : response6.ToString());
                //  recievedValue.LinesOhFrom = Convert.ToInt32(response6 == null ? "0.0" : response6.ToString());
                recievedValue.LinesTo = Convert.ToInt32(response6 == null ? "0.0" : response6.ToString());
                /// recievedValue.LinesOhTo = Convert.ToInt32(response6 == null ? "0.0" : response6.ToString());


                recievedValue.CalAmount = Convert.ToDecimal(recievedValue.TotalAmtFrom + recievedValue.TotalAmtTo);



                var responseDates = GetDates(recievedValue);
                recievedValue.PeriodFrom = responseDates.PeriodFrom;
                recievedValue.PeriodTo = responseDates.PeriodTo;
                recievedValue.COW = responseDates.COW;
                var sql = new StringBuilder("select count(*) from  mctr_offset where mctr_no = :0");
                parameters = new OracleParameter[1];
                parameters[0] = new OracleParameter(":MCTR_NO", OracleDbType.Int32, recievedValue.MctrNo, ParameterDirection.Input);
                recievedValue.OffsetLines = entities.Database.SqlQuery<int>(sql.ToString(), parameters).SingleOrDefault();

                List<MctrCreateForm> res = new List<MctrCreateForm>();
                //     recievedValue.LineItem = mctrCreateForm.First().LineItem;
                res.Add(recievedValue);
                return res;
            }
            catch (Exception e)
            {
                logger.Error("Error from MCTR.DataAccess.LineItemRepository.mctrLineItemPostQuery" + e.Message);
                throw;
            }
        }

        public MctrCreateForm GetDates(MctrCreateForm mctrCreateForm)
        {
            var mctrcreateform = new MctrCreateForm();
            string sqlstmt = "";
            OracleParameter[] parameters;

            sqlstmt = @"select to_char(begin_dt,'dd-mon-yyyy') 
                         from mctr_mth_cal_mv
                        where fiscal_year = :0 and accounting_period = 1";
            parameters = new OracleParameter[1];
            parameters[0] = new OracleParameter(":fiscal_year", OracleDbType.Int32, Convert.ToInt32(mctrCreateForm.fyear), ParameterDirection.Input);
            mctrcreateform.PeriodFrom = entities.Database.SqlQuery<string>(sqlstmt, parameters).SingleOrDefault();

            sqlstmt = @"select to_char(max(end_dt),'dd-mon-yyyy')
                                 from mctr_mth_cal_mv
                                where fiscal_year = :0 and begin_dt <= sysdate";
            parameters = new OracleParameter[1];
            parameters[0] = new OracleParameter(":fiscal_year", OracleDbType.Int32, Convert.ToInt32(mctrCreateForm.fyear), ParameterDirection.Input);
            mctrcreateform.PeriodTo = entities.Database.SqlQuery<string>(sqlstmt, parameters).SingleOrDefault();

            try
            {
                sqlstmt = " select to_char(end_dt,'dd-mon-yyyy')  from mctr_cow_v";
                mctrcreateform.COW = entities.Database.SqlQuery<string>(sqlstmt).SingleOrDefault();
            }
            catch (Exception ex)
            {
                logger.Error("Error from  Mctr.DataAccess.MctrCreateFormrepository:" + ex.Message);
                mctrcreateform.COW = DateTime.Now.ToString("dd-MMM-yyyy");
            }

            return mctrcreateform;

        }
        //public IEnumerable<MctrCreateForm> ttdInqCyrTtdInqCyrOnLoad(IEnumerable<MctrCreateForm> mctrCreateForm)
        //{
        //    StringBuilder sql = new StringBuilder("");//  StringBuilder sql = new StringBuilder("");

        //    MctrCreateForm mctrform = mctrCreateForm.First();
        //    string query = @"select fiscal_year as fyear, accounting_period, ovrhd_base_yr_cd7, account, project_id, activity_id, analysis_type, resource_sub_cat, wpd_id7, proj_trans_type, proj_trans_code, bus_unit_gl_from, home_location_cd7, deptid_from, business_unit_gl, work_location_cd7, deptid, bulk_alctn_cd7, sum(ttd_quantity7) as ttd_quantity7, sum(ttd_domestic_amt7) as ttd_domestic_amt7, class_cd7, max(null) as affiliate, max('nac') as tag from mctr_rp_master_v group by fiscal_year, accounting_period, ovrhd_base_yr_cd7, account, project_id, activity_id, analysis_type, resource_sub_cat, wpd_id7, proj_trans_type, proj_trans_code, bus_unit_gl_from, home_location_cd7, deptid_from, business_unit_gl, work_location_cd7, deptid, bulk_alctn_cd7, class_cd7 where activity_id = :global.g_activity_id and project_id = :global.g_project_id and
        //    account = mctrCreateForm.g_account and business_unit_gl = " + mctrform.Business_Unit_Gl + " and bus_unit_gl_from = " + mctrform.BusUnitGlFrom + " and analysis_type = 'act' and (ovrhd_base_yr_cd7 = " + mctrform.OhBaseYrFrom + " or " + mctrform.OhBaseYrFrom + " is null) and (tag = " + mctrform.tag + " and (affiliate = " + mctrform.affiliate + " or " + mctrform.affiliate + " is null)) and (home_location_cd7 =" + mctrform.HomeLocFrom + " or " + mctrform.HomeLocFrom + " is null) and (deptid_from = " + mctrform.HomeDeptFrom + " or " + mctrform.HomeDeptFrom + " is null) and (work_location_cd7 = " + mctrform.WorkLocationCd7 + " or " + mctrform.WorkLocationCd7 + " is null) and (deptid = " + mctrform.DeptidFrom + " or " + mctrform.DeptidFrom + " is null) and (resource_sub_cat = " + mctrform.ResourceSubCat + " or " + mctrform.ResourceSubCat + " is null) and (proj_trans_type = " + mctrform.ProjTransTypeFrom + " or(proj_trans_type like 'LB%' and " + mctrform.ProjTransTypeFrom + " = 'LBR') or(proj_trans_type not like 'LB%' and " + mctrform.ProjTransTypeFrom + " = 'OTH')) and (proj_trans_code = " + mctrform.ProjTransCodeFrom + " or " + mctrform.ProjTransCodeFrom + " is null) and (class_cd7 = " + mctrform.ClassCd7 + " or " + mctrform.ClassCd7 + " is null) and (wpd_id7 = " + mctrform.WpdId7 + " or" + mctrform.WpdId7 + " is null) and (bulk_alctn_cd7 = " + mctrform.BulkAlctnCd7 + " or " + mctrform.BulkAlctnCd7 + " is null) and (" + mctrform.BulkAlctnCd7 + " = " + mctrform.MctrNo + ") and (" + mctrform.inquire_bems + " =" + mctrform.session_bems + ") orderby ovrhd_base_yr_cd7 desc, proj_trans_type, proj_trans_code, bus_unit_gl_from, deptid_from, home_location_cd7, deptid, work_location_cd7,resource_sub_cat, class_cd7, wpd_id7, bulk_alctn_cd7;";
        //    var result = entities.Database.SqlQuery<MctrCreateForm>(query);
        //    return result;
        //}

        public IEnumerable<MctrCreateForm> ttdInqPyrTtdInqPyrOnLoad(IEnumerable<MctrCreateForm> mctrCreateForm)
        {
            StringBuilder sql = new StringBuilder("");
            MctrCreateForm mctrform = mctrCreateForm.First();
            string query = @"select fiscal_year as fyear, accounting_period, ovrhd_base_yr_cd7, account, project_id, activity_id, analysis_type, resource_sub_cat, wpd_id7, proj_trans_type, proj_trans_code, bus_unit_gl_from, home_location_cd7, deptid_from, business_unit_gl, work_location_cd7, deptid, bulk_alctn_cd7, sum(ttd_quantity7) as ttd_quantity7, sum(ttd_domestic_amt7) as ttd_domestic_amt7, class_cd7, max(null) as affiliate, max('nac') as tag from mctr_rp_master_v group by fiscal_year, accounting_period, ovrhd_base_yr_cd7, account, project_id, activity_id, analysis_type, resource_sub_cat, wpd_id7, proj_trans_type, proj_trans_code, bus_unit_gl_from, home_location_cd7, deptid_from, business_unit_gl, work_location_cd7, deptid, bulk_alctn_cd7, class_cd7 where activity_id = :global.g_activity_id and project_id = :global.g_project_id and
            account = mctrCreateForm.g_account and business_unit_gl = " + mctrform.Business_Unit_Gl + " and bus_unit_gl_from = " + mctrform.BusUnitGlFrom + " and analysis_type = 'act' and (ovrhd_base_yr_cd7 = " + mctrform.OhBaseYrFrom + " or " + mctrform.OhBaseYrFrom + " is null) and (tag = " + mctrform.tag + " and (affiliate = " + mctrform.affiliate + " or " + mctrform.affiliate + " is null)) and (home_location_cd7 =" + mctrform.HomeLocFrom + " or " + mctrform.HomeLocFrom + " is null) and (deptid_from = " + mctrform.HomeDeptFrom + " or " + mctrform.HomeDeptFrom + " is null) and (work_location_cd7 = " + mctrform.WorkLocationCd7 + " or " + mctrform.WorkLocationCd7 + " is null) and (deptid = " + mctrform.DeptidFrom + " or " + mctrform.DeptidFrom + " is null) and (resource_sub_cat = " + mctrform.ResourceSubCat + " or " + mctrform.ResourceSubCat + " is null) and (proj_trans_type = " + mctrform.ProjTransTypeFrom + " or(proj_trans_type like 'LB%' and " + mctrform.ProjTransTypeFrom + " = 'LBR') or(proj_trans_type not like 'LB%' and " + mctrform.ProjTransTypeFrom + " = 'OTH')) and (proj_trans_code = " + mctrform.ProjTransCodeFrom + " or " + mctrform.ProjTransCodeFrom + " is null) and (class_cd7 = " + mctrform.ClassCd7 + " or " + mctrform.ClassCd7 + " is null) and (wpd_id7 = " + mctrform.WpdId7 + " or" + mctrform.WpdId7 + " is null) and (bulk_alctn_cd7 = " + mctrform.BulkAlctnCd7 + " or " + mctrform.BulkAlctnCd7 + " is null) and (" + mctrform.BulkAlctnCd7 + " = " + mctrform.MctrNo + ") and (" + mctrform.inquire_bems + " =" + mctrform.session_bems + ") orderby ovrhd_base_yr_cd7 desc, proj_trans_type, proj_trans_code, bus_unit_gl_from, deptid_from, home_location_cd7, deptid, work_location_cd7,resource_sub_cat, class_cd7, wpd_id7, bulk_alctn_cd7;";
            var result = entities.Database.SqlQuery<MctrCreateForm>(query);
            return result;
        }

        //OLd

        public IEnumerable<MctrCreateForm> MctrHeaderOnLoad(IEnumerable<MctrCreateForm> mctrCreateForm)
        {
            MctrCreateForm recievedValue = mctrCreateForm.First();
            //recievedValue.MctrNo = recievedValue.MctrNo == null ? 0 : recievedValue.MctrNo;

            OracleParameter[] parameters = new OracleParameter[5];
            //NTC Parameter List and Oracle Parameters
            // SQL: select * from mctr_owner . mctr_header where mctr_no = : parameter . p_mctr_no or ( :parameter.p_mctr_no = 0 and ( exists ( select lu.business_unit from mctr_role_bu lu where lu . bems = : global . session_bems and ( lu . business_unit = m . orig_bu or ( lu . business_unit = '**' and exists ( select bu . business_unit from mctr_bus_unit_v bu where bu . business_unit = m . orig_bu and bu . group_cd7 = lu . group_cd7 ) ) ) ) or exists ( select op_segment_7 from mctr_bus_unit_v buv where group_cd7 = m . orig_group and exists ( select group_cd7 from mctr_role_bu rbu where bems = : global . session_bems and exists ( select group_cd7 from mctr_bus_unit_v where op_segment_7 = buv . op_segment_7 and group_cd7 = rbu . group_cd7 ) ) and m . mctr_no = : mctr_header . mctr_no ) ) ) orderby mctr_no
            string sqlstmt = @"select * from mctr_header m where mctr_no = :parameter or
(:mctr1 = 0 and (exists
(select lu.business_unit from mctr_role_bu lu
  where lu.bems = :global and
       (lu.business_unit = m.orig_bu or 
       (lu.business_unit = '**' and exists
        (select bu.business_unit from mctr_bus_unit_v bu
         where bu.business_unit = m.orig_bu and
               bu.group_cd7 = lu.group_cd7))))
or exists
(select op_segment_7 from mctr_bus_unit_v buv
   where group_cd7 = m.orig_group
     and exists
        (select group_cd7 from mctr_role_bu rbu
          where bems = :global1
            and exists (select group_cd7 from mctr_bus_unit_v
                         where op_segment_7 = buv.op_segment_7
                           and group_cd7 = rbu.group_cd7))
     and m.mctr_no = :mctr2)
))
  order by mctr_no";

            parameters[0] = new OracleParameter(":mctr1", OracleDbType.Int32, recievedValue.MctrNo, ParameterDirection.Input);
            parameters[1] = new OracleParameter(":mctr2", OracleDbType.Int32, recievedValue.MctrNo, ParameterDirection.Input);
            parameters[2] = new OracleParameter(":global", OracleDbType.Varchar2, recievedValue.BemsOrig, ParameterDirection.Input);
            parameters[3] = new OracleParameter(":global1", OracleDbType.Varchar2, recievedValue.BemsOrig, ParameterDirection.Input);
            parameters[4] = new OracleParameter(":parameter", OracleDbType.Int32, recievedValue.MctrNo, ParameterDirection.Input);

            var response = entities.Database.SqlQuery<MctrCreateForm>(sqlstmt, parameters).ToList();


            return response;
        }


        public IEnumerable<MctrCreateForm> mctrHeaderbutApplWhenButtonPressedOpenLOV(IEnumerable<MctrCreateForm> mctrCreateForm)
        {
            MctrCreateForm recievedValue = mctrCreateForm.First();

            OracleParameter[] parameters = new OracleParameter[10];
            // SQL: select count ( * ) into v_role_count from mctr_role where bems = : global . session_bems and accountant_role = 'Y'
            string sqlstmt = "select count (*) into v_role_count from mctr_role where bems = :session_bems and accountant_role = 'Y';";

            parameters[0] = new OracleParameter(":v_role_count", OracleDbType.Int32, ParameterDirection.Output);
            parameters[1] = new OracleParameter(":session_bems", OracleDbType.Int32, recievedValue.bems, ParameterDirection.Input);



            var response = entities.Database.SqlQuery<MctrCreateForm>(sqlstmt, parameters).ToList();

            return response;


        }

        public IEnumerable<MctrCreateForm> mctrHeaderjvItemCdPostTextItem(IEnumerable<MctrCreateForm> mctrCreateForm)
        {
            MctrCreateForm recievedValue = mctrCreateForm.First();
            OracleParameter[] parameters = new OracleParameter[10];
            // SQL: select count ( * ) into v_role_count from mctr_role where bems = : session_bems and accountant_role = 'Y'
            string sqlstmt = "select count ( * ) into v_role_count from mctr_role where bems = :session_bems and accountant_role = 'Y';";

            parameters[0] = new OracleParameter(":v_role_count", OracleDbType.Int32, ParameterDirection.Output);
            parameters[1] = new OracleParameter(":session_bems", OracleDbType.Int32, recievedValue.bems, ParameterDirection.Input);
            var response = entities.Database.SqlQuery<MctrCreateForm>(sqlstmt, parameters).ToList();
            return response;

        }


        public IEnumerable<MctrCreateForm> mctrHeaderbutAcctWhenButtonPressedOpenLOV(IEnumerable<MctrCreateForm> mctrCreateForm)
        {
            MctrCreateForm recievedValue = mctrCreateForm.First();
            OracleParameter[] parameters = new OracleParameter[10];
            // SQL: select count (*) into v_role_count from mctr_role where bems = : global . session_bems and accountant_role = 'Y'
            string sqlstmt = "select count ( * ) into v_role_count from mctr_role where bems = :session_bems and accountant_role = 'Y';";

            parameters[0] = new OracleParameter(":v_role_count", OracleDbType.Int32, ParameterDirection.Output);
            parameters[1] = new OracleParameter(":session_bems", OracleDbType.Int32, recievedValue.bems, ParameterDirection.Input);
            var response = entities.Database.SqlQuery<MctrCreateForm>(sqlstmt, parameters).ToList();

            return response;

        }


        public IEnumerable<MctrCreateForm> mctrHeaderbutViewJrnlsWhenButtonPressed(IEnumerable<MctrCreateForm> mctrCreateForm)
        {
            MctrCreateForm recievedValue = mctrCreateForm.First();
            OracleParameter[] parameters = new OracleParameter[10];
            //NTC Parameter List and Oracle Parameters
            // SQL: select * from mctr_owner . mctr_header where mctr_no = : parameter . p_mctr_no or ( :parameter.p_mctr_no = 0 and ( exists ( select lu.business_unit from mctr_role_bu lu where lu . bems = : global . session_bems and ( lu . business_unit = m . orig_bu or ( lu . business_unit = '**' and exists ( select bu . business_unit from mctr_bus_unit_v bu where bu . business_unit = m . orig_bu and bu . group_cd7 = lu . group_cd7 ) ) ) ) or exists ( select op_segment_7 from mctr_bus_unit_v buv where group_cd7 = m . orig_group and exists ( select group_cd7 from mctr_role_bu rbu where bems = : global . session_bems and exists ( select group_cd7 from mctr_bus_unit_v where op_segment_7 = buv . op_segment_7 and group_cd7 = rbu . group_cd7 ) ) and m . mctr_no = : mctr_header . mctr_no ) ) ) orderby mctr_no
            string sqlstmt = "select * from mctr_header where mctr_no = :parameter.p_mctr_no or (parameter.p_mctr_no = 0 and ( exists ( select lu.business_unit from mctr_role_bu lu where lu.bems = :global.session_bems and ( lu.business_unit = m . orig_bu or (lu.business_unit = '**' and exists ( select bu.business_unit from mctr_bus_unit_v bu where bu.business_unit = m.orig_bu and bu.group_cd7 = lu.group_cd7 ) ) ) ) or exists ( select op_segment_7 from mctr_bus_unit_v buv where group_cd7 = m.orig_group and exists ( select group_cd7 from mctr_role_bu rbu where bems = :global.session_bems and exists ( select group_cd7 from mctr_bus_unit_v where op_segment_7 = buv.op_segment_7 and group_cd7 = rbu . group_cd7 ) ) and m.mctr_no = : mctr_header . mctr_no ) ) ) orderby mctr_no;";
            parameters[0] = new OracleParameter(":rsc_from", OracleDbType.Int32, ParameterDirection.Output);
            parameters[1] = new OracleParameter(":class_cd_from", OracleDbType.Int32, obj.fyear, ParameterDirection.Input);
            parameters[1] = new OracleParameter(":PROJ_TRANS_TYPE_FROM", OracleDbType.Int32, obj.fyear, ParameterDirection.Input);
            parameters[1] = new OracleParameter(":v_setid", OracleDbType.Int32, recievedValue.SetID, ParameterDirection.Input);

            var response = entities.Database.SqlQuery<MctrCreateForm>(sqlstmt, parameters).ToList();
            return response;
        }


        public IEnumerable<MctrCreateForm> mctrHeaderPostUpdate(IEnumerable<MctrCreateForm> mctrCreateForm)
        {
            MctrCreateForm recievedValue = mctrCreateForm.First();
            OracleParameter[] parameters = new OracleParameter[1];
            OracleParameter[] parameters1 = new OracleParameter[2];
            // SQL: select mctr_seq_no . nextval into : mctr_header . mctr_no from dual

            string sqlstmt = "select count(*) into v_role_count from mctr_role where bems = :global.session_bems and accountant_role = 'Y';";
            parameters[0] = new OracleParameter(":global.session_bems", OracleDbType.Int32, recievedValue.bems, ParameterDirection.Output);
            var response = entities.Database.SqlQuery<MctrCreateForm>(sqlstmt, parameters).ToList();
            return response;
        }

        public IEnumerable<MctrCreateForm> mctrHeaderPostRecord(IEnumerable<MctrCreateForm> mctrCreateForm)
        {
            MctrCreateForm recievedValue = mctrCreateForm.First();
            OracleParameter[] parameters = new OracleParameter[1];
            OracleParameter[] parameters1 = new OracleParameter[2];
            // SQL: select mctr_seq_no . nextval into : mctr_header . mctr_no from dual

            string sqlstmt = "select count(*) into v_count from mctr_attach where mctr_no = :mctr_no;";
            parameters[0] = new OracleParameter(":mctr_no", OracleDbType.Int32, recievedValue.MctrNo, ParameterDirection.Input);
            parameters[0] = new OracleParameter(":v_count", OracleDbType.Int32, ParameterDirection.Output);
            var response = entities.Database.SqlQuery<int>(sqlstmt, parameters).ToString();
            // SQL:  select count(*) into v_count from mctr_comment where mctr_no = :mctr_header.mctr_no;

            string sqlstmt1 = "select count(*) into v_count from mctr_comment where mctr_no = :mctr_no;";
            parameters1[0] = new OracleParameter(":mctr_no", OracleDbType.Int32, recievedValue.MctrNo, ParameterDirection.Input);
            parameters1[0] = new OracleParameter(":v_count", OracleDbType.Int32, ParameterDirection.Output);
            var response1 = entities.Database.SqlQuery<int>(sqlstmt1, parameters1).ToString();
            int v_count_a = Convert.ToInt32(response);
            int v_count_c = Convert.ToInt32(response1);
            list.Add(recievedValue);
            return list;

        }

        public IEnumerable<MctrCreateForm> mctrHeaderbutLbrAcctWhenButtonPressedOpenLOV(IEnumerable<MctrCreateForm> mctrCreateForm)
        {

            MctrCreateForm recievedValue = mctrCreateForm.First();
            OracleParameter[] parameters = new OracleParameter[1];
            OracleParameter[] parameters1 = new OracleParameter[2];
            // SQL: select count ( * ) into v_role_count from mctr_role where bems = : global . session_bems and accountant_role = 'Y'

            string sqlstmt = "select count (*) into v_role_count from mctr_role where bems = :0 and accountant_role = 'Y'";
            parameters[0] = new OracleParameter(":bems", OracleDbType.Int32, recievedValue.bems, ParameterDirection.Input);
            parameters[0] = new OracleParameter(":v_role_count", OracleDbType.Int32, ParameterDirection.Output);
            var response = entities.Database.SqlQuery<int>(sqlstmt, parameters).ToString();
            int v_role_count = Convert.ToInt32(response);
            list.Add(recievedValue);
            return list;

        }



        public IEnumerable<MctrCreateForm> mctrHeaderbutMatlAcctWhenButtonPressedOpenLOV(IEnumerable<MctrCreateForm> mctrCreateForm)
        {

            MctrCreateForm recievedValue = mctrCreateForm.First();
            OracleParameter[] parameters = new OracleParameter[1];
            OracleParameter[] parameters1 = new OracleParameter[2];
            // SQL: select count ( * ) into v_role_count from mctr_role where bems = : global.ession_bems and accountant_role = 'Y'

            string sqlstmt = "select count (*) into v_role_count from mctr_role where bems = :0 and accountant_role = 'Y'";
            parameters[0] = new OracleParameter(":bems", OracleDbType.Int32, recievedValue.bems, ParameterDirection.Input);
            parameters[0] = new OracleParameter(":v_role_count", OracleDbType.Int32, ParameterDirection.Output);
            var response = entities.Database.SqlQuery<int>(sqlstmt, parameters).ToString();

            int v_role_count = Convert.ToInt32(response);
            list.Add(recievedValue);
            return list;
        }

        public IEnumerable<MctrCreateForm> mctrHeaderbutCostAcctWhenButtonPressedOpenLOV(IEnumerable<MctrCreateForm> mctrCreateForm)
        {

            MctrCreateForm recievedValue = mctrCreateForm.First();
            OracleParameter[] parameters = new OracleParameter[1];
            OracleParameter[] parameters1 = new OracleParameter[2];
            // SQL: select count ( * ) into v_role_count from mctr_role where bems = : global.ession_bems and accountant_role = 'Y'

            string sqlstmt = "select count (*) into v_role_count from mctr_role where bems = :0 and accountant_role = 'Y'";
            parameters[0] = new OracleParameter(":bems", OracleDbType.Int32, recievedValue.bems, ParameterDirection.Input);
            parameters[0] = new OracleParameter(":v_role_count", OracleDbType.Int32, ParameterDirection.Output);

            var response = entities.Database.SqlQuery<int>(sqlstmt, parameters).ToString();

            int v_role_count = Convert.ToInt32(response);
            list.Add(recievedValue);
            return list;
        }


        public IEnumerable<MctrCreateForm> mctrHeaderbutSrMgrWhenButtonPressedOpenLOV(IEnumerable<MctrCreateForm> mctrCreateForm)
        {

            MctrCreateForm recievedValue = mctrCreateForm.First();
            OracleParameter[] parameters = new OracleParameter[1];
            OracleParameter[] parameters1 = new OracleParameter[2];
            //SQL:  select count (* ) into v_role_count from mctr_role where bems = : global.session_bems and accountant_role = 'Y'

            string sqlstmt = "select count (*) into v_role_count from mctr_role where bems = :0 and accountant_role = 'Y'";
            parameters[0] = new OracleParameter(":bems", OracleDbType.Int32, recievedValue.bems, ParameterDirection.Input);
            parameters[0] = new OracleParameter(":v_role_count", OracleDbType.Int32, ParameterDirection.Output);

            var response = entities.Database.SqlQuery<int>(sqlstmt, parameters).ToString();

            int v_role_count = Convert.ToInt32(response);
            list.Add(recievedValue);
            return list;
        }



        public IEnumerable<MctrCreateForm> mctrHeaderWhenNewItemInstance(IEnumerable<MctrCreateForm> mctrCreateForm)
        {
            MctrCreateForm recievedValue = mctrCreateForm.First();
            OracleParameter[] parameters = new OracleParameter[1];
            OracleParameter[] parameters1 = new OracleParameter[2];
            // SQL: select count(*) into v_count from mctr_attach where mctr_no = :mctr_no;
            string sqlstmt = "select count(*) into v_count from mctr_attach where mctr_no = :mctr_no;";
            parameters[0] = new OracleParameter(":mctr_no", OracleDbType.Int32, recievedValue.MctrNo, ParameterDirection.Input);
            parameters[0] = new OracleParameter(":v_count", OracleDbType.Int32, ParameterDirection.Output);

            var response = entities.Database.SqlQuery<int>(sqlstmt, parameters).ToString();
            // SQL:  select count(*) into v_count from mctr_comment where mctr_no = :mctr_header.mctr_no;

            string sqlstmt1 = "select count(*) into v_count from mctr_comment where mctr_no = :mctr_no;";
            parameters1[0] = new OracleParameter(":mctr_no", OracleDbType.Int32, recievedValue.MctrNo, ParameterDirection.Input);
            parameters1[0] = new OracleParameter(":v_count", OracleDbType.Int32, ParameterDirection.Output);

            var response1 = entities.Database.SqlQuery<int>(sqlstmt1, parameters1).ToString();
            int v_count_a = Convert.ToInt32(response);
            int v_count_c = Convert.ToInt32(response1);
            list.Add(recievedValue);
            return list;
        }


        public IEnumerable<MctrCreateForm> mctrHeaderWhenNewRecordInstance(IEnumerable<MctrCreateForm> mctrCreateForm)
        {

            MctrCreateForm recievedValue = mctrCreateForm.First();
            OracleParameter[] parameters = new OracleParameter[1];

            // SQL: select count ( * ) into v_count from mctr_line_item where mctr_no = : mctr_header . mctr_no

            string sqlstmt = "select count (*) into v_count from mctr_line_item where mctr_no = :0";
            parameters[0] = new OracleParameter(":bems", OracleDbType.Int32, recievedValue.MctrNo, ParameterDirection.Input); //mctr_header.mctr_no
            parameters[0] = new OracleParameter(":v_count", OracleDbType.Int32, ParameterDirection.Output);
            var response = entities.Database.SqlQuery<int>(sqlstmt, parameters).ToString();

            int v_role_count = Convert.ToInt32(response);
            list.Add(recievedValue);
            return list;
        }

        public IEnumerable<MctrLineItem> mctrLineItemOnLoad(IEnumerable<MctrLineItem> lineItem)
        {
            MctrLineItem obj = lineItem.First();

            logger.Debug("Executing mctrLineItemMctrLineItemOnLoad with input : " + lineItem);

            var result = entities.MCTR_LINE_ITEM.SqlQuery("select * from MCTR_LINE_ITEM where MCTR_No=" + obj.MCTR_NO).ToList();
            var resultList = Mapper.DynamicMap<IEnumerable<MCTR_LINE_ITEM>, IEnumerable<MctrLineItem>>(result);
            OracleParameter[] parameters = new OracleParameter[2];
            // SQL: select sum ( amount_from ) into : oh_amt_from from mctr_ovrhd where mctr_no = : mctr_line_item . mctr_no and line_no = : mctr_line_item . line_no and from_to = 'F'

            List<MctrLineItem> final = new List<MctrLineItem>();
            foreach (var item in resultList)
            {
                try
                {
                    var sql = new StringBuilder("select  amount_from as oh_amt_from from mctr_ovrhd where mctr_no = :0 and line_no = :1 and from_to ='F'");
                    parameters[0] = new OracleParameter(":mctr_no", OracleDbType.Int32, item.MCTR_NO, ParameterDirection.Input);
                    parameters[1] = new OracleParameter(":line_no", OracleDbType.Int32, item.LINE_NO, ParameterDirection.Input);
                    var response2 = entities.Database.SqlQuery<Decimal>(sql.ToString(), parameters).Single();
                    item.OH_AMT_FROM = response2 == 0 ? Convert.ToDecimal("0.0") : Convert.ToDecimal(response2.ToString());
                }
                catch
                {
                    item.OH_AMT_FROM = Convert.ToDecimal("0.0");
                }
                try
                {
                    // SQL: select sum ( amount_from ) into : oh_amt_to from mctr_ovrhd where mctr_no = : mctr_line_item . mctr_no and line_no = : mctr_line_item . line_no and from_to = 't'
                    var sql1 = new StringBuilder("select  amount_from  as oh_amt_to from mctr_ovrhd where mctr_no = :0 and line_no = :1 and from_to =\'T\'");
                    parameters[0] = new OracleParameter(":mctr_no", OracleDbType.Int32, item.MCTR_NO, ParameterDirection.Input);
                    parameters[1] = new OracleParameter(":line_no", OracleDbType.Int32, item.LINE_NO, ParameterDirection.Input);
                    var response3 = entities.Database.SqlQuery<Decimal>(sql1.ToString(), parameters).Single();
                    item.OH_AMT_TO = response3 == 0 ? Convert.ToDecimal("0.0") : Convert.ToDecimal(response3.ToString());
                }
                catch (Exception)
                {

                    item.OH_AMT_TO = Convert.ToDecimal("0.0");
                }

            }
            return resultList;
        }


        public IEnumerable<MctrCreateForm> mctrLineItembutProjFromWhenButtonPressedOpenLOV(IEnumerable<MctrCreateForm> mctrCreateForm)
        {
            MctrCreateForm recievedValue = mctrCreateForm.First();
            OracleParameter[] parameters = new OracleParameter[2];
            string sqlstmt = "select count (*) as v_count from  mctr_activity_v where activity_id =:0 and ( eff_status = 'A' or ( eff_status = 'I' and direct_chrg_flg7 = 'Y' ) ) ";

            parameters[0] = new OracleParameter(":ACTIVITY_ID_FROM", OracleDbType.Int32, recievedValue.ActivityIdFrom, ParameterDirection.Input);
            parameters[1] = new OracleParameter(":v_count", OracleDbType.Int32, recievedValue.ActivityIdFrom, ParameterDirection.Input);

            var response = entities.Database.SqlQuery<MctrCreateForm>(sqlstmt, parameters).ToList();
            OracleParameter[] parameters1 = new OracleParameter[2];
            string sqlstmt1 = "select count(*) as v_count from mctr_activity_v where activity_id = :0";

            parameters1[0] = new OracleParameter(":activity_id_from", OracleDbType.Int32, recievedValue.ActivityIdFrom, ParameterDirection.Input);
            parameters1[1] = new OracleParameter(":v_count", OracleDbType.Int32, ParameterDirection.Output);
            var response1 = entities.Database.SqlQuery<MctrCreateForm>(sqlstmt1, parameters).ToList();
            return response;
        }
        public IEnumerable<MctrCreateForm> mctrLineItemPostQuery(IEnumerable<MctrCreateForm> mctrCreateForm)
        {
            MctrCreateForm mctrcreateform = mctrCreateForm.First();
            StringBuilder sql = new StringBuilder();

            OracleParameter[] parameters = new OracleParameter[2];
            // SQL: select sum ( amount_from ) into : oh_amt_from from mctr_ovrhd where mctr_no = : mctr_line_item . mctr_no and line_no = : mctr_line_item . line_no and from_to = 'F'
            sql = new StringBuilder("select sum ( amount_from ) as oh_amt_from from mctr_ovrhd where mctr_no = :0 and line_no = :1 and from_to =\'F\'");
            parameters[0] = new OracleParameter(":mctr_no", OracleDbType.Int32, mctrcreateform.MctrNo, ParameterDirection.Input);
            parameters[1] = new OracleParameter(":line_no", OracleDbType.Int32, mctrcreateform.LineNo, ParameterDirection.Input);
            mctrcreateform.OHAmtFrom = entities.Database.SqlQuery<int>(sql.ToString(), parameters).Single();

            // SQL: select sum ( amount_from ) into : oh_amt_to from mctr_ovrhd where mctr_no = : mctr_line_item . mctr_no and line_no = : mctr_line_item . line_no and from_to = 't'
            sql = new StringBuilder("select sum ( amount_from ) as oh_amt_to from mctr_ovrhd where mctr_no = :0 and line_no = :1 and from_to =\'T\'");
            parameters[0] = new OracleParameter(":mctr_no", OracleDbType.Int32, mctrcreateform.MctrNo, ParameterDirection.Input);
            parameters[1] = new OracleParameter(":line_no", OracleDbType.Int32, mctrcreateform.LineNo, ParameterDirection.Input);
            mctrcreateform.OHAmtTo = entities.Database.SqlQuery<int>(sql.ToString(), parameters).Single();
            return mctrCreateForm;
        }


        public IEnumerable<MctrCreateForm> mctrLineItembutOhAmtFromWhenButtonPressed(IEnumerable<MctrCreateForm> mctrCreateForm)
        {

            MctrCreateForm recieved = mctrCreateForm.First();
            // SQL: select accountant_role , lbr_acct_role , matl_acct_role , cost_acct_role , sr_acct_role into v_logon_r1 , v_logon_r2 , v_logon_r3 , v_logon_r4 , v_logon_r5 from mctr_role where bems = : global . session_bems
            OracleParameter[] parameters = new OracleParameter[1];
            OracleParameter[] parameters1 = new OracleParameter[3];
            string sqlstmt = "select accountant_role , lbr_acct_role , matl_acct_role , cost_acct_role , sr_acct_role into v_logon_r1 , v_logon_r2 , v_logon_r3 , v_logon_r4 , v_logon_r5 from mctr_role where bems = :0";
            parameters[0] = new OracleParameter(":bems", OracleDbType.Int32, recieved.bems, ParameterDirection.Input);
            var response = entities.Database.SqlQuery<MctrCreateForm>(sqlstmt, parameters).ToList();

            // SQL: select count ( * ) into v_count from mctr_role_bu where bems = : global . session_bems and ( business_unit = : orig_bu or ( group_cd7 = : orig_group and business_unit = '**' ) )
            string sqlstmt1 = "select count ( * ) into v_count from mctr_role_bu where bems = :0 and ( business_unit = :1 or ( group_cd7 = :2 and business_unit = '**' ) )";

            parameters[0] = new OracleParameter(":bems", OracleDbType.Int32, recieved.bems, ParameterDirection.Input);
            parameters[1] = new OracleParameter(":Origbu", OracleDbType.Int32, recieved.OrigBu, ParameterDirection.Input);
            parameters[2] = new OracleParameter(":bems", OracleDbType.Int32, recieved.OrigGroup, ParameterDirection.Input);
            var response1 = entities.Database.SqlQuery<MctrCreateForm>(sqlstmt1, parameters1).ToList();
            return response;
        }

        public IEnumerable<MctrCreateForm> mctrLineItembutOhAmtToWhenButtonPressed(IEnumerable<MctrCreateForm> mctrCreateForm)
        {

            MctrCreateForm recieved = mctrCreateForm.First();
            // SQL: select accountant_role , lbr_acct_role , matl_acct_role , cost_acct_role , sr_acct_role into v_logon_r1 , v_logon_r2 , v_logon_r3 , v_logon_r4 , v_logon_r5 from mctr_role where bems = : global . session_bems

            OracleParameter[] parameters = new OracleParameter[1];
            OracleParameter[] parameters1 = new OracleParameter[3];
            string sqlstmt = "select accountant_role , lbr_acct_role , matl_acct_role , cost_acct_role , sr_acct_role into v_logon_r1 , v_logon_r2 , v_logon_r3 , v_logon_r4 , v_logon_r5 from mctr_role where bems = :0";
            parameters[0] = new OracleParameter(":bems", OracleDbType.Int32, recieved.bems, ParameterDirection.Input);
            var response = entities.Database.SqlQuery<MctrCreateForm>(sqlstmt, parameters).ToList();

            // SQL: select count ( * ) into v_count from mctr_role_bu where bems = : global . session_bems and ( business_unit = : orig_bu or ( group_cd7 = : orig_group and business_unit = '**' ) )
            string sqlstmt1 = "select count ( * ) into v_count from mctr_role_bu where bems = :0 and ( business_unit = :1 or ( group_cd7 = :2 and business_unit = '**' ) )";

            parameters[0] = new OracleParameter(":bems", OracleDbType.Int32, recieved.bems, ParameterDirection.Input);
            parameters[1] = new OracleParameter(":Origbu", OracleDbType.Int32, recieved.OrigBu, ParameterDirection.Input);
            parameters[2] = new OracleParameter(":bems", OracleDbType.Int32, recieved.OrigGroup, ParameterDirection.Input);
            var response1 = entities.Database.SqlQuery<MctrCreateForm>(sqlstmt1, parameters1).ToList();

            return response;
        }

        public IEnumerable<MctrCreateForm> mctrHeaderbutJustificationWhenButtonPressed(IEnumerable<MctrCreateForm> mctrCreateForm)
        {

            MctrCreateForm recievedValue = mctrCreateForm.First();
            OracleParameter[] parameters = new OracleParameter[1];
            OracleParameter[] parameters1 = new OracleParameter[2];
            if (recievedValue.MctrNo != 0 && recievedValue.OrigBu != null)
            {
                string sqlstmt1 = "select * from mctr_header where MCTR_NO=" + recievedValue.MctrNo + "";
                var result = entities.MCTR_HEADER.SqlQuery(sqlstmt1).ToList<MCTR_HEADER>();
                if (result.First().JUSTIFICATION == null && result.First().PREVENTATIVE_MEASURES == null)
                {
                    string sqlstmt = "select count (*) into v_count from mctr_bus_unit_v where business_unit = :0  and op_segment_7 = 'IDS';";
                    parameters[0] = new OracleParameter(":mctr_no", OracleDbType.Int32, recievedValue.MctrNo, ParameterDirection.Input);//mctr_header.orig_bu
                    parameters[0] = new OracleParameter(":v_count", OracleDbType.Int32, ParameterDirection.Output);
                    var response = entities.Database.SqlQuery<int>(sqlstmt, parameters).ToString();
                    int v_count = Convert.ToInt32(response.Count());
                    if (v_count > 0)
                    {
                        recievedValue.justification = "-What happened?\n-How/Why it happened?\n-Effects of the mischarging.\n-Timeframe of mischarge\n-When and how the error was discovered?";
                    }
                    list.Add(recievedValue);
                    return list;
                }
                else
                {
                    MctrCreateForm createForm = null;
                    foreach (var item in result)
                    {
                        createForm = new MctrCreateForm();
                        createForm.justification = item.JUSTIFICATION;
                        createForm.preventativeMeasures = item.PREVENTATIVE_MEASURES;
                        list.Add(createForm);
                    }
                    return list;
                }
            }
            else
            {
                // SQL: select count ( * ) into v_count from mctr_bus_unit_v where business_unit = : mctr_header . orig_bu and op_segment_7 = 'ids'
                string sqlstmt = "select count (*) into v_count from mctr_bus_unit_v where business_unit = :0  and op_segment_7 = 'IDS';";
                parameters[0] = new OracleParameter(":mctr_no", OracleDbType.Int32, recievedValue.MctrNo, ParameterDirection.Input);//mctr_header.orig_bu
                parameters[0] = new OracleParameter(":v_count", OracleDbType.Int32, ParameterDirection.Output);
                var response = entities.Database.SqlQuery<int>(sqlstmt, parameters).ToString();
                int v_count = Convert.ToInt32(response.Count());
                if (v_count > 0)
                {
                    recievedValue.justification = "-What happened?\n-How/Why it happened\n-Effects of the mischarging.\n-Timeframe of mischarge\n-When and how the error was discovered?";
                }
                list.Add(recievedValue);
                return list;
            }
        }

        public IEnumerable<MCTRComments> mctrCommentviewStatementWhenButtonPressed(IEnumerable<MCTRComments> mctrComments)
        {
            try
            {
                logger.Debug("Executing MCTR.DataAccess.MCTRCreateFormRepository.mctrCommentviewStatementWhenButtonPressed ");
                var response = mctrcommentonload(mctrComments);
                //logic moved to controller
                logger.Debug("Response recieved from MCTR.DataAccess.MCTRCreateFormRepository.mctrCommentviewStatementWhenButtonPressed :" + response);
                return response;
            }
            catch (Exception ex)
            {
                logger.Error("Exception Occured at MCTR.DataAccess.MCTRCreateFormRepository.mctrCommentviewStatementWhenButtonPressed :" + ex.Message);
                throw;
            }
        }
        public IEnumerable<MCTRComments> mctrcommentonload(IEnumerable<MCTRComments> mctrComments)
        {

            //// SQL: select * from mctr_comment orderby
            try
            {
                logger.Debug("Executing MCTR.DataAccess.MCTRCreateFormRepository.mctrcommentonload ");

                MCTRComments mctrComment = mctrComments.First();
                StringBuilder query = new StringBuilder(@"select date_entered ,c.bems ,first_name,last_name,comments
                                                            from mctr_comment c, mctr_employee_v e
                                                            where c.mctr_no = :0
                                                            and c.bems = e.bems_id(+)
                                                            order by c.date_entered desc ");
                OracleParameter[] parameters = new OracleParameter[1];
                parameters[0] = new OracleParameter(":mctr_no", OracleDbType.Int32, mctrComment.MCTR_NO, ParameterDirection.Input);
                var response = entities.Database.SqlQuery<MCTRComments>(query.ToString(), parameters).ToList();

                return response;
            }
            catch (Exception ex)
            {
                logger.Error("Exception occured at : " + ex);
                throw;
            }
        }
        public IEnumerable<MCTRComments> mctrCommentbutSaveWhenButtonPressed(IEnumerable<MCTRComments> mctrComments)
        {
            mctrComments = mctrCommentpreinsert(mctrComments);
            //// SQL: select * from mctr_comment orderby

            try
            {
                if (mctrComments.Any())
                {
                    var request = AutoMapper.Mapper.DynamicMap<IEnumerable<MCTRComments>, IEnumerable<MCTR_COMMENT>>(mctrComments);

                    MCTR_COMMENT mctrComment = request.First();
                    entities.MCTR_COMMENT.Attach(mctrComment);
                    entities.MCTR_COMMENT.Add(mctrComment);
                    entities.SaveChanges();

                }

                return mctrCommentpostquery(mctrComments); ;
            }
            catch (Exception ex)
            {
                logger.Error("Exception Occured at :mctrCommentOnInsert " + ex);
                throw;
            }
        }

        public IEnumerable<MCTRComments> mctrCommentpostquery(IEnumerable<MCTRComments> mctrComments)
        {

            try
            {
                logger.Debug("Executing MCTR.DataAccess.MCTRCreateFormRepository.mctrcommentpostquery ");

                MCTRComments mctrComment = mctrComments.First();

                // SQL:
                //       select to_char(date_entered,'dd-mon-yyyy hh:mi am')||' - '|| c.bems ||' '||first_name||' '||last_name||' - '||comments
                //        from mctr_comment c, mctr_employee_v e
                //        where c.mctr_no = :mctr_header.mctr_no
                //        and c.bems = e.bems_id(+)
                //        order by c.date_entered desc;
                StringBuilder query = new StringBuilder(@"select date_entered ,c.bems ,first_name,last_name,comments
                                                            from mctr_comment c, mctr_employee_v e
                                                            where c.mctr_no = :0
                                                            and c.bems = e.bems_id(+)
                                                            order by c.date_entered desc");
                OracleParameter[] parameters = new OracleParameter[1];
                parameters[0] = new OracleParameter(":mctr_no", OracleDbType.Int32, mctrComment.MCTR_NO, ParameterDirection.Input);
                var response = entities.Database.SqlQuery<MCTRComments>(query.ToString(), parameters).ToList();
                return response;
            }
            catch (Exception ex)
            {
                logger.Error("Exception occured at : " + ex);
                throw;
            }
        }
        public IEnumerable<MCTRComments> mctrCommentpreinsert(IEnumerable<MCTRComments> mctrComments)
        {
            try
            {
                logger.Debug("Executing MCTR.DataAccess.MCTRCreateFormRepository.mctrcommentpostquery ");

                MCTRComments mctrComment = mctrComments.First();
                StringBuilder query = new StringBuilder("select  max(line_item) from mctr_comment where mctr_no = :mctr_no ");
                OracleParameter[] parameters = new OracleParameter[1];
                parameters[0] = new OracleParameter(":mctr_no", OracleDbType.Int32, mctrComment.MCTR_NO, ParameterDirection.Input);
                var v_no = entities.Database.SqlQuery<int?>(query.ToString(), parameters).Single<int?>();
                mctrComment.LINE_ITEM = v_no == null ? Convert.ToInt16(0) : Convert.ToInt16(v_no + 1);
                List<MCTRComments> response = new List<MCTRComments>();
                response.Add(mctrComment);
                return response;
            }
            catch (Exception ex)
            {
                logger.Error("Exception occured at : " + ex);
                throw;
            }
        }
        public IEnumerable<MCTRComments> mctrCommentonmessage(IEnumerable<MCTRComments> mctrComments)
        {
            string lv_errtype = "";
            int lv_errcod = 0;
            string lv_errtxt = "";
            if (lv_errcod == 40405)
            {
            }
            else
            {
                throw new Exception(lv_errtype + "-" + lv_errcod + ":  " + lv_errtxt);
            }
            return null;
        }

        public IEnumerable<MCTRComments> mctrCommentOnInsert(IEnumerable<MCTRComments> mctrComments)
        {

            try
            {
                if (mctrComments.Any())
                {
                    var request = AutoMapper.Mapper.DynamicMap<IEnumerable<MCTRComments>, IEnumerable<MCTR_COMMENT>>(mctrComments);

                    MCTR_COMMENT mctrComment = request.First();
                    entities.MCTR_COMMENT.Attach(mctrComment);
                    entities.MCTR_COMMENT.Add(mctrComment);
                    entities.SaveChanges();
                }
                return mctrComments;
            }
            catch (Exception ex)
            {
                logger.Error("Exception Occured at :mctrCommentOnInsert " + ex);
                throw;
            }

        }
        public IEnumerable<MctrCreateForm> mctrHeaderbutSubmitWhenButtonPressed(IEnumerable<MctrCreateForm> mctrCreateForm)
        {
            MctrCreateForm recievedValue = mctrCreateForm.First();
            OracleParameter[] parameters = new OracleParameter[1];
            OracleParameter[] parameters1 = new OracleParameter[1];
            OracleParameter[] parameters2 = new OracleParameter[1];
            int v_line_count;
            int v_line_no;
            char v_man_rated_flg = 'N';
            //SQL:select count(*) into v_line_count from mctr_line_item where mctr_no = :mctr_header.mctr_no;
            string sqlstmt = "select count(*) from mctr_line_item where mctr_no = :0";

            parameters[0] = new OracleParameter(":mctr_no", OracleDbType.Varchar2, recievedValue.StatusId, ParameterDirection.Input);

            var response = entities.Database.SqlQuery<int>(sqlstmt, parameters).Single<int>();
            v_line_count = response;
            char v_li_edit_error;
            if (v_line_count > 0)
            {
                v_li_edit_error = 'N';

                if (recievedValue.StatusId == "or")
                {
                }
                if (v_li_edit_error == 'N')
                {
                    if (recievedValue.py_cy_status == "cy")
                    {
                        try
                        {
                            // SQL: select count ( * ) into v_line_count from mctr_line_item where MCTR_NO = : mctr_header . MCTR_NO and ( ( amount_from + adjustment_from ) = 0 or ( amount_to + adjustment_to ) = 0 )
                            string sqlstmt2 = "select count (*)  from  mctr_line_item where MCTR_NO =:0 and ( ( amount_from + adjustment_from ) = 0 or ( amount_to + adjustment_to ) = 0 ) ";

                            parameters1[0] = new OracleParameter(":mctr_no", OracleDbType.Varchar2, recievedValue.MctrNo, ParameterDirection.Input);

                            var response1 = entities.Database.SqlQuery<int>(sqlstmt2, parameters).Single<int>();
                        }
                        catch
                        {
                            v_line_count = 0;
                        }

                        if (v_line_count > 0)
                        {
                            try
                            {
                                //SQL:select min(line_no) into v_line_no from mctr_line_item where mctr_no = :mctr_header.mctr_no and ((amount_from + adjustment_from) = 0 or(amount_to + adjustment_to) = 0);
                                string sqlstmt3 = "select min(line_no) from mctr_line_item where mctr_no = :0 and ((amount_from + adjustment_from) = 0 or(amount_to + adjustment_to) = 0)";

                                parameters2[0] = new OracleParameter(":mctr_no", OracleDbType.Varchar2, recievedValue.MctrNo, ParameterDirection.Input);

                                var response1 = entities.Database.SqlQuery<int>(sqlstmt3, parameters).Single<int>();
                                v_line_no = response1;
                            }
                            catch
                            {
                                v_line_no = 0;
                            }

                            if (recievedValue.StatusId == "oa")
                            {
                                throw new Exception("counted (' || v_line_count || ') line items with amount set to zero starting with line no [' || v_line_no || ']");
                            }
                            else
                            {
                                throw new Exception("Please use reset button since line items have amount set to zero.");
                            }
                            // v_lineitems_ok= false;
                        }
                        else
                        {

                            //SQL:select man_rated_flg into v_man_rated_flg from mctr_bu_profile where business_unit = :mctr_header.orig_bu;
                            string sqlstmt4 = "select man_rated_flg from mctr_bu_profile where business_unit = :0";

                            parameters2[0] = new OracleParameter(":orig_bu", OracleDbType.Varchar2, recievedValue.OrigBu, ParameterDirection.Input);

                            var response4 = entities.Database.SqlQuery<string>(sqlstmt4, parameters).Single<string>();
                            // v_man_rated_flg = response4;

                        }
                        if (v_man_rated_flg == 'N')
                        {
                            //SQL: select count(*) into v_count from mctr_incr_rates where cmpon_cd = :orig_bu and fiscal_year = :fiscal_year
                            string sqlstmt5 = "select count(*) from mctr_incr_rates where cmpon_cd = :0 and fiscal_year = :1";

                            parameters2[0] = new OracleParameter(":orig_bu", OracleDbType.Varchar2, recievedValue.OrigBu, ParameterDirection.Input);
                            parameters2[0] = new OracleParameter("fiscal_year", OracleDbType.Varchar2, recievedValue.fyear, ParameterDirection.Input);

                            var response5 = entities.Database.SqlQuery<int>(sqlstmt5, parameters2).Single<int>();

                            int v_count = response5;
                            if (v_count == 0)
                            {
                                throw new Exception("cannot submit a prior year mctr when the rates for the selected year are not loaded.");
                            }

                        }
                    }
                    else
                    {
                        throw new Exception("cannot submit mctr since line item field errors were found that should be corrected.'");
                    }
                }
                else
                {
                    if (recievedValue.StatusId == "OA")
                    {
                        throw new Exception("line items are required in order to submit this entry.");
                    }
                    else
                    {
                        throw new Exception("please use reset button since line items are required in order to submit this entry.");
                    }
                }



            }
            return null;
        }
        public IEnumerable<MctrCreateForm> mctrLineItemamountToPostTextItem(IEnumerable<MctrCreateForm> mctrCreateForm)
        {

            MctrCreateForm mctrcreateform = mctrCreateForm.First();
            MctrLineItem mctrlineitem = mctrcreateform.mctrLineItem.First();
            mctrcreateform.V_CountDouble = new Dictionary<string, Double>();
            mctrcreateform.V_CountDouble.Clear();
            Double v_rate;
            OracleParameter[] parameters;
            if (mctrcreateform.py_cy_status == "PY")
            {
                if (Convert.ToInt32(mctrcreateform.fyear) > 2007 && mctrlineitem.AFFILIATE_TO != "")
                {
                    mctrlineitem.SETID = mctrlineitem.AFFILIATE_TO;
                }

                else
                {
                    mctrlineitem.SETID = mctrlineitem.HOME_BUGL_TO;
                }

                // SQL: select rate into v_rate from mctr_lbr_rate where setid = v_setid and fiscal_year = : fiscal_year and labor_rate_cd7 = : labor_rate_cd7_to and proj_trans_code = : PROJ_TRANS_CODE_TO
                string stmt = "select rate from  mctr_lbr_rate where setid =:0 and fiscal_year =:1 and labor_rate_cd7 =:2 and proj_trans_code = :3";
                parameters = new OracleParameter[4];
                parameters[0] = new OracleParameter(":setid", OracleDbType.Varchar2, mctrlineitem.SETID, ParameterDirection.Input);
                parameters[1] = new OracleParameter(":fiscal_year", OracleDbType.Int32, Convert.ToInt32(mctrcreateform.fyear), ParameterDirection.Input);
                parameters[2] = new OracleParameter(":labor_rate_cd7", OracleDbType.Varchar2, mctrlineitem.LABOR_RATE_CD7_TO, ParameterDirection.Input);
                parameters[3] = new OracleParameter(":proj_trans_code", OracleDbType.Varchar2, mctrlineitem.PROJ_TRANS_CODE_TO, ParameterDirection.Input);
                v_rate = entities.Database.SqlQuery<double>(stmt, parameters).SingleOrDefault();
                mctrcreateform.V_CountDouble.Add("rate", v_rate);

            }

            else
            {

                // SQL: select rate into v_rate from mctr_lbr_rate_v where setid = : obj.HOME_BUGL_TO  and fiscal_year = : fiscal_year and labor_rate_cd7 = : labor_rate_cd7_to and proj_trans_code = : PROJ_TRANS_CODE_TO
                string sqlstmt1 = "select rate  from  mctr_lbr_rate_v where setid =:0 and fiscal_year = :1 and labor_rate_cd7= :2  and proj_trans_code = :3";

                parameters = new OracleParameter[4];
                parameters[0] = new OracleParameter(":setid", OracleDbType.Varchar2, mctrlineitem.HOME_BUGL_TO, ParameterDirection.Input);
                parameters[1] = new OracleParameter(":fyear", OracleDbType.Int16, Convert.ToInt16(mctrcreateform.fyear), ParameterDirection.Input);
                parameters[2] = new OracleParameter(":LaborRateCd7To", OracleDbType.Varchar2, mctrlineitem.LABOR_RATE_CD7_TO, ParameterDirection.Input);
                parameters[3] = new OracleParameter(":ProjTransCodeTo", OracleDbType.Varchar2, mctrlineitem.PROJ_TRANS_CODE_TO, ParameterDirection.Input);
                v_rate = entities.Database.SqlQuery<Double>(sqlstmt1, parameters).SingleOrDefault();
                mctrcreateform.V_CountDouble.Add("rate", v_rate);
            }
            return mctrCreateForm;

        }

        public IEnumerable<MctrCreateForm> manRatedFlag(IEnumerable<MctrCreateForm> mctrCreateForm)
        {
            MctrCreateForm mctrcreateform = mctrCreateForm.First();
            string stmt = "select man_rated_flg from mctr_bu_profile where business_unit=:OrigBu";
            OracleParameter[] parameters = new OracleParameter[1];
            parameters[0] = new OracleParameter(":orig_bu", OracleDbType.Varchar2, mctrcreateform.OrigBu, ParameterDirection.Input);
            string v_man_rated_flg = entities.Database.SqlQuery<string>(stmt, parameters).SingleOrDefault();
            if (v_man_rated_flg == "" || v_man_rated_flg == null)
            {
                v_man_rated_flg = "N";
            }

            if (v_man_rated_flg == "N")
            {
                mctrcreateform.V_Count = new Dictionary<string, int>();
                string sql = "select count(*) from mctr_incr_rates where cmpon_cd = :orig_bu and fiscal_year = :fiscal_year";
                OracleParameter[] parameter = new OracleParameter[2];
                parameter[0] = new OracleParameter(":orig_bu", OracleDbType.Varchar2, mctrcreateform.OrigBu, ParameterDirection.Input);
                parameter[1] = new OracleParameter(":fiscal_year", OracleDbType.Varchar2, mctrcreateform.fyear, ParameterDirection.Input);
                var v_Count = entities.Database.SqlQuery<int>(sql, parameter).SingleOrDefault();
                mctrcreateform.V_Count.Add("estmtgPricgCd", v_Count);
            }
            return mctrCreateForm;
        }

        public IEnumerable<MctrCreateForm> mctrLineItemestmtgPricgCdToPostTextItemOpenLOV(IEnumerable<MctrCreateForm> mctrCreateForm)
        {

            MctrCreateForm mctrcreateform = mctrCreateForm.First();
            MctrLineItem mctrlineitem = mctrcreateform.mctrLineItem.First();
            mctrcreateform.V_Count = new Dictionary<string, int>();
            mctrcreateform.V_Count.Clear();
            var v_count = 0;
            OracleParameter[] parameters;

            try
            {
                // SQL: select rate into v_rate from mctr_lbr_rate where setid = v_setid and fiscal_year = : fiscal_year and labor_rate_cd7 = : labor_rate_cd7_to and proj_trans_code = : PROJ_TRANS_CODE_TO
                string stmt = "select count(*) from mctr_estmtg_pricg_v where estmtg_pricg_cd7 = :estmtg_pricg_cd_to and setid = :v_setid and eff_status = 'A'";
                parameters = new OracleParameter[2];
                parameters[0] = new OracleParameter(":estmtg_pricg_cd_to", OracleDbType.Varchar2, mctrlineitem.ESTMTG_PRICG_CD_TO, ParameterDirection.Input);
                parameters[1] = new OracleParameter(":v_setid", OracleDbType.Varchar2, mctrlineitem.SETID, ParameterDirection.Input);
                v_count = entities.Database.SqlQuery<int>(stmt, parameters).SingleOrDefault();
                mctrcreateform.V_Count.Add("estmtgPricg", v_count);

            }
            catch (Exception e)
            {
                logger.Error("Error from  Mctr.DataAccess.mctrLineItemestmtgPricgCdToPostTextItemOpenLOV:" + e.Message);
                mctrcreateform.V_Count.Add("estmtgPricg", 0);
            }
            try
            {
                if (v_count == 0)
                {
                    string sqlstmt1 = "select count(*) from mctr_estmtg_pricg_v where setid = :0 and eff_status = 'A'";

                    parameters = new OracleParameter[1];
                    parameters[0] = new OracleParameter(":0", OracleDbType.Varchar2, mctrlineitem.SETID, ParameterDirection.Input);
                    v_count = entities.Database.SqlQuery<int>(sqlstmt1, parameters).SingleOrDefault();
                    mctrcreateform.V_Count.Add("estmtgPricgCd", v_count);

                }
            }
            catch (Exception e)
            {
                logger.Error("Error from  Mctr.DataAccess.mctrLineItemestmtgPricgCdToPostTextItemOpenLOV:" + e.Message);
                mctrcreateform.V_Count.Add("estmtgPricgCd", 0);
            }

            return mctrCreateForm;
        }

        public IEnumerable<MctrCreateForm> mctrLineItemPreInsert(IEnumerable<MctrCreateForm> mctrCreateForm)
        {
            int v_no = 0;
            Nullable<decimal> v_quantity_sla = 0;
            Nullable<decimal> v_amount_sla = 0;
            Nullable<decimal> v_quantity_ttd = 0;
            Nullable<decimal> v_amount_ttd = 0;
            Nullable<decimal> v_quantity_ytd = 0;
            Nullable<decimal> v_amount_ytd = 0;

            string v_bulk_flg = "";
            string v_rsc_lbr_flg = "";
            string v_cls_vdt_flg = "";
            MctrCreateForm mctrcreateform = mctrCreateForm.First();
            MctrLineItem mctrLineItem = mctrcreateform.mctrLineItem.Last();
            var RscFrom = mctrLineItem.RSC_FROM ?? "";
            var ClassCode = mctrLineItem.CLASS_CD_FROM ?? "";
            var WPDFrom = mctrLineItem.WPD_FROM ?? "";
            var BulkFrom = mctrLineItem.BULK_FROM ?? "";
            var Affiliate = mctrLineItem.AFFILIATE_FROM ?? "";
            var ProjectTransCode = mctrLineItem.PROJ_TRANS_CODE_FROM ?? "";
            StringBuilder sql = null;
            try
            {
                // SQL: select max ( line_no ) into v_no from mctr_line_item where mctr_no = : mctr_header . mctr_no
                sql = new StringBuilder("select nvl(max ( line_no ),0)  from  mctr_line_item where mctr_no =" + Convert.ToInt32(mctrcreateform.MctrNo));
                v_no = entities.Database.SqlQuery<int>(sql.ToString()).Single<int>();

            }

            catch (Exception ex)
            {
                logger.Error("Error from  Mctr.DataAccess.mctrLineItemPreInsert:" + ex.Message);
                v_no = 0;

            }

            mctrcreateform.LineNo = v_no + 1;
            try
            {
                // SQL: select bulk_flg , rsc_lbr_flg , cls_vdt_flg into v_bulk_flg , v_rsc_lbr_flg , v_cls_vdt_flg from mctr_bu_profile where business_unit = : orig_bu
                sql = new StringBuilder("select bulk_flg , rsc_lbr_flg , cls_vdt_flg from mctr_bu_profile where business_unit = '" + mctrcreateform.OrigBu + "'");
                var response = entities.Database.SqlQuery<BuProfile>(sql.ToString()).Single<BuProfile>();

                v_bulk_flg = response.Bulk_Flg;
                v_rsc_lbr_flg = response.Rsc_Lbr_Flg;
                v_cls_vdt_flg = response.Cls_Vdt_Flg;
            }
            catch (Exception ex)
            {
                logger.Error("Error from  Mctr.DataAccess.mctrLineItemPreInsert:" + ex.Message);
                v_bulk_flg = "N";
                v_rsc_lbr_flg = "Y";
                v_cls_vdt_flg = "N";

            }
            if ((mctrcreateform.py_cy_status == "PY" && Convert.ToInt32(mctrcreateform.fyear) > 2007 && mctrLineItem.AFFILIATE_FROM != ""))
            {
                try
                {
                    // SQL: select sum ( ttd_quantity7 ) , sum ( ttd_domestic_amt7 ) into v_quantity_ttd , v_amount_ttd from mctr_rp_master_vw where activity_id = : activity_id_from and project_id = : project_id_from and account = : account_from and bus_unit_gl_from = : home_bugl_from and business_unit_gl = : work_bugl_from and affiliate = : affiliate_from and ( work_location_cd7 = : work_loc_from or ( : work_loc_from is null and trim ( work_location_cd7 ) is null ) ) and ( home_location_cd7 = : home_loc_from or ( : home_loc_from is null and trim ( home_location_cd7 ) is null ) ) and ( deptid = : work_dept_from or ( : work_dept_from is null and trim ( deptid ) is null ) ) and ( deptid_from = : home_dept_from or ( : home_dept_from is null and trim ( deptid_from ) is null ) ) and ( ( resource_sub_cat = : rsc_from ) or ( : rsc_from is null and trim ( resource_sub_cat ) is null ) or ( v_rsc_lbr_flg = 'N' and : rsc_from like '0%' ) ) and ( ( v_cls_vdt_flg = 'N' ) or ( v_cls_vdt_flg = 'Y' and class_cd7 = : class_cd_from ) or ( : class_cd_from is null and trim ( class_cd7 ) is null ) ) and ( wpd_id7 = : wpd_from or ( : wpd_from is null and trim ( wpd_id7 ) is null ) or : fiscal_year < 2005 or : proj_trans_type_from <> 'LBR' ) and ( bulk_alctn_cd7 = : bulk_from or ( : bulk_from is null and trim ( bulk_alctn_cd7 ) is null ) or v_bulk_flg = 'N' ) and ( ( ( ( : proj_trans_type_from = 'LBR' and proj_trans_type like 'LB%' ) or ( : proj_trans_type_from <> 'LBR' and proj_trans_type = : proj_trans_type_from ) ) and ( proj_trans_code = : proj_trans_code_from or ( : proj_trans_code_from is null and not exists ( select * from mctr_trans_type where cmpon_cd = mctr_rp_master_vw . bus_unit_gl_from and proj_trans_type = mctr_rp_master_vw . proj_trans_type and proj_trans_code = mctr_rp_master_vw . proj_trans_code ) ) ) ) or ( : proj_trans_type_from in ( 'OTH' , 'MTL' ) and : proj_trans_code_from is null and proj_trans_type not like 'LB%' ) )PROJ_TRANS_TYPE_FROM

                    sql = new StringBuilder("select sum ( ttd_quantity7 ) AS v_quantity_ttd , sum( ttd_domestic_amt7 ) AS v_amount_ttd from mctr_rp_master_vw where activity_id = '" + mctrLineItem.ACTIVITY_ID_FROM + "' and project_id = '" + mctrLineItem.PROJECT_ID_FROM + "' and account = '" + mctrLineItem.ACCOUNT_FROM + "' and bus_unit_gl_from = '" + mctrLineItem.HOME_BUGL_FROM + "' and business_unit_gl = '" + mctrLineItem.WORK_BUGL_FROM + "' and affiliate ='" + mctrLineItem.AFFILIATE_FROM + "' and ( work_location_cd7 = '" + mctrLineItem.WORK_LOC_FROM + "'  or ( '" + mctrLineItem.WORK_LOC_FROM + "'  is null and trim ( work_location_cd7 ) is null ) )and ( home_location_cd7 = '" + mctrLineItem.HOME_LOC_FROM + "'  or ( '" + mctrLineItem.HOME_LOC_FROM + "'  is null and trim ( home_location_cd7 ) is null ) ) and ( deptid = '" + mctrLineItem.WORK_DEPT_FROM + "'  or ( '" + mctrLineItem.WORK_DEPT_FROM + "'  is null and trim ( deptid ) is null ) ) and ( deptid_from = '" + mctrLineItem.HOME_DEPT_FROM + "'  or ( '" + mctrLineItem.HOME_DEPT_FROM + "'  is null and trim ( deptid_from ) is null ) ) and ( ( resource_sub_cat = '" + RscFrom + "'  ) or ( '" + RscFrom + "' is null and trim ( resource_sub_cat ) is null ) or ( '" + v_rsc_lbr_flg + "' = 'N' and '" + RscFrom + "' like '0%' ) ) and ( ( '" + v_cls_vdt_flg + "' = 'N' ) or ( '" + v_cls_vdt_flg + "' = 'Y' and class_cd7 = '" + ClassCode + "'  ) or ( '" + ClassCode + "' is null and trim ( class_cd7 ) is null ) ) and ( wpd_id7 = '" + WPDFrom + "'  or ( '" + WPDFrom + "' is null and trim ( wpd_id7 ) is null ) or " + mctrcreateform.fyear + " < 2005 or '" + mctrLineItem.PROJ_TRANS_TYPE_FROM + "' <> 'LBR' ) and ( bulk_alctn_cd7 = '" + BulkFrom + "'  or ( '" + BulkFrom + "'  is null and trim ( bulk_alctn_cd7 ) is null ) or '" + v_bulk_flg + "' = 'N' ) and ( ( ( ( '" + mctrLineItem.PROJ_TRANS_TYPE_FROM + "'  ='LBR' and proj_trans_type like 'LB%' ) or ( '" + mctrLineItem.PROJ_TRANS_TYPE_FROM + "'  <> 'LBR' and proj_trans_type = 'LBR'  ) ) and ( proj_trans_code = '" + ProjectTransCode + "'  or ( '" + ProjectTransCode + "' is null and not exists ( select * from mctr_trans_type where cmpon_cd =mctr_rp_master_vw . bus_unit_gl_from and proj_trans_type = mctr_rp_master_vw . proj_trans_type and proj_trans_code = mctr_rp_master_vw . proj_trans_code ) ) ) ) or('" + mctrLineItem.PROJ_TRANS_TYPE_FROM + "'  in ( 'OTH' , 'MTL' ) and '" + ProjectTransCode + "' is null and proj_trans_type not like 'LB%' ) )");
                    var resultList = entities.Database.SqlQuery<MctrCreateForm>(sql.ToString()).Single();
                    v_quantity_ttd = resultList.v_quantity_ttd;
                    v_amount_ttd = resultList.v_amount_ttd;

                }
                catch (Exception ex)
                {
                    throw ex;
                }
            }

            else
            {
                try
                {
                    // SQL: select sum ( ttd_quantity7 ) , sum ( ttd_domestic_amt7 ) into v_quantity_ttd , v_amount_ttd from mctr_rp_master_v where activity_id = : activity_id_from and project_id = : project_id_from and account = : account_from and bus_unit_gl_from = : home_bugl_from and business_unit_gl = : work_bugl_from and ( work_location_cd7 = : work_loc_from or ( : work_loc_from is null and trim ( work_location_cd7 ) is null ) ) and ( home_location_cd7 = : home_loc_from or ( : home_loc_from is null and trim ( home_location_cd7 ) is null ) ) and ( deptid = : work_dept_from or ( : work_dept_from is null and trim ( deptid ) is null ) ) and ( deptid_from = : home_dept_from or ( : home_dept_from is null and trim ( deptid_from ) is null ) ) and ( ( resource_sub_cat = : rsc_from ) or ( : rsc_from is null and trim ( resource_sub_cat ) is null ) or ( v_rsc_lbr_flg = 'N' and : rsc_from like '0%' ) ) and ( ( v_cls_vdt_flg = 'N' ) or ( v_cls_vdt_flg = 'Y' and class_cd7 = : class_cd_from ) or ( : class_cd_from is null and trim ( class_cd7 ) is null ) ) and ( wpd_id7 = : wpd_from or ( : wpd_from is null and trim ( wpd_id7 ) is null ) or : fiscal_year < 2005 or : proj_trans_type_from <> 'LBR' ) and ( bulk_alctn_cd7 = : bulk_from or ( : bulk_from is null and trim ( bulk_alctn_cd7 ) is null ) or v_bulk_flg = 'N' ) and ( ( ( ( : proj_trans_type_from = 'LBR' and proj_trans_type like 'LB%' ) or ( : proj_trans_type_from <> 'LBR' and proj_trans_type = : proj_trans_type_from ) ) and ( proj_trans_code = : proj_trans_code_from or ( : proj_trans_code_from is null and not exists ( select * from mctr_trans_type where cmpon_cd = mctr_rp_master_v . bus_unit_gl_from and proj_trans_type = mctr_rp_master_v . proj_trans_type and proj_trans_code = mctr_rp_master_v . proj_trans_code ) ) ) ) or ( : proj_trans_type_from in ( 'OTH' , 'MTL' ) and : proj_trans_code_from is null and proj_trans_type not like 'LB%' ) )
                    sql = new StringBuilder("select sum ( ttd_quantity7 ) AS v_quantity_ttd , sum( ttd_domestic_amt7 ) AS v_amount_ttd from mctr_rp_master_v where activity_id = '" + mctrLineItem.ACTIVITY_ID_FROM + "' and project_id = '" + mctrLineItem.PROJECT_ID_FROM + "' and account = '" + mctrLineItem.ACCOUNT_FROM + "' and bus_unit_gl_from = '" + mctrLineItem.HOME_BUGL_FROM + "' and business_unit_gl = '" + mctrLineItem.WORK_BUGL_FROM + "'and ( work_location_cd7 = '" + mctrLineItem.WORK_LOC_FROM + "'  or ( '" + mctrLineItem.WORK_LOC_FROM + "'  is null and trim ( work_location_cd7 ) is null ) )and ( home_location_cd7 = '" + mctrLineItem.HOME_LOC_FROM + "'  or ( '" + mctrLineItem.HOME_LOC_FROM + "'  is null and trim ( home_location_cd7 ) is null ) ) and ( deptid = '" + mctrLineItem.WORK_DEPT_FROM + "'  or ( '" + mctrLineItem.WORK_DEPT_FROM + "'  is null and trim ( deptid ) is null ) ) and ( deptid_from = '" + mctrLineItem.HOME_DEPT_FROM + "'  or ( '" + mctrLineItem.HOME_DEPT_FROM + "'  is null and trim ( deptid_from ) is null ) ) and ( ( resource_sub_cat = '" + RscFrom + "'  ) or ( '" + RscFrom + "' is null and trim ( resource_sub_cat ) is null ) or ( '" + v_rsc_lbr_flg + "' = 'N' and '" + RscFrom + "' like '0%' ) ) and ( ( '" + v_cls_vdt_flg + "' = 'N' ) or ( '" + v_cls_vdt_flg + "' = 'Y' and class_cd7 = '" + ClassCode + "'  ) or ( '" + ClassCode + "' is null and trim ( class_cd7 ) is null ) ) and ( wpd_id7 = '" + WPDFrom + "'  or ( '" + WPDFrom + "' is null and trim ( wpd_id7 ) is null ) or " + mctrcreateform.fyear + " < 2005 or '" + mctrLineItem.PROJ_TRANS_TYPE_FROM + "' <> 'LBR' ) and ( bulk_alctn_cd7 = '" + BulkFrom + "'  or ( '" + BulkFrom + "'  is null and trim ( bulk_alctn_cd7 ) is null ) or '" + v_bulk_flg + "' = 'N' ) and ( ( ( ( '" + mctrLineItem.PROJ_TRANS_TYPE_FROM + "'  ='LBR' and proj_trans_type like 'LB%' ) or ( '" + mctrLineItem.PROJ_TRANS_TYPE_FROM + "'  <> 'LBR' and proj_trans_type = 'LBR'  ) ) and ( proj_trans_code = '" + ProjectTransCode + "'  or ( '" + ProjectTransCode + "' is null and not exists ( select * from mctr_trans_type where cmpon_cd =mctr_rp_master_v . bus_unit_gl_from and proj_trans_type = mctr_rp_master_v . proj_trans_type and proj_trans_code = mctr_rp_master_v . proj_trans_code ) ) ) ) or('" + mctrLineItem.PROJ_TRANS_TYPE_FROM + "'  in ( 'OTH' , 'MTL' ) and '" + ProjectTransCode + "' is null and proj_trans_type not like 'LB%' ) )");
                    var result = entities.Database.SqlQuery<MctrCreateForm>(sql.ToString()).Single();

                    v_quantity_ttd = result.v_quantity_ttd;
                    v_amount_ttd = result.v_amount_ttd;

                }
                catch (Exception ex)
                {
                    throw ex;
                }
            }


            if (v_quantity_ttd != 0 && v_amount_ttd != 0)
            {
                try
                {
                    // SQL: select nvl ( sum ( quantity_from ) , 0 ) , nvl ( sum ( amount_from ) , 0 ) into v_quantity_sla , v_amount_sla from mctr_line_item where mctr_no = : mctr_header . mctr_no and line_no <> : line_no and activity_id_from = : activity_id_from and project_id_from = : project_id_from and account_from = : account_from and proj_trans_type_from = : proj_trans_type_from and ( proj_trans_code_from = : proj_trans_code_from or ( trim ( : proj_trans_code_from ) is null and trim ( proj_trans_code_from ) is null ) ) and home_bugl_from = : home_bugl_from and work_bugl_from = : work_bugl_from and ( work_loc_from = : work_loc_from or ( trim ( : work_loc_from ) is null and trim ( work_loc_from ) is null ) ) and ( home_loc_from = : home_loc_from or ( trim ( : home_loc_from ) is null and trim ( home_loc_from ) is null ) ) and ( work_dept_from = : work_dept_from or ( trim ( : work_dept_from ) is null and trim ( work_dept_from ) is null ) ) and ( home_dept_from = : home_dept_from or ( trim ( : home_dept_from ) is null and trim ( home_dept_from ) is null ) ) and ( class_cd_from = : class_cd_from or ( trim ( : class_cd_from ) is null and trim ( class_cd_from ) is null ) ) and ( rsc_from = : rsc_from or ( trim ( : rsc_from ) is null and trim ( rsc_from ) is null ) ) and ( wpd_from = : wpd_from or ( trim ( : wpd_from ) is null and trim ( wpd_from ) is null ) ) and ( bulk_from = : bulk_from or ( trim ( : bulk_from ) is null and trim ( bulk_from ) is null ) ) and ( affiliate_from = : affiliate_from or ( trim ( : affiliate_from ) is null and trim ( affiliate_from ) is null ) )

                    sql = new StringBuilder("select sum ( quantity_from ) as v_quantity_sla , sum ( amount_from )  as  v_amount_sla from mctr_line_item where mctr_no = " + mctrcreateform.MctrNo + " and line_no <> " + mctrLineItem.LINE_NO + "  and activity_id_from = '" + mctrLineItem.ACTIVITY_ID_FROM + "'  and project_id_from = '" + mctrLineItem.PROJECT_ID_FROM + "' and account_from = '" + mctrLineItem.ACCOUNT_FROM + "'  and proj_trans_type_from = '" + mctrLineItem.PROJ_TRANS_TYPE_FROM + "'  and ( proj_trans_code_from = '" + mctrLineItem.PROJ_TRANS_CODE_FROM + "'  or ( trim ( '" + mctrLineItem.PROJ_TRANS_CODE_FROM + "'  ) is null and trim ( proj_trans_code_from ) is null ) ) and home_bugl_from = '" + mctrLineItem.HOME_BUGL_FROM + "'  and work_bugl_from = '" + mctrLineItem.WORK_BUGL_FROM + "'  and ( work_loc_from = '" + mctrLineItem.WORK_LOC_FROM + "'  or ( trim ( '" + mctrLineItem.WORK_LOC_FROM + "' ) is null and trim ( work_loc_from ) is null ) ) and ( home_loc_from = '" + mctrLineItem.HOME_LOC_FROM + "'  or ( trim ( '" + mctrLineItem.HOME_LOC_FROM + "'  ) is null and trim ( home_loc_from ) is null ) ) and ( work_dept_from = '" + mctrLineItem.WORK_DEPT_FROM + "'  or ( trim ( '" + mctrLineItem.WORK_DEPT_FROM + "'  ) is null and trim ( work_dept_from ) is null ) ) and ( home_dept_from = '" + mctrLineItem.HOME_DEPT_FROM + "'  or ( trim ( '" + mctrLineItem.HOME_DEPT_FROM + "'  ) is null and trim ( home_dept_from ) is null ) ) and ( class_cd_from = '" + mctrLineItem.CLASS_CD_FROM + "'  or ( trim ( '" + mctrLineItem.CLASS_CD_FROM + "' ) is null and trim ( class_cd_from ) is null ) ) and ( rsc_from = '" + mctrLineItem.RSC_FROM + "'  or ( trim ( '" + mctrLineItem.RSC_FROM + "' ) is null and trim ( rsc_from ) is null ) ) and ( wpd_from = '" + WPDFrom + "'  or ( trim ( '" + WPDFrom + "' ) is null and trim ( wpd_from ) is null ) ) and ( bulk_from = '" + mctrLineItem.BULK_FROM + "' or ( trim ( '" + BulkFrom + "' ) is null and trim ( bulk_from ) is null ) ) and ( affiliate_from = '" + mctrLineItem.AFFILIATE_FROM + "'  or ( trim ( '" + mctrLineItem.AFFILIATE_FROM + "' ) is null and trim ( affiliate_from ) is null ) ) ");
                    var resultList = entities.Database.SqlQuery<MctrCreateForm>(sql.ToString()).Single<MctrCreateForm>();

                    v_quantity_sla = resultList.v_quantity_ttd ?? 0;
                    v_amount_sla = resultList.v_amount_ttd ?? 0;
                }

                catch (Exception ex)
                {
                    v_quantity_sla = 0;
                    v_amount_sla = 0;
                    throw ex;
                }
            }

            if ((v_quantity_ttd > 0 && v_quantity_sla < 0 && v_quantity_ttd >= (-1 * v_quantity_sla)) || (v_quantity_ttd < 0 && v_quantity_sla > 0 && (-1 * v_quantity_ttd) >= v_quantity_sla))
            {
                v_quantity_ttd = v_quantity_ttd + v_quantity_sla;
            }

            if (v_amount_ttd != 0 && v_amount_sla != 0)
            {
                if ((v_amount_ttd > 0 && v_amount_sla < 0 && v_amount_ttd >= (-1 * v_amount_sla)) || (v_amount_ttd < 0 && v_amount_sla > 0 && (-1 * v_amount_ttd) >= v_amount_sla))
                {
                    v_amount_ttd = v_amount_ttd + v_amount_sla;
                }
            }

            if (Convert.ToDecimal(mctrLineItem.AMOUNT_FROM) < 0)
            {
                {
                    //starting of block
                    if (v_quantity_ttd == null)
                    {
                        mctrLineItem.TTD_FLAG = "B";
                    }

                    else if ((v_quantity_ttd >= (-1 * mctrLineItem.QUANTITY_FROM)) && v_amount_ttd >= (+1 * Convert.ToInt32(mctrLineItem.AMOUNT_FROM) + Convert.ToDecimal(mctrLineItem.ADJUSTMENT_FROM)))
                    {
                        mctrLineItem.TTD_FLAG = "G";
                    }

                    else if ((v_quantity_ttd >= (-1 * mctrLineItem.QUANTITY_FROM)) && mctrLineItem.QUANTITY_FROM != 0)
                    {
                        mctrLineItem.TTD_FLAG = "Y";
                    }

                    else
                    {
                        mctrLineItem.TTD_FLAG = "R";
                    }
                }
            }

            else
            {
                {
                    if (v_quantity_ttd == null)
                    {
                        mctrLineItem.TTD_FLAG = "B";
                    }

                    else if ((-1 * v_quantity_ttd) >= mctrLineItem.QUANTITY_FROM && (-1 * v_amount_ttd) >= (Convert.ToDecimal(mctrLineItem.QUANTITY_FROM) + Convert.ToDecimal(mctrLineItem.ADJUSTMENT_FROM)))
                    {
                        mctrLineItem.TTD_FLAG = "G";
                    }

                    else if ((-1 * v_quantity_ttd) >= Convert.ToDecimal(mctrLineItem.QUANTITY_FROM) && mctrLineItem.QUANTITY_FROM != 0)
                    {
                        mctrLineItem.TTD_FLAG = "Y";
                    }

                    else
                    {
                        mctrLineItem.TTD_FLAG = "R";
                    }
                }
            }

            if ((mctrcreateform.py_cy_status == "PY" & Convert.ToInt32(mctrcreateform.fyear) > 2007 && mctrLineItem.AFFILIATE_FROM != null))
            {
                try
                {

                    // SQL: select sum ( ttd_quantity7 ) , sum ( ttd_domestic_amt7 ) into v_quantity_ytd , v_amount_ytd from mctr_rp_master_vw where activity_id = : activity_id_from and project_id = : project_id_from and account = : account_from and bus_unit_gl_from = : home_bugl_from and business_unit_gl = : work_bugl_from and affiliate = : affiliate_from and ovrhd_base_yr_cd7 = : mctr_header . fiscal_year and ( work_location_cd7 = : work_loc_from or ( : work_loc_from is null and trim ( work_location_cd7 ) is null ) ) and ( home_location_cd7 = : home_loc_from or ( : home_loc_from is null and trim ( home_location_cd7 ) is null ) ) and ( deptid = : work_dept_from or ( : work_dept_from is null and trim ( deptid ) is null ) ) and ( deptid_from = : home_dept_from or ( : home_dept_from is null and trim ( deptid_from ) is null ) ) and ( ( resource_sub_cat = : rsc_from ) or ( : rsc_from is null and trim ( resource_sub_cat ) is null ) or ( v_rsc_lbr_flg = 'N' and : rsc_from like '0%' ) ) and ( ( v_cls_vdt_flg = 'N' ) or ( v_cls_vdt_flg = 'Y' and class_cd7 = : class_cd_from ) or ( : class_cd_from is null and trim ( class_cd7 ) is null ) ) and ( wpd_id7 = : wpd_from or ( : wpd_from is null and trim ( wpd_id7 ) is null ) or : fiscal_year < 2005 or : proj_trans_type_from <> 'LBR' ) and ( bulk_alctn_cd7 = : bulk_from or ( : bulk_from is null and trim ( bulk_alctn_cd7 ) is null ) or v_bulk_flg = 'N' ) and ( ( ( ( : proj_trans_type_from = 'LBR' and proj_trans_type like 'LB%' ) or ( : proj_trans_type_from <> 'LBR' and proj_trans_type = : proj_trans_type_from ) ) and ( proj_trans_code = : proj_trans_code_from or ( : proj_trans_code_from is null and not exists ( select * from mctr_trans_type where cmpon_cd = mctr_rp_master_vw . bus_unit_gl_from and proj_trans_type = mctr_rp_master_vw . proj_trans_type and proj_trans_code = mctr_rp_master_vw . proj_trans_code ) ) ) ) or ( : proj_trans_type_from in ( 'OTH' , 'MTL' ) and : proj_trans_code_from is null and proj_trans_type not like 'LB%' ) )
                    sql = new StringBuilder("select sum ( ttd_quantity7 ) AS v_quantity_ytd , sum( ttd_domestic_amt7 ) AS v_amount_ytd from mctr_rp_master_vw where activity_id = '" + mctrLineItem.ACTIVITY_ID_FROM + "' and project_id = '" + mctrLineItem.PROJECT_ID_FROM + "' and account = '" + mctrLineItem.ACCOUNT_FROM + "' and bus_unit_gl_from = '" + mctrLineItem.HOME_BUGL_FROM + "' and business_unit_gl = '" + mctrLineItem.WORK_BUGL_FROM + "' and affiliate ='" + mctrLineItem.AFFILIATE_FROM + "' and ovrhd_base_yr_cd7 =  " + mctrLineItem.OH_BASE_YR_FROM + " and ( work_location_cd7 = '" + mctrLineItem.WORK_LOC_FROM + "'  or ( '" + mctrLineItem.WORK_LOC_FROM + "'  is null and trim ( work_location_cd7 ) is null ) )and ( home_location_cd7 = '" + mctrLineItem.HOME_LOC_FROM + "'  or ( '" + mctrLineItem.HOME_LOC_FROM + "'  is null and trim ( home_location_cd7 ) is null ) ) and ( deptid = '" + mctrLineItem.WORK_DEPT_FROM + "'  or ( '" + mctrLineItem.WORK_DEPT_FROM + "'  is null and trim ( deptid ) is null ) ) and ( deptid_from = '" + mctrLineItem.HOME_DEPT_FROM + "'  or ( '" + mctrLineItem.HOME_DEPT_FROM + "'  is null and trim ( deptid_from ) is null ) ) and ( ( resource_sub_cat = '" + RscFrom + "'  ) or ( '" + RscFrom + "' is null and trim ( resource_sub_cat ) is null ) or ( '" + v_rsc_lbr_flg + "' = 'N' and '" + RscFrom + "' like '0%' ) ) and ( ( '" + v_cls_vdt_flg + "' = 'N' ) or ( '" + v_cls_vdt_flg + "' = 'Y' and class_cd7 = '" + ClassCode + "'  ) or ( '" + ClassCode + "' is null and trim ( class_cd7 ) is null ) ) and ( wpd_id7 = '" + WPDFrom + "'  or ( '" + WPDFrom + "' is null and trim ( wpd_id7 ) is null ) or " + mctrcreateform.fyear + " < 2005 or '" + mctrLineItem.PROJ_TRANS_TYPE_FROM + "' <> 'LBR' ) and ( bulk_alctn_cd7 = '" + BulkFrom + "'  or ( '" + BulkFrom + "'  is null and trim ( bulk_alctn_cd7 ) is null ) or '" + v_bulk_flg + "' = 'N' ) and ( ( ( ( '" + mctrLineItem.PROJ_TRANS_TYPE_FROM + "'  ='LBR' and proj_trans_type like 'LB%' ) or ( '" + mctrLineItem.PROJ_TRANS_TYPE_FROM + "'  <> 'LBR' and proj_trans_type = 'LBR'  ) ) and ( proj_trans_code = '" + ProjectTransCode + "'  or ( '" + ProjectTransCode + "' is null and not exists ( select * from mctr_trans_type where cmpon_cd =mctr_rp_master_vw . bus_unit_gl_from and proj_trans_type = mctr_rp_master_vw . proj_trans_type and proj_trans_code = mctr_rp_master_vw . proj_trans_code ) ) ) ) or('" + mctrLineItem.PROJ_TRANS_TYPE_FROM + "'  in ( 'OTH' , 'MTL' ) and '" + ProjectTransCode + "' is null and proj_trans_type not like 'LB%' ) )");
                    var resultList = entities.Database.SqlQuery<MctrCreateForm>(sql.ToString()).Single<MctrCreateForm>();
                    v_quantity_ytd = resultList.v_quantity_ytd;
                    v_amount_ytd = resultList.v_amount_ytd;
                }


                catch (Exception ex)
                {
                    logger.Error("Error from  Mctr.DataAccess.MctrCreateFormrepository:" + ex.Message);
                    v_quantity_ytd = 0;
                    v_amount_ytd = 0;
                }
            }
            else
            {
                try
                {

                    // SQL: select sum ( ttd_quantity7 ) , sum ( ttd_domestic_amt7 ) into v_quantity_ytd , v_amount_ytd from mctr_rp_master_v where activity_id = : activity_id_from and project_id = : project_id_from and account = : account_from and bus_unit_gl_from = : home_bugl_from and business_unit_gl = : work_bugl_from and ovrhd_base_yr_cd7 = : mctr_header . fiscal_year and ( work_location_cd7 = : work_loc_from or ( : work_loc_from is null and trim ( work_location_cd7 ) is null ) ) and ( home_location_cd7 = : home_loc_from or ( : home_loc_from is null and trim ( home_location_cd7 ) is null ) ) and ( deptid = : work_dept_from or ( : work_dept_from is null and trim ( deptid ) is null ) ) and ( deptid_from = : home_dept_from or ( : home_dept_from is null and trim ( deptid_from ) is null ) ) and ( ( resource_sub_cat = : rsc_from ) or ( : rsc_from is null and trim ( resource_sub_cat ) is null ) or ( v_rsc_lbr_flg = 'N' and : rsc_from like '0%' ) ) and ( ( v_cls_vdt_flg = 'N' ) or ( v_cls_vdt_flg = 'Y' and class_cd7 = : class_cd_from ) or ( : class_cd_from is null and trim ( class_cd7 ) is null ) ) and ( wpd_id7 = : wpd_from or ( : wpd_from is null and trim ( wpd_id7 ) is null ) or : fiscal_year < 2005 or : proj_trans_type_from <> 'LBR' ) and ( bulk_alctn_cd7 = : bulk_from or ( : bulk_from is null and trim ( bulk_alctn_cd7 ) is null ) or v_bulk_flg = 'N' ) and ( ( ( ( : proj_trans_type_from = 'LBR' and proj_trans_type like 'LB%' ) or ( : proj_trans_type_from <> 'LBR' and proj_trans_type = : proj_trans_type_from ) ) and ( proj_trans_code = :proj_trans_code_from or ( : proj_trans_code_from is null and not exists ( select * from mctr_trans_type where cmpon_cd = mctr_rp_master_v . bus_unit_gl_from and proj_trans_type = mctr_rp_master_v . proj_trans_type and proj_trans_code = mctr_rp_master_v . proj_trans_code ) ) ) ) or ( : proj_trans_type_from in ( 'OTH' , 'MTL' ) and : proj_trans_code_from is null and proj_trans_type not like 'LB%' ) )
                    sql = new StringBuilder("select sum ( ttd_quantity7 ) AS v_quantity_ttd , sum( ttd_domestic_amt7 ) AS v_amount_ttd from mctr_rp_master_v where activity_id = '" + mctrLineItem.ACTIVITY_ID_FROM + "' and project_id = '" + mctrLineItem.PROJECT_ID_FROM + "' and account = '" + mctrLineItem.ACCOUNT_FROM + "' and bus_unit_gl_from = '" + mctrLineItem.HOME_BUGL_FROM + "' and business_unit_gl = '" + mctrLineItem.WORK_BUGL_FROM + "' and ovrhd_base_yr_cd7 =  " + mctrLineItem.OH_BASE_YR_FROM + "and ( work_location_cd7 = '" + mctrLineItem.WORK_LOC_FROM + "'  or ( '" + mctrLineItem.WORK_LOC_FROM + "'  is null and trim ( work_location_cd7 ) is null ) )and ( home_location_cd7 = '" + mctrLineItem.HOME_LOC_FROM + "'  or ( '" + mctrLineItem.HOME_LOC_FROM + "'  is null and trim ( home_location_cd7 ) is null ) ) and ( deptid = '" + mctrLineItem.WORK_DEPT_FROM + "'  or ( '" + mctrLineItem.WORK_DEPT_FROM + "'  is null and trim ( deptid ) is null ) ) and ( deptid_from = '" + mctrLineItem.HOME_DEPT_FROM + "'  or ( '" + mctrLineItem.HOME_DEPT_FROM + "'  is null and trim ( deptid_from ) is null ) ) and ( ( resource_sub_cat = '" + RscFrom + "'  ) or ( '" + RscFrom + "' is null and trim ( resource_sub_cat ) is null ) or ( '" + v_rsc_lbr_flg + "' = 'N' and '" + RscFrom + "' like '0%' ) ) and ( ( '" + v_cls_vdt_flg + "' = 'N' ) or ( '" + v_cls_vdt_flg + "' = 'Y' and class_cd7 = '" + ClassCode + "'  ) or ( '" + ClassCode + "' is null and trim ( class_cd7 ) is null ) ) and ( wpd_id7 = '" + WPDFrom + "'  or ( '" + WPDFrom + "' is null and trim ( wpd_id7 ) is null ) or " + mctrcreateform.fyear + " < 2005 or '" + mctrLineItem.PROJ_TRANS_TYPE_FROM + "' <> 'LBR' ) and ( bulk_alctn_cd7 = '" + BulkFrom + "'  or ( '" + BulkFrom + "'  is null and trim ( bulk_alctn_cd7 ) is null ) or '" + v_bulk_flg + "' = 'N' ) and ( ( ( ( '" + mctrLineItem.PROJ_TRANS_TYPE_FROM + "'  ='LBR' and proj_trans_type like 'LB%' ) or ( '" + mctrLineItem.PROJ_TRANS_TYPE_FROM + "'  <> 'LBR' and proj_trans_type = 'LBR'  ) ) and ( proj_trans_code = '" + ProjectTransCode + "'  or ( '" + ProjectTransCode + "' is null and not exists ( select * from mctr_trans_type where cmpon_cd =mctr_rp_master_v . bus_unit_gl_from and proj_trans_type = mctr_rp_master_v . proj_trans_type and proj_trans_code = mctr_rp_master_v . proj_trans_code ) ) ) ) or('" + mctrLineItem.PROJ_TRANS_TYPE_FROM + "'  in ( 'OTH' , 'MTL' ) and '" + ProjectTransCode + "' is null and proj_trans_type not like 'LB%' ) )");
                    var resultList = entities.Database.SqlQuery<MctrCreateForm>(sql.ToString()).Single<MctrCreateForm>();
                    v_quantity_ytd = resultList.v_quantity_ttd;
                    v_amount_ytd = resultList.v_amount_ttd;
                }


                catch (Exception ex)
                {
                    throw ex;
                }
            }

            //--subtract aggregate totals using entries with same line of accounting (sla).
            if (v_quantity_ytd != 0 && v_amount_ytd != 0)
            {
                if (v_quantity_ytd != 0 && v_quantity_sla != 0)
                {
                    if ((v_quantity_ytd > 0 && v_quantity_sla < 0 && v_quantity_ytd >= (+1 * v_quantity_sla)) || (v_quantity_ytd < 0 && v_quantity_sla > 0 && (+1 * v_quantity_ytd) >= v_quantity_sla))
                    {
                        v_quantity_ytd = v_quantity_ytd + v_quantity_sla;
                    }
                }

                if (v_amount_ytd != 0 && v_amount_sla != 0)
                {
                    if ((v_amount_ytd > 0 && v_amount_sla < 0 && v_amount_ytd >= (+1 * v_amount_sla)) || (v_amount_ytd < 0 && v_amount_sla > 0 && (+1 * v_amount_ytd) >= v_amount_sla))
                    {
                        v_amount_ytd = v_amount_ytd + v_amount_sla;
                    }
                }
            }
            //-- set glpc backup color validation for ytd.
            if (Convert.ToDecimal(mctrLineItem.AMOUNT_FROM) < 0)
            {
                {
                    //starting of block
                    if (v_quantity_ytd == null)
                    {
                        mctrLineItem.PER_FLAG = "B";
                    }

                    else if ((v_quantity_ytd == (-1 * mctrLineItem.QUANTITY_FROM)) && mctrLineItem.QUANTITY_FROM != 0 && v_amount_ytd != (-1 * (Convert.ToDecimal(mctrLineItem.AMOUNT_FROM) + Convert.ToDecimal(mctrLineItem.ADJUSTMENT_FROM))))
                    {
                        mctrLineItem.PER_FLAG = "Y";
                    }

                    else if ((v_quantity_ytd >= (-1 * mctrLineItem.QUANTITY_FROM)) && v_amount_ytd >= (-1 * (Convert.ToDecimal(mctrLineItem.AMOUNT_FROM) + Convert.ToDecimal(mctrLineItem.ADJUSTMENT_FROM))))
                    {
                        mctrLineItem.PER_FLAG = "G";
                    }

                    else if ((v_quantity_ytd >= (-1 * mctrLineItem.QUANTITY_FROM)) && mctrLineItem.QUANTITY_FROM != 0)
                    {
                        mctrLineItem.PER_FLAG = "Y";
                    }

                    else
                    {
                        mctrLineItem.PER_FLAG = "R";
                    }
                } //end of block
            }

            else
            {
                {
                    //starting of block
                    if (v_quantity_ytd == null)
                    {
                        mctrLineItem.PER_FLAG = "B";
                    }

                    else if ((-1 * v_quantity_ytd) == mctrLineItem.QUANTITY_FROM && mctrLineItem.QUANTITY_FROM != 0 && (-1 * v_amount_ytd) != (Convert.ToDecimal(mctrLineItem.AMOUNT_FROM) + Convert.ToDecimal(mctrLineItem.ADJUSTMENT_FROM)))
                    {
                        mctrcreateform.PerFlag = "Y";
                    }

                    else if ((-1 * v_quantity_ytd) >= mctrLineItem.QUANTITY_FROM && (-1 * v_amount_ytd) >= (Convert.ToDecimal(mctrLineItem.AMOUNT_FROM) + Convert.ToDecimal(mctrLineItem.ADJUSTMENT_FROM)))
                    {
                        mctrLineItem.PER_FLAG = "G";
                    }

                    else if ((+1 * v_quantity_ytd) >= mctrLineItem.QUANTITY_FROM && mctrLineItem.QUANTITY_FROM != 0)
                    {
                        mctrLineItem.PER_FLAG = "Y";
                    }

                    else
                    {
                        mctrLineItem.PER_FLAG = "R";
                    }
                }
            }
            return mctrCreateForm;

        }
        /// <summary>
        /// mctrLineItemPostInsert
        ///         
        /// 
        /// </summary>
        /// <param name="mctrCreateForm"></param>
        /// <returns></returns>
        public IEnumerable<MctrCreateForm> mctrLineItemPostInsert(IEnumerable<MctrCreateForm> mctrCreateForm)
        {

            MctrCreateForm mctrcreateform = mctrCreateForm.First();
            MctrLineItem mctrLineItem = mctrcreateform.mctrLineItem.First();
            mctrLineItem.FYEAR = mctrcreateform.fyear;
            mctrLineItem.SETID = mctrcreateform.OrigBu;
            decimal v_year = 0;
            decimal v_period = 0;
            int v_seq_no = 0;
            string v_anal_type = "";
            string v_account = "";
            string v_project = "";
            string v_activity = "";
            string v_rsc = "";
            string v_wpd = "";
            string v_ptt = "";
            string v_ptc = "";
            string v_work_dept = "";
            string v_home_dept = "";
            string v_work_loc = "";
            string v_home_loc = "";
            string v_home_bugl = "";
            string v_work_bugl = "";
            string v_home_pool = "";
            string v_work_pool = "";
            decimal v_ttd_qty = 0;
            decimal v_ttd_amt = 0;
            string v_bum_cd_from = "";
            string v_bum_cd_to = "";
            string v_bulk_flg = "";
            string v_rsc_lbr_flg = "";
            string v_cls_vdt_flg = "";
            string v_man_rated_flg = "";
            string v_class_cd = "";
            string v_affiliate = "";
            string v_bulk = "";
            string v_rsc_pl_from_mod = "";
            string v_rsc_pl_to_mod = "";
            string v_cust_grp_from = "";
            string v_cust_grp_to = "";
            string v_setid = "";
            int v_line_oh = 0;
            Nullable<decimal> v_rate_override = 0;
            Nullable<decimal> v_rate = 0;
            string v_rsc_out = "";
            string v_pool_out = "";
            string v_proj_trans_type = "";
            string v_proj_trans_code = "";
            string v_oh_bulk_from = "";
            string v_oh_wpd_from = "";
            Nullable<decimal> v_amount = 0;
            string v_oh_wpd_to = "";
            string v_oh_bulk_to = "";
            Nullable<decimal> v_rate_output = 0;
            StringBuilder sql = new StringBuilder("");
            OracleParameter[] parameters;
            var DeleteStatus = 0;
            try
            {
                // SQL: delete from mctr_ttd_backup where mctr_no = : mctr_line_item . mctr_no and line_no = : line_no
                sql = new StringBuilder(" delete  from  mctr_ttd_backup  where mctr_no=:0 and line_no=:1 ;");
                try
                {
                    parameters = new OracleParameter[2];
                    parameters[0] = new OracleParameter(":mctr_no", OracleDbType.Int32, mctrcreateform.MctrNo, ParameterDirection.Input);
                    parameters[1] = new OracleParameter(":line_no", OracleDbType.Int32, mctrLineItem.LINE_NO, ParameterDirection.Input);
                    DeleteStatus = entities.Database.ExecuteSqlCommand("BEGIN " + sql.ToString() + " END;", parameters);
                }
                catch (Exception ex)
                {
                    logger.Error("Error from  Mctr.DataAccess.mctrLineItemPostInsert():" + ex.Message);
                }
                try
                {
                    // SQL: delete from mctr_per_backup where mctr_no = : mctr_line_item . mctr_no and line_no = : line_no
                    sql = new StringBuilder(" delete  from  mctr_per_backup  where mctr_no=:0 and line_no=:1;");

                    parameters = new OracleParameter[2];
                    parameters[0] = new OracleParameter(":mctr_no", OracleDbType.Int32, mctrcreateform.MctrNo, ParameterDirection.Input);
                    parameters[1] = new OracleParameter(":line_no", OracleDbType.Int32, mctrLineItem.LINE_NO, ParameterDirection.Input);
                    DeleteStatus = entities.Database.ExecuteSqlCommand("BEGIN " + sql.ToString() + " END;", parameters);
                }
                catch (Exception ex)
                {
                    logger.Error("Error from  Mctr.DataAccess.mctrLineItemPostInsert():" + ex.Message);
                }
                try
                {
                    // SQL: delete from mctr_per_backup where mctr_no = : mctr_line_item . mctr_no and line_no = : line_no
                    sql = new StringBuilder(" delete  from  mctr_per_backup  where  mctr_no=:0 and line_no=:1 ;");
                    parameters = new OracleParameter[2];
                    parameters[0] = new OracleParameter(":mctr_no", OracleDbType.Int32, mctrcreateform.MctrNo, ParameterDirection.Input);
                    parameters[1] = new OracleParameter(":line_no", OracleDbType.Int32, mctrLineItem.LINE_NO, ParameterDirection.Input);
                    var DeletedStatus = entities.Database.ExecuteSqlCommand("BEGIN " + sql.ToString() + " END;", parameters);


                    // SQL: select bulk_flg , rsc_lbr_flg , cls_vdt_flg , man_rated_flg into v_bulk_flg , v_rsc_lbr_flg , v_cls_vdt_flg , v_man_rated_flg from mctr_bu_profile where business_unit = : orig_bu
                    sql = new StringBuilder("select bulk_flg , rsc_lbr_flg , cls_vdt_flg , man_rated_flg  from  mctr_bu_profile where business_unit = :0");
                    parameters = new OracleParameter[1];
                    parameters[0] = new OracleParameter(":orig_bu", OracleDbType.Varchar2, mctrcreateform.OrigBu, ParameterDirection.Input);

                    var result = entities.Database.SqlQuery<BuProfile>(sql.ToString(), parameters).Single<BuProfile>();
                    v_bulk_flg = result.Bulk_Flg;
                    v_rsc_lbr_flg = result.Rsc_Lbr_Flg;
                    v_cls_vdt_flg = result.Cls_Vdt_Flg;
                    v_man_rated_flg = result.Man_Rated_Flg == "n" ? "N" : result.Man_Rated_Flg;
                }
                catch (Exception ex)
                {
                    throw ex;
                }
                v_seq_no = 0;

                if ((mctrcreateform.py_cy_status == "PY") && (Convert.ToInt32(mctrcreateform.fyear) > 2007) && (mctrLineItem.AFFILIATE_FROM != null))
                {
                    var c_ttd_from_affList = c_ttd_from_aff(mctrcreateform, v_rsc_lbr_flg, v_cls_vdt_flg, v_bulk_flg);
                    if (c_ttd_from_affList.Any())
                    {
                        foreach (var item_TTD_From_aff in c_ttd_from_affList)
                        {
                            v_year = item_TTD_From_aff.FISCAL_YEAR;
                            v_period = item_TTD_From_aff.ACCOUNTING_PERIOD;
                            v_anal_type = item_TTD_From_aff.ANALYSIS_TYPE;
                            v_account = item_TTD_From_aff.ACCOUNT;
                            v_project = item_TTD_From_aff.PROJECT_ID;
                            v_activity = item_TTD_From_aff.ACTIVITY_ID;
                            v_rsc = item_TTD_From_aff.RESOURCE_SUB_CAT;
                            v_wpd = item_TTD_From_aff.WPD_ID7;
                            v_bulk = item_TTD_From_aff.BULK_ALCTN_CD7;
                            v_ptt = item_TTD_From_aff.PROJ_TRANS_TYPE;
                            v_ptc = item_TTD_From_aff.PROJ_TRANS_CODE;
                            v_work_dept = item_TTD_From_aff.DEPTID;
                            v_home_dept = item_TTD_From_aff.DEPTID_FROM;
                            v_work_loc = item_TTD_From_aff.WORK_LOCATION_CD7;
                            v_home_loc = item_TTD_From_aff.HOME_LOCATION_CD7;
                            v_home_bugl = item_TTD_From_aff.BUS_UNIT_GL_FROM;
                            v_work_bugl = item_TTD_From_aff.BUSINESS_UNIT_GL;
                            v_class_cd = item_TTD_From_aff.CLASS_CD7;
                            v_affiliate = item_TTD_From_aff.AFFILIATE;
                            v_ttd_qty = item_TTD_From_aff.SUM_TTD_QUANTITY7;
                            v_ttd_amt = item_TTD_From_aff.SUM_TTD_DOMESTIC_AMT7;

                            v_seq_no++;

                            // SQL: insert into mctr_ttd_backup ( mctr_no , line_no , seq_no , fiscal_year , accounting_period , analysis_type , activity_id , project_id , account , home_dept , home_loc , home_bugl , home_pool , work_dept , work_loc , work_bugl , work_pool , rsc , wpd , bulk_alctn_cd7 , proj_trans_type , proj_trans_code , quantity_ttd , amount_ttd , class_cd , affiliate ) values ( : mctr_line_item . mctr_no , : line_no , v_seq_no , v_year , v_period , v_anal_type , v_activity , v_project , v_account , v_home_dept , v_home_loc , v_home_bugl , ' ' , v_work_dept , v_work_loc , v_work_bugl , ' ' , v_rsc , v_wpd , v_bulk , v_ptt , v_ptc , v_ttd_qty , v_ttd_amt , v_class_cd , v_affiliate )
                            sql = new StringBuilder(" insert  into  mctr_ttd_backup  (  mctr_no  ,  line_no  ,  seq_no  ,  fiscal_year  ,  accounting_period  ,  analysis_type  ,  activity_id  ,  project_id  ,  account  ,  home_dept  ,  home_loc  ,  home_bugl  ,  home_pool  ,  work_dept  ,  work_loc  ,  work_bugl  ,  work_pool  ,  rsc  ,  wpd  ,  bulk_alctn_cd7  ,  proj_trans_type  ,  proj_trans_code  ,  quantity_ttd  ,  amount_ttd  ,  class_cd  ,  affiliate  )  values (:0,:1,:2,:3,:4,:5,:6,:7,:8,:9,:10,:11,:12,:13,:14,:15,:16,:17,:18,:19,:20,:21,:22,:23,:24,:25);");
                            parameters = new OracleParameter[26];

                            parameters[0] = new OracleParameter(":mctr_no", OracleDbType.Int32, mctrcreateform.MctrNo, ParameterDirection.Input);
                            parameters[1] = new OracleParameter(":line_no", OracleDbType.Int16, mctrLineItem.LINE_NO, ParameterDirection.Input);
                            parameters[2] = new OracleParameter(":v_seq_no", OracleDbType.Int16, v_seq_no, ParameterDirection.Input);
                            parameters[3] = new OracleParameter(":v_year", OracleDbType.Int16, item_TTD_From_aff.FISCAL_YEAR, ParameterDirection.Input);
                            parameters[4] = new OracleParameter(":v_period", OracleDbType.Int16, item_TTD_From_aff.ACCOUNTING_PERIOD, ParameterDirection.Input);
                            parameters[5] = new OracleParameter(":v_anal_type", OracleDbType.Varchar2, item_TTD_From_aff.ANALYSIS_TYPE, ParameterDirection.Input);
                            parameters[6] = new OracleParameter(":v_activity", OracleDbType.Varchar2, item_TTD_From_aff.ACTIVITY_ID, ParameterDirection.Input);
                            parameters[7] = new OracleParameter(":v_project", OracleDbType.Varchar2, item_TTD_From_aff.PROJECT_ID, ParameterDirection.Input);
                            parameters[8] = new OracleParameter(":v_account", OracleDbType.Varchar2, item_TTD_From_aff.ACCOUNT, ParameterDirection.Input);
                            parameters[9] = new OracleParameter(":v_home_dept", OracleDbType.Varchar2, item_TTD_From_aff.DEPTID_FROM, ParameterDirection.Input);
                            parameters[10] = new OracleParameter(":v_home_loc", OracleDbType.Varchar2, item_TTD_From_aff.HOME_LOCATION_CD7, ParameterDirection.Input);
                            parameters[11] = new OracleParameter(":v_home_bugl", OracleDbType.Varchar2, item_TTD_From_aff.BUS_UNIT_GL_FROM, ParameterDirection.Input);
                            parameters[12] = new OracleParameter(":home_pool", OracleDbType.Varchar2, " ", ParameterDirection.Input);
                            parameters[13] = new OracleParameter(":v_work_dept", OracleDbType.Varchar2, item_TTD_From_aff.DEPTID, ParameterDirection.Input);
                            parameters[14] = new OracleParameter(":v_work_loc", OracleDbType.Varchar2, item_TTD_From_aff.WORK_LOCATION_CD7, ParameterDirection.Input);
                            parameters[15] = new OracleParameter(":v_work_bugl", OracleDbType.Varchar2, item_TTD_From_aff.BUSINESS_UNIT_GL, ParameterDirection.Input);
                            parameters[16] = new OracleParameter(":work_pool", OracleDbType.Varchar2, " ", ParameterDirection.Input);
                            parameters[17] = new OracleParameter(":v_rsc", OracleDbType.Varchar2, item_TTD_From_aff.RESOURCE_SUB_CAT, ParameterDirection.Input);
                            parameters[18] = new OracleParameter(":v_wpd", OracleDbType.Varchar2, item_TTD_From_aff.WPD_ID7, ParameterDirection.Input);
                            parameters[19] = new OracleParameter(":v_bulk", OracleDbType.Varchar2, item_TTD_From_aff.BULK_ALCTN_CD7, ParameterDirection.Input);
                            parameters[20] = new OracleParameter(":v_ptt", OracleDbType.Varchar2, item_TTD_From_aff.PROJ_TRANS_TYPE, ParameterDirection.Input);
                            parameters[21] = new OracleParameter(":v_ptc", OracleDbType.Varchar2, item_TTD_From_aff.PROJ_TRANS_CODE, ParameterDirection.Input);
                            parameters[22] = new OracleParameter(":v_ttd_qty", OracleDbType.Decimal, item_TTD_From_aff.SUM_TTD_QUANTITY7, ParameterDirection.Input);
                            parameters[23] = new OracleParameter(":v_ttd_amt", OracleDbType.Decimal, item_TTD_From_aff.SUM_TTD_DOMESTIC_AMT7, ParameterDirection.Input);
                            parameters[24] = new OracleParameter(":v_class_cd", OracleDbType.Varchar2, item_TTD_From_aff.CLASS_CD7, ParameterDirection.Input);
                            parameters[25] = new OracleParameter(":v_affiliate", OracleDbType.Varchar2, item_TTD_From_aff.AFFILIATE, ParameterDirection.Input);
                            var InsertStatus = entities.Database.ExecuteSqlCommand("BEGIN " + sql.ToString() + " END;", parameters);

                        }
                    }
                }
                else
                {
                    var c_ttd_fromList = c_ttd_from(mctrcreateform, v_rsc_lbr_flg, v_cls_vdt_flg, v_bulk_flg);
                    if (c_ttd_fromList.Any())
                    {
                        foreach (var item_TTD_From in c_ttd_fromList)
                        {
                            v_year = item_TTD_From.FISCAL_YEAR;
                            v_period = item_TTD_From.ACCOUNTING_PERIOD;
                            v_anal_type = item_TTD_From.ANALYSIS_TYPE;
                            v_account = item_TTD_From.ACCOUNT;
                            v_project = item_TTD_From.PROJECT_ID;
                            v_activity = item_TTD_From.ACTIVITY_ID;
                            v_rsc = item_TTD_From.RESOURCE_SUB_CAT;
                            v_wpd = item_TTD_From.WPD_ID7;
                            v_bulk = item_TTD_From.BULK_ALCTN_CD7;
                            v_ptt = item_TTD_From.PROJ_TRANS_TYPE;
                            v_ptc = item_TTD_From.PROJ_TRANS_CODE;
                            v_work_dept = item_TTD_From.DEPTID;
                            v_home_dept = item_TTD_From.DEPTID_FROM;
                            v_work_loc = item_TTD_From.WORK_LOCATION_CD7;
                            v_home_loc = item_TTD_From.HOME_LOCATION_CD7;
                            v_home_bugl = item_TTD_From.BUS_UNIT_GL_FROM;
                            v_work_bugl = item_TTD_From.BUSINESS_UNIT_GL;
                            v_class_cd = item_TTD_From.CLASS_CD7;
                            v_ttd_qty = item_TTD_From.SUM_TTD_QUANTITY7;
                            v_ttd_amt = item_TTD_From.SUM_TTD_DOMESTIC_AMT7;

                            v_seq_no++;

                            // SQL: insert into mctr_ttd_backup ( mctr_no , line_no , seq_no , fiscal_year , accounting_period , analysis_type , activity_id , project_id , account , home_dept , home_loc , home_bugl , home_pool , work_dept , work_loc , work_bugl , work_pool , rsc , wpd , bulk_alctn_cd7 , proj_trans_type , proj_trans_code , quantity_ttd , amount_ttd , class_cd , affiliate ) values ( : mctr_line_item . mctr_no , : line_no , v_seq_no , v_year , v_period , v_anal_type , v_activity , v_project , v_account , v_home_dept , v_home_loc , v_home_bugl , ' ' , v_work_dept , v_work_loc , v_work_bugl , ' ' , v_rsc , v_wpd , v_bulk , v_ptt , v_ptc , v_ttd_qty , v_ttd_amt , v_class_cd , v_affiliate )
                            sql = new StringBuilder(" insert  into  mctr_ttd_backup  (  mctr_no,line_no,seq_no,  fiscal_year,  accounting_period,  analysis_type,  activity_id,  project_id,  account,  home_dept,  home_loc,  home_bugl,  home_pool,  work_dept,  work_loc,  work_bugl,  work_pool  ,  rsc  ,  wpd  ,  bulk_alctn_cd7  ,  proj_trans_type  ,  proj_trans_code  ,  quantity_ttd  ,  amount_ttd  ,  class_cd  ,  affiliate  )  values (:0,:1,:2,:3,:4,:5,:6,:7,:8,:9,:10,:11,:12,:13,:14,:15,:16,:17,:18,:19,:20,:21,:22,:23,:24,:25);");
                            parameters = new OracleParameter[26];

                            parameters[0] = new OracleParameter(":mctr_no", OracleDbType.Int32, mctrcreateform.MctrNo, ParameterDirection.Input);
                            parameters[1] = new OracleParameter(":line_no", OracleDbType.Int16, mctrcreateform.LineNo, ParameterDirection.Input);
                            parameters[2] = new OracleParameter(":v_seq_no", OracleDbType.Int16, v_seq_no, ParameterDirection.Input);
                            parameters[3] = new OracleParameter(":v_year", OracleDbType.Int16, item_TTD_From.FISCAL_YEAR, ParameterDirection.Input);
                            parameters[4] = new OracleParameter(":v_period", OracleDbType.Int16, item_TTD_From.ACCOUNTING_PERIOD, ParameterDirection.Input);
                            parameters[5] = new OracleParameter(":v_anal_type", OracleDbType.Varchar2, item_TTD_From.ANALYSIS_TYPE, ParameterDirection.Input);
                            parameters[6] = new OracleParameter(":v_activity", OracleDbType.Varchar2, item_TTD_From.ACTIVITY_ID, ParameterDirection.Input);
                            parameters[7] = new OracleParameter(":v_project", OracleDbType.Varchar2, item_TTD_From.PROJECT_ID, ParameterDirection.Input);
                            parameters[8] = new OracleParameter(":v_account", OracleDbType.Varchar2, item_TTD_From.ACCOUNT, ParameterDirection.Input);
                            parameters[9] = new OracleParameter(":v_home_dept", OracleDbType.Varchar2, item_TTD_From.DEPTID_FROM, ParameterDirection.Input);
                            parameters[10] = new OracleParameter(":v_home_loc", OracleDbType.Varchar2, item_TTD_From.HOME_LOCATION_CD7, ParameterDirection.Input);
                            parameters[11] = new OracleParameter(":v_home_bugl", OracleDbType.Varchar2, item_TTD_From.BUS_UNIT_GL_FROM, ParameterDirection.Input);
                            parameters[12] = new OracleParameter(":home_pool", OracleDbType.Varchar2, " ", ParameterDirection.Input);
                            parameters[13] = new OracleParameter(":v_work_dept", OracleDbType.Varchar2, item_TTD_From.DEPTID, ParameterDirection.Input);
                            parameters[14] = new OracleParameter(":v_work_loc", OracleDbType.Varchar2, item_TTD_From.WORK_LOCATION_CD7, ParameterDirection.Input);
                            parameters[15] = new OracleParameter(":v_work_bugl", OracleDbType.Varchar2, item_TTD_From.BUSINESS_UNIT_GL, ParameterDirection.Input);
                            parameters[16] = new OracleParameter(":work_pool", OracleDbType.Varchar2, " ", ParameterDirection.Input);
                            parameters[17] = new OracleParameter(":v_rsc", OracleDbType.Varchar2, item_TTD_From.RESOURCE_SUB_CAT, ParameterDirection.Input);
                            parameters[18] = new OracleParameter(":v_wpd", OracleDbType.Varchar2, item_TTD_From.WPD_ID7, ParameterDirection.Input);
                            parameters[19] = new OracleParameter(":v_bulk", OracleDbType.Varchar2, item_TTD_From.BULK_ALCTN_CD7, ParameterDirection.Input);
                            parameters[20] = new OracleParameter(":v_ptt", OracleDbType.Varchar2, item_TTD_From.PROJ_TRANS_TYPE, ParameterDirection.Input);
                            parameters[21] = new OracleParameter(":v_ptc", OracleDbType.Varchar2, item_TTD_From.PROJ_TRANS_CODE, ParameterDirection.Input);
                            parameters[22] = new OracleParameter(":v_ttd_qty", OracleDbType.Decimal, item_TTD_From.SUM_TTD_QUANTITY7, ParameterDirection.Input);
                            parameters[23] = new OracleParameter(":v_ttd_amt", OracleDbType.Decimal, item_TTD_From.SUM_TTD_DOMESTIC_AMT7, ParameterDirection.Input);
                            parameters[24] = new OracleParameter(":v_class_cd", OracleDbType.Varchar2, item_TTD_From.CLASS_CD7, ParameterDirection.Input);
                            parameters[25] = new OracleParameter(":v_affiliate", OracleDbType.Varchar2, "", ParameterDirection.Input);

                            try
                            {
                                var InsertStatus = entities.Database.ExecuteSqlCommand("BEGIN " + sql.ToString() + " END;", parameters);
                            }
                            catch (Exception ex)
                            {
                                throw ex;
                            }
                        }
                    }
                }
                //-- load period ytd glpc backup table
                if (mctrcreateform.py_cy_status == "PY")
                {
                    if ((mctrcreateform.py_cy_status == "PY") && (Convert.ToInt32(mctrcreateform.fyear) > 2007) && (mctrLineItem.AFFILIATE_FROM != null))
                    {
                        var c_pri_per_from_affList = c_pri_per_from_aff(mctrcreateform, v_rsc_lbr_flg, v_cls_vdt_flg, v_bulk_flg);
                        if (c_pri_per_from_affList.Any())
                        {
                            v_seq_no = 0;

                            foreach (var item_pri_per_from_aff in c_pri_per_from_affList)
                            {
                                v_seq_no++;
                                // SQL: insert into mctr_per_backup ( mctr_no , line_no , seq_no , fiscal_year , accounting_period , analysis_type , activity_id , project_id , account , home_dept , home_loc , home_bugl , home_pool , work_dept , work_loc , work_bugl , work_pool , rsc , wpd , bulk_alctn_cd7 , proj_trans_type , proj_trans_code , quantity_ytd , amount_ytd , class_cd , affiliate ) values ( : mctr_line_item . mctr_no , : line_no , v_seq_no , v_year , v_period , v_anal_type , v_activity , v_project , v_account , v_home_dept , v_home_loc , v_home_bugl , ' ' , v_work_dept , v_work_loc , v_work_bugl , ' ' , v_rsc , v_wpd , v_bulk , v_ptt , v_ptc , v_ytd_qty , v_ytd_amt , v_class_cd , v_affiliate )
                                sql = new StringBuilder(" insert  into  mctr_per_backup  (  mctr_no  ,  line_no  ,  seq_no  ,  fiscal_year  ,  accounting_period  ,  analysis_type  ,  activity_id  ,  project_id  ,  account  ,  home_dept  ,  home_loc  ,  home_bugl  ,  home_pool  ,  work_dept  ,  work_loc  ,  work_bugl  ,  work_pool  ,  rsc  ,  wpd  ,  bulk_alctn_cd7  ,  proj_trans_type  ,  proj_trans_code  ,  quantity_ytd  ,  amount_ytd  ,  class_cd  ,  affiliate  )  values (:0,:1,:2,:3,:4,:5,:6,:7,:8,:9,:10,:11,:12,:13,:14,:15,:16,:17,:18,:19,:20,:21,:22,:23,:24,0);");
                                parameters = new OracleParameter[25];
                                parameters[0] = new OracleParameter(":mctr_no", OracleDbType.Int32, mctrcreateform.MctrNo, ParameterDirection.Input);
                                parameters[1] = new OracleParameter(":line_no", OracleDbType.Int16, mctrcreateform.LineNo, ParameterDirection.Input);
                                parameters[2] = new OracleParameter(":v_seq_no", OracleDbType.Int16, v_seq_no, ParameterDirection.Input);
                                parameters[3] = new OracleParameter(":v_year", OracleDbType.Int16, item_pri_per_from_aff.FISCAL_YEAR, ParameterDirection.Input);
                                parameters[4] = new OracleParameter(":v_period", OracleDbType.Int16, item_pri_per_from_aff.ACCOUNTING_PERIOD, ParameterDirection.Input);
                                parameters[5] = new OracleParameter(":v_anal_type", OracleDbType.Varchar2, item_pri_per_from_aff.ANALYSIS_TYPE, ParameterDirection.Input);
                                parameters[6] = new OracleParameter(":v_activity", OracleDbType.Varchar2, item_pri_per_from_aff.ACTIVITY_ID, ParameterDirection.Input);
                                parameters[7] = new OracleParameter(":v_project", OracleDbType.Varchar2, item_pri_per_from_aff.PROJECT_ID, ParameterDirection.Input);
                                parameters[8] = new OracleParameter(":v_account", OracleDbType.Varchar2, item_pri_per_from_aff.ACCOUNT, ParameterDirection.Input);
                                parameters[9] = new OracleParameter(":v_home_dept", OracleDbType.Varchar2, item_pri_per_from_aff.DEPTID_FROM, ParameterDirection.Input);
                                parameters[10] = new OracleParameter(":v_home_loc", OracleDbType.Varchar2, item_pri_per_from_aff.HOME_LOCATION_CD7, ParameterDirection.Input);
                                parameters[11] = new OracleParameter(":v_home_bugl", OracleDbType.Varchar2, item_pri_per_from_aff.BUS_UNIT_GL_FROM, ParameterDirection.Input);
                                parameters[12] = new OracleParameter(":home_pool", OracleDbType.Varchar2, " ", ParameterDirection.Input);
                                parameters[13] = new OracleParameter(":v_work_dept", OracleDbType.Varchar2, item_pri_per_from_aff.DEPTID, ParameterDirection.Input);
                                parameters[14] = new OracleParameter(":v_work_loc", OracleDbType.Varchar2, item_pri_per_from_aff.WORK_LOCATION_CD7, ParameterDirection.Input);
                                parameters[15] = new OracleParameter(":v_work_bugl", OracleDbType.Varchar2, item_pri_per_from_aff.BUSINESS_UNIT_GL, ParameterDirection.Input);
                                parameters[16] = new OracleParameter(":work_pool", OracleDbType.Varchar2, " ", ParameterDirection.Input);
                                parameters[17] = new OracleParameter(":v_rsc", OracleDbType.Varchar2, item_pri_per_from_aff.RESOURCE_SUB_CAT, ParameterDirection.Input);
                                parameters[18] = new OracleParameter(":v_wpd", OracleDbType.Varchar2, item_pri_per_from_aff.WPD_ID7, ParameterDirection.Input);
                                parameters[19] = new OracleParameter(":v_bulk", OracleDbType.Varchar2, item_pri_per_from_aff.BULK_ALCTN_CD7, ParameterDirection.Input);
                                parameters[20] = new OracleParameter(":v_ptt", OracleDbType.Varchar2, item_pri_per_from_aff.PROJ_TRANS_TYPE, ParameterDirection.Input);
                                parameters[21] = new OracleParameter(":v_ptc", OracleDbType.Varchar2, item_pri_per_from_aff.PROJ_TRANS_CODE, ParameterDirection.Input);
                                parameters[22] = new OracleParameter(":v_ttd_qty", OracleDbType.Decimal, item_pri_per_from_aff.SUM_TTD_QUANTITY7, ParameterDirection.Input);
                                parameters[23] = new OracleParameter(":v_ttd_amt", OracleDbType.Decimal, item_pri_per_from_aff.SUM_TTD_DOMESTIC_AMT7, ParameterDirection.Input);
                                parameters[24] = new OracleParameter(":v_class_cd", OracleDbType.Varchar2, item_pri_per_from_aff.CLASS_CD7, ParameterDirection.Input);
                                var InsertStatus = entities.Database.ExecuteSqlCommand("BEGIN " + sql.ToString() + " END;", parameters);
                            }

                        }
                    }
                }
                else
                {
                    var c_pri_per_fromList = c_pri_per_from(mctrcreateform, v_rsc_lbr_flg, v_cls_vdt_flg, v_bulk_flg);

                    foreach (var item_pri_per_from in c_pri_per_fromList)
                    {
                        // SQL: insert into mctr_per_backup ( mctr_no , line_no , seq_no , fiscal_year , accounting_period , analysis_type , activity_id , project_id , account , home_dept , home_loc , home_bugl , home_pool , work_dept , work_loc , work_bugl , work_pool , rsc , wpd , bulk_alctn_cd7 , proj_trans_type , proj_trans_code , quantity_ytd , amount_ytd , class_cd , affiliate ) values ( : mctr_line_item . mctr_no , : line_no , v_seq_no , v_year , v_period , v_anal_type , v_activity , v_project , v_account , v_home_dept , v_home_loc , v_home_bugl , ' ' , v_work_dept , v_work_loc , v_work_bugl , ' ' , v_rsc , v_wpd , v_bulk , v_ptt , v_ptc , v_ytd_qty , v_ytd_amt , v_class_cd , v_affiliate )

                        sql = new StringBuilder(" insert  into  mctr_per_backup  (  mctr_no  ,  line_no  ,  seq_no  ,  fiscal_year  ,  accounting_period  ,  analysis_type  ,  activity_id  ,  project_id  ,  account  ,  home_dept  ,  home_loc  ,  home_bugl  ,  home_pool  ,  work_dept  ,  work_loc  ,  work_bugl  ,  work_pool  ,  rsc  ,  wpd  ,  bulk_alctn_cd7  ,  proj_trans_type  ,  proj_trans_code  ,  quantity_ytd  ,  amount_ytd  ,  class_cd  ,  affiliate  )  values (:0,:1,:2,:3,:4,:5,:6,:7,:8,:9,:10,:11,:12,:13,:14,:15,:16,:17,:18,:19,:20,:21,:22,:23,:24,:25);");
                        parameters = new OracleParameter[26];
                        parameters[0] = new OracleParameter(":mctr_no", OracleDbType.Int32, mctrcreateform.MctrNo, ParameterDirection.Input);
                        parameters[1] = new OracleParameter(":line_no", OracleDbType.Int16, mctrcreateform.LineNo, ParameterDirection.Input);
                        parameters[2] = new OracleParameter(":v_seq_no", OracleDbType.Int16, v_seq_no, ParameterDirection.Input);
                        parameters[3] = new OracleParameter(":v_year", OracleDbType.Int16, item_pri_per_from.FISCAL_YEAR, ParameterDirection.Input);
                        parameters[4] = new OracleParameter(":v_period", OracleDbType.Int16, item_pri_per_from.ACCOUNTING_PERIOD, ParameterDirection.Input);
                        parameters[5] = new OracleParameter(":v_anal_type", OracleDbType.Varchar2, item_pri_per_from.ANALYSIS_TYPE, ParameterDirection.Input);
                        parameters[6] = new OracleParameter(":v_activity", OracleDbType.Varchar2, item_pri_per_from.ACTIVITY_ID, ParameterDirection.Input);
                        parameters[7] = new OracleParameter(":v_project", OracleDbType.Varchar2, item_pri_per_from.PROJECT_ID, ParameterDirection.Input);
                        parameters[8] = new OracleParameter(":v_account", OracleDbType.Varchar2, item_pri_per_from.ACCOUNT, ParameterDirection.Input);
                        parameters[9] = new OracleParameter(":v_home_dept", OracleDbType.Varchar2, item_pri_per_from.DEPTID_FROM, ParameterDirection.Input);
                        parameters[10] = new OracleParameter(":v_home_loc", OracleDbType.Varchar2, item_pri_per_from.HOME_LOCATION_CD7, ParameterDirection.Input);
                        parameters[11] = new OracleParameter(":v_home_bugl", OracleDbType.Varchar2, item_pri_per_from.BUS_UNIT_GL_FROM, ParameterDirection.Input);
                        parameters[12] = new OracleParameter(":home_pool", OracleDbType.Varchar2, " ", ParameterDirection.Input);
                        parameters[13] = new OracleParameter(":v_work_dept", OracleDbType.Varchar2, item_pri_per_from.DEPTID, ParameterDirection.Input);
                        parameters[14] = new OracleParameter(":v_work_loc", OracleDbType.Varchar2, item_pri_per_from.WORK_LOCATION_CD7, ParameterDirection.Input);
                        parameters[15] = new OracleParameter(":v_work_bugl", OracleDbType.Varchar2, item_pri_per_from.BUSINESS_UNIT_GL, ParameterDirection.Input);
                        parameters[16] = new OracleParameter(":work_pool", OracleDbType.Varchar2, " ", ParameterDirection.Input);
                        parameters[17] = new OracleParameter(":v_rsc", OracleDbType.Varchar2, item_pri_per_from.RESOURCE_SUB_CAT, ParameterDirection.Input);
                        parameters[18] = new OracleParameter(":v_wpd", OracleDbType.Varchar2, item_pri_per_from.WPD_ID7, ParameterDirection.Input);
                        parameters[19] = new OracleParameter(":v_bulk", OracleDbType.Varchar2, item_pri_per_from.BULK_ALCTN_CD7, ParameterDirection.Input);
                        parameters[20] = new OracleParameter(":v_ptt", OracleDbType.Varchar2, item_pri_per_from.PROJ_TRANS_TYPE, ParameterDirection.Input);
                        parameters[21] = new OracleParameter(":v_ptc", OracleDbType.Varchar2, item_pri_per_from.PROJ_TRANS_CODE, ParameterDirection.Input);
                        parameters[22] = new OracleParameter(":v_ttd_qty", OracleDbType.Decimal, item_pri_per_from.SUM_TTD_QUANTITY7, ParameterDirection.Input);
                        parameters[23] = new OracleParameter(":v_ttd_amt", OracleDbType.Decimal, item_pri_per_from.SUM_TTD_DOMESTIC_AMT7, ParameterDirection.Input);
                        parameters[24] = new OracleParameter(":v_class_cd", OracleDbType.Varchar2, item_pri_per_from.CLASS_CD7, ParameterDirection.Input);
                        parameters[25] = new OracleParameter(":v_affiliate", OracleDbType.Varchar2, item_pri_per_from.AFFILIATE ?? " ", ParameterDirection.Input);
                        var InsertStatus = entities.Database.ExecuteSqlCommand("BEGIN " + sql.ToString() + " END;", parameters);


                    }
                }
                // missing else c_cur_per_from
                //--clear overhead and offset tables.

                // SQL: delete from mctr_ovrhd where mctr_no = : mctr_line_item . mctr_no and line_no = : line_no
                sql = new StringBuilder(" delete  from  mctr_ovrhd  where mctr_no=:0 and line_no=:1 ;");
                parameters = new OracleParameter[2];
                parameters[0] = new OracleParameter(":mctr_no", OracleDbType.Int32, mctrcreateform.MctrNo, ParameterDirection.Input);
                parameters[1] = new OracleParameter(":line_no", OracleDbType.Int32, mctrcreateform.LineNo, ParameterDirection.Input);
                DeleteStatus = entities.Database.ExecuteSqlCommand("BEGIN " + sql.ToString() + " END;", parameters);

                // SQL: delete from mctr_offset where mctr_no = : mctr_header . mctr_no
                sql = new StringBuilder(" delete  from  mctr_offset  where mctr_no=:0;");
                parameters = new OracleParameter[1];
                parameters[0] = new OracleParameter(":mctr_no", OracleDbType.Int32, mctrcreateform.MctrNo, ParameterDirection.Input);
                DeleteStatus = entities.Database.ExecuteSqlCommand("BEGIN " + sql.ToString() + " END;", parameters);
            }
            catch (Exception ex)
            {
                throw ex;
            }

            mctrLineItem.RSC_FROM = mctrLineItem.RSC_FROM ?? "";
            mctrLineItem.RSC_TO = mctrLineItem.RSC_TO ?? "";
            mctrLineItem.BUM_CD7_FROM = mctrLineItem.BUM_CD7_FROM ?? "";
            mctrLineItem.BUM_CD7_TO = mctrLineItem.BUM_CD7_TO ?? "";

            //get overhead and offset detail if prior year cost transfer.
            if ((mctrcreateform.py_cy_status.Equals("PY")))
            {
                string[] rsc_List = { "693", "695", "697" };
                if (v_man_rated_flg.Equals("N"))
                {
                    if (mctrLineItem.RSC_FROM.StartsWith("9"))
                    {
                        v_rsc_pl_from_mod = "9xx";
                    }

                    else if (mctrLineItem.RSC_FROM.Equals("095") && Convert.ToInt32(mctrcreateform.fyear) >= 2009)
                    {
                        v_rsc_pl_from_mod = "00";
                    }

                    else if (mctrLineItem.RSC_FROM.Equals("095") && Convert.ToInt32(mctrcreateform.fyear) < 2009)
                    {
                        v_rsc_pl_from_mod = "95";
                    }

                    else if (mctrLineItem.RSC_FROM.StartsWith("5"))
                    {
                        v_rsc_pl_from_mod = mctrLineItem.RSC_FROM;
                    }

                    else if (rsc_List.Contains<string>(mctrLineItem.RSC_FROM))
                    {
                        v_rsc_pl_from_mod = "69x";
                    }

                    else if (mctrLineItem.RSC_FROM.StartsWith("6"))
                    {
                        v_rsc_pl_from_mod = "6xx";
                    }

                    else
                    {
                        v_rsc_pl_from_mod = mctrLineItem.WORK_POOL_FROM;
                    }

                    if (mctrLineItem.RSC_TO.StartsWith("9"))
                    {
                        v_rsc_pl_to_mod = "9xx";
                    }

                    else if (mctrLineItem.RSC_TO.Equals("095") && Convert.ToInt32(mctrcreateform.fyear) >= 2009)
                    {
                        v_rsc_pl_to_mod = "00";
                    }

                    else if (mctrLineItem.RSC_TO.Equals("095") && Convert.ToInt32(mctrcreateform.fyear) < 2009)
                    {
                        v_rsc_pl_to_mod = "95";
                    }

                    else if (mctrLineItem.RSC_TO.StartsWith("5"))
                    {
                        v_rsc_pl_to_mod = mctrLineItem.RSC_TO;
                    }

                    else if (rsc_List.Contains<string>(mctrLineItem.RSC_TO))
                    {
                        v_rsc_pl_to_mod = "69x";
                    }

                    else if (mctrLineItem.RSC_TO.StartsWith("6"))
                    {
                        v_rsc_pl_to_mod = "6xx";
                    }

                    else
                    {
                        v_rsc_pl_to_mod = mctrLineItem.WORK_POOL_TO;
                    }
                    if (mctrcreateform.OrigBu.Equals("CG"))
                    {
                        if (mctrLineItem.BUM_CD7_FROM.Length == 3 && (!mctrLineItem.BUM_CD7_FROM.StartsWith("E")))
                        {
                            v_bum_cd_from = mctrLineItem.BUM_CD7_FROM.Substring(1, 2);
                        }

                        else
                        {
                            v_bum_cd_from = mctrLineItem.BUM_CD7_FROM.Substring(0, 2);
                        }
                    }

                    else
                    {
                        if (mctrLineItem.BUM_CD7_FROM.Length == 3)
                        {
                            v_bum_cd_from = mctrLineItem.BUM_CD7_FROM.Substring(1, 2);
                        }

                        else
                        {
                            v_bum_cd_from = mctrLineItem.BUM_CD7_FROM.Substring(0, 2);
                        }
                    }

                    if (mctrcreateform.OrigBu.Equals("CG"))
                    {
                        if ((mctrLineItem.BUM_CD7_TO.Length == 3) && !(mctrLineItem.BUM_CD7_TO.Substring(0, 0).Equals("e")))
                        {
                            v_bum_cd_to = mctrLineItem.BUM_CD7_FROM.Substring(1, 2);
                        }

                        else
                        {
                            v_bum_cd_to = mctrLineItem.BUM_CD7_FROM.Substring(0, 2);
                        }
                    }

                    else
                    {
                        if (mctrLineItem.BUM_CD7_TO.Length == 3)
                        {
                            v_bum_cd_to = mctrLineItem.BUM_CD7_TO.Substring(1, 2);
                        }

                        else
                        {
                            v_bum_cd_to = mctrLineItem.BUM_CD7_TO.Substring(0, 2);
                        }
                    }
                    try
                    {
                        // SQL: select customer_grp into v_cust_grp_from from mctr_cust_type where fiscal_year = : fiscal_year and customer_type_cd7 = : cust_type_cd7_from
                        sql = new StringBuilder("select customer_grp  from  mctr_cust_type where fiscal_year = :0 and customer_type_cd7 = :1 ");
                        parameters = new OracleParameter[2];
                        parameters[0] = new OracleParameter(":fiscal_year", OracleDbType.Int32, Convert.ToInt32(Convert.ToInt32(mctrcreateform.fyear)), ParameterDirection.Input);
                        parameters[1] = new OracleParameter(":cust_type_cd7_from", OracleDbType.Varchar2, mctrLineItem.CUST_TYPE_CD7_FROM, ParameterDirection.Input);
                        v_cust_grp_from = entities.Database.SqlQuery<string>(sql.ToString(), parameters).SingleOrDefault<string>();
                        // SQL: select customer_grp into v_cust_grp_to from mctr_cust_type where fiscal_year = : fiscal_year and customer_type_cd7 = : cust_type_cd7_to
                        sql = new StringBuilder("select customer_grp  from  mctr_cust_type where fiscal_year =:0 and customer_type_cd7 =:1 ");
                        parameters = new OracleParameter[2];
                        parameters[0] = new OracleParameter(":fiscal_year", OracleDbType.Int32, Convert.ToInt32(Convert.ToInt32(mctrcreateform.fyear)), ParameterDirection.Input);
                        parameters[1] = new OracleParameter(":cust_type_cd7_to", OracleDbType.Varchar2, mctrLineItem.CUST_TYPE_CD7_TO, ParameterDirection.Input);
                        v_cust_grp_to = entities.Database.SqlQuery<string>(sql.ToString(), parameters).SingleOrDefault<string>();
                    }
                    catch (Exception ex)
                    {
                        v_cust_grp_from = " ";
                        v_cust_grp_to = " ";
                        throw ex;
                    }
                    //calculate overheads
                    if ((mctrcreateform.py_cy_status.Equals("PY") && Convert.ToInt32(mctrcreateform.fyear) > 2007 && mctrcreateform.AffiliateFrom != null))

                    {
                        v_setid = mctrLineItem.AFFILIATE_FROM;
                    }

                    else
                    {
                        v_setid = mctrLineItem.HOME_BUGL_FROM;
                    }
                    v_line_oh = 1;
                    //exclude all of the 9xx rscs from burden calculation for all years (from side). 
                    if ((v_rsc_pl_from_mod.Trim() == null) || ((v_rsc_pl_from_mod.Trim() != null) && (!v_rsc_pl_from_mod.Equals("9xx"))))
                    {
                        List<MCTR_COMP_RATES> c_comp_rates_fromList = c_comp_rates_from(mctrcreateform, v_setid, v_cust_grp_from, v_rsc_pl_from_mod, v_bum_cd_from);
                        if (c_comp_rates_fromList != null && c_comp_rates_fromList.Any())
                        {
                            foreach (var item_comp_rates_from in c_comp_rates_fromList)
                            {
                                v_rsc_out = item_comp_rates_from.RSC_OUTPUT;
                                v_pool_out = item_comp_rates_from.POOL_OUTPUT;
                                v_rate_output = item_comp_rates_from.RATE_OUTPUT;
                                v_rate_override = item_comp_rates_from.RATE_OVERRIDE;
                                if (v_rate_override != 0)
                                {
                                    v_rate = v_rate_override;
                                }

                                else
                                {
                                    v_rate = v_rate_output;
                                }
                                v_proj_trans_type = "OTH";
                                v_proj_trans_code = null;
                                v_oh_wpd_from = null;
                                v_oh_bulk_from = null;
                                if (v_pool_out == "NL")
                                {
                                    v_pool_out = mctrcreateform.WorkPoolFrom;
                                }

                                if (v_rsc_out.IndexOf("FRG") != -1)
                                {
                                    v_proj_trans_type = "LBR";
                                    v_proj_trans_code = "FRG";
                                    v_oh_wpd_from = mctrLineItem.WPD_FROM;
                                    v_oh_bulk_from = mctrLineItem.BULK_FROM;
                                    v_home_dept = mctrLineItem.HOME_DEPT_FROM;
                                    v_work_dept = mctrLineItem.WORK_DEPT_FROM;
                                    v_rsc_out = mctrLineItem.RSC_FROM;
                                }

                                else
                                {
                                    v_home_dept = null;
                                    v_work_dept = null;
                                }
                                v_amount = (mctrLineItem.AMOUNT_FROM + mctrLineItem.ADJUSTMENT_FROM) * v_rate;
                                try
                                {
                                    // SQL: insert into mctr_ovrhd ( mctr_no , line_no , from_to , line_no_oh , work_bugl_from , activity_id_from , project_id_from , account_from , home_dept_from , home_loc_from , home_bugl_from , home_pool_from , labor_rate_cd7_from , class_cd_from , work_dept_from , work_loc_from , work_pool_from , rsc_from , wpd_from , bulk_alctn_cd7 , proj_trans_type_from , proj_trans_code_from , stat_code_from , uom_from , affiliate_from , oh_base_yr_from , quantity_from , amount_from ) values ( : mctr_line_item . mctr_no , : line_no , 'F' , v_line_oh , : work_bugl_from , : activity_id_from , : project_id_from , : account_from , v_home_dept , : home_loc_from , : home_bugl_from , v_pool_out , null , null , v_work_dept , : work_loc_from , v_pool_out , v_rsc_out , v_oh_wpd_from , v_oh_bulk_from , v_proj_trans_type , v_proj_trans_code , null , null , : affiliate_from , : fiscal_year , 0 , v_amount )
                                    sql = new StringBuilder("INSERT INTO MCTR_OVRHD(MCTR_NO,LINE_NO,FROM_TO,LINE_NO_OH,ACTIVITY_ID_FROM,PROJECT_ID_FROM,ACCOUNT_FROM,BUM_CD7_FROM,CUS_TYPE_CD7_FROM,HOME_DEPT_FROM,HOME_LOC_FROM,HOME_BUGL_FROM,HOME_POOL_FROM,LABOR_RATE_CD7_FROM,CLASS_CD_FROM,WORK_DEPT_FROM,WORK_LOC_FROM,WORK_BUGL_FROM,WORK_POOL_FROM,RSC_FROM,PROJ_TRANS_TYPE_FROM,PROJ_TRANS_CODE_FROM,STAT_CODE_FROM,UOM_FROM,OH_BASE_YR_FROM,QUANTITY_FROM,AMOUNT_FROM,WPD_FROM,BULK_ALCTN_CD7,AFFILIATE_FROM) VALUES(:0,:1,:2,:3,:4,:5,:6,:7,:8,:9,:10,:11,:12,:13,:14,:15,:16,:17,:18,:19,:20,:21,:22,:23,:24,:25,:26,:27,:28,:29);");
                                    parameters = new OracleParameter[30];
                                    parameters[0] = new OracleParameter(":mctr_no", OracleDbType.Int32, mctrcreateform.MctrNo, ParameterDirection.Input);
                                    parameters[1] = new OracleParameter(":line_no", OracleDbType.Int16, mctrLineItem.LINE_NO, ParameterDirection.Input);
                                    parameters[2] = new OracleParameter(":FROM_TO", OracleDbType.Varchar2, "F", ParameterDirection.Input);
                                    parameters[3] = new OracleParameter(":v_line_oh", OracleDbType.Int16, v_line_oh, ParameterDirection.Input);
                                    parameters[4] = new OracleParameter(":activity_id_from", OracleDbType.Varchar2, mctrLineItem.ACTIVITY_ID_FROM, ParameterDirection.Input);
                                    parameters[5] = new OracleParameter(":project_id_from", OracleDbType.Varchar2, mctrLineItem.PROJECT_ID_FROM, ParameterDirection.Input);
                                    parameters[6] = new OracleParameter(":account_from", OracleDbType.Varchar2, mctrLineItem.ACCOUNT_FROM, ParameterDirection.Input);
                                    parameters[7] = new OracleParameter(":BUM_CD7_FROM", OracleDbType.Varchar2, null, ParameterDirection.Input);
                                    parameters[8] = new OracleParameter(":CUS_TYPE_CD7_FROM", OracleDbType.Varchar2, null, ParameterDirection.Input);
                                    parameters[9] = new OracleParameter(":v_home_dept", OracleDbType.Varchar2, v_home_dept, ParameterDirection.Input);
                                    parameters[10] = new OracleParameter(":home_loc_from", OracleDbType.Varchar2, mctrLineItem.HOME_LOC_FROM, ParameterDirection.Input);
                                    parameters[11] = new OracleParameter(":home_bugl_from", OracleDbType.Varchar2, mctrLineItem.HOME_BUGL_FROM, ParameterDirection.Input);
                                    parameters[12] = new OracleParameter(":v_pool_out", OracleDbType.Varchar2, v_pool_out, ParameterDirection.Input);
                                    parameters[13] = new OracleParameter(":LABOR_RATE_CD7_FROM", OracleDbType.Varchar2, null, ParameterDirection.Input);
                                    parameters[14] = new OracleParameter(":CLASS_CD_FROM", OracleDbType.Varchar2, null, ParameterDirection.Input);
                                    parameters[15] = new OracleParameter(":v_work_dept", OracleDbType.Varchar2, v_work_dept, ParameterDirection.Input);
                                    parameters[16] = new OracleParameter(":work_loc_from", OracleDbType.Varchar2, mctrLineItem.WORK_LOC_FROM, ParameterDirection.Input);
                                    parameters[17] = new OracleParameter(":work_bugl_from", OracleDbType.Varchar2, mctrLineItem.WORK_BUGL_FROM, ParameterDirection.Input);
                                    parameters[18] = new OracleParameter(":v_pool_out", OracleDbType.Varchar2, v_pool_out, ParameterDirection.Input);
                                    parameters[19] = new OracleParameter(":v_rsc_out", OracleDbType.Varchar2, v_rsc_out, ParameterDirection.Input);
                                    parameters[20] = new OracleParameter(":v_proj_trans_type", OracleDbType.Varchar2, v_proj_trans_type, ParameterDirection.Input);
                                    parameters[21] = new OracleParameter(":v_proj_trans_code", OracleDbType.Varchar2, v_proj_trans_code, ParameterDirection.Input);
                                    parameters[22] = new OracleParameter(":STAT_CODE_FROM", OracleDbType.Varchar2, null, ParameterDirection.Input);
                                    parameters[23] = new OracleParameter(":UOM_FROM", OracleDbType.Varchar2, null, ParameterDirection.Input);
                                    parameters[24] = new OracleParameter(":fiscal_year", OracleDbType.Int16, Convert.ToInt32(Convert.ToInt32(mctrcreateform.fyear)), ParameterDirection.Input);
                                    parameters[25] = new OracleParameter(":quantity_from", OracleDbType.Decimal, 0, ParameterDirection.Input);
                                    parameters[26] = new OracleParameter(":v_amount", OracleDbType.Decimal, v_amount, ParameterDirection.Input);
                                    parameters[27] = new OracleParameter(":v_oh_wpd_from", OracleDbType.Varchar2, v_oh_wpd_from, ParameterDirection.Input);
                                    parameters[28] = new OracleParameter(":v_oh_bulk_from", OracleDbType.Varchar2, v_oh_bulk_from, ParameterDirection.Input);
                                    parameters[29] = new OracleParameter(":affiliate_from", OracleDbType.Varchar2, mctrLineItem.AFFILIATE_FROM, ParameterDirection.Input);
                                    var InsertStatus = entities.Database.ExecuteSqlCommand("BEGIN " + sql.ToString() + " END;", parameters);
                                    v_line_oh = v_line_oh + 1;
                                }
                                catch (Exception ex)
                                {
                                    logger.Error("Error from  Mctr.DataAccess.MctrLogAcctRepository.mctrHeaderMctrHeaderOnLoad():" + ex.Message);
                                }
                            }
                        }
                    }
                    //   exclude all of the 9xx rscs from burden calculation for all years (to side).
                    if ((mctrcreateform.py_cy_status.Equals("PY") && Convert.ToInt32(mctrcreateform.fyear) > 2007 && mctrLineItem.AFFILIATE_TO != null))
                    {
                        v_setid = mctrLineItem.AFFILIATE_TO;
                    }

                    else
                    {
                        v_setid = mctrLineItem.HOME_BUGL_TO;
                    }
                    v_rsc_pl_to_mod = v_rsc_pl_to_mod ?? "";
                    if ((v_rsc_pl_to_mod.Trim() == null) || (v_rsc_pl_to_mod.Trim() != null) && (!v_rsc_pl_to_mod.Equals("9xx")))
                    {
                        List<MCTR_COMP_RATES> c_comp_rates_toList = c_comp_rates_to(mctrcreateform, v_setid, v_cust_grp_from, v_rsc_pl_to_mod, v_bum_cd_to);

                        if (c_comp_rates_toList != null && c_comp_rates_toList.Any())
                        {
                            foreach (var item_comp_rates_to in c_comp_rates_toList)
                            {
                                v_rsc_out = item_comp_rates_to.RSC_OUTPUT;
                                v_pool_out = item_comp_rates_to.POOL_OUTPUT;
                                v_rate_output = item_comp_rates_to.RATE_OUTPUT;
                                v_rate_override = item_comp_rates_to.RATE_OVERRIDE;
                                if (v_rate_override != 0)
                                {
                                    v_rate = v_rate_override;
                                }

                                else
                                {
                                    v_rate = v_rate_output;
                                }
                                v_proj_trans_type = "OTH";
                                v_proj_trans_code = null;
                                v_oh_wpd_to = null;
                                v_oh_bulk_to = null;
                                if (v_pool_out == "NL")
                                {
                                    v_pool_out = mctrLineItem.WORK_POOL_TO;
                                }

                                if (v_rsc_out.IndexOf("FRG") != -1)
                                {
                                    v_proj_trans_type = "LBR";
                                    v_proj_trans_code = "FRG";
                                    v_oh_wpd_to = mctrLineItem.WPD_TO;
                                    v_oh_bulk_to = mctrLineItem.BULK_TO;
                                    v_home_dept = mctrLineItem.HOME_DEPT_TO;
                                    v_work_dept = mctrLineItem.WORK_DEPT_TO;
                                    v_rsc_out = mctrLineItem.RSC_TO;
                                }

                                else
                                {
                                    v_home_dept = null;
                                    v_work_dept = null;
                                }
                                v_amount = (mctrLineItem.AMOUNT_TO + mctrLineItem.ADJUSTMENT_TO) * v_rate;
                                try
                                {
                                    // SQL: insert into mctr_ovrhd ( mctr_no , line_no , from_to , line_no_oh , work_bugl_from , activity_id_from , project_id_from , account_from , home_dept_from , home_loc_from , home_bugl_from , home_pool_from , labor_rate_cd7_from , class_cd_from , work_dept_from , work_loc_from , work_pool_from , rsc_from , wpd_from , bulk_alctn_cd7 , proj_trans_type_from , proj_trans_code_from , stat_code_from , uom_from , affiliate_from , oh_base_yr_from , quantity_from , amount_from ) values ( : mctr_line_item . mctr_no , : line_no , 't' , v_line_oh , : work_bugl_to , : activity_id_to , : project_id_to , : account_to , v_home_dept , : home_loc_to , : home_bugl_to , v_pool_out , null , null , v_work_dept , : work_loc_to , v_pool_out , v_rsc_out , v_oh_wpd_to , v_oh_bulk_to , v_proj_trans_type , v_proj_trans_code , null , null , : affiliate_from , : fiscal_year , 0 , v_amount )
                                    sql = new StringBuilder("INSERT INTO MCTR_OVRHD(MCTR_NO,LINE_NO,FROM_TO,LINE_NO_OH,ACTIVITY_ID_FROM,PROJECT_ID_FROM,ACCOUNT_FROM,BUM_CD7_FROM,CUS_TYPE_CD7_FROM,HOME_DEPT_FROM,HOME_LOC_FROM,HOME_BUGL_FROM,HOME_POOL_FROM,LABOR_RATE_CD7_FROM,CLASS_CD_FROM,WORK_DEPT_FROM,WORK_LOC_FROM,WORK_BUGL_FROM,WORK_POOL_FROM,RSC_FROM,PROJ_TRANS_TYPE_FROM,PROJ_TRANS_CODE_FROM,STAT_CODE_FROM,UOM_FROM,OH_BASE_YR_FROM,QUANTITY_FROM,AMOUNT_FROM,WPD_FROM,BULK_ALCTN_CD7,AFFILIATE_FROM) VALUES(:0,:1,:2,:3,:4,:5,:6,:7,:8,:9,:10,:11,:12,:13,:14,:15,:16,:17,:18,:19,:20,:21,:22,:23,:24,:25,:26,:27,:28,:29);");
                                    parameters = new OracleParameter[30];
                                    parameters[0] = new OracleParameter(":mctr_no", OracleDbType.Int32, mctrcreateform.MctrNo, ParameterDirection.Input);
                                    parameters[1] = new OracleParameter(":line_no", OracleDbType.Int16, mctrLineItem.LINE_NO, ParameterDirection.Input);
                                    parameters[2] = new OracleParameter(":FROM_TO", OracleDbType.Varchar2, "T", ParameterDirection.Input);
                                    parameters[3] = new OracleParameter(":v_line_oh", OracleDbType.Int16, v_line_oh, ParameterDirection.Input);
                                    parameters[4] = new OracleParameter(":activity_id_from", OracleDbType.Varchar2, mctrLineItem.ACTIVITY_ID_FROM, ParameterDirection.Input);
                                    parameters[5] = new OracleParameter(":project_id_from", OracleDbType.Varchar2, mctrLineItem.PROJECT_ID_FROM, ParameterDirection.Input);
                                    parameters[6] = new OracleParameter(":account_from", OracleDbType.Varchar2, mctrLineItem.ACCOUNT_FROM, ParameterDirection.Input);
                                    parameters[7] = new OracleParameter(":BUM_CD7_FROM", OracleDbType.Varchar2, null, ParameterDirection.Input);
                                    parameters[8] = new OracleParameter(":CUS_TYPE_CD7_FROM", OracleDbType.Varchar2, null, ParameterDirection.Input);
                                    parameters[9] = new OracleParameter(":v_home_dept", OracleDbType.Varchar2, v_home_dept, ParameterDirection.Input);
                                    parameters[10] = new OracleParameter(":home_loc_from", OracleDbType.Varchar2, mctrLineItem.HOME_LOC_FROM, ParameterDirection.Input);
                                    parameters[11] = new OracleParameter(":home_bugl_from", OracleDbType.Varchar2, mctrLineItem.HOME_BUGL_FROM, ParameterDirection.Input);
                                    parameters[12] = new OracleParameter(":v_pool_out", OracleDbType.Varchar2, v_pool_out, ParameterDirection.Input);
                                    parameters[13] = new OracleParameter(":LABOR_RATE_CD7_FROM", OracleDbType.Varchar2, null, ParameterDirection.Input);
                                    parameters[14] = new OracleParameter(":CLASS_CD_FROM", OracleDbType.Varchar2, null, ParameterDirection.Input);
                                    parameters[15] = new OracleParameter(":v_work_dept", OracleDbType.Varchar2, v_work_dept, ParameterDirection.Input);
                                    parameters[16] = new OracleParameter(":work_loc_from", OracleDbType.Varchar2, mctrLineItem.WORK_LOC_FROM, ParameterDirection.Input);
                                    parameters[17] = new OracleParameter(":work_bugl_from", OracleDbType.Varchar2, mctrLineItem.WORK_BUGL_FROM, ParameterDirection.Input);
                                    parameters[18] = new OracleParameter(":v_pool_out", OracleDbType.Varchar2, v_pool_out, ParameterDirection.Input);
                                    parameters[19] = new OracleParameter(":v_rsc_out", OracleDbType.Varchar2, v_rsc_out, ParameterDirection.Input);
                                    parameters[20] = new OracleParameter(":v_proj_trans_type", OracleDbType.Varchar2, v_proj_trans_type, ParameterDirection.Input);
                                    parameters[21] = new OracleParameter(":v_proj_trans_code", OracleDbType.Varchar2, v_proj_trans_code, ParameterDirection.Input);
                                    parameters[22] = new OracleParameter(":STAT_CODE_FROM", OracleDbType.Varchar2, null, ParameterDirection.Input);
                                    parameters[23] = new OracleParameter(":UOM_FROM", OracleDbType.Varchar2, null, ParameterDirection.Input);
                                    parameters[24] = new OracleParameter(":fiscal_year", OracleDbType.Int16, Convert.ToInt32(Convert.ToInt32(mctrcreateform.fyear)), ParameterDirection.Input);
                                    parameters[25] = new OracleParameter(":quantity_from", OracleDbType.Decimal, 0, ParameterDirection.Input);
                                    parameters[26] = new OracleParameter(":v_amount", OracleDbType.Decimal, v_amount, ParameterDirection.Input);
                                    parameters[27] = new OracleParameter(":v_oh_wpd_from", OracleDbType.Varchar2, v_oh_wpd_from, ParameterDirection.Input);
                                    parameters[28] = new OracleParameter(":v_oh_bulk_from", OracleDbType.Varchar2, v_oh_bulk_from, ParameterDirection.Input);
                                    parameters[29] = new OracleParameter(":affiliate_from", OracleDbType.Varchar2, mctrLineItem.AFFILIATE_FROM, ParameterDirection.Input);
                                    var InsertStatus = entities.Database.ExecuteSqlCommand("BEGIN " + sql.ToString() + " END;", parameters);

                                    v_line_oh = v_line_oh + 1;
                                }
                                catch (Exception ex)
                                {
                                    logger.Error("Error from  Mctr.DataAccess.MctrLogAcctRepository.mctrHeaderMctrHeaderOnLoad():" + ex.Message);
                                }
                            }
                        }
                    }
                    //calculate offsets(for both man rated and fringe applied business units)
                    try
                    {
                        var v_line_offset = 1;
                        sql = new StringBuilder("select offset_activity, offset_project, offset_account from mctr_bu_profile where business_unit = :0");
                        parameters = new OracleParameter[1];
                        parameters[0] = new OracleParameter(":orig_bu", OracleDbType.Varchar2, mctrcreateform.OrigBu, ParameterDirection.Input);
                        var result = entities.Database.SqlQuery<BuProfile>(sql.ToString(), parameters).Single();
                        var v_off_activity = result.Offset_Activity;
                        var v_off_project = result.Offset_Project;
                        var v_off_account = result.Offset_Account;


                        if (v_off_activity != null)
                        {
                            List<MctrLINE_ITEM_V> c_offset_liList = c_offset_li(mctrcreateform);
                            if (c_offset_liList != null && c_offset_liList.Any())
                            {
                                foreach (var item_offset_liList in c_offset_liList)
                                {
                                    v_home_bugl = item_offset_liList.HOME_BUGL;
                                    v_home_dept = item_offset_liList.HOME_DEPT;
                                    v_home_loc = item_offset_liList.HOME_LOC;
                                    v_home_pool = item_offset_liList.HOME_POOL;
                                    v_work_bugl = item_offset_liList.WORK_BUGL;
                                    v_work_dept = item_offset_liList.WORK_DEPT;
                                    v_work_loc = item_offset_liList.WORK_LOC;
                                    v_work_pool = item_offset_liList.WORK_POOL;
                                    v_proj_trans_type = item_offset_liList.PROJ_TRANS_TYPE;
                                    v_proj_trans_code = item_offset_liList.PROJ_TRANS_CODE;
                                    v_rsc = item_offset_liList.RSC;
                                    var v_oh_base_yr = item_offset_liList.OH_BASE_YEAR;
                                    v_affiliate = item_offset_liList.AFFILIATE;
                                    var v_off_amount = item_offset_liList.SUM_LI_AMOUNT;
                                    v_affiliate = item_offset_liList.AFFILIATE;

                                    // SQL: insert into mctr_offset ( mctr_no , line_no , work_bugl_from , activity_id_from , project_id_from , account_from , home_dept_from , home_loc_from , home_bugl_from , home_pool_from , labor_rate_cd7_from , class_cd_from , work_dept_from , work_loc_from , work_pool_from , rsc_from , proj_trans_type_from , proj_trans_code_from , stat_code_from , uom_from , oh_base_yr_from , quantity_from , amount_from , affiliate_from ) values ( : mctr_header . mctr_no , v_line_offset , v_work_bugl , v_off_activity , v_off_project , v_off_account , v_home_dept , v_home_loc , v_home_bugl , v_home_pool , null , null , v_work_dept , v_work_loc , v_work_pool , v_rsc , v_proj_trans_type , v_proj_trans_code , null , null , v_oh_base_yr , 0 , v_off_amount * - 1 , v_affiliate )
                                    sql = new StringBuilder(" INSERT INTO MCTR_OFFSET (MCTR_NO,LINE_NO,ACTIVITY_ID_FROM,PROJECT_ID_FROM,ACCOUNT_FROM,HOME_DEPT_FROM,HOME_LOC_FROM,HOME_BUGL_FROM,HOME_POOL_FROM,    LABOR_RATE_CD7_FROM,CLASS_CD_FROM,WORK_DEPT_FROM,WORK_LOC_FROM,WORK_BUGL_FROM,WORK_POOL_FROM,RSC_FROM,PROJ_TRANS_TYPE_FROM,PROJ_TRANS_CODE_FROM,    STAT_CODE_FROM,UOM_FROM,OH_BASE_YR_FROM,QUANTITY_FROM,AMOUNT_FROM,AFFILIATE_FROM) VALUES ( :0,:1,:2,:3,:4,:5,:6,:7,:8,:9,:10,:11,:12,:13,:14,:15,:16,:17,:18,:19,:20,:21,:22,:23);");
                                    parameters = new OracleParameter[24];
                                    parameters[0] = new OracleParameter(":MCTR_NO", OracleDbType.Int32, mctrcreateform.MctrNo, ParameterDirection.Input);
                                    parameters[1] = new OracleParameter(":LINE_NO", OracleDbType.Int16, v_line_offset, ParameterDirection.Input);
                                    parameters[2] = new OracleParameter(":ACTIVITY_ID_FROM", OracleDbType.Varchar2, v_off_activity, ParameterDirection.Input);
                                    parameters[3] = new OracleParameter(":PROJECT_ID_FROM", OracleDbType.Varchar2, v_off_project, ParameterDirection.Input);
                                    parameters[4] = new OracleParameter(":ACCOUNT_FROM", OracleDbType.Varchar2, v_off_account, ParameterDirection.Input);
                                    parameters[5] = new OracleParameter(":HOME_DEPT_FROM", OracleDbType.Varchar2, v_home_dept, ParameterDirection.Input);
                                    parameters[6] = new OracleParameter(":HOME_LOC_FROM", OracleDbType.Varchar2, v_home_loc, ParameterDirection.Input);
                                    parameters[7] = new OracleParameter(":HOME_BUGL_FROM", OracleDbType.Varchar2, v_home_bugl, ParameterDirection.Input);
                                    parameters[8] = new OracleParameter(":HOME_POOL_FROM", OracleDbType.Varchar2, v_home_pool, ParameterDirection.Input);
                                    parameters[9] = new OracleParameter(":LABOR_RATE_CD7_FROM", OracleDbType.Varchar2, null, ParameterDirection.Input);
                                    parameters[10] = new OracleParameter(":CLASS_CD_FROM", OracleDbType.Varchar2, null, ParameterDirection.Input);
                                    parameters[11] = new OracleParameter(":WORK_DEPT_FROM", OracleDbType.Varchar2, v_work_dept, ParameterDirection.Input);
                                    parameters[12] = new OracleParameter(":WORK_LOC_FROM", OracleDbType.Varchar2, v_work_loc, ParameterDirection.Input);
                                    parameters[13] = new OracleParameter(":WORK_BUGL_FROM", OracleDbType.Varchar2, v_work_bugl, ParameterDirection.Input);
                                    parameters[14] = new OracleParameter(":WORK_POOL_FROM", OracleDbType.Varchar2, v_work_pool, ParameterDirection.Input);
                                    parameters[15] = new OracleParameter(":RSC_FROM", OracleDbType.Varchar2, v_rsc, ParameterDirection.Input);
                                    parameters[16] = new OracleParameter(":PROJ_TRANS_TYPE_FROM", OracleDbType.Varchar2, v_proj_trans_type, ParameterDirection.Input);
                                    parameters[17] = new OracleParameter(":PROJ_TRANS_CODE_FROM", OracleDbType.Varchar2, v_proj_trans_code, ParameterDirection.Input);
                                    parameters[18] = new OracleParameter(":STAT_CODE_FROM", OracleDbType.Varchar2, null, ParameterDirection.Input);
                                    parameters[19] = new OracleParameter(":UOM_FROM", OracleDbType.Varchar2, null, ParameterDirection.Input);
                                    parameters[20] = new OracleParameter(":fiscal_year", OracleDbType.Int16, Convert.ToInt32(Convert.ToInt32(mctrcreateform.fyear)), ParameterDirection.Input);
                                    parameters[21] = new OracleParameter(":quantity_from", OracleDbType.Decimal, 0, ParameterDirection.Input);
                                    parameters[22] = new OracleParameter(":v_amount", OracleDbType.Decimal, (v_off_amount * -1), ParameterDirection.Input);
                                    parameters[23] = new OracleParameter(":affiliate_from", OracleDbType.Varchar2, mctrLineItem.AFFILIATE_FROM, ParameterDirection.Input);
                                    var InsertStatus = entities.Database.ExecuteSqlCommand("BEGIN " + sql.ToString() + " END;", parameters);

                                    v_line_offset = v_line_offset + 1;
                                }
                            }

                            List<MctrOhFormBl> c_offset_ohList = c_offset_oh(mctrcreateform);
                            if (c_offset_liList != null && c_offset_liList.Any())
                            {
                                foreach (var item_offset_ohList in c_offset_ohList)
                                {
                                    v_home_bugl = item_offset_ohList.HOME_BUGL_FROM;
                                    v_home_dept = item_offset_ohList.HOME_DEPT_FROM;
                                    v_home_loc = item_offset_ohList.HOME_LOC_FROM;
                                    v_home_pool = item_offset_ohList.HOME_POOL_FROM;
                                    v_work_bugl = item_offset_ohList.WORK_BUGL_FROM;
                                    v_work_dept = item_offset_ohList.WORK_DEPT_FROM;
                                    v_work_loc = item_offset_ohList.WORK_LOC_FROM;
                                    v_work_pool = item_offset_ohList.WORK_POOL_FROM;
                                    v_proj_trans_type = item_offset_ohList.PROJ_TRANS_TYPE_FROM;
                                    v_proj_trans_code = item_offset_ohList.PROJ_TRANS_CODE_FROM;
                                    v_rsc = item_offset_ohList.RSC_FROM;
                                    var v_oh_base_yr = item_offset_ohList.OH_BASE_YR_FROM;
                                    v_affiliate = item_offset_ohList.AFFILIATE_FROM;
                                    var v_off_amount = item_offset_ohList.SUM_AMOUNT_FROM;

                                    // SQL: insert into mctr_offset ( mctr_no , line_no , work_bugl_from , activity_id_from , project_id_from , account_from , home_dept_from , home_loc_from , home_bugl_from , home_pool_from , labor_rate_cd7_from , class_cd_from , work_dept_from , work_loc_from , work_pool_from , rsc_from , proj_trans_type_from , proj_trans_code_from , stat_code_from , uom_from , oh_base_yr_from , quantity_from , amount_from , affiliate_from ) values ( : mctr_header . mctr_no , v_line_offset , v_work_bugl , v_off_activity , v_off_project , v_off_account , v_home_dept , v_home_loc , v_home_bugl , v_home_pool , null , null , v_work_dept , v_work_loc , v_work_pool , v_rsc , v_proj_trans_type , v_proj_trans_code , null , null , v_oh_base_yr , 0 , v_off_amount * - 1 , v_affiliate )
                                    sql = new StringBuilder(" INSERT INTO MCTR_OFFSET (MCTR_NO,LINE_NO,ACTIVITY_ID_FROM,PROJECT_ID_FROM,ACCOUNT_FROM,HOME_DEPT_FROM,HOME_LOC_FROM,HOME_BUGL_FROM,HOME_POOL_FROM,    LABOR_RATE_CD7_FROM,CLASS_CD_FROM,WORK_DEPT_FROM,WORK_LOC_FROM,WORK_BUGL_FROM,WORK_POOL_FROM,RSC_FROM,PROJ_TRANS_TYPE_FROM,PROJ_TRANS_CODE_FROM,    STAT_CODE_FROM,UOM_FROM,OH_BASE_YR_FROM,QUANTITY_FROM,AMOUNT_FROM,AFFILIATE_FROM) VALUES ( :0,:1,:2,:3,:4,:5,:6,:7,:8,:9,:10,:11,:12,:13,:14,:15,:16,:17,:18,:19,:20,:21,:22,:23);");
                                    parameters = new OracleParameter[24];
                                    parameters[0] = new OracleParameter(":MCTR_NO", OracleDbType.Int32, mctrcreateform.MctrNo, ParameterDirection.Input);
                                    parameters[1] = new OracleParameter(":LINE_NO", OracleDbType.Int16, v_line_offset, ParameterDirection.Input);
                                    parameters[2] = new OracleParameter(":ACTIVITY_ID_FROM", OracleDbType.Varchar2, v_off_activity, ParameterDirection.Input);
                                    parameters[3] = new OracleParameter(":PROJECT_ID_FROM", OracleDbType.Varchar2, v_off_project, ParameterDirection.Input);
                                    parameters[4] = new OracleParameter(":ACCOUNT_FROM", OracleDbType.Varchar2, v_off_account, ParameterDirection.Input);
                                    parameters[5] = new OracleParameter(":HOME_DEPT_FROM", OracleDbType.Varchar2, v_home_dept, ParameterDirection.Input);
                                    parameters[6] = new OracleParameter(":HOME_LOC_FROM", OracleDbType.Varchar2, v_home_loc, ParameterDirection.Input);
                                    parameters[7] = new OracleParameter(":HOME_BUGL_FROM", OracleDbType.Varchar2, v_home_bugl, ParameterDirection.Input);
                                    parameters[8] = new OracleParameter(":HOME_POOL_FROM", OracleDbType.Varchar2, v_home_pool, ParameterDirection.Input);
                                    parameters[9] = new OracleParameter(":LABOR_RATE_CD7_FROM", OracleDbType.Varchar2, null, ParameterDirection.Input);
                                    parameters[10] = new OracleParameter(":CLASS_CD_FROM", OracleDbType.Varchar2, null, ParameterDirection.Input);
                                    parameters[11] = new OracleParameter(":WORK_DEPT_FROM", OracleDbType.Varchar2, v_work_dept, ParameterDirection.Input);
                                    parameters[12] = new OracleParameter(":WORK_LOC_FROM", OracleDbType.Varchar2, v_work_loc, ParameterDirection.Input);
                                    parameters[13] = new OracleParameter(":WORK_BUGL_FROM", OracleDbType.Varchar2, v_work_bugl, ParameterDirection.Input);
                                    parameters[14] = new OracleParameter(":WORK_POOL_FROM", OracleDbType.Varchar2, v_work_pool, ParameterDirection.Input);
                                    parameters[15] = new OracleParameter(":RSC_FROM", OracleDbType.Varchar2, v_rsc, ParameterDirection.Input);
                                    parameters[16] = new OracleParameter(":PROJ_TRANS_TYPE_FROM", OracleDbType.Varchar2, v_proj_trans_type, ParameterDirection.Input);
                                    parameters[17] = new OracleParameter(":PROJ_TRANS_CODE_FROM", OracleDbType.Varchar2, v_proj_trans_code, ParameterDirection.Input);
                                    parameters[18] = new OracleParameter(":STAT_CODE_FROM", OracleDbType.Varchar2, null, ParameterDirection.Input);
                                    parameters[19] = new OracleParameter(":UOM_FROM", OracleDbType.Varchar2, null, ParameterDirection.Input);
                                    parameters[20] = new OracleParameter(":fiscal_year", OracleDbType.Int16, Convert.ToInt32(Convert.ToInt32(mctrcreateform.fyear)), ParameterDirection.Input);
                                    parameters[21] = new OracleParameter(":quantity_from", OracleDbType.Decimal, 0, ParameterDirection.Input);
                                    parameters[22] = new OracleParameter(":v_amount", OracleDbType.Decimal, (v_off_amount * -1), ParameterDirection.Input);
                                    parameters[23] = new OracleParameter(":affiliate_from", OracleDbType.Varchar2, mctrLineItem.AFFILIATE_FROM, ParameterDirection.Input);
                                    var InsertStatus = entities.Database.ExecuteSqlCommand("BEGIN " + sql.ToString() + " END;", parameters);
                                    v_line_oh = v_line_oh + 1;
                                }
                            }
                        }
                    }
                    catch (Exception ex)
                    {
                        logger.Error("Error from  Mctr.DataAccess.MctrLogAcctRepository.mctrHeaderMctrHeaderOnLoad():" + ex.Message);
                    }
                }
            }
            try
            {
                // SQL: select sum ( amount_from ) into : oh_amt_from from mctr_ovrhd where mctr_no = : mctr_line_item . mctr_no and line_no = : line_no and from_to = 'F'
                sql = new StringBuilder("select sum ( amount_from ) from mctr_ovrhd where mctr_no = :0 and line_no = :1 and from_to = 'F' ");
                parameters = new OracleParameter[2];
                parameters[0] = new OracleParameter(":MCTR_NO", OracleDbType.Varchar2, mctrcreateform.MctrNo, ParameterDirection.Input);
                parameters[1] = new OracleParameter(":LINE_NO", OracleDbType.Varchar2, mctrLineItem.LINE_NO, ParameterDirection.Input);

                mctrcreateform.OHAmtFrom = entities.Database.SqlQuery<Nullable<decimal>>(sql.ToString(), parameters).SingleOrDefault();
                // SQL: select sum ( amount_from ) into : oh_amt_to from mctr_ovrhd where mctr_no = : mctr_line_item . mctr_no and line_no = : line_no and from_to = 'T'
                sql = new StringBuilder("select sum ( amount_from )  from mctr_ovrhd where mctr_no = :0 and line_no = :1 and from_to = 'T' ");
                parameters = new OracleParameter[2];
                parameters[0] = new OracleParameter(":MCTR_NO", OracleDbType.Int32, mctrcreateform.MctrNo, ParameterDirection.Input);
                parameters[1] = new OracleParameter(":LINE_NO", OracleDbType.Int32, mctrLineItem.LINE_NO, ParameterDirection.Input);
                mctrcreateform.OHAmtTo = entities.Database.SqlQuery<Nullable<decimal>>(sql.ToString(), parameters).SingleOrDefault();
                // SQL: select count ( * ) , sum ( quantity_from ) , sum ( amount_from + adjustment_from ) into : lines_from , : total_qty_from , : total_amt_from from mctr_line_item where mctr_no = : mctr_header . mctr_no and mtl_jrnl = 'N'
                sql = new StringBuilder("select count ( * ) as Linesfrom , nvl(sum ( quantity_from ),0) as TotalQtyFrom, nvl( sum ( amount_from + adjustment_from ),0) as TotalAmtFrom  from  mctr_line_item where mctr_no = :0 and mtl_jrnl = 'N' ");
                parameters = new OracleParameter[1];
                parameters[0] = new OracleParameter(":MCTR_NO", OracleDbType.Int32, mctrcreateform.MctrNo, ParameterDirection.Input);

                var response = entities.Database.SqlQuery<MctrCreateForm>(sql.ToString(), parameters).SingleOrDefault();
                mctrcreateform.Linesfrom = response.Linesfrom;
                mctrcreateform.TotalQtyFrom = response.TotalQtyFrom;
                mctrcreateform.TotalAmtFrom = response.TotalAmtFrom;
                // SQL: select count ( * ) , sum ( quantity_to ) , sum ( amount_to + adjustment_to ) into : lines_to , : total_qty_to , : total_amt_to from mctr_line_item where mctr_no = : mctr_header . mctr_no and mtl_jrnl = 'N'
                sql = new StringBuilder("select count ( * ) as LinesTo , nvl(sum ( quantity_to ),0) as TotalQtyTo , nvl(sum ( amount_to + adjustment_to ),0)  as TotalAmtTo from  mctr_line_item where mctr_no = :0  and mtl_jrnl = 'N' ");
                parameters = new OracleParameter[1];
                parameters[0] = new OracleParameter(":MCTR_NO", OracleDbType.Int32, mctrcreateform.MctrNo, ParameterDirection.Input);

                response = entities.Database.SqlQuery<MctrCreateForm>(sql.ToString(), parameters).SingleOrDefault();
                mctrcreateform.LinesTo = response.LinesTo;
                mctrcreateform.TotalQtyTo = response.TotalQtyTo;
                mctrcreateform.TotalAmtTo = response.TotalAmtTo;

                // SQL: select sum ( amount_from + adjustment_from + amount_to + adjustment_to ) into : total_amt_lines from mctr_line_item where mctr_no = : mctr_header . mctr_no and mtl_jrnl = 'N'
                sql = new StringBuilder("select nvl(sum ( amount_from + adjustment_from + amount_to + adjustment_to ),0)   from  mctr_line_item where mctr_no = :0 and mtl_jrnl = 'N' ");
                parameters = new OracleParameter[1];
                parameters[0] = new OracleParameter(":MCTR_NO", OracleDbType.Int32, mctrcreateform.MctrNo, ParameterDirection.Input);

                mctrcreateform.totalAmtLines = entities.Database.SqlQuery<int>(sql.ToString(), parameters).SingleOrDefault();
                // SQL: select count ( * ) , sum ( amount_from ) into : lines_oh_from , : total_oh_from from mctr_ovrhd where mctr_no = :0 and from_to = 'F'
                sql = new StringBuilder("  select count ( * ) as LinesOhFrom , nvl(sum ( amount_from ),0) as  totalOhFrom from mctr_ovrhd where mctr_no = :0 and from_to = 'F' ");

                parameters = new OracleParameter[1];
                parameters[0] = new OracleParameter(":MCTR_NO", OracleDbType.Int32, mctrcreateform.MctrNo, ParameterDirection.Input);
                response = entities.Database.SqlQuery<MctrCreateForm>(sql.ToString(), parameters).SingleOrDefault();
                mctrcreateform.LinesOhFrom = response.LinesOhFrom;
                mctrcreateform.totalOhFrom = response.totalOhFrom;
                // SQL: select count ( * ) , sum ( amount_from ) into : lines_oh_to , : total_oh_to from mctr_ovrhd where mctr_no = :0 and from_to = 't'
                sql = new StringBuilder("  select count ( * ) as LinesOhTo , nvl(sum ( amount_from ),0) as  totalOhTo from mctr_ovrhd where mctr_no = :0 and from_to = 'T' ");
                parameters = new OracleParameter[1];
                parameters[0] = new OracleParameter(":MCTR_NO", OracleDbType.Int32, mctrcreateform.MctrNo, ParameterDirection.Input);
                response = entities.Database.SqlQuery<MctrCreateForm>(sql.ToString(), parameters).SingleOrDefault();
                mctrcreateform.LinesOhTo = response.LinesOhTo;
                mctrcreateform.totalOhTo = response.totalOhTo;
                // SQL: select sum ( amount_from ) into : total_oh from mctr_ovrhd where mctr_no = : mctr_header . mctr_no
                sql = new StringBuilder("select nvl(sum ( amount_from ),0)  from mctr_ovrhd where mctr_no = :0 ");
                parameters = new OracleParameter[1];
                parameters[0] = new OracleParameter(":MCTR_NO", OracleDbType.Int32, mctrcreateform.MctrNo, ParameterDirection.Input);
                mctrcreateform.totalOh = entities.Database.SqlQuery<int>(sql.ToString(), parameters).SingleOrDefault();

                // SQL: select sum ( amount_from ) into : total_offset from mctr_offset where mctr_no = : mctr_header . mctr_no
                sql = new StringBuilder("select nvl(sum ( amount_from ),0) from mctr_offset where mctr_no = :0 ");
                parameters = new OracleParameter[1];
                parameters[0] = new OracleParameter(":MCTR_NO", OracleDbType.Int32, mctrcreateform.MctrNo, ParameterDirection.Input);
                mctrcreateform.totalOffset = entities.Database.SqlQuery<int>(sql.ToString(), parameters).SingleOrDefault();
            }
            catch (Exception ex)
            {
                logger.Error("Error from  Mctr.DataAccess.MctrLogAcctRepository.mctrHeaderMctrHeaderOnLoad():" + ex.Message);
            }
            return mctrCreateForm;
        }

        public IEnumerable<MctrCreateForm> mctrLineItemPreUpdate(IEnumerable<MctrCreateForm> mctrCreateForm)
        {

            MctrCreateForm mctrcreateform = mctrCreateForm.First();
            MctrLineItem mctrLineItem = mctrcreateform.mctrLineItem.Last();
            mctrLineItem.FYEAR = mctrcreateform.fyear;
            Nullable<decimal> v_quantity_ttd = 0;
            Nullable<decimal> v_amount_ttd = 0;
            Nullable<decimal> v_quantity_ytd = 0;
            Nullable<decimal> v_amount_ytd = 0;
            decimal v_year = 0;
            decimal v_period = 0;
            int v_seq_no = 0;
            string v_anal_type = "";
            string v_account = "";
            string v_project = "";
            string v_activity = "";
            string v_rsc = "";
            string v_wpd = "";
            string v_ptt = "";
            string v_ptc = "";
            string v_work_dept = "";
            string v_home_dept = "";
            string v_work_loc = "";
            string v_home_loc = "";
            string v_home_bugl = "";
            string v_work_bugl = "";
            decimal v_ttd_qty = 0;
            decimal v_ttd_amt = 0;
            string v_bulk_flg = "";
            string v_rsc_lbr_flg = "";
            string v_cls_vdt_flg = "";
            string v_class_cd = "";
            string v_affiliate = "";
            string v_bulk = "";
            string[] statusIDs = { "OA", "OR", "SA", "FA", "AA", "LM", "LB", "MA", "CA", "SR", "JA" };
            StringBuilder sql = new StringBuilder("");
            OracleParameter[] parameters = new OracleParameter[2];

            int DeletedStatus = 0;
            int InsertStatus = 0;
            var RscFrom = mctrLineItem.RSC_FROM ?? "";
            var ClassCode = mctrLineItem.CLASS_CD_FROM ?? "";
            var WPDFrom = mctrLineItem.WPD_FROM ?? "";
            var BulkFrom = mctrLineItem.BULK_FROM ?? "";
            var Affiliate = mctrLineItem.AFFILIATE_FROM ?? "";
            var ProjectTransCode = mctrLineItem.PROJ_TRANS_CODE_FROM ?? "";

            if (statusIDs.Contains(mctrcreateform.StatusId))
            {
                try
                {
                    // SQL: delete from mctr_ttd_backup where mctr_no = : mctr_line_item . mctr_no and line_no = : line_no
                    sql = new StringBuilder(" delete  from  mctr_ttd_backup  where mctr_no=:0 and line_no=:1;");
                    parameters = new OracleParameter[2];
                    parameters[0] = new OracleParameter(":mctr_no", OracleDbType.Int32, mctrcreateform.MctrNo, ParameterDirection.Input);
                    parameters[1] = new OracleParameter(":line_no", OracleDbType.Int32, mctrLineItem.LINE_NO, ParameterDirection.Input);
                    DeletedStatus = entities.Database.ExecuteSqlCommand("BEGIN " + sql.ToString() + " END;", parameters);
                }
                catch (Exception ex)
                {
                    throw ex;
                }
                try
                {

                    // SQL: delete from mctr_per_backup where mctr_no = : mctr_line_item . mctr_no and line_no = : line_no
                    sql = new StringBuilder(" delete  from  mctr_per_backup  where  mctr_no=:0 and line_no=:1;");
                    parameters = new OracleParameter[2];
                    parameters[0] = new OracleParameter(":mctr_no", OracleDbType.Int32, mctrcreateform.MctrNo, ParameterDirection.Input);
                    parameters[1] = new OracleParameter(":line_no", OracleDbType.Int32, mctrLineItem.LINE_NO, ParameterDirection.Input);
                    DeletedStatus = entities.Database.ExecuteSqlCommand("BEGIN " + sql.ToString() + "END;", parameters);
                }
                catch { }

                Nullable<decimal> v_quantity_sla = 0;
                Nullable<decimal> v_amount_sla = 0;


                try
                {
                    // SQL: select bulk_flg , rsc_lbr_flg , cls_vdt_flg into v_bulk_flg , v_rsc_lbr_flg , v_cls_vdt_flg from mctr_bu_profile where business_unit = : orig_bu
                    sql = new StringBuilder("select bulk_flg , rsc_lbr_flg , cls_vdt_flg  from  mctr_bu_profile where business_unit = :0 ");
                    parameters = new OracleParameter[1];
                    parameters[0] = new OracleParameter(":business_unit", OracleDbType.Varchar2, mctrcreateform.OrigBu, ParameterDirection.Input);
                    var response = entities.Database.SqlQuery<BuProfile>(sql.ToString(), parameters).Single();
                    v_bulk_flg = response.Bulk_Flg;
                    v_rsc_lbr_flg = response.Rsc_Lbr_Flg;
                    v_cls_vdt_flg = response.Cls_Vdt_Flg;
                }
                catch
                {
                    v_bulk_flg = "N";
                    v_rsc_lbr_flg = "Y";
                    v_cls_vdt_flg = "N";
                }
                //this is for the ttd button (v_amount_ttd) 
                if ((mctrcreateform.py_cy_status.Equals("PY") && Convert.ToInt32(mctrcreateform.fyear) > 2007 && mctrLineItem.AFFILIATE_FROM != ""))
                {
                    try
                    {
                        // SQL: select nvl(sum ( ttd_quantity7 ),0) as v_quantity_ttd , nvl( sum ( ttd_domestic_amt7 ) ,0) as v_amount_ttd from mctr_rp_master_vw where activity_id = : activity_id_from and project_id = : project_id_from and account = : account_from and bus_unit_gl_from = : home_bugl_from and business_unit_gl = : work_bugl_from and affiliate = : affiliate_from and ( work_location_cd7 = : work_loc_from or ( : work_loc_from is null and trim ( work_location_cd7 ) is null ) ) and ( home_location_cd7 = : home_loc_from or ( : home_loc_from is null and trim ( home_location_cd7 ) is null ) ) and ( deptid = : work_dept_from or ( : work_dept_from is null and trim ( deptid ) is null ) ) and ( deptid_from = : home_dept_from or ( : home_dept_from is null and trim ( deptid_from ) is null ) ) and ( ( resource_sub_cat = : rsc_from ) or ( : rsc_from is null and trim ( resource_sub_cat ) is null ) or ( v_rsc_lbr_flg = 'N' and : rsc_from like '0%' ) ) and ( ( v_cls_vdt_flg = 'N' ) or ( v_cls_vdt_flg = 'Y' and class_cd7 = : class_cd_from ) or ( : class_cd_from is null and trim ( class_cd7 ) is null ) ) and ( wpd_id7 = : wpd_from or ( : wpd_from is null and trim ( wpd_id7 ) is null ) or : fiscal_year < 2005 or : proj_trans_type_from <> 'LBR' ) and ( bulk_alctn_cd7 = : bulk_from or ( : bulk_from is null and trim ( bulk_alctn_cd7 ) is null ) or v_bulk_flg = 'N' ) and ( ( ( ( : proj_trans_type_from = 'LBR' and proj_trans_type like 'LB%' ) or ( : proj_trans_type_from <> 'LBR' and proj_trans_type = : proj_trans_type_from ) ) and ( proj_trans_code = : proj_trans_code_from or ( : proj_trans_code_from is null and not exists ( select * from mctr_trans_type where cmpon_cd = mctr_rp_master_vw . bus_unit_gl_from and proj_trans_type = mctr_rp_master_vw . proj_trans_type and proj_trans_code = mctr_rp_master_vw . proj_trans_code ) ) ) ) or ( : proj_trans_type_from in ( 'OTH' , 'MTL' ) and : proj_trans_code_from is null and proj_trans_type not like 'LB%' ) )PROJ_TRANS_TYPE_FROM
                        sql = new StringBuilder("select sum ( ttd_quantity7 ) AS v_quantity_ttd , sum( ttd_domestic_amt7 ) AS v_amount_ttd from mctr_rp_master_vw where activity_id = '" + mctrLineItem.ACTIVITY_ID_FROM + "' and project_id = '" + mctrLineItem.PROJECT_ID_FROM + "' and account = '" + mctrLineItem.ACCOUNT_FROM + "' and bus_unit_gl_from = '" + mctrLineItem.HOME_BUGL_FROM + "' and business_unit_gl = '" + mctrLineItem.WORK_BUGL_FROM + "' and affiliate ='" + mctrLineItem.AFFILIATE_FROM + "' and ( work_location_cd7 = '" + mctrLineItem.WORK_LOC_FROM + "'  or ( '" + mctrLineItem.WORK_LOC_FROM + "'  is null and trim ( work_location_cd7 ) is null ) )and ( home_location_cd7 = '" + mctrLineItem.HOME_LOC_FROM + "'  or ( '" + mctrLineItem.HOME_LOC_FROM + "'  is null and trim ( home_location_cd7 ) is null ) ) and ( deptid = '" + mctrLineItem.WORK_DEPT_FROM + "'  or ( '" + mctrLineItem.WORK_DEPT_FROM + "'  is null and trim ( deptid ) is null ) ) and ( deptid_from = '" + mctrLineItem.HOME_DEPT_FROM + "'  or ( '" + mctrLineItem.HOME_DEPT_FROM + "'  is null and trim ( deptid_from ) is null ) ) and ( ( resource_sub_cat = '" + RscFrom + "'  ) or ( '" + RscFrom + "' is null and trim ( resource_sub_cat ) is null ) or ( '" + v_rsc_lbr_flg + "' = 'N' and '" + RscFrom + "' like '0%' ) ) and ( ( '" + v_cls_vdt_flg + "' = 'N' ) or ( '" + v_cls_vdt_flg + "' = 'Y' and class_cd7 = '" + ClassCode + "'  ) or ( '" + ClassCode + "' is null and trim ( class_cd7 ) is null ) ) and ( wpd_id7 = '" + WPDFrom + "'  or ( '" + WPDFrom + "' is null and trim ( wpd_id7 ) is null ) or " + Convert.ToInt32(mctrcreateform.fyear) + " < 2005 or '" + mctrLineItem.PROJ_TRANS_TYPE_FROM + "' <> 'LBR' ) and ( bulk_alctn_cd7 = '" + BulkFrom + "'  or ( '" + BulkFrom + "'  is null and trim ( bulk_alctn_cd7 ) is null ) or '" + v_bulk_flg + "' = 'N' ) and ( ( ( ( '" + mctrLineItem.PROJ_TRANS_TYPE_FROM + "'  ='LBR' and proj_trans_type like 'LB%' ) or ( '" + mctrLineItem.PROJ_TRANS_TYPE_FROM + "'  <> 'LBR' and proj_trans_type = 'LBR'  ) ) and ( proj_trans_code = '" + ProjectTransCode + "'  or ( '" + ProjectTransCode + "' is null and not exists ( select * from mctr_trans_type where cmpon_cd =mctr_rp_master_vw . bus_unit_gl_from and proj_trans_type = mctr_rp_master_vw . proj_trans_type and proj_trans_code = mctr_rp_master_vw . proj_trans_code ) ) ) ) or('" + mctrLineItem.PROJ_TRANS_TYPE_FROM + "'  in ( 'OTH' , 'MTL' ) and '" + ProjectTransCode + "' is null and proj_trans_type not like 'LB%' ) )");
                        var resultList = entities.Database.SqlQuery<MctrCreateForm>(sql.ToString()).Single();
                        v_quantity_ttd = resultList.v_quantity_ttd;
                        v_amount_ttd = resultList.v_amount_ttd;
                    }
                    catch (Exception e)
                    {
                        logger.Error(e.Message);
                    }
                }
                else
                {
                    try
                    {
                        // SQL: select sum ( ttd_quantity7 ) , sum ( ttd_domestic_amt7 ) into v_quantity_ttd , v_amount_ttd from mctr_rp_master_v where activity_id = : activity_id_from and project_id = : project_id_from and account = : account_from and bus_unit_gl_from = : home_bugl_from and business_unit_gl = : work_bugl_from and ( work_location_cd7 = : work_loc_from or ( : work_loc_from is null and trim ( work_location_cd7 ) is null ) ) and ( home_location_cd7 = : home_loc_from or ( : home_loc_from is null and trim ( home_location_cd7 ) is null ) ) and ( deptid = : work_dept_from or ( : work_dept_from is null and trim ( deptid ) is null ) ) and ( deptid_from = : home_dept_from or ( : home_dept_from is null and trim ( deptid_from ) is null ) ) and ( ( resource_sub_cat = : rsc_from ) or ( : rsc_from is null and trim ( resource_sub_cat ) is null ) or ( v_rsc_lbr_flg = 'N' and : rsc_from like '0%' ) ) and ( ( v_cls_vdt_flg = 'N' ) or ( v_cls_vdt_flg = 'Y' and class_cd7 = : class_cd_from ) or ( : class_cd_from is null and trim ( class_cd7 ) is null ) ) and ( wpd_id7 = : wpd_from or ( : wpd_from is null and trim ( wpd_id7 ) is null ) or : fiscal_year < 2005 or : proj_trans_type_from <> 'LBR' ) and ( bulk_alctn_cd7 = : bulk_from or ( : bulk_from is null and trim ( bulk_alctn_cd7 ) is null ) or v_bulk_flg = 'N' ) and ( ( ( ( : proj_trans_type_from = 'LBR' and proj_trans_type like 'LB%' ) or ( : proj_trans_type_from <> 'LBR' and proj_trans_type = : proj_trans_type_from ) ) and ( proj_trans_code = : proj_trans_code_from or ( : proj_trans_code_from is null and not exists ( select * from mctr_trans_type where cmpon_cd = mctr_rp_master_v . bus_unit_gl_from and proj_trans_type = mctr_rp_master_v . proj_trans_type and proj_trans_code = mctr_rp_master_v . proj_trans_code ) ) ) ) or ( : proj_trans_type_from in ( 'OTH' , 'MTL' ) and : proj_trans_code_from is null and proj_trans_type not like 'LB%' ) )
                        sql = new StringBuilder("select sum ( ttd_quantity7 ) AS v_quantity_ttd , sum( ttd_domestic_amt7 ) AS v_amount_ttd from mctr_rp_master_v where activity_id = '" + mctrLineItem.ACTIVITY_ID_FROM + "' and project_id = '" + mctrLineItem.PROJECT_ID_FROM + "' and account = '" + mctrLineItem.ACCOUNT_FROM + "' and bus_unit_gl_from = '" + mctrLineItem.HOME_BUGL_FROM + "' and business_unit_gl = '" + mctrLineItem.WORK_BUGL_FROM + "'and ( work_location_cd7 = '" + mctrLineItem.WORK_LOC_FROM + "'  or ( '" + mctrLineItem.WORK_LOC_FROM + "'  is null and trim ( work_location_cd7 ) is null ) )and ( home_location_cd7 = '" + mctrLineItem.HOME_LOC_FROM + "'  or ( '" + mctrLineItem.HOME_LOC_FROM + "'  is null and trim ( home_location_cd7 ) is null ) ) and ( deptid = '" + mctrLineItem.WORK_DEPT_FROM + "'  or ( '" + mctrLineItem.WORK_DEPT_FROM + "'  is null and trim ( deptid ) is null ) ) and ( deptid_from = '" + mctrLineItem.HOME_DEPT_FROM + "'  or ( '" + mctrLineItem.HOME_DEPT_FROM + "'  is null and trim ( deptid_from ) is null ) ) and ( ( resource_sub_cat = '" + RscFrom + "'  ) or ( '" + RscFrom + "' is null and trim ( resource_sub_cat ) is null ) or ( '" + v_rsc_lbr_flg + "' = 'N' and '" + RscFrom + "' like '0%' ) ) and ( ( '" + v_cls_vdt_flg + "' = 'N' ) or ( '" + v_cls_vdt_flg + "' = 'Y' and class_cd7 = '" + ClassCode + "'  ) or ( '" + ClassCode + "' is null and trim ( class_cd7 ) is null ) ) and ( wpd_id7 = '" + WPDFrom + "'  or ( '" + WPDFrom + "' is null and trim ( wpd_id7 ) is null ) or " + Convert.ToInt32(mctrcreateform.fyear) + " < 2005 or '" + mctrLineItem.PROJ_TRANS_TYPE_FROM + "' <> 'LBR' ) and ( bulk_alctn_cd7 = '" + BulkFrom + "'  or ( '" + BulkFrom + "'  is null and trim ( bulk_alctn_cd7 ) is null ) or '" + v_bulk_flg + "' = 'N' ) and ( ( ( ( '" + mctrLineItem.PROJ_TRANS_TYPE_FROM + "'  ='LBR' and proj_trans_type like 'LB%' ) or ( '" + mctrLineItem.PROJ_TRANS_TYPE_FROM + "'  <> 'LBR' and proj_trans_type = 'LBR'  ) ) and ( proj_trans_code = '" + ProjectTransCode + "'  or ( '" + ProjectTransCode + "' is null and not exists ( select * from mctr_trans_type where cmpon_cd =mctr_rp_master_v . bus_unit_gl_from and proj_trans_type = mctr_rp_master_v . proj_trans_type and proj_trans_code = mctr_rp_master_v . proj_trans_code ) ) ) ) or('" + mctrLineItem.PROJ_TRANS_TYPE_FROM + "'  in ( 'OTH' , 'MTL' ) and '" + ProjectTransCode + "' is null and proj_trans_type not like 'LB%' ) )");

                        var result = entities.Database.SqlQuery<MctrCreateForm>(sql.ToString()).Single();
                        v_quantity_ttd = result.v_quantity_ttd;
                        v_amount_ttd = result.v_amount_ttd;
                    }
                    catch (Exception e)
                    {
                        logger.Error(e.Message);
                    }


                }
                //see if other line item entries with same line of accounting (sla).
                if (v_quantity_ttd != 0 && v_amount_ttd != 0)//code changed.
                {
                    try
                    {
                        // SQL: select nvl ( sum ( quantity_from ) , 0 ) , nvl ( sum ( amount_from ) , 0 ) into v_quantity_sla , v_amount_sla from mctr_line_item where mctr_no = : mctr_header . mctr_no and line_no <> : line_no and activity_id_from = : activity_id_from and project_id_from = : project_id_from and account_from = : account_from and proj_trans_type_from = : proj_trans_type_from and ( proj_trans_code_from = : proj_trans_code_from or ( trim ( : proj_trans_code_from ) is null and trim ( proj_trans_code_from ) is null ) ) and home_bugl_from = : home_bugl_from and work_bugl_from = : work_bugl_from and ( work_loc_from = : work_loc_from or ( trim ( : work_loc_from ) is null and trim ( work_loc_from ) is null ) ) and ( home_loc_from = : home_loc_from or ( trim ( : home_loc_from ) is null and trim ( home_loc_from ) is null ) ) and ( work_dept_from = : work_dept_from or ( trim ( : work_dept_from ) is null and trim ( work_dept_from ) is null ) ) and ( home_dept_from = : home_dept_from or ( trim ( : home_dept_from ) is null and trim ( home_dept_from ) is null ) ) and ( class_cd_from = : class_cd_from or ( trim ( : class_cd_from ) is null and trim ( class_cd_from ) is null ) ) and ( rsc_from = : rsc_from or ( trim ( : rsc_from ) is null and trim ( rsc_from ) is null ) ) and ( wpd_from = : wpd_from or ( trim ( : wpd_from ) is null and trim ( wpd_from ) is null ) ) and ( bulk_from = : bulk_from or ( trim ( : bulk_from ) is null and trim ( bulk_from ) is null ) ) and ( affiliate_from = : affiliate_from or ( trim ( : affiliate_from ) is null and trim ( affiliate_from ) is null ) )
                        sql = new StringBuilder("select sum ( quantity_from ) as v_quantity_sla , sum ( amount_from )  as  v_amount_sla from mctr_line_item where mctr_no = " + mctrcreateform.MctrNo + " and line_no <> " + mctrLineItem.LINE_NO + "  and activity_id_from = '" + mctrLineItem.ACTIVITY_ID_FROM + "'  and project_id_from = '" + mctrLineItem.PROJECT_ID_FROM + "' and account_from = '" + mctrLineItem.ACCOUNT_FROM + "'  and proj_trans_type_from = '" + mctrLineItem.PROJ_TRANS_TYPE_FROM + "'  and ( proj_trans_code_from = '" + mctrLineItem.PROJ_TRANS_CODE_FROM + "'  or ( trim ( '" + mctrLineItem.PROJ_TRANS_CODE_FROM + "'  ) is null and trim ( proj_trans_code_from ) is null ) ) and home_bugl_from = '" + mctrLineItem.HOME_BUGL_FROM + "'  and work_bugl_from = '" + mctrLineItem.WORK_BUGL_FROM + "'  and ( work_loc_from = '" + mctrLineItem.WORK_LOC_FROM + "'  or ( trim ( '" + mctrLineItem.WORK_LOC_FROM + "' ) is null and trim ( work_loc_from ) is null ) ) and ( home_loc_from = '" + mctrLineItem.HOME_LOC_FROM + "'  or ( trim ( '" + mctrLineItem.HOME_LOC_FROM + "'  ) is null and trim ( home_loc_from ) is null ) ) and ( work_dept_from = '" + mctrLineItem.WORK_DEPT_FROM + "'  or ( trim ( '" + mctrLineItem.WORK_DEPT_FROM + "'  ) is null and trim ( work_dept_from ) is null ) ) and ( home_dept_from = '" + mctrLineItem.HOME_DEPT_FROM + "'  or ( trim ( '" + mctrLineItem.HOME_DEPT_FROM + "'  ) is null and trim ( home_dept_from ) is null ) ) and ( class_cd_from = '" + mctrLineItem.CLASS_CD_FROM + "'  or ( trim ( '" + mctrLineItem.CLASS_CD_FROM + "' ) is null and trim ( class_cd_from ) is null ) ) and ( rsc_from = '" + mctrLineItem.RSC_FROM + "'  or ( trim ( '" + mctrLineItem.RSC_FROM + "' ) is null and trim ( rsc_from ) is null ) ) and ( wpd_from = '" + WPDFrom + "'  or ( trim ( '" + WPDFrom + "' ) is null and trim ( wpd_from ) is null ) ) and ( bulk_from = '" + mctrLineItem.BULK_FROM + "' or ( trim ( '" + BulkFrom + "' ) is null and trim ( bulk_from ) is null ) ) and ( affiliate_from = '" + mctrLineItem.AFFILIATE_FROM + "'  or ( trim ( '" + mctrLineItem.AFFILIATE_FROM + "' ) is null and trim ( affiliate_from ) is null ) ) ");

                        var resultList = entities.Database.SqlQuery<MctrCreateForm>(sql.ToString()).SingleOrDefault<MctrCreateForm>();
                        v_quantity_sla = resultList.v_quantity_ttd;
                        v_amount_sla = resultList.v_amount_ttd ?? 0;
                    }
                    catch (Exception e)
                    {
                        v_quantity_sla = 0;
                        v_amount_sla = 0;
                        logger.Error(e.Message);
                    }

                }

                //subtract out aggregate totals
                if (v_quantity_ttd != 0 && v_quantity_sla != 0)
                    if ((v_quantity_ttd > 0 && v_quantity_sla < 0 && v_quantity_ttd >= (-1 * v_quantity_sla)) || (v_quantity_ttd < 0 && v_quantity_sla > 0 && (-1 * v_quantity_ttd) >= v_quantity_sla))
                    {
                        v_quantity_ttd = v_quantity_ttd + v_quantity_sla;
                    }


                if (v_amount_ttd != 0 && v_amount_sla != 0)
                {
                    if ((v_amount_ttd > 0 && v_amount_sla < 0 && v_amount_ttd >= (-1 * v_amount_sla)) || (v_amount_ttd < 0 && v_amount_sla > 0 && (-1 * v_amount_ttd) >= v_amount_sla))
                    {
                        v_amount_ttd = v_amount_ttd + v_amount_sla;
                    }
                }

                //set glpc backup color validation for ttd.
                if (Convert.ToDecimal(mctrLineItem.AMOUNT_FROM) < 0)//code changed
                {
                    {
                        if (v_quantity_ttd == null)
                        {
                            mctrLineItem.TTD_FLAG = "B";
                        }

                        else if ((v_quantity_ttd >= (-1 * mctrLineItem.QUANTITY_FROM)) && v_amount_ttd >= (-1 * (Convert.ToDecimal(mctrLineItem.AMOUNT_FROM) + Convert.ToDecimal(mctrLineItem.ADJUSTMENT_FROM))))//code changed
                        {
                            mctrLineItem.TTD_FLAG = "G";
                        }

                        else if ((v_quantity_ttd >= (-1 * mctrLineItem.QUANTITY_FROM)) && mctrLineItem.QUANTITY_FROM != 0)
                        {
                            mctrLineItem.TTD_FLAG = "Y";
                        }

                        else
                        {
                            mctrLineItem.TTD_FLAG = "R";
                        }
                    }
                }

                else
                {

                    //starting of block
                    if (v_quantity_ttd == null)
                    {
                        mctrLineItem.TTD_FLAG = "B";
                    }

                    else if ((-1 * v_quantity_ttd) >= mctrLineItem.QUANTITY_FROM && (-1 * v_amount_ttd) >= (mctrLineItem.AMOUNT_FROM + Convert.ToDecimal(mctrLineItem.ADJUSTMENT_FROM)))//code changed
                    {
                        mctrLineItem.TTD_FLAG = "G";
                    }
                    else if ((-1 * v_quantity_ttd) >= mctrLineItem.QUANTITY_FROM && mctrLineItem.QUANTITY_FROM != 0)
                    {
                        mctrLineItem.TTD_FLAG = "Y";
                    }

                    else
                    {
                        mctrLineItem.TTD_FLAG = "R";
                    }
                }
                if ((mctrcreateform.py_cy_status == "PY") && (Convert.ToInt32(mctrcreateform.fyear) > 2007) && (mctrLineItem.AFFILIATE_FROM != null))
                {
                    var c_ttd_from_affList = c_ttd_from_aff(mctrcreateform, v_rsc_lbr_flg, v_cls_vdt_flg, v_bulk_flg);
                    if (c_ttd_from_affList.Any())
                    {
                        foreach (var item_TTD_From_aff in c_ttd_from_affList)
                        {
                            v_year = item_TTD_From_aff.FISCAL_YEAR;
                            v_period = item_TTD_From_aff.ACCOUNTING_PERIOD;
                            v_anal_type = item_TTD_From_aff.ANALYSIS_TYPE;
                            v_account = item_TTD_From_aff.ACCOUNT;
                            v_project = item_TTD_From_aff.PROJECT_ID;
                            v_activity = item_TTD_From_aff.ACTIVITY_ID;
                            v_rsc = item_TTD_From_aff.RESOURCE_SUB_CAT;
                            v_wpd = item_TTD_From_aff.WPD_ID7;
                            v_bulk = item_TTD_From_aff.BULK_ALCTN_CD7;
                            v_ptt = item_TTD_From_aff.PROJ_TRANS_TYPE;
                            v_ptc = item_TTD_From_aff.PROJ_TRANS_CODE;
                            v_work_dept = item_TTD_From_aff.DEPTID;
                            v_home_dept = item_TTD_From_aff.DEPTID_FROM;
                            v_work_loc = item_TTD_From_aff.WORK_LOCATION_CD7;
                            v_home_loc = item_TTD_From_aff.HOME_LOCATION_CD7;
                            v_home_bugl = item_TTD_From_aff.BUS_UNIT_GL_FROM;
                            v_work_bugl = item_TTD_From_aff.BUSINESS_UNIT_GL;
                            v_class_cd = item_TTD_From_aff.CLASS_CD7;
                            v_affiliate = item_TTD_From_aff.AFFILIATE;
                            v_ttd_qty = item_TTD_From_aff.SUM_TTD_QUANTITY7;
                            v_ttd_amt = item_TTD_From_aff.SUM_TTD_DOMESTIC_AMT7;

                            v_seq_no++;

                            // SQL: insert into mctr_ttd_backup ( mctr_no , line_no , seq_no , fiscal_year , accounting_period , analysis_type , activity_id , project_id , account , home_dept , home_loc , home_bugl , home_pool , work_dept , work_loc , work_bugl , work_pool , rsc , wpd , bulk_alctn_cd7 , proj_trans_type , proj_trans_code , quantity_ttd , amount_ttd , class_cd , affiliate ) values ( : mctr_line_item . mctr_no , : line_no , v_seq_no , v_year , v_period , v_anal_type , v_activity , v_project , v_account , v_home_dept , v_home_loc , v_home_bugl , ' ' , v_work_dept , v_work_loc , v_work_bugl , ' ' , v_rsc , v_wpd , v_bulk , v_ptt , v_ptc , v_ttd_qty , v_ttd_amt , v_class_cd , v_affiliate )
                            sql = new StringBuilder(" insert  into  mctr_ttd_backup  (  mctr_no  ,  line_no  ,  seq_no  ,  fiscal_year  ,  accounting_period  ,  analysis_type  ,  activity_id  ,  project_id  ,  account  ,  home_dept  ,  home_loc  ,  home_bugl  ,  home_pool  ,  work_dept  ,  work_loc  ,  work_bugl  ,  work_pool  ,  rsc  ,  wpd  ,  bulk_alctn_cd7  ,  proj_trans_type  ,  proj_trans_code  ,  quantity_ttd  ,  amount_ttd  ,  class_cd  ,  affiliate  )  values (:0,:1,:2,:3,:4,:5,:6,:7,:8,:9,:10,:11,:12,:13,:14,:15,:16,:17,:18,:19,:20,:21,:22,:23,:24,:25);");
                            parameters = new OracleParameter[26];

                            parameters[0] = new OracleParameter(":mctr_no", OracleDbType.Int32, mctrcreateform.MctrNo, ParameterDirection.Input);
                            parameters[1] = new OracleParameter(":line_no", OracleDbType.Int16, mctrLineItem.LINE_NO, ParameterDirection.Input);
                            parameters[2] = new OracleParameter(":v_seq_no", OracleDbType.Int16, v_seq_no, ParameterDirection.Input);
                            parameters[3] = new OracleParameter(":v_year", OracleDbType.Int16, item_TTD_From_aff.FISCAL_YEAR, ParameterDirection.Input);
                            parameters[4] = new OracleParameter(":v_period", OracleDbType.Int16, item_TTD_From_aff.ACCOUNTING_PERIOD, ParameterDirection.Input);
                            parameters[5] = new OracleParameter(":v_anal_type", OracleDbType.Varchar2, item_TTD_From_aff.ANALYSIS_TYPE, ParameterDirection.Input);
                            parameters[6] = new OracleParameter(":v_activity", OracleDbType.Varchar2, item_TTD_From_aff.ACTIVITY_ID, ParameterDirection.Input);
                            parameters[7] = new OracleParameter(":v_project", OracleDbType.Varchar2, item_TTD_From_aff.PROJECT_ID, ParameterDirection.Input);
                            parameters[8] = new OracleParameter(":v_account", OracleDbType.Varchar2, item_TTD_From_aff.ACCOUNT, ParameterDirection.Input);
                            parameters[9] = new OracleParameter(":v_home_dept", OracleDbType.Varchar2, item_TTD_From_aff.DEPTID_FROM, ParameterDirection.Input);
                            parameters[10] = new OracleParameter(":v_home_loc", OracleDbType.Varchar2, item_TTD_From_aff.HOME_LOCATION_CD7, ParameterDirection.Input);
                            parameters[11] = new OracleParameter(":v_home_bugl", OracleDbType.Varchar2, item_TTD_From_aff.BUS_UNIT_GL_FROM, ParameterDirection.Input);
                            parameters[12] = new OracleParameter(":home_pool", OracleDbType.Varchar2, " ", ParameterDirection.Input);
                            parameters[13] = new OracleParameter(":v_work_dept", OracleDbType.Varchar2, item_TTD_From_aff.DEPTID, ParameterDirection.Input);
                            parameters[14] = new OracleParameter(":v_work_loc", OracleDbType.Varchar2, item_TTD_From_aff.WORK_LOCATION_CD7, ParameterDirection.Input);
                            parameters[15] = new OracleParameter(":v_work_bugl", OracleDbType.Varchar2, item_TTD_From_aff.BUSINESS_UNIT_GL, ParameterDirection.Input);
                            parameters[16] = new OracleParameter(":work_pool", OracleDbType.Varchar2, " ", ParameterDirection.Input);
                            parameters[17] = new OracleParameter(":v_rsc", OracleDbType.Varchar2, item_TTD_From_aff.RESOURCE_SUB_CAT, ParameterDirection.Input);
                            parameters[18] = new OracleParameter(":v_wpd", OracleDbType.Varchar2, item_TTD_From_aff.WPD_ID7, ParameterDirection.Input);
                            parameters[19] = new OracleParameter(":v_bulk", OracleDbType.Varchar2, item_TTD_From_aff.BULK_ALCTN_CD7, ParameterDirection.Input);
                            parameters[20] = new OracleParameter(":v_ptt", OracleDbType.Varchar2, item_TTD_From_aff.PROJ_TRANS_TYPE, ParameterDirection.Input);
                            parameters[21] = new OracleParameter(":v_ptc", OracleDbType.Varchar2, item_TTD_From_aff.PROJ_TRANS_CODE, ParameterDirection.Input);
                            parameters[22] = new OracleParameter(":v_ttd_qty", OracleDbType.Decimal, item_TTD_From_aff.SUM_TTD_QUANTITY7, ParameterDirection.Input);
                            parameters[23] = new OracleParameter(":v_ttd_amt", OracleDbType.Decimal, item_TTD_From_aff.SUM_TTD_DOMESTIC_AMT7, ParameterDirection.Input);
                            parameters[24] = new OracleParameter(":v_class_cd", OracleDbType.Varchar2, item_TTD_From_aff.CLASS_CD7, ParameterDirection.Input);
                            parameters[25] = new OracleParameter(":v_affiliate", OracleDbType.Varchar2, item_TTD_From_aff.AFFILIATE, ParameterDirection.Input);
                            try
                            {
                                InsertStatus = entities.Database.ExecuteSqlCommand("BEGIN " + sql.ToString() + " END;", parameters);
                            }
                            catch (Exception ex)
                            {
                                logger.Error(ex.Message);
                            }


                        }
                    }
                }
                else
                {
                    var c_ttd_fromList = c_ttd_from(mctrcreateform, v_rsc_lbr_flg, v_cls_vdt_flg, v_bulk_flg);
                    if (c_ttd_fromList.Any())
                    {
                        foreach (var item_TTD_From in c_ttd_fromList)
                        {
                            v_year = item_TTD_From.FISCAL_YEAR;
                            v_period = item_TTD_From.ACCOUNTING_PERIOD;
                            v_anal_type = item_TTD_From.ANALYSIS_TYPE;
                            v_account = item_TTD_From.ACCOUNT;
                            v_project = item_TTD_From.PROJECT_ID;
                            v_activity = item_TTD_From.ACTIVITY_ID;
                            v_rsc = item_TTD_From.RESOURCE_SUB_CAT;
                            v_wpd = item_TTD_From.WPD_ID7;
                            v_bulk = item_TTD_From.BULK_ALCTN_CD7;
                            v_ptt = item_TTD_From.PROJ_TRANS_TYPE;
                            v_ptc = item_TTD_From.PROJ_TRANS_CODE;
                            v_work_dept = item_TTD_From.DEPTID;
                            v_home_dept = item_TTD_From.DEPTID_FROM;
                            v_work_loc = item_TTD_From.WORK_LOCATION_CD7;
                            v_home_loc = item_TTD_From.HOME_LOCATION_CD7;
                            v_home_bugl = item_TTD_From.BUS_UNIT_GL_FROM;
                            v_work_bugl = item_TTD_From.BUSINESS_UNIT_GL;
                            v_class_cd = item_TTD_From.CLASS_CD7;
                            v_ttd_qty = item_TTD_From.SUM_TTD_QUANTITY7;
                            v_ttd_amt = item_TTD_From.SUM_TTD_DOMESTIC_AMT7;

                            v_seq_no++;

                            // SQL: insert into mctr_ttd_backup ( mctr_no , line_no , seq_no , fiscal_year , accounting_period , analysis_type , activity_id , project_id , account , home_dept , home_loc , home_bugl , home_pool , work_dept , work_loc , work_bugl , work_pool , rsc , wpd , bulk_alctn_cd7 , proj_trans_type , proj_trans_code , quantity_ttd , amount_ttd , class_cd , affiliate ) values ( : mctr_line_item . mctr_no , : line_no , v_seq_no , v_year , v_period , v_anal_type , v_activity , v_project , v_account , v_home_dept , v_home_loc , v_home_bugl , ' ' , v_work_dept , v_work_loc , v_work_bugl , ' ' , v_rsc , v_wpd , v_bulk , v_ptt , v_ptc , v_ttd_qty , v_ttd_amt , v_class_cd , v_affiliate )
                            sql = new StringBuilder(" insert  into  mctr_ttd_backup  (  mctr_no,line_no,seq_no,  fiscal_year,  accounting_period,  analysis_type,  activity_id,  project_id,  account,  home_dept,  home_loc,  home_bugl,  home_pool,  work_dept,  work_loc,  work_bugl,  work_pool  ,  rsc  ,  wpd  ,  bulk_alctn_cd7  ,  proj_trans_type  ,  proj_trans_code  ,  quantity_ttd  ,  amount_ttd  ,  class_cd  ,  affiliate  )  values (:0,:1,:2,:3,:4,:5,:6,:7,:8,:9,:10,:11,:12,:13,:14,:15,:16,:17,:18,:19,:20,:21,:22,:23,:24,:25);");
                            parameters = new OracleParameter[26];

                            parameters[0] = new OracleParameter(":mctr_no", OracleDbType.Int32, mctrcreateform.MctrNo, ParameterDirection.Input);
                            parameters[1] = new OracleParameter(":line_no", OracleDbType.Int16, mctrLineItem.LINE_NO, ParameterDirection.Input);
                            parameters[2] = new OracleParameter(":v_seq_no", OracleDbType.Int16, v_seq_no, ParameterDirection.Input);
                            parameters[3] = new OracleParameter(":v_year", OracleDbType.Int16, item_TTD_From.FISCAL_YEAR, ParameterDirection.Input);
                            parameters[4] = new OracleParameter(":v_period", OracleDbType.Int16, item_TTD_From.ACCOUNTING_PERIOD, ParameterDirection.Input);
                            parameters[5] = new OracleParameter(":v_anal_type", OracleDbType.Varchar2, item_TTD_From.ANALYSIS_TYPE, ParameterDirection.Input);
                            parameters[6] = new OracleParameter(":v_activity", OracleDbType.Varchar2, item_TTD_From.ACTIVITY_ID, ParameterDirection.Input);
                            parameters[7] = new OracleParameter(":v_project", OracleDbType.Varchar2, item_TTD_From.PROJECT_ID, ParameterDirection.Input);
                            parameters[8] = new OracleParameter(":v_account", OracleDbType.Varchar2, item_TTD_From.ACCOUNT, ParameterDirection.Input);
                            parameters[9] = new OracleParameter(":v_home_dept", OracleDbType.Varchar2, item_TTD_From.DEPTID_FROM, ParameterDirection.Input);
                            parameters[10] = new OracleParameter(":v_home_loc", OracleDbType.Varchar2, item_TTD_From.HOME_LOCATION_CD7, ParameterDirection.Input);
                            parameters[11] = new OracleParameter(":v_home_bugl", OracleDbType.Varchar2, item_TTD_From.BUS_UNIT_GL_FROM, ParameterDirection.Input);
                            parameters[12] = new OracleParameter(":home_pool", OracleDbType.Varchar2, " ", ParameterDirection.Input);
                            parameters[13] = new OracleParameter(":v_work_dept", OracleDbType.Varchar2, item_TTD_From.DEPTID, ParameterDirection.Input);
                            parameters[14] = new OracleParameter(":v_work_loc", OracleDbType.Varchar2, item_TTD_From.WORK_LOCATION_CD7, ParameterDirection.Input);
                            parameters[15] = new OracleParameter(":v_work_bugl", OracleDbType.Varchar2, item_TTD_From.BUSINESS_UNIT_GL, ParameterDirection.Input);
                            parameters[16] = new OracleParameter(":work_pool", OracleDbType.Varchar2, " ", ParameterDirection.Input);
                            parameters[17] = new OracleParameter(":v_rsc", OracleDbType.Varchar2, item_TTD_From.RESOURCE_SUB_CAT, ParameterDirection.Input);
                            parameters[18] = new OracleParameter(":v_wpd", OracleDbType.Varchar2, item_TTD_From.WPD_ID7, ParameterDirection.Input);
                            parameters[19] = new OracleParameter(":v_bulk", OracleDbType.Varchar2, item_TTD_From.BULK_ALCTN_CD7, ParameterDirection.Input);
                            parameters[20] = new OracleParameter(":v_ptt", OracleDbType.Varchar2, item_TTD_From.PROJ_TRANS_TYPE, ParameterDirection.Input);
                            parameters[21] = new OracleParameter(":v_ptc", OracleDbType.Varchar2, item_TTD_From.PROJ_TRANS_CODE, ParameterDirection.Input);
                            parameters[22] = new OracleParameter(":v_ttd_qty", OracleDbType.Decimal, item_TTD_From.SUM_TTD_QUANTITY7, ParameterDirection.Input);
                            parameters[23] = new OracleParameter(":v_ttd_amt", OracleDbType.Decimal, item_TTD_From.SUM_TTD_DOMESTIC_AMT7, ParameterDirection.Input);
                            parameters[24] = new OracleParameter(":v_class_cd", OracleDbType.Varchar2, item_TTD_From.CLASS_CD7, ParameterDirection.Input);
                            parameters[25] = new OracleParameter(":v_affiliate", OracleDbType.Varchar2, "", ParameterDirection.Input);

                            try
                            {
                                InsertStatus = entities.Database.ExecuteSqlCommand("BEGIN " + sql.ToString() + " END;", parameters);
                            }
                            catch (Exception ex)
                            {

                                logger.Error("Error from  Mctr.DataAccess.MctrLogAcctRepository.mctrHeaderMctrHeaderOnLoad():" + ex.Message);
                            }
                        }
                    }

                }


                //this is for the ytd button. (v_amount_ytd)

                if ((mctrcreateform.py_cy_status == "PY" & Convert.ToInt32(mctrcreateform.fyear) > 2007 && mctrLineItem.AFFILIATE_FROM != null))
                {
                    try
                    {
                        // SQL: select sum ( ttd_quantity7 ) , sum ( ttd_domestic_amt7 ) into v_quantity_ytd , v_amount_ytd from mctr_rp_master_vw where activity_id = : activity_id_from and project_id = : project_id_from and account = : account_from and bus_unit_gl_from = : home_bugl_from and business_unit_gl = : work_bugl_from and affiliate = : affiliate_from and ovrhd_base_yr_cd7 = : mctr_header . fiscal_year and ( work_location_cd7 = : work_loc_from or ( : work_loc_from is null and trim ( work_location_cd7 ) is null ) ) and ( home_location_cd7 = : home_loc_from or ( : home_loc_from is null and trim ( home_location_cd7 ) is null ) ) and ( deptid = : work_dept_from or ( : work_dept_from is null and trim ( deptid ) is null ) ) and ( deptid_from = : home_dept_from or ( : home_dept_from is null and trim ( deptid_from ) is null ) ) and ( ( resource_sub_cat = : rsc_from ) or ( : rsc_from is null and trim ( resource_sub_cat ) is null ) or ( v_rsc_lbr_flg = 'N' and : rsc_from like '0%' ) ) and ( ( v_cls_vdt_flg = 'N' ) or ( v_cls_vdt_flg = 'Y' and class_cd7 = : class_cd_from ) or ( : class_cd_from is null and trim ( class_cd7 ) is null ) ) and ( wpd_id7 = : wpd_from or ( : wpd_from is null and trim ( wpd_id7 ) is null ) or : fiscal_year < 2005 or : proj_trans_type_from <> 'LBR' ) and ( bulk_alctn_cd7 = : bulk_from or ( : bulk_from is null and trim ( bulk_alctn_cd7 ) is null ) or v_bulk_flg = 'N' ) and ( ( ( ( : proj_trans_type_from = 'LBR' and proj_trans_type like 'LB%' ) or ( : proj_trans_type_from <> 'LBR' and proj_trans_type = : proj_trans_type_from ) ) and ( proj_trans_code = : proj_trans_code_from or ( : proj_trans_code_from is null and not exists ( select * from mctr_trans_type where cmpon_cd = mctr_rp_master_vw . bus_unit_gl_from and proj_trans_type = mctr_rp_master_vw . proj_trans_type and proj_trans_code = mctr_rp_master_vw . proj_trans_code ) ) ) ) or ( : proj_trans_type_from in ( 'OTH' , 'MTL' ) and : proj_trans_code_from is null and proj_trans_type not like 'LB%' ) )
                        sql = new StringBuilder("select sum ( ttd_quantity7 ) AS v_quantity_ytd , nvl(sum( ttd_domestic_amt7 ),-1) AS v_amount_ytd from mctr_rp_master_vw where activity_id = '" + mctrLineItem.ACTIVITY_ID_FROM + "' and project_id = '" + mctrLineItem.PROJECT_ID_FROM + "' and account = '" + mctrLineItem.ACCOUNT_FROM + "' and bus_unit_gl_from = '" + mctrLineItem.HOME_BUGL_FROM + "' and business_unit_gl = '" + mctrLineItem.WORK_BUGL_FROM + "' and affiliate ='" + mctrLineItem.AFFILIATE_FROM + "' and ovrhd_base_yr_cd7 =  " + Convert.ToInt32(mctrLineItem.OH_BASE_YR_FROM) + " and ( work_location_cd7 = '" + mctrLineItem.WORK_LOC_FROM + "'  or ( '" + mctrLineItem.WORK_LOC_FROM + "'  is null and trim ( work_location_cd7 ) is null ) )and ( home_location_cd7 = '" + mctrLineItem.HOME_LOC_FROM + "'  or ( '" + mctrLineItem.HOME_LOC_FROM + "'  is null and trim ( home_location_cd7 ) is null ) ) and ( deptid = '" + mctrLineItem.WORK_DEPT_FROM + "'  or ( '" + mctrLineItem.WORK_DEPT_FROM + "'  is null and trim ( deptid ) is null ) ) and ( deptid_from = '" + mctrLineItem.HOME_DEPT_FROM + "'  or ( '" + mctrLineItem.HOME_DEPT_FROM + "'  is null and trim ( deptid_from ) is null ) ) and ( ( resource_sub_cat = '" + RscFrom + "'  ) or ( '" + RscFrom + "' is null and trim ( resource_sub_cat ) is null ) or ( '" + v_rsc_lbr_flg + "' = 'N' and '" + RscFrom + "' like '0%' ) ) and ( ( '" + v_cls_vdt_flg + "' = 'N' ) or ( '" + v_cls_vdt_flg + "' = 'Y' and class_cd7 = '" + ClassCode + "'  ) or ( '" + ClassCode + "' is null and trim ( class_cd7 ) is null ) ) and ( wpd_id7 = '" + WPDFrom + "'  or ( '" + WPDFrom + "' is null and trim ( wpd_id7 ) is null ) or " + Convert.ToInt32(mctrcreateform.fyear) + " < 2005 or '" + mctrLineItem.PROJ_TRANS_TYPE_FROM + "' <> 'LBR' ) and ( bulk_alctn_cd7 = '" + BulkFrom + "'  or ( '" + BulkFrom + "'  is null and trim ( bulk_alctn_cd7 ) is null ) or '" + v_bulk_flg + "' = 'N' ) and ( ( ( ( '" + mctrLineItem.PROJ_TRANS_TYPE_FROM + "'  ='LBR' and proj_trans_type like 'LB%' ) or ( '" + mctrLineItem.PROJ_TRANS_TYPE_FROM + "'  <> 'LBR' and proj_trans_type = 'LBR'  ) ) and ( proj_trans_code = '" + ProjectTransCode + "'  or ( '" + ProjectTransCode + "' is null and not exists ( select * from mctr_trans_type where cmpon_cd =mctr_rp_master_vw . bus_unit_gl_from and proj_trans_type = mctr_rp_master_vw . proj_trans_type and proj_trans_code = mctr_rp_master_vw . proj_trans_code ) ) ) ) or('" + mctrLineItem.PROJ_TRANS_TYPE_FROM + "'  in ( 'OTH' , 'MTL' ) and '" + ProjectTransCode + "' is null and proj_trans_type not like 'LB%' ) )");

                        var resultList = entities.Database.SqlQuery<MctrCreateForm>(sql.ToString()).SingleOrDefault<MctrCreateForm>();
                        v_quantity_ytd = resultList.v_quantity_ytd;
                        v_amount_ytd = resultList.v_amount_ytd;
                    }


                    catch
                    {
                        v_quantity_ytd = 0;
                        v_amount_ytd = 0;
                    }
                }

                else
                {
                    try
                    {
                        // SQL: select sum ( ttd_quantity7 ) , sum ( ttd_domestic_amt7 ) into v_quantity_ytd , v_amount_ytd from mctr_rp_master_v where activity_id = : activity_id_from and project_id = : project_id_from and account = : account_from and bus_unit_gl_from = : home_bugl_from and business_unit_gl = : work_bugl_from and ovrhd_base_yr_cd7 = : mctr_header . fiscal_year and ( work_location_cd7 = : work_loc_from or ( : work_loc_from is null and trim ( work_location_cd7 ) is null ) ) and ( home_location_cd7 = : home_loc_from or ( : home_loc_from is null and trim ( home_location_cd7 ) is null ) ) and ( deptid = : work_dept_from or ( : work_dept_from is null and trim ( deptid ) is null ) ) and ( deptid_from = : home_dept_from or ( : home_dept_from is null and trim ( deptid_from ) is null ) ) and ( ( resource_sub_cat = : rsc_from ) or ( : rsc_from is null and trim ( resource_sub_cat ) is null ) or ( v_rsc_lbr_flg = 'N' and : rsc_from like '0%' ) ) and ( ( v_cls_vdt_flg = 'N' ) or ( v_cls_vdt_flg = 'Y' and class_cd7 = : class_cd_from ) or ( : class_cd_from is null and trim ( class_cd7 ) is null ) ) and ( wpd_id7 = : wpd_from or ( : wpd_from is null and trim ( wpd_id7 ) is null ) or : fiscal_year < 2005 or : proj_trans_type_from <> 'LBR' ) and ( bulk_alctn_cd7 = : bulk_from or ( : bulk_from is null and trim ( bulk_alctn_cd7 ) is null ) or v_bulk_flg = 'N' ) and ( ( ( ( : proj_trans_type_from = 'LBR' and proj_trans_type like 'LB%' ) or ( : proj_trans_type_from <> 'LBR' and proj_trans_type = : proj_trans_type_from ) ) and ( proj_trans_code = : proj_trans_code_from or ( : proj_trans_code_from is null and not exists ( select * from mctr_trans_type where cmpon_cd = mctr_rp_master_v . bus_unit_gl_from and proj_trans_type = mctr_rp_master_v . proj_trans_type and proj_trans_code = mctr_rp_master_v . proj_trans_code ) ) ) ) or ( : proj_trans_type_from in ( 'OTH' , 'MTL' ) and : proj_trans_code_from is null and proj_trans_type not like 'LB%' ) )
                        sql = new StringBuilder("select sum ( ttd_quantity7 ) AS v_quantity_ytd , sum( ttd_domestic_amt7 ) AS v_amount_ytd from mctr_rp_master_v where activity_id = '" + mctrLineItem.ACTIVITY_ID_FROM + "' and project_id = '" + mctrLineItem.PROJECT_ID_FROM + "' and account = '" + mctrLineItem.ACCOUNT_FROM + "' and bus_unit_gl_from = '" + mctrLineItem.HOME_BUGL_FROM + "' and business_unit_gl = '" + mctrLineItem.WORK_BUGL_FROM + "' and ovrhd_base_yr_cd7 =  " + mctrLineItem.OH_BASE_YR_FROM + "and ( work_location_cd7 = '" + mctrLineItem.WORK_LOC_FROM + "'  or ( '" + mctrLineItem.WORK_LOC_FROM + "'  is null and trim ( work_location_cd7 ) is null ) )and ( home_location_cd7 = '" + mctrLineItem.HOME_LOC_FROM + "'  or ( '" + mctrLineItem.HOME_LOC_FROM + "'  is null and trim ( home_location_cd7 ) is null ) ) and ( deptid = '" + mctrLineItem.WORK_DEPT_FROM + "'  or ( '" + mctrLineItem.WORK_DEPT_FROM + "'  is null and trim ( deptid ) is null ) ) and ( deptid_from = '" + mctrLineItem.HOME_DEPT_FROM + "'  or ( '" + mctrLineItem.HOME_DEPT_FROM + "'  is null and trim ( deptid_from ) is null ) ) and ( ( resource_sub_cat = '" + RscFrom + "'  ) or ( '" + RscFrom + "' is null and trim ( resource_sub_cat ) is null ) or ( '" + v_rsc_lbr_flg + "' = 'N' and '" + RscFrom + "' like '0%' ) ) and ( ( '" + v_cls_vdt_flg + "' = 'N' ) or ( '" + v_cls_vdt_flg + "' = 'Y' and class_cd7 = '" + ClassCode + "'  ) or ( '" + ClassCode + "' is null and trim ( class_cd7 ) is null ) ) and ( wpd_id7 = '" + WPDFrom + "'  or ( '" + WPDFrom + "' is null and trim ( wpd_id7 ) is null ) or " + mctrcreateform.fyear + " < 2005 or '" + mctrLineItem.PROJ_TRANS_TYPE_FROM + "' <> 'LBR' ) and ( bulk_alctn_cd7 = '" + BulkFrom + "'  or ( '" + BulkFrom + "'  is null and trim ( bulk_alctn_cd7 ) is null ) or '" + v_bulk_flg + "' = 'N' ) and ( ( ( ( '" + mctrLineItem.PROJ_TRANS_TYPE_FROM + "'  ='LBR' and proj_trans_type like 'LB%' ) or ( '" + mctrLineItem.PROJ_TRANS_TYPE_FROM + "'  <> 'LBR' and proj_trans_type = 'LBR'  ) ) and ( proj_trans_code = '" + ProjectTransCode + "'  or ( '" + ProjectTransCode + "' is null and not exists ( select * from mctr_trans_type where cmpon_cd =mctr_rp_master_v . bus_unit_gl_from and proj_trans_type = mctr_rp_master_v . proj_trans_type and proj_trans_code = mctr_rp_master_v . proj_trans_code ) ) ) ) or('" + mctrLineItem.PROJ_TRANS_TYPE_FROM + "'  in ( 'OTH' , 'MTL' ) and '" + ProjectTransCode + "' is null and proj_trans_type not like 'LB%' ) )");

                        var resultList = entities.Database.SqlQuery<MctrCreateForm>(sql.ToString()).SingleOrDefault<MctrCreateForm>();
                        v_quantity_ytd = resultList.v_quantity_ytd;
                        v_amount_ytd = resultList.v_amount_ytd;
                    }


                    catch (Exception ex)
                    {
                        logger.Error("Error from  Mctr.DataAccess.MctrLogAcctRepository.mctrHeaderMctrHeaderOnLoad():" + ex.Message);
                    }
                }
                v_seq_no = 0;
                v_affiliate = "";
                if (mctrcreateform.py_cy_status == "PY")
                {
                    if ((mctrcreateform.py_cy_status == "PY") && (Convert.ToInt32(mctrcreateform.fyear) > 2007) && (mctrLineItem.AFFILIATE_FROM != null))
                    {
                        var c_pri_per_from_affList = c_pri_per_from_aff(mctrcreateform, v_rsc_lbr_flg, v_cls_vdt_flg, v_bulk_flg);
                        if (c_pri_per_from_affList.Any())
                        {


                            foreach (var item_pri_per_from_aff in c_pri_per_from_affList)
                            {
                                // SQL: insert into mctr_per_backup ( mctr_no , line_no , seq_no , fiscal_year , accounting_period , analysis_type , activity_id , project_id , account , home_dept , home_loc , home_bugl , home_pool , work_dept , work_loc , work_bugl , work_pool , rsc , wpd , bulk_alctn_cd7 , proj_trans_type , proj_trans_code , quantity_ytd , amount_ytd , class_cd , affiliate ) values ( : mctr_line_item . mctr_no , : line_no , v_seq_no , v_year , v_period , v_anal_type , v_activity , v_project , v_account , v_home_dept , v_home_loc , v_home_bugl , ' ' , v_work_dept , v_work_loc , v_work_bugl , ' ' , v_rsc , v_wpd , v_bulk , v_ptt , v_ptc , v_ytd_qty , v_ytd_amt , v_class_cd , v_affiliate )
                                sql = new StringBuilder(" insert  into  mctr_per_backup  (  mctr_no  ,  line_no  ,  seq_no  ,  fiscal_year  ,  accounting_period  ,  analysis_type  ,  activity_id  ,  project_id  ,  account  ,  home_dept  ,  home_loc  ,  home_bugl  ,  home_pool  ,  work_dept  ,  work_loc  ,  work_bugl  ,  work_pool  ,  rsc  ,  wpd  ,  bulk_alctn_cd7  ,  proj_trans_type  ,  proj_trans_code  ,  quantity_ytd  ,  amount_ytd  ,  class_cd  ,  affiliate  )  values (:0,:1,:2,:3,:4,:5,:6,:7,:8,:9,:10,:11,:12,:13,:14,:15,:16,:17,:18,:19,:20,:21,:22,:23,:24,:25);");
                                parameters = new OracleParameter[26];
                                parameters[0] = new OracleParameter(":mctr_no", OracleDbType.Int32, mctrcreateform.MctrNo, ParameterDirection.Input);
                                parameters[1] = new OracleParameter(":line_no", OracleDbType.Int16, mctrLineItem.LINE_NO, ParameterDirection.Input);
                                parameters[2] = new OracleParameter(":v_seq_no", OracleDbType.Int16, v_seq_no, ParameterDirection.Input);
                                parameters[3] = new OracleParameter(":v_year", OracleDbType.Int16, Convert.ToInt16(item_pri_per_from_aff.OVRHD_BASE_YR_CD7), ParameterDirection.Input);
                                parameters[4] = new OracleParameter(":v_period", OracleDbType.Int16, item_pri_per_from_aff.ACCOUNTING_PERIOD, ParameterDirection.Input);
                                parameters[5] = new OracleParameter(":v_anal_type", OracleDbType.Varchar2, item_pri_per_from_aff.ANALYSIS_TYPE, ParameterDirection.Input);
                                parameters[6] = new OracleParameter(":v_activity", OracleDbType.Varchar2, item_pri_per_from_aff.ACTIVITY_ID, ParameterDirection.Input);
                                parameters[7] = new OracleParameter(":v_project", OracleDbType.Varchar2, item_pri_per_from_aff.PROJECT_ID, ParameterDirection.Input);
                                parameters[8] = new OracleParameter(":v_account", OracleDbType.Varchar2, item_pri_per_from_aff.ACCOUNT, ParameterDirection.Input);
                                parameters[9] = new OracleParameter(":v_home_dept", OracleDbType.Varchar2, item_pri_per_from_aff.DEPTID_FROM, ParameterDirection.Input);
                                parameters[10] = new OracleParameter(":v_home_loc", OracleDbType.Varchar2, item_pri_per_from_aff.HOME_LOCATION_CD7, ParameterDirection.Input);
                                parameters[11] = new OracleParameter(":v_home_bugl", OracleDbType.Varchar2, item_pri_per_from_aff.BUS_UNIT_GL_FROM, ParameterDirection.Input);
                                parameters[12] = new OracleParameter(":home_pool", OracleDbType.Varchar2, " ", ParameterDirection.Input);
                                parameters[13] = new OracleParameter(":v_work_dept", OracleDbType.Varchar2, item_pri_per_from_aff.DEPTID, ParameterDirection.Input);
                                parameters[14] = new OracleParameter(":v_work_loc", OracleDbType.Varchar2, item_pri_per_from_aff.WORK_LOCATION_CD7, ParameterDirection.Input);
                                parameters[15] = new OracleParameter(":v_work_bugl", OracleDbType.Varchar2, item_pri_per_from_aff.BUSINESS_UNIT_GL, ParameterDirection.Input);
                                parameters[16] = new OracleParameter(":work_pool", OracleDbType.Varchar2, " ", ParameterDirection.Input);
                                parameters[17] = new OracleParameter(":v_rsc", OracleDbType.Varchar2, item_pri_per_from_aff.RESOURCE_SUB_CAT, ParameterDirection.Input);
                                parameters[18] = new OracleParameter(":v_wpd", OracleDbType.Varchar2, item_pri_per_from_aff.WPD_ID7, ParameterDirection.Input);
                                parameters[19] = new OracleParameter(":v_bulk", OracleDbType.Varchar2, item_pri_per_from_aff.BULK_ALCTN_CD7, ParameterDirection.Input);
                                parameters[20] = new OracleParameter(":v_ptt", OracleDbType.Varchar2, item_pri_per_from_aff.PROJ_TRANS_TYPE, ParameterDirection.Input);
                                parameters[21] = new OracleParameter(":v_ptc", OracleDbType.Varchar2, item_pri_per_from_aff.PROJ_TRANS_CODE, ParameterDirection.Input);
                                parameters[22] = new OracleParameter(":v_ttd_qty", OracleDbType.Decimal, item_pri_per_from_aff.SUM_TTD_QUANTITY7, ParameterDirection.Input);
                                parameters[23] = new OracleParameter(":v_ttd_amt", OracleDbType.Decimal, item_pri_per_from_aff.SUM_TTD_DOMESTIC_AMT7, ParameterDirection.Input);
                                parameters[24] = new OracleParameter(":v_class_cd", OracleDbType.Varchar2, item_pri_per_from_aff.CLASS_CD7, ParameterDirection.Input);
                                parameters[25] = new OracleParameter(":v_affiliate", OracleDbType.Varchar2, item_pri_per_from_aff.AFFILIATE, ParameterDirection.Input);
                                v_seq_no++;

                                try
                                {
                                    InsertStatus = entities.Database.ExecuteSqlCommand("BEGIN " + sql.ToString() + " END;", parameters);
                                }
                                catch (Exception ex)
                                {
                                    logger.Error(ex.Message);
                                }

                            }

                        }
                    }

                    else
                    {
                        var c_pri_per_fromList = c_pri_per_from(mctrcreateform, v_rsc_lbr_flg, v_cls_vdt_flg, v_bulk_flg);

                        foreach (var item_pri_per_from in c_pri_per_fromList)
                        {
                            // SQL: insert into mctr_per_backup ( mctr_no , line_no , seq_no , fiscal_year , accounting_period , analysis_type , activity_id , project_id , account , home_dept , home_loc , home_bugl , home_pool , work_dept , work_loc , work_bugl , work_pool , rsc , wpd , bulk_alctn_cd7 , proj_trans_type , proj_trans_code , quantity_ytd , amount_ytd , class_cd , affiliate ) values ( : mctr_line_item . mctr_no , : line_no , v_seq_no , v_year , v_period , v_anal_type , v_activity , v_project , v_account , v_home_dept , v_home_loc , v_home_bugl , ' ' , v_work_dept , v_work_loc , v_work_bugl , ' ' , v_rsc , v_wpd , v_bulk , v_ptt , v_ptc , v_ytd_qty , v_ytd_amt , v_class_cd , v_affiliate )

                            sql = new StringBuilder(" insert  into  mctr_per_backup  (  mctr_no  ,  line_no  ,  seq_no  ,  fiscal_year  ,  accounting_period  ,  analysis_type  ,  activity_id  ,  project_id  ,  account  ,  home_dept  ,  home_loc  ,  home_bugl  ,  home_pool  ,  work_dept  ,  work_loc  ,  work_bugl  ,  work_pool  ,  rsc  ,  wpd  ,  bulk_alctn_cd7  ,  proj_trans_type  ,  proj_trans_code  ,  quantity_ytd  ,  amount_ytd  ,  class_cd  ,  affiliate  )  values (:0,:1,:2,:3,:4,:5,:6,:7,:8,:9,:10,:11,:12,:13,:14,:15,:16,:17,:18,:19,:20,:21,:22,:23,:24,:25);");
                            parameters = new OracleParameter[26];
                            parameters[0] = new OracleParameter(":mctr_no", OracleDbType.Int32, mctrcreateform.MctrNo, ParameterDirection.Input);
                            parameters[1] = new OracleParameter(":line_no", OracleDbType.Int16, mctrLineItem.LINE_NO, ParameterDirection.Input);
                            parameters[2] = new OracleParameter(":v_seq_no", OracleDbType.Int16, v_seq_no, ParameterDirection.Input);
                            parameters[3] = new OracleParameter(":v_year", OracleDbType.Int16, Convert.ToInt16(item_pri_per_from.OVRHD_BASE_YR_CD7), ParameterDirection.Input);
                            parameters[4] = new OracleParameter(":v_period", OracleDbType.Int16, item_pri_per_from.ACCOUNTING_PERIOD, ParameterDirection.Input);
                            parameters[5] = new OracleParameter(":v_anal_type", OracleDbType.Varchar2, item_pri_per_from.ANALYSIS_TYPE, ParameterDirection.Input);
                            parameters[6] = new OracleParameter(":v_activity", OracleDbType.Varchar2, item_pri_per_from.ACTIVITY_ID, ParameterDirection.Input);
                            parameters[7] = new OracleParameter(":v_project", OracleDbType.Varchar2, item_pri_per_from.PROJECT_ID, ParameterDirection.Input);
                            parameters[8] = new OracleParameter(":v_account", OracleDbType.Varchar2, item_pri_per_from.ACCOUNT, ParameterDirection.Input);
                            parameters[9] = new OracleParameter(":v_home_dept", OracleDbType.Varchar2, item_pri_per_from.DEPTID_FROM, ParameterDirection.Input);
                            parameters[10] = new OracleParameter(":v_home_loc", OracleDbType.Varchar2, item_pri_per_from.HOME_LOCATION_CD7, ParameterDirection.Input);
                            parameters[11] = new OracleParameter(":v_home_bugl", OracleDbType.Varchar2, item_pri_per_from.BUS_UNIT_GL_FROM, ParameterDirection.Input);
                            parameters[12] = new OracleParameter(":home_pool", OracleDbType.Varchar2, " ", ParameterDirection.Input);
                            parameters[13] = new OracleParameter(":v_work_dept", OracleDbType.Varchar2, item_pri_per_from.DEPTID, ParameterDirection.Input);
                            parameters[14] = new OracleParameter(":v_work_loc", OracleDbType.Varchar2, item_pri_per_from.WORK_LOCATION_CD7, ParameterDirection.Input);
                            parameters[15] = new OracleParameter(":v_work_bugl", OracleDbType.Varchar2, item_pri_per_from.BUSINESS_UNIT_GL, ParameterDirection.Input);
                            parameters[16] = new OracleParameter(":work_pool", OracleDbType.Varchar2, " ", ParameterDirection.Input);
                            parameters[17] = new OracleParameter(":v_rsc", OracleDbType.Varchar2, item_pri_per_from.RESOURCE_SUB_CAT, ParameterDirection.Input);
                            parameters[18] = new OracleParameter(":v_wpd", OracleDbType.Varchar2, item_pri_per_from.WPD_ID7, ParameterDirection.Input);
                            parameters[19] = new OracleParameter(":v_bulk", OracleDbType.Varchar2, item_pri_per_from.BULK_ALCTN_CD7, ParameterDirection.Input);
                            parameters[20] = new OracleParameter(":v_ptt", OracleDbType.Varchar2, item_pri_per_from.PROJ_TRANS_TYPE, ParameterDirection.Input);
                            parameters[21] = new OracleParameter(":v_ptc", OracleDbType.Varchar2, item_pri_per_from.PROJ_TRANS_CODE, ParameterDirection.Input);
                            parameters[22] = new OracleParameter(":v_ttd_qty", OracleDbType.Decimal, item_pri_per_from.SUM_TTD_QUANTITY7, ParameterDirection.Input);
                            parameters[23] = new OracleParameter(":v_ttd_amt", OracleDbType.Decimal, item_pri_per_from.SUM_TTD_DOMESTIC_AMT7, ParameterDirection.Input);
                            parameters[24] = new OracleParameter(":v_class_cd", OracleDbType.Varchar2, item_pri_per_from.CLASS_CD7, ParameterDirection.Input);
                            parameters[25] = new OracleParameter(":v_affiliate", OracleDbType.Varchar2, item_pri_per_from.AFFILIATE ?? " ", ParameterDirection.Input);
                            try
                            {
                                InsertStatus = entities.Database.ExecuteSqlCommand("BEGIN " + sql.ToString() + " END;", parameters);
                            }
                            catch (Exception ex)
                            {
                                logger.Error(ex.Message);
                            }

                        }
                    }
                }
                else
                {
                    var c_cur_per_fromList = c_cur_per_from(mctrcreateform, v_rsc_lbr_flg, v_cls_vdt_flg, v_bulk_flg);
                    foreach (var item_cur_per_from in c_cur_per_fromList)
                    {
                        // SQL: insert into mctr_per_backup ( mctr_no , line_no , seq_no , fiscal_year , accounting_period , analysis_type , activity_id , project_id , account , home_dept , home_loc , home_bugl , home_pool , work_dept , work_loc , work_bugl , work_pool , rsc , wpd , bulk_alctn_cd7 , proj_trans_type , proj_trans_code , quantity_ytd , amount_ytd , class_cd , affiliate ) values ( : mctr_line_item . mctr_no , : line_no , v_seq_no , v_year , v_period , v_anal_type , v_activity , v_project , v_account , v_home_dept , v_home_loc , v_home_bugl , ' ' , v_work_dept , v_work_loc , v_work_bugl , ' ' , v_rsc , v_wpd , v_bulk , v_ptt , v_ptc , v_ytd_qty , v_ytd_amt , v_class_cd , v_affiliate )

                        sql = new StringBuilder(" insert  into  mctr_per_backup  (  mctr_no  ,  line_no  ,  seq_no  ,  fiscal_year  ,  accounting_period  ,  analysis_type  ,  activity_id  ,  project_id  ,  account  ,  home_dept  ,  home_loc  ,  home_bugl  ,  home_pool  ,  work_dept  ,  work_loc  ,  work_bugl  ,  work_pool  ,  rsc  ,  wpd  ,  bulk_alctn_cd7  ,  proj_trans_type  ,  proj_trans_code  ,  quantity_ytd  ,  amount_ytd  ,  class_cd  ,  affiliate  )  values (:0,:1,:2,:3,:4,:5,:6,:7,:8,:9,:10,:11,:12,:13,:14,:15,:16,:17,:18,:19,:20,:21,:22,:23,:24,:25);");
                        parameters = new OracleParameter[26];
                        parameters[0] = new OracleParameter(":mctr_no", OracleDbType.Int32, mctrcreateform.MctrNo, ParameterDirection.Input);
                        parameters[1] = new OracleParameter(":line_no", OracleDbType.Int16, mctrLineItem.LINE_NO, ParameterDirection.Input);
                        parameters[2] = new OracleParameter(":v_seq_no", OracleDbType.Int16, v_seq_no, ParameterDirection.Input);
                        parameters[3] = new OracleParameter(":v_year", OracleDbType.Int16,Convert.ToInt16(item_cur_per_from.OVRHD_BASE_YR_CD7), ParameterDirection.Input);
                        parameters[4] = new OracleParameter(":v_period", OracleDbType.Varchar2, item_cur_per_from.ACCOUNTING_PERIOD, ParameterDirection.Input);
                        parameters[5] = new OracleParameter(":v_anal_type", OracleDbType.Varchar2, item_cur_per_from.ANALYSIS_TYPE, ParameterDirection.Input);
                        parameters[6] = new OracleParameter(":v_activity", OracleDbType.Varchar2, item_cur_per_from.ACTIVITY_ID, ParameterDirection.Input);
                        parameters[7] = new OracleParameter(":v_project", OracleDbType.Varchar2, item_cur_per_from.PROJECT_ID, ParameterDirection.Input);
                        parameters[8] = new OracleParameter(":v_account", OracleDbType.Varchar2, item_cur_per_from.ACCOUNT, ParameterDirection.Input);
                        parameters[9] = new OracleParameter(":v_home_dept", OracleDbType.Varchar2, item_cur_per_from.DEPTID_FROM, ParameterDirection.Input);
                        parameters[10] = new OracleParameter(":v_home_loc", OracleDbType.Varchar2, item_cur_per_from.HOME_LOCATION_CD7, ParameterDirection.Input);
                        parameters[11] = new OracleParameter(":v_home_bugl", OracleDbType.Varchar2, item_cur_per_from.BUS_UNIT_GL_FROM, ParameterDirection.Input);
                        parameters[12] = new OracleParameter(":home_pool", OracleDbType.Varchar2, " ", ParameterDirection.Input);
                        parameters[13] = new OracleParameter(":v_work_dept", OracleDbType.Varchar2, item_cur_per_from.DEPTID, ParameterDirection.Input);
                        parameters[14] = new OracleParameter(":v_work_loc", OracleDbType.Varchar2, item_cur_per_from.WORK_LOCATION_CD7, ParameterDirection.Input);
                        parameters[15] = new OracleParameter(":v_work_bugl", OracleDbType.Varchar2, item_cur_per_from.BUSINESS_UNIT_GL, ParameterDirection.Input);
                        parameters[16] = new OracleParameter(":work_pool", OracleDbType.Varchar2, " ", ParameterDirection.Input);
                        parameters[17] = new OracleParameter(":v_rsc", OracleDbType.Varchar2, item_cur_per_from.RESOURCE_SUB_CAT, ParameterDirection.Input);
                        parameters[18] = new OracleParameter(":v_wpd", OracleDbType.Varchar2, item_cur_per_from.WPD_ID7, ParameterDirection.Input);
                        parameters[19] = new OracleParameter(":v_bulk", OracleDbType.Varchar2, item_cur_per_from.BULK_ALCTN_CD7, ParameterDirection.Input);
                        parameters[20] = new OracleParameter(":v_ptt", OracleDbType.Varchar2, item_cur_per_from.PROJ_TRANS_TYPE, ParameterDirection.Input);
                        parameters[21] = new OracleParameter(":v_ptc", OracleDbType.Varchar2, item_cur_per_from.PROJ_TRANS_CODE, ParameterDirection.Input);
                        parameters[22] = new OracleParameter(":v_ttd_qty", OracleDbType.Varchar2, item_cur_per_from.SUM_TTD_QUANTITY7, ParameterDirection.Input);
                        parameters[23] = new OracleParameter(":v_ttd_amt", OracleDbType.Varchar2, item_cur_per_from.SUM_TTD_DOMESTIC_AMT7, ParameterDirection.Input);
                        parameters[24] = new OracleParameter(":v_class_cd", OracleDbType.Varchar2, item_cur_per_from.CLASS_CD7, ParameterDirection.Input);
                        parameters[25] = new OracleParameter(":v_affiliate", OracleDbType.Varchar2, " ", ParameterDirection.Input);

                        try
                        {
                            InsertStatus = entities.Database.ExecuteSqlCommand("BEGIN " + sql.ToString() + " END;", parameters);
                        }
                        catch (Exception ex)
                        {
                            logger.Error(ex.Message);
                        }

                    }
                }


                //-- subtract aggregate totals using entries with same line of accounting (sla).

                if (v_quantity_ytd != 0 && v_amount_ytd != 0)
                {
                    if (v_quantity_ytd != 0 && v_quantity_sla != 0)
                    {
                        if ((v_quantity_ytd > 0 && v_quantity_sla < 0 && v_quantity_ytd >= (-1 * v_quantity_sla)) || (v_quantity_ytd < 0 && v_quantity_sla > 0 && (-1 * v_quantity_ytd) >= v_quantity_sla))
                        {
                            v_quantity_ytd = v_quantity_ytd + v_quantity_sla;
                        }
                    }

                    if (v_amount_ytd != 0 && v_amount_sla != 0)
                    {
                        if ((v_amount_ytd > 0 && v_amount_sla < 0 && v_amount_ytd >= (-1 * v_amount_sla)) || (v_amount_ytd < 0 && v_amount_sla > 0 && (-1 * v_amount_ytd) >= v_amount_sla))
                        {
                            v_amount_ytd = v_amount_ytd + v_amount_sla;
                        }
                    }
                }

                //--set glpc backup color validation for ytd.

                if (Convert.ToDecimal(mctrLineItem.AMOUNT_FROM) < 0)
                {
                    {
                        if (v_quantity_ytd == null)
                        {
                            mctrLineItem.PER_FLAG = "B";
                        }

                        else if ((v_quantity_ytd == (-1 * mctrLineItem.QUANTITY_FROM)) && mctrLineItem.QUANTITY_FROM != 0 && v_amount_ytd != (-1 * (Convert.ToDecimal(mctrLineItem.AMOUNT_FROM) + Convert.ToDecimal(mctrLineItem.ADJUSTMENT_FROM))))
                        {
                            mctrLineItem.PER_FLAG = "Y";
                        }

                        else if ((v_quantity_ytd >= (-1 * mctrLineItem.QUANTITY_FROM)) && v_amount_ytd >= (-1 * (Convert.ToDecimal(mctrLineItem.AMOUNT_FROM) + Convert.ToDecimal(mctrLineItem.ADJUSTMENT_FROM))))
                        {
                            mctrLineItem.PER_FLAG = "G";
                        }

                        else if ((v_quantity_ytd >= (-1 * mctrLineItem.QUANTITY_FROM)) && mctrLineItem.QUANTITY_FROM != 0)
                        {
                            mctrLineItem.PER_FLAG = "Y";
                        }

                        else
                        {
                            mctrLineItem.PER_FLAG = "R";
                        }
                    }
                }

                else
                {
                    if (v_quantity_ytd == null)
                    {
                        mctrLineItem.PER_FLAG = "B";
                    }

                    else if ((-1 * v_quantity_ytd) == mctrLineItem.QUANTITY_FROM && mctrLineItem.QUANTITY_FROM != 0 && (-1 * v_amount_ytd) != (Convert.ToDecimal(mctrLineItem.AMOUNT_FROM) + Convert.ToDecimal(mctrLineItem.ADJUSTMENT_FROM)))
                    {
                        mctrLineItem.PER_FLAG = "Y";
                    }

                    else if ((-1 * v_quantity_ytd) >= mctrLineItem.QUANTITY_FROM && (-1 * v_amount_ytd) >= (Convert.ToDecimal(mctrLineItem.AMOUNT_FROM) + Convert.ToDecimal(mctrLineItem.ADJUSTMENT_FROM)))
                    {
                        mctrLineItem.PER_FLAG = "G";
                    }

                    else if ((-1 * v_quantity_ytd) >= mctrLineItem.QUANTITY_FROM && mctrLineItem.QUANTITY_FROM != 0)
                    {
                        mctrLineItem.PER_FLAG = "Y";
                    }

                    else
                    {
                        mctrLineItem.PER_FLAG = "R";
                    }

                }

            }
            return mctrCreateForm;
        }

        public IEnumerable<MctrCreateForm> mctrLineItemPostUpdate(IEnumerable<MctrCreateForm> mctrCreateForm)
        {
            MctrCreateForm mctrcreateform = mctrCreateForm.First();
            MctrLineItem mctrLineItem = mctrcreateform.mctrLineItem.Last();
            StringBuilder sql = new StringBuilder();

            OracleParameter[] parameters = new OracleParameter[1];
            var v_man_rated_flg = "";
            string v_rsc_pl_from_mod = "";
            string v_rsc_pl_to_mod = "";
            var v_bum_cd_from = "";
            var v_bum_cd_to = "";
            var v_cust_grp_from = "";
            var v_proj_trans_type = "OTH";
            string v_proj_trans_code = null;
            string v_oh_wpd_to = null;
            string v_oh_bulk_to = null;
            string v_home_dept, v_work_dept;
            var v_cust_grp_to = "";
            var v_setid = "";
            var v_rsc_out = "";
            var v_pool_out = "";
            Nullable<decimal> v_rate_output = 0;
            Nullable<decimal> v_rate_override = 0;
            Nullable<decimal> v_rate = 0;

            var v_bulk_flg = "";
            var v_rsc_lbr_flg = "";
            var v_cls_vdt_flg = "";

            try
            {
                // SQL: select bulk_flg , rsc_lbr_flg , cls_vdt_flg into v_bulk_flg , v_rsc_lbr_flg , v_cls_vdt_flg from mctr_bu_profile where business_unit = : orig_bu
                sql = new StringBuilder("select bulk_flg , rsc_lbr_flg , cls_vdt_flg from mctr_bu_profile where business_unit = '" + mctrcreateform.OrigBu + "'");
                var result = entities.Database.SqlQuery<BuProfile>(sql.ToString()).Single<BuProfile>();

                v_bulk_flg = result.Bulk_Flg;
                v_rsc_lbr_flg = result.Rsc_Lbr_Flg;
                v_cls_vdt_flg = result.Cls_Vdt_Flg;
            }
            catch (Exception ex)
            {
                logger.Error("Error from  Mctr.DataAccess.MctrLogAcctRepository.mctrHeaderMctrHeaderOnLoad():" + ex.Message);
                v_bulk_flg = "N";
                v_rsc_lbr_flg = "Y";
                v_cls_vdt_flg = "N";

            }

            // clear overhead and offset tables.
            // SQL: delete from mctr_ovrhd where mctr_no = : mctr_line_item . mctr_no and line_no = : mctr_line_item . line_no
            sql = new StringBuilder(" delete  from  mctr_ovrhd  where mctr_no=:0 and line_no=:1;");
            parameters = new OracleParameter[2];
            parameters[0] = new OracleParameter(":mctr_no", OracleDbType.Int32, mctrcreateform.MctrNo, ParameterDirection.Input);
            parameters[1] = new OracleParameter(":line_no", OracleDbType.Int32, mctrLineItem.LINE_NO, ParameterDirection.Input);
            var DeletedStatus = entities.Database.ExecuteSqlCommand("BEGIN " + sql.ToString() + " END;", parameters);

            // SQL: delete from mctr_offset where mctr_no = : mctr_header . mctr_no
            sql = new StringBuilder(" delete  from  mctr_offset  where mctr_no=:0;");
            parameters = new OracleParameter[1];
            parameters[0] = new OracleParameter(":mctr_no", OracleDbType.Int32, mctrcreateform.MctrNo, ParameterDirection.Input);
            DeletedStatus = entities.Database.ExecuteSqlCommand("BEGIN " + sql.ToString() + " END;", parameters);
            mctrLineItem.RSC_FROM = mctrLineItem.RSC_FROM ?? "";
            //get overhead and offset entries for only prior year transfers.
            // SQL: select man_rated_flg into v_man_rated_flg from mctr_bu_profile where business_unit = : orig_bu
            if (mctrcreateform.py_cy_status == "PY")
            {

                try
                {
                    sql = new StringBuilder("select man_rated_flg  from  mctr_bu_profile where business_unit = :0 ");
                    parameters = new OracleParameter[1];
                    parameters[0] = new OracleParameter(":business_unit", OracleDbType.Varchar2, mctrcreateform.OrigBu, ParameterDirection.Input);
                    v_man_rated_flg = entities.Database.SqlQuery<string>(sql.ToString(), parameters).SingleOrDefault() ?? "";
                }
                catch
                {
                    v_man_rated_flg = "N";

                }

                if ((mctrcreateform.py_cy_status.Equals("PY")))
                {
                    string[] rsc_List = { "693", "695", "697" };
                    if (v_man_rated_flg.Equals("N"))
                    {
                        if (mctrLineItem.RSC_FROM.StartsWith("9")) // verify
                        {
                            v_rsc_pl_from_mod = "9xx";
                        }

                        else if (mctrLineItem.RSC_FROM.Equals("095") && Convert.ToInt32(mctrcreateform.fyear) >= 2009)
                        {
                            v_rsc_pl_from_mod = "00";
                        }

                        else if (mctrLineItem.RSC_FROM.Equals("095") && Convert.ToInt32(mctrcreateform.fyear) < 2009)
                        {
                            v_rsc_pl_from_mod = "95";
                        }

                        else if (mctrLineItem.RSC_FROM.StartsWith("5"))
                        {
                            v_rsc_pl_from_mod = mctrLineItem.RSC_FROM;
                        }

                        else if (rsc_List.Contains<string>(mctrLineItem.RSC_FROM))
                        {
                            v_rsc_pl_from_mod = "69x";
                        }

                        else if (mctrLineItem.RSC_FROM.StartsWith("6"))
                        {
                            v_rsc_pl_from_mod = "6xx";
                        }

                        else
                        {
                            v_rsc_pl_from_mod = mctrLineItem.WORK_POOL_FROM;
                        }
                        mctrLineItem.RSC_TO = mctrLineItem.RSC_TO ?? "";
                        if (mctrLineItem.RSC_TO.StartsWith("9"))
                        {
                            v_rsc_pl_to_mod = "9xx";
                        }

                        else if (mctrLineItem.RSC_TO.Equals("095") && Convert.ToInt32(mctrcreateform.fyear) >= 2009)
                        {
                            v_rsc_pl_to_mod = "00";
                        }

                        else if (mctrLineItem.RSC_TO.Equals("095") && Convert.ToInt32(mctrcreateform.fyear) < 2009)
                        {
                            v_rsc_pl_to_mod = "95";
                        }

                        else if (mctrLineItem.RSC_TO.StartsWith("5"))
                        {
                            v_rsc_pl_to_mod = mctrLineItem.RSC_TO;
                        }

                        else if (rsc_List.Contains<string>(mctrLineItem.RSC_TO))
                        {
                            v_rsc_pl_to_mod = "69x";
                        }

                        else if (mctrLineItem.RSC_TO.StartsWith("6"))
                        {
                            v_rsc_pl_to_mod = "6xx";
                        }

                        else
                        {
                            v_rsc_pl_to_mod = mctrLineItem.WORK_POOL_TO;
                        }
                        if (mctrcreateform.OrigBu.Equals("CG"))
                        {
                            //current code to be used only by long beach.

                            if (mctrLineItem.BUM_CD7_FROM.Length == 3 && (!mctrLineItem.BUM_CD7_FROM.StartsWith("E")))
                            {
                                v_bum_cd_from = mctrLineItem.BUM_CD7_FROM.Substring(1, 2);
                            }

                            else
                            {
                                v_bum_cd_from = mctrLineItem.BUM_CD7_FROM.Substring(0, 2);
                            }
                        }

                        else
                        {
                            if (mctrLineItem.BUM_CD7_FROM.Length == 3)
                            {
                                v_bum_cd_from = mctrLineItem.BUM_CD7_FROM.Substring(1, 2);
                            }

                            else
                            {
                                v_bum_cd_from = mctrLineItem.BUM_CD7_FROM.Substring(0, 2);
                            }
                        }

                        if (mctrcreateform.OrigBu.Equals("CG"))
                        {
                            //current code to be used only by long beach.

                            if ((mctrLineItem.BUM_CD7_TO.Length == 3) && !(mctrLineItem.BUM_CD7_TO.Substring(0, 0).Equals("E")))
                            {
                                v_bum_cd_to = mctrLineItem.BUM_CD7_FROM.Substring(1, 2);
                            }

                            else
                            {
                                v_bum_cd_to = mctrLineItem.BUM_CD7_FROM.Substring(0, 2);
                            }
                        }

                        else
                        {
                            if (mctrLineItem.BUM_CD7_TO.Length == 3)
                            {
                                v_bum_cd_to = mctrLineItem.BUM_CD7_TO.Substring(1, 2);
                            }

                            else
                            {
                                v_bum_cd_to = mctrLineItem.BUM_CD7_TO.Substring(0, 2);
                            }
                        }
                        try
                        {
                            // SQL: select customer_grp into v_cust_grp_from from mctr_cust_type where fiscal_year = : fiscal_year and customer_type_cd7 = : cust_type_cd7_from
                            sql = new StringBuilder("select customer_grp  from  mctr_cust_type where fiscal_year = :0 and customer_type_cd7 = :1 ");
                            parameters = new OracleParameter[2];
                            parameters[0] = new OracleParameter(":fiscal_year", OracleDbType.Int32, Convert.ToInt32(mctrcreateform.fyear), ParameterDirection.Input);
                            parameters[1] = new OracleParameter(":cust_type_cd7_from", OracleDbType.Varchar2, mctrLineItem.CUST_TYPE_CD7_FROM, ParameterDirection.Input);
                            v_cust_grp_from = entities.Database.SqlQuery<string>(sql.ToString(), parameters).SingleOrDefault<string>();
                        }
                        catch (Exception e)
                        {
                            logger.Error(e.Message);
                        }
                        try
                        {
                            // SQL: select customer_grp into v_cust_grp_to from mctr_cust_type where fiscal_year = : fiscal_year and customer_type_cd7 = : cust_type_cd7_to
                            sql = new StringBuilder("select customer_grp  from  mctr_cust_type where fiscal_year =:0 and customer_type_cd7 =:1 ");
                            parameters = new OracleParameter[2];
                            parameters[0] = new OracleParameter(":fiscal_year", OracleDbType.Int32, Convert.ToInt32(mctrcreateform.fyear), ParameterDirection.Input);
                            parameters[1] = new OracleParameter(":cust_type_cd7_to", OracleDbType.Varchar2, mctrLineItem.CUST_TYPE_CD7_TO, ParameterDirection.Input);
                            v_cust_grp_to = entities.Database.SqlQuery<string>(sql.ToString(), parameters).SingleOrDefault<string>();
                        }
                        catch (Exception e)
                        {
                            logger.Error(e.Message);
                        }
                        //calculate overheads
                        if ((mctrcreateform.py_cy_status.Equals("PY") && Convert.ToInt32(mctrcreateform.fyear) > 2007 && mctrLineItem.AFFILIATE_FROM != null))

                        {
                            v_setid = mctrLineItem.AFFILIATE_FROM;
                        }

                        else
                        {
                            v_setid = mctrLineItem.HOME_BUGL_FROM;
                        }
                        int v_line_oh = 1;


                        v_rsc_pl_from_mod = v_rsc_pl_from_mod ?? "";

                        //exclude all of the 9xx rscs from burden calculation for all years (from side). 
                        if ((v_rsc_pl_from_mod.Trim() == null) || ((v_rsc_pl_from_mod.Trim() != null) && (!v_rsc_pl_from_mod.Equals("9xx"))))
                        {
                            List<MCTR_COMP_RATES> c_comp_rates_fromList = c_comp_rates_from(mctrcreateform, v_setid, v_cust_grp_from, v_rsc_pl_from_mod, v_bum_cd_from);
                            if (c_comp_rates_fromList != null && c_comp_rates_fromList.Any())
                            {
                                foreach (var item_comp_rates_from in c_comp_rates_fromList)
                                {
                                    v_rsc_out = item_comp_rates_from.RSC_OUTPUT;
                                    v_pool_out = item_comp_rates_from.POOL_OUTPUT;
                                    v_rate_output = item_comp_rates_from.RATE_OUTPUT;
                                    v_rate_override = item_comp_rates_from.RATE_OVERRIDE;
                                    if (v_rate_override != 0)
                                    {
                                        v_rate = v_rate_override;
                                    }

                                    else
                                    {
                                        v_rate = v_rate_output;
                                    }
                                    v_proj_trans_type = "OTH";
                                    v_proj_trans_code = null;
                                    string v_oh_wpd_from = null;
                                    string v_oh_bulk_from = null;
                                    if (v_pool_out == "NL")
                                    {
                                        v_pool_out = mctrLineItem.WORK_POOL_FROM;
                                    }

                                    if (v_rsc_out.StartsWith("FRG"))
                                    {
                                        v_proj_trans_type = "LBR";
                                        v_proj_trans_code = "FRG";
                                        v_oh_wpd_from = mctrLineItem.WPD_FROM;
                                        v_oh_bulk_from = mctrLineItem.BULK_FROM;
                                        v_home_dept = mctrLineItem.HOME_DEPT_FROM;
                                        v_work_dept = mctrLineItem.WORK_DEPT_FROM;
                                        v_rsc_out = mctrLineItem.RSC_FROM;
                                    }

                                    else
                                    {
                                        v_home_dept = null;
                                        v_work_dept = null;
                                    }
                                    var v_amount = (Convert.ToDecimal(mctrLineItem.AMOUNT_FROM) + Convert.ToDecimal(mctrLineItem.ADJUSTMENT_FROM)) * v_rate;

                                    // SQL: insert into mctr_ovrhd ( mctr_no , line_no , from_to , line_no_oh , work_bugl_from , activity_id_from , project_id_from , account_from , home_dept_from , home_loc_from , home_bugl_from , home_pool_from , labor_rate_cd7_from , class_cd_from , work_dept_from , work_loc_from , work_pool_from , rsc_from , wpd_from , bulk_alctn_cd7 , proj_trans_type_from , proj_trans_code_from , stat_code_from , uom_from , affiliate_from , oh_base_yr_from , quantity_from , amount_from ) values ( : mctr_line_item . mctr_no , : line_no , 'F' , v_line_oh , : work_bugl_from , : activity_id_from , : project_id_from , : account_from , v_home_dept , : home_loc_from , : home_bugl_from , v_pool_out , null , null , v_work_dept , : work_loc_from , v_pool_out , v_rsc_out , v_oh_wpd_from , v_oh_bulk_from , v_proj_trans_type , v_proj_trans_code , null , null , : affiliate_from , : fiscal_year , 0 , v_amount )
                                    sql = new StringBuilder("INSERT INTO MCTR_OVRHD(MCTR_NO,LINE_NO,FROM_TO,LINE_NO_OH,ACTIVITY_ID_FROM,PROJECT_ID_FROM,ACCOUNT_FROM,BUM_CD7_FROM,CUS_TYPE_CD7_FROM,HOME_DEPT_FROM,HOME_LOC_FROM,HOME_BUGL_FROM,HOME_POOL_FROM,LABOR_RATE_CD7_FROM,CLASS_CD_FROM,WORK_DEPT_FROM,WORK_LOC_FROM,WORK_BUGL_FROM,WORK_POOL_FROM,RSC_FROM,PROJ_TRANS_TYPE_FROM,PROJ_TRANS_CODE_FROM,STAT_CODE_FROM,UOM_FROM,OH_BASE_YR_FROM,QUANTITY_FROM,AMOUNT_FROM,WPD_FROM,BULK_ALCTN_CD7,AFFILIATE_FROM) VALUES(:0,:1,:2,:3,:4,:5,:6,:7,:8,:9,:10,:11,:12,:13,:14,:15,:16,:17,:18,:19,:20,:21,:22,:23,:24,:25,:26,:27,:28,:29);");
                                    parameters = new OracleParameter[30];
                                    parameters[0] = new OracleParameter(":mctr_no", OracleDbType.Int32, mctrcreateform.MctrNo, ParameterDirection.Input);
                                    parameters[1] = new OracleParameter(":line_no", OracleDbType.Int16, mctrLineItem.LINE_NO, ParameterDirection.Input);
                                    parameters[2] = new OracleParameter(":FROM_TO", OracleDbType.Varchar2, "F", ParameterDirection.Input);
                                    parameters[3] = new OracleParameter(":v_line_oh", OracleDbType.Int16, v_line_oh, ParameterDirection.Input);
                                    parameters[4] = new OracleParameter(":activity_id_from", OracleDbType.Varchar2, mctrLineItem.ACTIVITY_ID_FROM, ParameterDirection.Input);
                                    parameters[5] = new OracleParameter(":project_id_from", OracleDbType.Varchar2, mctrLineItem.PROJECT_ID_FROM, ParameterDirection.Input);
                                    parameters[6] = new OracleParameter(":account_from", OracleDbType.Varchar2, mctrLineItem.ACCOUNT_FROM, ParameterDirection.Input);
                                    parameters[7] = new OracleParameter(":BUM_CD7_FROM", OracleDbType.Varchar2, null, ParameterDirection.Input);
                                    parameters[8] = new OracleParameter(":CUS_TYPE_CD7_FROM", OracleDbType.Varchar2, null, ParameterDirection.Input);
                                    parameters[9] = new OracleParameter(":v_home_dept", OracleDbType.Varchar2, v_home_dept, ParameterDirection.Input);
                                    parameters[10] = new OracleParameter(":home_loc_from", OracleDbType.Varchar2, mctrLineItem.HOME_LOC_FROM, ParameterDirection.Input);
                                    parameters[11] = new OracleParameter(":home_bugl_from", OracleDbType.Varchar2, mctrLineItem.HOME_BUGL_FROM, ParameterDirection.Input);
                                    parameters[12] = new OracleParameter(":v_pool_out", OracleDbType.Varchar2, v_pool_out, ParameterDirection.Input);
                                    parameters[13] = new OracleParameter(":LABOR_RATE_CD7_FROM", OracleDbType.Varchar2, null, ParameterDirection.Input);
                                    parameters[14] = new OracleParameter(":CLASS_CD_FROM", OracleDbType.Varchar2, null, ParameterDirection.Input);
                                    parameters[15] = new OracleParameter(":v_work_dept", OracleDbType.Varchar2, v_work_dept, ParameterDirection.Input);
                                    parameters[16] = new OracleParameter(":work_loc_from", OracleDbType.Varchar2, mctrLineItem.WORK_LOC_FROM, ParameterDirection.Input);
                                    parameters[17] = new OracleParameter(":work_bugl_from", OracleDbType.Varchar2, mctrLineItem.WORK_BUGL_FROM, ParameterDirection.Input);
                                    parameters[18] = new OracleParameter(":v_pool_out", OracleDbType.Varchar2, v_pool_out, ParameterDirection.Input);
                                    parameters[19] = new OracleParameter(":v_rsc_out", OracleDbType.Varchar2, v_rsc_out, ParameterDirection.Input);
                                    parameters[20] = new OracleParameter(":v_proj_trans_type", OracleDbType.Varchar2, v_proj_trans_type, ParameterDirection.Input);
                                    parameters[21] = new OracleParameter(":v_proj_trans_code", OracleDbType.Varchar2, v_proj_trans_code, ParameterDirection.Input);
                                    parameters[22] = new OracleParameter(":STAT_CODE_FROM", OracleDbType.Varchar2, null, ParameterDirection.Input);
                                    parameters[23] = new OracleParameter(":UOM_FROM", OracleDbType.Varchar2, null, ParameterDirection.Input);
                                    parameters[24] = new OracleParameter(":fiscal_year", OracleDbType.Int16, Convert.ToInt32(Convert.ToInt32(mctrcreateform.fyear)), ParameterDirection.Input);
                                    parameters[25] = new OracleParameter(":quantity_from", OracleDbType.Decimal, 0, ParameterDirection.Input);
                                    parameters[26] = new OracleParameter(":v_amount", OracleDbType.Decimal, v_amount, ParameterDirection.Input);
                                    parameters[27] = new OracleParameter(":v_oh_wpd_from", OracleDbType.Varchar2, v_oh_wpd_from, ParameterDirection.Input);
                                    parameters[28] = new OracleParameter(":v_oh_bulk_from", OracleDbType.Varchar2, v_oh_bulk_from, ParameterDirection.Input);
                                    parameters[29] = new OracleParameter(":affiliate_from", OracleDbType.Varchar2, mctrLineItem.AFFILIATE_FROM, ParameterDirection.Input);
                                    var InsertStatus = entities.Database.ExecuteSqlCommand("BEGIN " + sql.ToString() + " END;", parameters);
                                    v_line_oh = v_line_oh + 1;

                                }
                            }
                        }
                        //   exclude all of the 9xx rscs from burden calculation for all years (to side).
                        if ((mctrcreateform.py_cy_status.Equals("PY") && Convert.ToInt32(mctrcreateform.fyear) > 2007 && mctrLineItem.AFFILIATE_TO != null))
                        {
                            v_setid = mctrLineItem.AFFILIATE_TO;
                        }

                        else
                        {
                            v_setid = mctrLineItem.HOME_BUGL_TO;
                        }


                        v_rsc_pl_to_mod = v_rsc_pl_to_mod ?? "";

                        if ((v_rsc_pl_to_mod.Trim() == null) || (v_rsc_pl_to_mod.Trim() != null) && (!v_rsc_pl_to_mod.Equals("9xx")))
                        {
                            List<MCTR_COMP_RATES> c_comp_rates_toList = c_comp_rates_to(mctrcreateform, v_setid, v_cust_grp_to, v_rsc_pl_to_mod, v_bum_cd_to);

                            if (c_comp_rates_toList != null && c_comp_rates_toList.Any())
                            {
                                foreach (var item_comp_rates_to in c_comp_rates_toList)
                                {
                                    v_rsc_out = item_comp_rates_to.RSC_OUTPUT;
                                    v_pool_out = item_comp_rates_to.POOL_OUTPUT;
                                    v_rate_output = item_comp_rates_to.RATE_OUTPUT;
                                    v_rate_override = item_comp_rates_to.RATE_OVERRIDE;
                                    v_rate = 0;
                                    if (v_rate_override != 0)
                                    {
                                        v_rate = v_rate_override;
                                    }

                                    else
                                    {
                                        v_rate = v_rate_output;
                                    }
                                    v_proj_trans_type = "OTH";
                                    v_proj_trans_code = null;
                                    v_oh_wpd_to = null;
                                    v_oh_bulk_to = null;

                                    if (v_pool_out == "NL")
                                    {
                                        v_pool_out = mctrLineItem.WORK_POOL_TO;
                                    }

                                    if (v_rsc_out.IndexOf("FRG") != -1)
                                    {
                                        v_proj_trans_type = "LBR";
                                        v_proj_trans_code = "FRG";
                                        v_oh_wpd_to = mctrLineItem.WPD_TO;
                                        v_oh_bulk_to = mctrLineItem.BULK_TO;
                                        v_home_dept = mctrLineItem.HOME_DEPT_TO;
                                        v_work_dept = mctrLineItem.WORK_DEPT_TO;
                                        v_rsc_out = mctrLineItem.RSC_TO;
                                    }

                                    else
                                    {
                                        v_home_dept = null;
                                        v_work_dept = null;
                                    }
                                    var v_amount = (Convert.ToDecimal(mctrLineItem.AMOUNT_TO) + Convert.ToDecimal(mctrLineItem.ADJUSTMENT_TO)) * v_rate;
                                    // SQL: insert into mctr_ovrhd ( mctr_no , line_no , from_to , line_no_oh , work_bugl_from , activity_id_from , project_id_from , account_from , home_dept_from , home_loc_from , home_bugl_from , home_pool_from , labor_rate_cd7_from , class_cd_from , work_dept_from , work_loc_from , work_pool_from , rsc_from , wpd_from , bulk_alctn_cd7 , proj_trans_type_from , proj_trans_code_from , stat_code_from , uom_from , affiliate_from , oh_base_yr_from , quantity_from , amount_from ) values ( : mctr_line_item . mctr_no , : line_no , 't' , v_line_oh , : work_bugl_to , : activity_id_to , : project_id_to , : account_to , v_home_dept , : home_loc_to , : home_bugl_to , v_pool_out , null , null , v_work_dept , : work_loc_to , v_pool_out , v_rsc_out , v_oh_wpd_to , v_oh_bulk_to , v_proj_trans_type , v_proj_trans_code , null , null , : affiliate_from , : fiscal_year , 0 , v_amount )
                                    sql = new StringBuilder("INSERT INTO MCTR_OVRHD(MCTR_NO,LINE_NO,FROM_TO,LINE_NO_OH,ACTIVITY_ID_FROM,PROJECT_ID_FROM,ACCOUNT_FROM,BUM_CD7_FROM,CUS_TYPE_CD7_FROM,HOME_DEPT_FROM,HOME_LOC_FROM,HOME_BUGL_FROM,HOME_POOL_FROM,LABOR_RATE_CD7_FROM,CLASS_CD_FROM,WORK_DEPT_FROM,WORK_LOC_FROM,WORK_BUGL_FROM,WORK_POOL_FROM,RSC_FROM,PROJ_TRANS_TYPE_FROM,PROJ_TRANS_CODE_FROM,STAT_CODE_FROM,UOM_FROM,OH_BASE_YR_FROM,QUANTITY_FROM,AMOUNT_FROM,WPD_FROM,BULK_ALCTN_CD7,AFFILIATE_FROM) VALUES(:0,:1,:2,:3,:4,:5,:6,:7,:8,:9,:10,:11,:12,:13,:14,:15,:16,:17,:18,:19,:20,:21,:22,:23,:24,:25,:26,:27,:28,:29);");
                                    parameters = new OracleParameter[30];
                                    parameters[0] = new OracleParameter(":mctr_no", OracleDbType.Int32, mctrcreateform.MctrNo, ParameterDirection.Input);
                                    parameters[1] = new OracleParameter(":line_no", OracleDbType.Int16, mctrLineItem.LINE_NO, ParameterDirection.Input);
                                    parameters[2] = new OracleParameter(":FROM_TO", OracleDbType.Varchar2, "T", ParameterDirection.Input);
                                    parameters[3] = new OracleParameter(":v_line_oh", OracleDbType.Int16, v_line_oh, ParameterDirection.Input);
                                    parameters[4] = new OracleParameter(":activity_id_from", OracleDbType.Varchar2, mctrLineItem.ACTIVITY_ID_TO, ParameterDirection.Input);
                                    parameters[5] = new OracleParameter(":project_id_from", OracleDbType.Varchar2, mctrLineItem.PROJECT_ID_TO, ParameterDirection.Input);
                                    parameters[6] = new OracleParameter(":account_from", OracleDbType.Varchar2, mctrLineItem.ACCOUNT_TO, ParameterDirection.Input);
                                    parameters[7] = new OracleParameter(":BUM_CD7_FROM", OracleDbType.Varchar2, null, ParameterDirection.Input);
                                    parameters[8] = new OracleParameter(":CUS_TYPE_CD7_FROM", OracleDbType.Varchar2, null, ParameterDirection.Input);
                                    parameters[9] = new OracleParameter(":v_home_dept", OracleDbType.Varchar2, v_home_dept, ParameterDirection.Input);
                                    parameters[10] = new OracleParameter(":home_loc_from", OracleDbType.Varchar2, mctrLineItem.HOME_LOC_TO, ParameterDirection.Input);
                                    parameters[11] = new OracleParameter(":home_bugl_from", OracleDbType.Varchar2, mctrLineItem.HOME_BUGL_TO, ParameterDirection.Input);
                                    parameters[12] = new OracleParameter(":v_pool_out", OracleDbType.Varchar2, v_pool_out, ParameterDirection.Input);
                                    parameters[13] = new OracleParameter(":LABOR_RATE_CD7_FROM", OracleDbType.Varchar2, null, ParameterDirection.Input);
                                    parameters[14] = new OracleParameter(":CLASS_CD_FROM", OracleDbType.Varchar2, null, ParameterDirection.Input);
                                    parameters[15] = new OracleParameter(":v_work_dept", OracleDbType.Varchar2, v_work_dept, ParameterDirection.Input);
                                    parameters[16] = new OracleParameter(":work_loc_from", OracleDbType.Varchar2, mctrLineItem.WORK_LOC_TO, ParameterDirection.Input);
                                    parameters[17] = new OracleParameter(":work_bugl_from", OracleDbType.Varchar2, mctrLineItem.WORK_BUGL_TO, ParameterDirection.Input);
                                    parameters[18] = new OracleParameter(":v_pool_out", OracleDbType.Varchar2, v_pool_out, ParameterDirection.Input);
                                    parameters[19] = new OracleParameter(":v_rsc_out", OracleDbType.Varchar2, v_rsc_out, ParameterDirection.Input);
                                    parameters[20] = new OracleParameter(":v_proj_trans_type", OracleDbType.Varchar2, v_proj_trans_type, ParameterDirection.Input);
                                    parameters[21] = new OracleParameter(":v_proj_trans_code", OracleDbType.Varchar2, v_proj_trans_code, ParameterDirection.Input);
                                    parameters[22] = new OracleParameter(":STAT_CODE_FROM", OracleDbType.Varchar2, null, ParameterDirection.Input);
                                    parameters[23] = new OracleParameter(":UOM_FROM", OracleDbType.Varchar2, null, ParameterDirection.Input);
                                    parameters[24] = new OracleParameter(":fiscal_year", OracleDbType.Int16, Convert.ToInt32(Convert.ToInt32(mctrcreateform.fyear)), ParameterDirection.Input);
                                    parameters[25] = new OracleParameter(":quantity_from", OracleDbType.Decimal, 0, ParameterDirection.Input);
                                    parameters[26] = new OracleParameter(":v_amount", OracleDbType.Decimal, v_amount, ParameterDirection.Input);
                                    parameters[27] = new OracleParameter(":v_oh_wpd_from", OracleDbType.Varchar2, v_oh_wpd_to, ParameterDirection.Input);
                                    parameters[28] = new OracleParameter(":v_oh_bulk_from", OracleDbType.Varchar2, v_oh_bulk_to, ParameterDirection.Input);
                                    parameters[29] = new OracleParameter(":affiliate_from", OracleDbType.Varchar2, mctrLineItem.AFFILIATE_FROM, ParameterDirection.Input);
                                    var InsertStatus = entities.Database.ExecuteSqlCommand("BEGIN " + sql.ToString() + " END;", parameters);

                                    v_line_oh = v_line_oh + 1;

                                }
                            }
                        }
                        //gets offsets(for both man rated and fringe applied business units)

                        var v_line_offset = 1;
                        sql = new StringBuilder("select offset_activity, offset_project, offset_account from mctr_bu_profile where business_unit = :0");
                        parameters = new OracleParameter[1];
                        parameters[0] = new OracleParameter(":orig_bu", OracleDbType.Varchar2, mctrcreateform.OrigBu, ParameterDirection.Input);
                        var result = entities.Database.SqlQuery<BuProfile>(sql.ToString(), parameters).Single();
                        var v_off_activity = result.Offset_Activity;
                        var v_off_project = result.Offset_Project;
                        var v_off_account = result.Offset_Account;

                        if (v_off_activity != null)
                        {
                            List<MctrLINE_ITEM_V> c_offset_liList = c_offset_li(mctrcreateform);
                            if (c_offset_liList != null && c_offset_liList.Any())
                            {
                                foreach (var item_offset_liList in c_offset_liList)
                                {
                                    var v_home_bugl = item_offset_liList.HOME_BUGL;
                                    v_home_dept = item_offset_liList.HOME_DEPT;
                                    var v_home_loc = item_offset_liList.HOME_LOC;
                                    var v_home_pool = item_offset_liList.HOME_POOL;
                                    var v_work_bugl = item_offset_liList.WORK_BUGL;
                                    v_work_dept = item_offset_liList.WORK_DEPT;
                                    var v_work_loc = item_offset_liList.WORK_LOC;
                                    var v_work_pool = item_offset_liList.WORK_POOL;
                                    v_proj_trans_type = item_offset_liList.PROJ_TRANS_TYPE;
                                    v_proj_trans_code = item_offset_liList.PROJ_TRANS_CODE;
                                    var v_rsc = item_offset_liList.RSC;
                                    var v_oh_base_yr = item_offset_liList.OH_BASE_YEAR;
                                    var v_affiliate = item_offset_liList.AFFILIATE;
                                    var v_off_amount = item_offset_liList.SUM_LI_AMOUNT;

                                    // SQL: insert into mctr_offset ( mctr_no , line_no , work_bugl_from , activity_id_from , project_id_from , account_from , home_dept_from , home_loc_from , home_bugl_from , home_pool_from , labor_rate_cd7_from , class_cd_from , work_dept_from , work_loc_from , work_pool_from , rsc_from , proj_trans_type_from , proj_trans_code_from , stat_code_from , uom_from , oh_base_yr_from , quantity_from , amount_from , affiliate_from ) values ( : mctr_header . mctr_no , v_line_offset , v_work_bugl , v_off_activity , v_off_project , v_off_account , v_home_dept , v_home_loc , v_home_bugl , v_home_pool , null , null , v_work_dept , v_work_loc , v_work_pool , v_rsc , v_proj_trans_type , v_proj_trans_code , null , null , v_oh_base_yr , 0 , v_off_amount * - 1 , v_affiliate )
                                    sql = new StringBuilder(" INSERT INTO MCTR_OFFSET (MCTR_NO,LINE_NO,ACTIVITY_ID_FROM,PROJECT_ID_FROM,ACCOUNT_FROM,HOME_DEPT_FROM,HOME_LOC_FROM,HOME_BUGL_FROM,HOME_POOL_FROM,    LABOR_RATE_CD7_FROM,CLASS_CD_FROM,WORK_DEPT_FROM,WORK_LOC_FROM,WORK_BUGL_FROM,WORK_POOL_FROM,RSC_FROM,PROJ_TRANS_TYPE_FROM,PROJ_TRANS_CODE_FROM,    STAT_CODE_FROM,UOM_FROM,OH_BASE_YR_FROM,QUANTITY_FROM,AMOUNT_FROM,AFFILIATE_FROM) VALUES ( :0,:1,:2,:3,:4,:5,:6,:7,:8,:9,:10,:11,:12,:13,:14,:15,:16,:17,:18,:19,:20,:21,:22,:23);");
                                    parameters = new OracleParameter[24];
                                    parameters[0] = new OracleParameter(":MCTR_NO", OracleDbType.Int32, mctrcreateform.MctrNo, ParameterDirection.Input);
                                    parameters[1] = new OracleParameter(":LINE_NO", OracleDbType.Int16, v_line_offset, ParameterDirection.Input);
                                    parameters[2] = new OracleParameter(":ACTIVITY_ID_FROM", OracleDbType.Varchar2, v_off_activity, ParameterDirection.Input);
                                    parameters[3] = new OracleParameter(":PROJECT_ID_FROM", OracleDbType.Varchar2, v_off_project, ParameterDirection.Input);
                                    parameters[4] = new OracleParameter(":ACCOUNT_FROM", OracleDbType.Varchar2, v_off_account, ParameterDirection.Input);
                                    parameters[5] = new OracleParameter(":HOME_DEPT_FROM", OracleDbType.Varchar2, v_home_dept, ParameterDirection.Input);
                                    parameters[6] = new OracleParameter(":HOME_LOC_FROM", OracleDbType.Varchar2, v_home_loc, ParameterDirection.Input);
                                    parameters[7] = new OracleParameter(":HOME_BUGL_FROM", OracleDbType.Varchar2, v_home_bugl, ParameterDirection.Input);
                                    parameters[8] = new OracleParameter(":HOME_POOL_FROM", OracleDbType.Varchar2, v_home_pool, ParameterDirection.Input);
                                    parameters[9] = new OracleParameter(":LABOR_RATE_CD7_FROM", OracleDbType.Varchar2, null, ParameterDirection.Input);
                                    parameters[10] = new OracleParameter(":CLASS_CD_FROM", OracleDbType.Varchar2, null, ParameterDirection.Input);
                                    parameters[11] = new OracleParameter(":WORK_DEPT_FROM", OracleDbType.Varchar2, v_work_dept, ParameterDirection.Input);
                                    parameters[12] = new OracleParameter(":WORK_LOC_FROM", OracleDbType.Varchar2, v_work_loc, ParameterDirection.Input);
                                    parameters[13] = new OracleParameter(":WORK_BUGL_FROM", OracleDbType.Varchar2, v_work_bugl, ParameterDirection.Input);
                                    parameters[14] = new OracleParameter(":WORK_POOL_FROM", OracleDbType.Varchar2, v_work_pool, ParameterDirection.Input);
                                    parameters[15] = new OracleParameter(":RSC_FROM", OracleDbType.Varchar2, v_rsc, ParameterDirection.Input);
                                    parameters[16] = new OracleParameter(":PROJ_TRANS_TYPE_FROM", OracleDbType.Varchar2, v_proj_trans_type, ParameterDirection.Input);
                                    parameters[17] = new OracleParameter(":PROJ_TRANS_CODE_FROM", OracleDbType.Varchar2, v_proj_trans_code, ParameterDirection.Input);
                                    parameters[18] = new OracleParameter(":STAT_CODE_FROM", OracleDbType.Varchar2, null, ParameterDirection.Input);
                                    parameters[19] = new OracleParameter(":UOM_FROM", OracleDbType.Varchar2, null, ParameterDirection.Input);
                                    parameters[20] = new OracleParameter(":fiscal_year", OracleDbType.Int16, Convert.ToInt32(mctrcreateform.fyear), ParameterDirection.Input);
                                    parameters[21] = new OracleParameter(":quantity_from", OracleDbType.Decimal, 0, ParameterDirection.Input);
                                    parameters[22] = new OracleParameter(":v_amount", OracleDbType.Decimal, (v_off_amount * -1), ParameterDirection.Input);
                                    parameters[23] = new OracleParameter(":affiliate_from", OracleDbType.Varchar2, mctrLineItem.AFFILIATE_FROM, ParameterDirection.Input);
                                    var InsertStatus = entities.Database.ExecuteSqlCommand("BEGIN " + sql.ToString() + " END;", parameters);
                                    v_line_offset = v_line_offset + 1;
                                }
                            }
                            List<MctrOhFormBl> c_offset_ohList = c_offset_oh(mctrcreateform);
                            if (c_offset_ohList != null && c_offset_ohList.Any())
                            {
                                foreach (var item_offset_ohList in c_offset_ohList)
                                {
                                    var v_home_bugl = item_offset_ohList.HOME_BUGL_FROM;
                                    v_home_dept = item_offset_ohList.HOME_DEPT_FROM;
                                    var v_home_loc = item_offset_ohList.HOME_LOC_FROM;
                                    var v_home_pool = item_offset_ohList.HOME_POOL_FROM;
                                    var v_work_bugl = item_offset_ohList.WORK_BUGL_FROM;
                                    v_work_dept = item_offset_ohList.WORK_DEPT_FROM;
                                    var v_work_loc = item_offset_ohList.WORK_LOC_FROM;
                                    var v_work_pool = item_offset_ohList.WORK_POOL_FROM;
                                    v_proj_trans_type = item_offset_ohList.PROJ_TRANS_TYPE_FROM;
                                    v_proj_trans_code = item_offset_ohList.PROJ_TRANS_TYPE_FROM;
                                    var v_rsc = item_offset_ohList.RSC_FROM;
                                    var v_oh_base_yr = item_offset_ohList.OH_BASE_YR_FROM;
                                    var v_affiliate = item_offset_ohList.AFFILIATE_FROM;
                                    var v_off_amount = item_offset_ohList.SUM_AMOUNT_FROM;

                                    // SQL: insert into mctr_offset ( mctr_no , line_no , work_bugl_from , activity_id_from , project_id_from , account_from , home_dept_from , home_loc_from , home_bugl_from , home_pool_from , labor_rate_cd7_from , class_cd_from , work_dept_from , work_loc_from , work_pool_from , rsc_from , proj_trans_type_from , proj_trans_code_from , stat_code_from , uom_from , oh_base_yr_from , quantity_from , amount_from , affiliate_from ) values ( : mctr_header . mctr_no , v_line_offset , v_work_bugl , v_off_activity , v_off_project , v_off_account , v_home_dept , v_home_loc , v_home_bugl , v_home_pool , null , null , v_work_dept , v_work_loc , v_work_pool , v_rsc , v_proj_trans_type , v_proj_trans_code , null , null , v_oh_base_yr , 0 , v_off_amount * - 1 , v_affiliate )
                                    sql = new StringBuilder(" INSERT INTO MCTR_OFFSET (MCTR_NO,LINE_NO,ACTIVITY_ID_FROM,PROJECT_ID_FROM,ACCOUNT_FROM,HOME_DEPT_FROM,HOME_LOC_FROM,HOME_BUGL_FROM,HOME_POOL_FROM,    LABOR_RATE_CD7_FROM,CLASS_CD_FROM,WORK_DEPT_FROM,WORK_LOC_FROM,WORK_BUGL_FROM,WORK_POOL_FROM,RSC_FROM,PROJ_TRANS_TYPE_FROM,PROJ_TRANS_CODE_FROM,    STAT_CODE_FROM,UOM_FROM,OH_BASE_YR_FROM,QUANTITY_FROM,AMOUNT_FROM,AFFILIATE_FROM) VALUES ( :0,:1,:2,:3,:4,:5,:6,:7,:8,:9,:10,:11,:12,:13,:14,:15,:16,:17,:18,:19,:20,:21,:22,:23);");
                                    parameters = new OracleParameter[24];
                                    parameters[0] = new OracleParameter(":MCTR_NO", OracleDbType.Int32, mctrcreateform.MctrNo, ParameterDirection.Input);
                                    parameters[1] = new OracleParameter(":LINE_NO", OracleDbType.Int16, v_line_offset, ParameterDirection.Input);
                                    parameters[2] = new OracleParameter(":ACTIVITY_ID_FROM", OracleDbType.Varchar2, v_off_activity, ParameterDirection.Input);
                                    parameters[3] = new OracleParameter(":PROJECT_ID_FROM", OracleDbType.Varchar2, v_off_project, ParameterDirection.Input);
                                    parameters[4] = new OracleParameter(":ACCOUNT_FROM", OracleDbType.Varchar2, v_off_account, ParameterDirection.Input);
                                    parameters[5] = new OracleParameter(":HOME_DEPT_FROM", OracleDbType.Varchar2, v_home_dept, ParameterDirection.Input);
                                    parameters[6] = new OracleParameter(":HOME_LOC_FROM", OracleDbType.Varchar2, v_home_loc, ParameterDirection.Input);
                                    parameters[7] = new OracleParameter(":HOME_BUGL_FROM", OracleDbType.Varchar2, v_home_bugl, ParameterDirection.Input);
                                    parameters[8] = new OracleParameter(":HOME_POOL_FROM", OracleDbType.Varchar2, v_home_pool, ParameterDirection.Input);
                                    parameters[9] = new OracleParameter(":LABOR_RATE_CD7_FROM", OracleDbType.Varchar2, null, ParameterDirection.Input);
                                    parameters[10] = new OracleParameter(":CLASS_CD_FROM", OracleDbType.Varchar2, null, ParameterDirection.Input);
                                    parameters[11] = new OracleParameter(":WORK_DEPT_FROM", OracleDbType.Varchar2, v_work_dept, ParameterDirection.Input);
                                    parameters[12] = new OracleParameter(":WORK_LOC_FROM", OracleDbType.Varchar2, v_work_loc, ParameterDirection.Input);
                                    parameters[13] = new OracleParameter(":WORK_BUGL_FROM", OracleDbType.Varchar2, v_work_bugl, ParameterDirection.Input);
                                    parameters[14] = new OracleParameter(":WORK_POOL_FROM", OracleDbType.Varchar2, v_work_pool, ParameterDirection.Input);
                                    parameters[15] = new OracleParameter(":RSC_FROM", OracleDbType.Varchar2, v_rsc, ParameterDirection.Input);
                                    parameters[16] = new OracleParameter(":PROJ_TRANS_TYPE_FROM", OracleDbType.Varchar2, v_proj_trans_type, ParameterDirection.Input);
                                    parameters[17] = new OracleParameter(":PROJ_TRANS_CODE_FROM", OracleDbType.Varchar2, v_proj_trans_code, ParameterDirection.Input);
                                    parameters[18] = new OracleParameter(":STAT_CODE_FROM", OracleDbType.Varchar2, null, ParameterDirection.Input);
                                    parameters[19] = new OracleParameter(":UOM_FROM", OracleDbType.Varchar2, null, ParameterDirection.Input);
                                    parameters[20] = new OracleParameter(":fiscal_year", OracleDbType.Int16, Convert.ToInt32(mctrcreateform.fyear), ParameterDirection.Input);
                                    parameters[21] = new OracleParameter(":quantity_from", OracleDbType.Decimal, 0, ParameterDirection.Input);
                                    parameters[22] = new OracleParameter(":v_amount", OracleDbType.Decimal, (v_off_amount * -1), ParameterDirection.Input);
                                    parameters[23] = new OracleParameter(":affiliate_from", OracleDbType.Varchar2, mctrLineItem.AFFILIATE_FROM, ParameterDirection.Input);
                                    try {
                                        var InsertStatus = entities.Database.ExecuteSqlCommand("BEGIN " + sql.ToString() + " END;", parameters);
                                    }
                                    catch(Exception ex)
                                    {

                                    }
                                    v_line_offset = v_line_offset + 1;
                                }
                            }
                        }

                    }
                }

            }
            //get header summary totals.

            try
            {
                // SQL: select sum ( amount_from ) into : oh_amt_from from mctr_ovrhd where mctr_no = : mctr_line_item . mctr_no and line_no = : line_no and from_to = 'F'
                sql = new StringBuilder("select sum ( amount_from ) from mctr_ovrhd where mctr_no = :0 and line_no = :1 and from_to = 'F' ");
                parameters = new OracleParameter[2];
                parameters[0] = new OracleParameter(":MCTR_NO", OracleDbType.Varchar2, mctrcreateform.MctrNo, ParameterDirection.Input);
                parameters[1] = new OracleParameter(":LINE_NO", OracleDbType.Varchar2, mctrLineItem.LINE_NO, ParameterDirection.Input);
                mctrcreateform.OHAmtFrom = entities.Database.SqlQuery<Nullable<decimal>>(sql.ToString(), parameters).SingleOrDefault();

            }
            catch (Exception e)
            {
                mctrcreateform.OHAmtFrom = 0;
                logger.Error(e.Message);
            }

            try
            {
                // SQL: select sum ( amount_from ) into : oh_amt_to from mctr_ovrhd where mctr_no = : mctr_line_item . mctr_no and line_no = : line_no and from_to = 'T'
                sql = new StringBuilder("select sum ( amount_from )  from mctr_ovrhd where mctr_no = :0 and line_no = :1 and from_to = 'T' ");
                parameters = new OracleParameter[2];
                parameters[0] = new OracleParameter(":MCTR_NO", OracleDbType.Int32, mctrcreateform.MctrNo, ParameterDirection.Input);
                parameters[1] = new OracleParameter(":LINE_NO", OracleDbType.Int32, mctrLineItem.LINE_NO, ParameterDirection.Input);
                mctrcreateform.OHAmtTo = entities.Database.SqlQuery<Nullable<decimal>>(sql.ToString(), parameters).SingleOrDefault();
            }
            catch (Exception e)
            {
                logger.Error(e.Message);
                mctrcreateform.OHAmtTo = 0;
            }

            try
            {
                // SQL: select count ( * ) , sum ( quantity_from ) , sum ( amount_from + adjustment_from ) into : lines_from , : total_qty_from , : total_amt_from from mctr_line_item where mctr_no = : mctr_header . mctr_no and mtl_jrnl = 'N'
                sql = new StringBuilder("select count ( * ) as Linesfrom , sum ( quantity_from ) as TotalQtyFrom,  sum ( amount_from + adjustment_from ) as total_amt_from  from  mctr_line_item where mctr_no = :0 and mtl_jrnl = 'N' ");
                parameters = new OracleParameter[1];
                parameters[0] = new OracleParameter(":MCTR_NO", OracleDbType.Int32, mctrcreateform.MctrNo, ParameterDirection.Input);

                var response = entities.Database.SqlQuery<MctrCreateForm>(sql.ToString(), parameters).SingleOrDefault();
                sql = new StringBuilder("select sum ( amount_from + adjustment_from ) as total_amt_from  from  mctr_line_item where mctr_no = :0 and mtl_jrnl = 'N' ");
                try
                {
                    mctrcreateform.TotalAmtFrom = entities.Database.SqlQuery<Decimal>(sql.ToString(), parameters).SingleOrDefault();
                }
                catch
                {
                    mctrcreateform.TotalAmtFrom = 0;
                }
                mctrcreateform.Linesfrom = response.Linesfrom;
                mctrcreateform.TotalQtyFrom = response.TotalQtyFrom;

            }
            catch (Exception e)
            {
                mctrcreateform.Linesfrom = 0;
                mctrcreateform.TotalQtyFrom = 0;
                mctrcreateform.TotalAmtFrom = 0;
                logger.Error(e.Message);
            }
            try
            {
                // SQL: select count ( * ) , sum ( quantity_to ) , sum ( amount_to + adjustment_to ) into : lines_to , : total_qty_to , : TotalAmtTo from mctr_line_item where mctr_no = : mctr_header . mctr_no and mtl_jrnl = 'N'
                sql = new StringBuilder("select count ( * ) as LinesTo , sum ( quantity_to ) as TotalQtyTo , sum ( amount_to + adjustment_to )  as TotalAmtTo from  mctr_line_item where mctr_no = :0  and mtl_jrnl = 'N' ");
                parameters = new OracleParameter[1];
                parameters[0] = new OracleParameter(":MCTR_NO", OracleDbType.Int32, mctrcreateform.MctrNo, ParameterDirection.Input);

                var response = entities.Database.SqlQuery<MctrCreateForm>(sql.ToString(), parameters).SingleOrDefault();
                mctrcreateform.LinesTo = response.LinesTo;
                mctrcreateform.TotalQtyTo = response.TotalQtyTo;
                mctrcreateform.TotalAmtTo = response.TotalAmtTo;
            }
            catch (Exception e)
            {
                logger.Error(e.Message);
                mctrcreateform.LinesTo = 0;
                mctrcreateform.TotalQtyTo = 0;
                mctrcreateform.TotalAmtTo = 0;
            }

            try
            {
                // SQL: select sum ( amount_from + adjustment_from + amount_to + adjustment_to ) into : total_amt_lines from mctr_line_item where mctr_no = : mctr_header . mctr_no and mtl_jrnl = 'N'
                sql = new StringBuilder("select sum ( amount_from + adjustment_from + amount_to + adjustment_to )   from  mctr_line_item where mctr_no = :0 and mtl_jrnl = 'N' ");
                parameters = new OracleParameter[1];
                parameters[0] = new OracleParameter(":MCTR_NO", OracleDbType.Int32, mctrcreateform.MctrNo, ParameterDirection.Input);

                mctrcreateform.totalAmtLines = entities.Database.SqlQuery<int>(sql.ToString(), parameters).SingleOrDefault();
            }
            catch (Exception e)
            {
                mctrcreateform.totalAmtLines = 0;
                logger.Error(e.Message);
            }

            try
            {
                // SQL: select count ( * ) , sum ( amount_from ) into : LinesOhFrom , : total_oh_from from mctr_ovrhd where mctr_no = :0 and from_to = 'F'
                sql = new StringBuilder("  select nvl(count ( * ),0) as LinesOhFrom , nvl(sum ( amount_from ),0) as  totalOhFrom from mctr_ovrhd where mctr_no = :0 and from_to = 'F' ");
                parameters = new OracleParameter[1];
                parameters[0] = new OracleParameter(":MCTR_NO", OracleDbType.Int32, mctrcreateform.MctrNo, ParameterDirection.Input);
                var response = entities.Database.SqlQuery<MctrCreateForm>(sql.ToString(), parameters).SingleOrDefault();
                mctrcreateform.LinesOhFrom = response.LinesOhFrom;
                mctrcreateform.totalOhFrom = response.totalOhFrom;
            }
            catch (Exception e)
            {
                mctrcreateform.LinesOhFrom = 0;
                mctrcreateform.totalOhFrom = 0;
                logger.Error(e.Message);
            }
            try
            {
                // SQL: select count ( * ) , sum ( amount_from ) into : lines_oh_to , : total_oh_to from mctr_ovrhd where mctr_no = :0 and from_to = 't'
                sql = new StringBuilder("  select nvl(count ( * ),0) as LinesOhTo , nvl(sum ( amount_from ),0) as  totalOhTo from mctr_ovrhd where mctr_no = :0 and from_to = 'T' ");
                parameters = new OracleParameter[1];
                parameters[0] = new OracleParameter(":MCTR_NO", OracleDbType.Int32, mctrcreateform.MctrNo, ParameterDirection.Input);
                var response = entities.Database.SqlQuery<MctrCreateForm>(sql.ToString(), parameters).SingleOrDefault();
                mctrcreateform.LinesOhTo = response.LinesOhTo;
                mctrcreateform.totalOhTo = response.totalOhTo;
            }
            catch (Exception e)
            {
                logger.Error(e.Message);
                mctrcreateform.LinesOhTo = 0;
                mctrcreateform.totalOhTo = 0;
            }

            try
            {
                // SQL: select sum ( amount_from ) into : total_oh from mctr_ovrhd where mctr_no = : mctr_header . mctr_no
                sql = new StringBuilder("select nvl(sum ( amount_from ),0) from mctr_ovrhd where mctr_no = :0 ");
                parameters = new OracleParameter[1];
                parameters[0] = new OracleParameter(":MCTR_NO", OracleDbType.Int32, mctrcreateform.MctrNo, ParameterDirection.Input);
                mctrcreateform.totalOh = entities.Database.SqlQuery<int>(sql.ToString(), parameters).SingleOrDefault();
            }
            catch (Exception e)
            {
                logger.Error(e.Message);
                mctrcreateform.totalOh = 0;
            }


            try
            {
                // SQL: select sum ( amount_from ) into : total_offset from mctr_offset where mctr_no = : mctr_header . mctr_no
                sql = new StringBuilder("select sum ( amount_from ) from mctr_offset where mctr_no = :0 ");
                parameters = new OracleParameter[1];
                parameters[0] = new OracleParameter(":MCTR_NO", OracleDbType.Int32, mctrcreateform.MctrNo, ParameterDirection.Input);
                mctrcreateform.totalOffset = entities.Database.SqlQuery<int>(sql.ToString(), parameters).SingleOrDefault();

                sql = new StringBuilder("select count(*) from  mctr_offset where mctr_no = :0");
                parameters = new OracleParameter[1];
                parameters[0] = new OracleParameter(":MCTR_NO", OracleDbType.Int32, mctrcreateform.MctrNo, ParameterDirection.Input);
                mctrCreateForm.First().OffsetLines = entities.Database.SqlQuery<int>(sql.ToString(), parameters).SingleOrDefault();
            }
            catch (Exception e)
            {
                logger.Error(e.Message);
                mctrcreateform.totalOffset = 0;
            }
            

            return mctrCreateForm;
        }

        public IEnumerable<MctrLineItem> mctrLineItemPreDelete(IEnumerable<MctrLineItem> mctrCreateForm)
        {
            MctrLineItem mctrcreateform = mctrCreateForm.First();
            StringBuilder sql = new StringBuilder();

            OracleParameter[] parameters = new OracleParameter[2];
            // SQL: delete from mctr_ovrhd where mctr_no = : mctr_line_item . mctr_no and line_no = : mctr_line_item . line_no
            sql = new StringBuilder(" delete  from  mctr_ovrhd  where mctr_no=:0 and line_no=:1 ;");
            parameters[0] = new OracleParameter(":mctr_no", OracleDbType.Int32, mctrcreateform.MCTR_NO, ParameterDirection.Input);
            parameters[1] = new OracleParameter(":line_no", OracleDbType.Int32, mctrcreateform.LINE_NO, ParameterDirection.Input);
            var DeletedStatus = entities.Database.ExecuteSqlCommand("BEGIN " + sql.ToString() + " END;", parameters);


            // SQL: delete from mctr_ttd_backup where mctr_no = : mctr_line_item . mctr_no and line_no = : mctr_line_item . line_no
            sql = new StringBuilder(" delete  from  mctr_ttd_backup  where mctr_no=:0 and line_no=:1 ;");
            parameters[0] = new OracleParameter(":mctr_no", OracleDbType.Int32, mctrcreateform.MCTR_NO, ParameterDirection.Input);
            parameters[1] = new OracleParameter(":line_no", OracleDbType.Int32, mctrcreateform.LINE_NO, ParameterDirection.Input);
            DeletedStatus = entities.Database.ExecuteSqlCommand("BEGIN " + sql.ToString() + " END;", parameters);

            // SQL: delete from mctr_per_backup where mctr_no = : mctr_line_item . mctr_no and line_no = : mctr_line_item . line_no
            sql = new StringBuilder(" delete  from  mctr_per_backup  where mctr_no=:0 and line_no=:1 ;");
            parameters[0] = new OracleParameter(":mctr_no", OracleDbType.Int32, mctrcreateform.MCTR_NO, ParameterDirection.Input);
            parameters[1] = new OracleParameter(":line_no", OracleDbType.Int32, mctrcreateform.LINE_NO, ParameterDirection.Input);
            DeletedStatus = entities.Database.ExecuteSqlCommand("BEGIN " + sql.ToString() + " END;", parameters);

            return mctrCreateForm;
        }

        public IEnumerable<MctrCreateForm> mctrLineItemPostDelete(IEnumerable<MctrCreateForm> mctrCreateForm)
        {
            MctrCreateForm mctrcreateform = mctrCreateForm.First();
            StringBuilder sql = new StringBuilder();

            OracleParameter[] parameters = new OracleParameter[1];
            int v_line_offset = 0;
            string v_home_pool = "";
            string v_work_pool = "";
            string v_off_activity = "";
            string v_off_project = "";
            string v_off_account = "";
            string v_home_dept = "";
            string v_home_loc = "";
            string v_work_dept = "";
            string v_work_loc = "";
            string v_proj_trans_type = "";
            string v_proj_trans_code = "";
            string v_affiliate = "";

            // SQL: delete from mctr_offset where mctr_no = : mctr_header . mctr_no
            sql = new StringBuilder(" delete  from  mctr_offset  where mctr_no=:0 ;");
            parameters[0] = new OracleParameter(":mctr_no", OracleDbType.Int32, mctrcreateform.MctrNo, ParameterDirection.Input);
            var DeletedStatus = entities.Database.ExecuteSqlCommand("BEGIN " + sql.ToString() + " END;", parameters);
            v_line_offset = 1;
            try
            {
                OracleParameter[] parameter = new OracleParameter[1];
                // SQL: select offset_activity , offset_project , offset_account into v_off_activity , v_off_project , v_off_account from mctr_bu_profile where business_unit = : orig_bu
                sql = new StringBuilder("select offset_activity , offset_project , offset_account  from  mctr_bu_profile where business_unit=:0");
                parameter[0] = new OracleParameter(":business_unit", OracleDbType.Varchar2, mctrcreateform.OrigBu, ParameterDirection.Input);
                var resBuProfile = entities.Database.SqlQuery<BuProfile>(sql.ToString(), parameter).Single();

                v_off_account = resBuProfile.Offset_Account;
                v_off_activity = resBuProfile.Offset_Activity;
                v_off_project = resBuProfile.Offset_Project;
            }
            catch
            {
                v_off_activity = "";
            }
            if (v_off_activity != "")
            {
                List<MctrLINE_ITEM_V> c_offset_liList = c_offset_li(mctrcreateform);
                if (c_offset_liList != null && c_offset_liList.Any())
                {
                    foreach (var item_offset_liList in c_offset_liList)
                    {
                        var v_home_bugl = item_offset_liList.HOME_BUGL;
                        v_home_dept = item_offset_liList.HOME_DEPT;
                        v_home_loc = item_offset_liList.HOME_LOC;
                        v_home_pool = item_offset_liList.HOME_POOL;
                        var v_work_bugl = item_offset_liList.WORK_BUGL;
                        v_work_dept = item_offset_liList.WORK_DEPT;
                        v_work_loc = item_offset_liList.WORK_LOC;
                        v_work_pool = item_offset_liList.WORK_POOL;
                        v_proj_trans_type = item_offset_liList.PROJ_TRANS_TYPE;
                        v_proj_trans_code = item_offset_liList.PROJ_TRANS_CODE;
                        var v_rsc = item_offset_liList.RSC;
                        var v_oh_base_yr = item_offset_liList.OH_BASE_YEAR;
                        v_affiliate = item_offset_liList.AFFILIATE;
                        var v_off_amount = item_offset_liList.SUM_LI_AMOUNT;

                        // SQL: insert into mctr_offset ( mctr_no , line_no , work_bugl_from , activity_id_from , project_id_from , account_from , home_dept_from , home_loc_from , home_bugl_from , home_pool_from , labor_rate_cd7_from , class_cd_from , work_dept_from , work_loc_from , work_pool_from , rsc_from , proj_trans_type_from , proj_trans_code_from , stat_code_from , uom_from , oh_base_yr_from , quantity_from , amount_from , affiliate_from ) values ( : mctr_header . mctr_no , v_line_offset , v_work_bugl , v_off_activity , v_off_project , v_off_account , v_home_dept , v_home_loc , v_home_bugl , v_home_pool , null , null , v_work_dept , v_work_loc , v_work_pool , v_rsc , v_proj_trans_type , v_proj_trans_code , null , null , v_oh_base_yr , 0 , v_off_amount * - 1 , v_affiliate )
                        sql = new StringBuilder(" INSERT INTO MCTR_OFFSET (MCTR_NO,LINE_NO,ACTIVITY_ID_FROM,PROJECT_ID_FROM,ACCOUNT_FROM,HOME_DEPT_FROM,HOME_LOC_FROM,HOME_BUGL_FROM,HOME_POOL_FROM,    LABOR_RATE_CD7_FROM,CLASS_CD_FROM,WORK_DEPT_FROM,WORK_LOC_FROM,WORK_BUGL_FROM,WORK_POOL_FROM,RSC_FROM,PROJ_TRANS_TYPE_FROM,PROJ_TRANS_CODE_FROM,    STAT_CODE_FROM,UOM_FROM,OH_BASE_YR_FROM,QUANTITY_FROM,AMOUNT_FROM,AFFILIATE_FROM) VALUES ( :0,:1,:2,:3,:4,:5,:6,:7,:8,:9,:10,:11,:12,:13,:14,:15,:16,:17,:18,:19,:20,:21,:22,:23);");
                        parameters = new OracleParameter[24];
                        parameters[0] = new OracleParameter(":MCTR_NO", OracleDbType.Int32, mctrcreateform.MctrNo, ParameterDirection.Input);
                        parameters[1] = new OracleParameter(":LINE_NO", OracleDbType.Int16, v_line_offset, ParameterDirection.Input);
                        parameters[2] = new OracleParameter(":ACTIVITY_ID_FROM", OracleDbType.Varchar2, v_off_activity, ParameterDirection.Input);
                        parameters[3] = new OracleParameter(":PROJECT_ID_FROM", OracleDbType.Varchar2, v_off_project, ParameterDirection.Input);
                        parameters[4] = new OracleParameter(":ACCOUNT_FROM", OracleDbType.Varchar2, v_off_account, ParameterDirection.Input);
                        parameters[5] = new OracleParameter(":HOME_DEPT_FROM", OracleDbType.Varchar2, v_home_dept, ParameterDirection.Input);
                        parameters[6] = new OracleParameter(":HOME_LOC_FROM", OracleDbType.Varchar2, v_home_loc, ParameterDirection.Input);
                        parameters[7] = new OracleParameter(":HOME_BUGL_FROM", OracleDbType.Varchar2, v_home_bugl, ParameterDirection.Input);
                        parameters[8] = new OracleParameter(":HOME_POOL_FROM", OracleDbType.Varchar2, v_home_pool, ParameterDirection.Input);
                        parameters[9] = new OracleParameter(":LABOR_RATE_CD7_FROM", OracleDbType.Varchar2, null, ParameterDirection.Input);
                        parameters[10] = new OracleParameter(":CLASS_CD_FROM", OracleDbType.Varchar2, null, ParameterDirection.Input);
                        parameters[11] = new OracleParameter(":WORK_DEPT_FROM", OracleDbType.Varchar2, v_work_dept, ParameterDirection.Input);
                        parameters[12] = new OracleParameter(":WORK_LOC_FROM", OracleDbType.Varchar2, v_work_loc, ParameterDirection.Input);
                        parameters[13] = new OracleParameter(":WORK_BUGL_FROM", OracleDbType.Varchar2, v_work_bugl, ParameterDirection.Input);
                        parameters[14] = new OracleParameter(":WORK_POOL_FROM", OracleDbType.Varchar2, v_work_pool, ParameterDirection.Input);
                        parameters[15] = new OracleParameter(":RSC_FROM", OracleDbType.Varchar2, v_rsc, ParameterDirection.Input);
                        parameters[16] = new OracleParameter(":PROJ_TRANS_TYPE_FROM", OracleDbType.Varchar2, v_proj_trans_type, ParameterDirection.Input);
                        parameters[17] = new OracleParameter(":PROJ_TRANS_CODE_FROM", OracleDbType.Varchar2, v_proj_trans_code, ParameterDirection.Input);
                        parameters[18] = new OracleParameter(":STAT_CODE_FROM", OracleDbType.Varchar2, null, ParameterDirection.Input);
                        parameters[19] = new OracleParameter(":UOM_FROM", OracleDbType.Varchar2, null, ParameterDirection.Input);
                        parameters[20] = new OracleParameter(":fiscal_year", OracleDbType.Int16, Convert.ToInt32(mctrcreateform.fyear), ParameterDirection.Input);
                        parameters[21] = new OracleParameter(":quantity_from", OracleDbType.Decimal, 0, ParameterDirection.Input);
                        parameters[22] = new OracleParameter(":v_amount", OracleDbType.Decimal, (v_off_amount * -1), ParameterDirection.Input);
                        parameters[23] = new OracleParameter(":affiliate_from", OracleDbType.Varchar2, v_affiliate, ParameterDirection.Input);
                        var InsertStatus = entities.Database.ExecuteSqlCommand("BEGIN " + sql.ToString() + " END;", parameters);
                        v_line_offset = v_line_offset + 1;
                    }
                }
                List<MctrOhFormBl> c_offset_ohList = c_offset_oh(mctrcreateform);
                if (c_offset_liList != null && c_offset_liList.Any())
                {
                    foreach (var item_offset_ohList in c_offset_ohList)
                    {
                        var v_home_bugl = item_offset_ohList.HOME_BUGL_FROM;
                        v_home_dept = item_offset_ohList.HOME_DEPT_FROM;
                        v_home_loc = item_offset_ohList.HOME_LOC_FROM;
                        v_home_pool = item_offset_ohList.HOME_POOL_FROM;
                        var v_work_bugl = item_offset_ohList.WORK_BUGL_FROM;
                        v_work_dept = item_offset_ohList.WORK_DEPT_FROM;
                        v_work_loc = item_offset_ohList.WORK_LOC_FROM;
                        v_work_pool = item_offset_ohList.WORK_POOL_FROM;
                        v_proj_trans_type = item_offset_ohList.PROJ_TRANS_TYPE_FROM;
                        v_proj_trans_code = item_offset_ohList.PROJ_TRANS_TYPE_FROM;
                        var v_rsc = item_offset_ohList.RSC_FROM;
                        var v_oh_base_yr = item_offset_ohList.OH_BASE_YR_FROM;
                        v_affiliate = item_offset_ohList.AFFILIATE_FROM;
                        var v_off_amount = item_offset_ohList.SUM_AMOUNT_FROM;

                        // SQL: insert into mctr_offset ( mctr_no , line_no , work_bugl_from , activity_id_from , project_id_from , account_from , home_dept_from , home_loc_from , home_bugl_from , home_pool_from , labor_rate_cd7_from , class_cd_from , work_dept_from , work_loc_from , work_pool_from , rsc_from , proj_trans_type_from , proj_trans_code_from , stat_code_from , uom_from , oh_base_yr_from , quantity_from , amount_from , affiliate_from ) values ( : mctr_header . mctr_no , v_line_offset , v_work_bugl , v_off_activity , v_off_project , v_off_account , v_home_dept , v_home_loc , v_home_bugl , v_home_pool , null , null , v_work_dept , v_work_loc , v_work_pool , v_rsc , v_proj_trans_type , v_proj_trans_code , null , null , v_oh_base_yr , 0 , v_off_amount * - 1 , v_affiliate )
                        sql = new StringBuilder(" INSERT INTO MCTR_OFFSET (MCTR_NO,LINE_NO,ACTIVITY_ID_FROM,PROJECT_ID_FROM,ACCOUNT_FROM,HOME_DEPT_FROM,HOME_LOC_FROM,HOME_BUGL_FROM,HOME_POOL_FROM,    LABOR_RATE_CD7_FROM,CLASS_CD_FROM,WORK_DEPT_FROM,WORK_LOC_FROM,WORK_BUGL_FROM,WORK_POOL_FROM,RSC_FROM,PROJ_TRANS_TYPE_FROM,PROJ_TRANS_CODE_FROM,    STAT_CODE_FROM,UOM_FROM,OH_BASE_YR_FROM,QUANTITY_FROM,AMOUNT_FROM,AFFILIATE_FROM) VALUES ( :0,:1,:2,:3,:4,:5,:6,:7,:8,:9,:10,:11,:12,:13,:14,:15,:16,:17,:18,:19,:20,:21,:22,:23);");
                        parameters = new OracleParameter[24];
                        parameters[0] = new OracleParameter(":MCTR_NO", OracleDbType.Int32, mctrcreateform.MctrNo, ParameterDirection.Input);
                        parameters[1] = new OracleParameter(":LINE_NO", OracleDbType.Int16, v_line_offset, ParameterDirection.Input);
                        parameters[2] = new OracleParameter(":ACTIVITY_ID_FROM", OracleDbType.Varchar2, v_off_activity, ParameterDirection.Input);
                        parameters[3] = new OracleParameter(":PROJECT_ID_FROM", OracleDbType.Varchar2, v_off_project, ParameterDirection.Input);
                        parameters[4] = new OracleParameter(":ACCOUNT_FROM", OracleDbType.Varchar2, v_off_account, ParameterDirection.Input);
                        parameters[5] = new OracleParameter(":HOME_DEPT_FROM", OracleDbType.Varchar2, v_home_dept, ParameterDirection.Input);
                        parameters[6] = new OracleParameter(":HOME_LOC_FROM", OracleDbType.Varchar2, v_home_loc, ParameterDirection.Input);
                        parameters[7] = new OracleParameter(":HOME_BUGL_FROM", OracleDbType.Varchar2, v_home_bugl, ParameterDirection.Input);
                        parameters[8] = new OracleParameter(":HOME_POOL_FROM", OracleDbType.Varchar2, v_home_pool, ParameterDirection.Input);
                        parameters[9] = new OracleParameter(":LABOR_RATE_CD7_FROM", OracleDbType.Varchar2, null, ParameterDirection.Input);
                        parameters[10] = new OracleParameter(":CLASS_CD_FROM", OracleDbType.Varchar2, null, ParameterDirection.Input);
                        parameters[11] = new OracleParameter(":WORK_DEPT_FROM", OracleDbType.Varchar2, v_work_dept, ParameterDirection.Input);
                        parameters[12] = new OracleParameter(":WORK_LOC_FROM", OracleDbType.Varchar2, v_work_loc, ParameterDirection.Input);
                        parameters[13] = new OracleParameter(":WORK_BUGL_FROM", OracleDbType.Varchar2, v_work_bugl, ParameterDirection.Input);
                        parameters[14] = new OracleParameter(":WORK_POOL_FROM", OracleDbType.Varchar2, v_work_pool, ParameterDirection.Input);
                        parameters[15] = new OracleParameter(":RSC_FROM", OracleDbType.Varchar2, v_rsc, ParameterDirection.Input);
                        parameters[16] = new OracleParameter(":PROJ_TRANS_TYPE_FROM", OracleDbType.Varchar2, v_proj_trans_type, ParameterDirection.Input);
                        parameters[17] = new OracleParameter(":PROJ_TRANS_CODE_FROM", OracleDbType.Varchar2, v_proj_trans_code, ParameterDirection.Input);
                        parameters[18] = new OracleParameter(":STAT_CODE_FROM", OracleDbType.Varchar2, null, ParameterDirection.Input);
                        parameters[19] = new OracleParameter(":UOM_FROM", OracleDbType.Varchar2, null, ParameterDirection.Input);
                        parameters[20] = new OracleParameter(":fiscal_year", OracleDbType.Int16, Convert.ToInt32(Convert.ToInt32(mctrcreateform.fyear)), ParameterDirection.Input);
                        parameters[21] = new OracleParameter(":quantity_from", OracleDbType.Decimal, 0, ParameterDirection.Input);
                        parameters[22] = new OracleParameter(":v_amount", OracleDbType.Decimal, (v_off_amount * -1), ParameterDirection.Input);
                        parameters[23] = new OracleParameter(":affiliate_from", OracleDbType.Varchar2, v_affiliate, ParameterDirection.Input);
                        var InsertStatus = entities.Database.ExecuteSqlCommand("BEGIN " + sql.ToString() + " END;", parameters);
                        v_line_offset = v_line_offset + 1;

                    }
                }
            }
            // SQL: select count (* ), sum(quantity_from), sum(amount_from + adjustment_from) into: lines_from, : total_qty_from , : total_amt_from from mctr_line_item where mctr_no = : mctr_header.mctr_no and mtl_jrnl = 'N'

            sql = new StringBuilder("select count ( * ) as Linesfrom , nvl(sum ( quantity_from ),0) as TotalQtyFrom ,nvl( sum ( amount_from + adjustment_from ),0)  as TotalAmtFrom  from  mctr_line_item where mctr_no = :0 and mtl_jrnl =  'N'");
            parameters = new OracleParameter[1];
            parameters[0] = new OracleParameter(":mctr_no", OracleDbType.Int32, mctrcreateform.MctrNo, ParameterDirection.Input);
            var response = entities.Database.SqlQuery<MctrCreateForm>(sql.ToString(), parameters).SingleOrDefault();
            mctrcreateform.Linesfrom = response.Linesfrom;
            mctrcreateform.TotalQtyFrom = response.TotalQtyFrom;
            mctrcreateform.TotalAmtFrom = response.TotalAmtFrom;

            // SQL: select count ( * ) , sum ( quantity_to ) , sum ( amount_to + adjustment_to ) into : lines_to , : total_qty_to , : total_amt_to from mctr_line_item where mctr_no = : mctr_header . mctr_no and mtl_jrnl = 'N'
            sql = new StringBuilder("select count ( * ) as LinesTo , nvl(sum ( quantity_to ),0) as TotalQtyTo , nvl(sum ( amount_to + adjustment_to ),0) as TotalAmtTo from  mctr_line_item where mctr_no = :0 and mtl_jrnl = 'N' ");
            parameters = new OracleParameter[1];
            parameters[0] = new OracleParameter(":mctr_no", OracleDbType.Int32, mctrcreateform.MctrNo, ParameterDirection.Input);
            response = entities.Database.SqlQuery<MctrCreateForm>(sql.ToString(), parameters).SingleOrDefault();
            mctrcreateform.LinesTo = response.LinesTo;
            mctrcreateform.TotalQtyTo = response.TotalQtyTo;
            mctrcreateform.TotalAmtTo = response.TotalAmtTo;

            // SQL: select sum ( amount_from + adjustment_from + amount_to + adjustment_to ) into : total_amt_lines from mctr_line_item where mctr_no = : mctr_header . mctr_no and mtl_jrnl = 'N'
            sql = new StringBuilder("select nvl(sum ( amount_from + adjustment_from + amount_to + adjustment_to ),0) as totalAmtLines from  mctr_line_item where mctr_no = :0 and mtl_jrnl = 'N' ");

            parameters = new OracleParameter[1];
            parameters[0] = new OracleParameter(":mctr_no", OracleDbType.Int32, mctrcreateform.MctrNo, ParameterDirection.Input);
            mctrcreateform.totalAmtLines = entities.Database.SqlQuery<int>(sql.ToString(), parameters).SingleOrDefault();

            // SQL: select count ( * ) , sum ( amount_from ) into : lines_oh_from , : total_oh_from from mctr_ovrhd where mctr_no = : mctr_header . mctr_no and from_to = 'F'
            sql = new StringBuilder("select count ( * ) as LinesOhFrom , nvl(sum ( amount_from ),0)  as total_oh_from from mctr_ovrhd where mctr_no = :0 and from_to = 'F' ");
            parameters = new OracleParameter[1];
            parameters[0] = new OracleParameter(":mctr_no", OracleDbType.Int32, mctrcreateform.MctrNo, ParameterDirection.Input);
            response = entities.Database.SqlQuery<MctrCreateForm>(sql.ToString(), parameters).SingleOrDefault();
            mctrcreateform.LinesOhFrom = response.LinesOhFrom;
            mctrcreateform.AmountFrom = response.AmountFrom;

            // SQL: select count ( * ) , sum ( amount_from ) into : lines_oh_to , : total_oh_to from mctr_ovrhd where mctr_no = : mctr_header . mctr_no and from_to = 't'
            sql = new StringBuilder("select count ( * ) as lines_oh_to , nvl(sum ( amount_from ),0)  as total_oh_to from mctr_ovrhd where mctr_no = :0 and from_to = 'T' ");
            parameters = new OracleParameter[1];
            parameters[0] = new OracleParameter(":mctr_no", OracleDbType.Int32, mctrcreateform.MctrNo, ParameterDirection.Input);
            response = entities.Database.SqlQuery<MctrCreateForm>(sql.ToString(), parameters).SingleOrDefault();
            mctrcreateform.LinesOhFrom = response.LinesOhFrom;
            mctrcreateform.AmountFrom = response.AmountFrom;

            // SQL: select sum ( amount_from ) into : total_oh from mctr_ovrhd where mctr_no = : mctr_header . mctr_no
            sql = new StringBuilder("select nvl(sum ( amount_from ),0)  from  mctr_ovrhd where mctr_no = :0 ");
            parameters = new OracleParameter[1];
            parameters[0] = new OracleParameter(":mctr_no", OracleDbType.Int32, mctrcreateform.MctrNo, ParameterDirection.Input);
            mctrcreateform.totalOh = entities.Database.SqlQuery<int>(sql.ToString(), parameters).SingleOrDefault();

            // SQL: select sum ( amount_from ) into : total_offset from mctr_offset where mctr_no = : mctr_header . mctr_no
            sql = new StringBuilder("select nvl(sum ( amount_from ),0)  from  mctr_offset where mctr_no = :0 ");
            parameters = new OracleParameter[1];
            parameters[0] = new OracleParameter(":mctr_no", OracleDbType.Int32, mctrcreateform.MctrNo, ParameterDirection.Input);
            mctrcreateform.totalOffset = entities.Database.SqlQuery<int>(sql.ToString(), parameters).SingleOrDefault();


            return mctrCreateForm;
        }

        public List<DomainEntity.MctrRP_MASTER_VW> c_ttd_from_aff(MctrCreateForm mctrcreateform, string v_rsc_lbr_flg, string v_cls_vdt_flg, string v_bulk_flg)
        {

            MctrLineItem mctrLineItem = mctrcreateform.mctrLineItem.First();
            OracleParameter[] parameters = new OracleParameter[36];
            // SQL: select fiscal_year , accounting_period , analysis_type , account , project_id , activity_id , resource_sub_cat , wpd_id7 , bulk_alctn_cd7 , proj_trans_type , proj_trans_code , decode ( deptid , null , ' ' , deptid ) , decode ( deptid_from , null , ' ' , deptid_from ) , work_location_cd7 , home_location_cd7 , bus_unit_gl_from , business_unit_gl , class_cd7 , affiliate , sum ( ttd_quantity7 ) , sum ( ttd_domestic_amt7 ) from mctr_rp_master_vw where activity_id = : activity_id_from and project_id = : project_id_from and account = : account_from and bus_unit_gl_from = : home_bugl_from and business_unit_gl = : work_bugl_from and affiliate = : affiliate_from and ( work_location_cd7 = : work_loc_from or ( : work_loc_from is null and trim ( work_location_cd7 ) is null ) ) and ( home_location_cd7 = : home_loc_from or ( : home_loc_from is null and trim ( home_location_cd7 ) is null ) ) and ( deptid = : work_dept_from or ( : work_dept_from is null and trim ( deptid ) is null ) ) and ( deptid_from = : home_dept_from or ( : home_dept_from is null and trim ( deptid_from ) is null ) ) and ( ( resource_sub_cat = : rsc_from ) or ( : rsc_from is null and trim ( resource_sub_cat ) is null ) or ( v_rsc_lbr_flg = 'N' and : rsc_from like '0%' ) ) and ( ( v_cls_vdt_flg = 'N' ) or ( v_cls_vdt_flg = 'Y' and class_cd7 = : class_cd_from ) or ( : class_cd_from is null and trim ( class_cd7 ) is null ) ) and ( wpd_id7 = : wpd_from or ( : wpd_from is null and trim ( wpd_id7 ) is null ) or : fiscal_year < 2005 or : proj_trans_type_from <> 'LBR' ) and ( bulk_alctn_cd7 = : bulk_from or ( : bulk_from is null and trim ( bulk_alctn_cd7 ) is null ) or v_bulk_flg = 'N' ) and ( ( ( ( : proj_trans_type_from = 'LBR' and proj_trans_type like 'LB%' ) or ( : proj_trans_type_from <> 'LBR' and proj_trans_type = : proj_trans_type_from ) ) and ( proj_trans_code = : proj_trans_code_from or ( : proj_trans_code_from is null and not exists ( select * from mctr_trans_type where cmpon_cd = mctr_rp_master_vw . bus_unit_gl_from and proj_trans_type = mctr_rp_master_vw . proj_trans_type and proj_trans_code = mctr_rp_master_vw . proj_trans_code ) ) ) ) or ( : proj_trans_type_from in ( 'OTH' , 'MTL' ) and : proj_trans_code_from is null and proj_trans_type not like 'LB%' ) ) group by fiscal_year , accounting_period , analysis_type , account , project_id , activity_id , resource_sub_cat , wpd_id7 , bulk_alctn_cd7 , proj_trans_type , proj_trans_code , decode ( deptid , null , ' ' , deptid ) , decode ( deptid_from , null , ' ' , deptid_from ) , work_location_cd7 , home_location_cd7 , bus_unit_gl_from , business_unit_gl , class_cd7 , affiliate
            StringBuilder sql = new StringBuilder(@"select fiscal_year , accounting_period, analysis_type, account, project_id, activity_id,
                                    resource_sub_cat, wpd_id7, bulk_alctn_cd7, proj_trans_type, proj_trans_code,
                                    decode(deptid,null,' ',deptid) as  deptid , decode(deptid_from,null,' ',deptid_from) as  deptid_from,
                                    work_location_cd7, home_location_cd7, bus_unit_gl_from, business_unit_gl, class_cd7, affiliate,
                                    sum(ttd_quantity7) as SUM_TTD_QUANTITY7 , sum(ttd_domestic_amt7) as SUM_TTD_DOMESTIC_AMT7
                            from mctr_rp_master_vw
                            where activity_id = :0
                            and project_id = :1
                            and account = :2
                            and bus_unit_gl_from = :3
                            and business_unit_gl = :4
                            and affiliate = :5
                            and (work_location_cd7 = :6 or (:7 is null and trim(work_location_cd7) is null))
                            and (home_location_cd7 = :8 or (:9 is null and trim(home_location_cd7) is null))
                            and (deptid = :10 or (:11 is null and trim(deptid) is null)) 
                            and (deptid_from = :12 or (:13 is null and trim(deptid_from) is null)) 
                            and ((resource_sub_cat = :14) or (:15 is null and trim(resource_sub_cat) is null) or (:16 = 'N' and :17 like '0%')) 
                            and ((:18 = 'N') or (:19 = 'Y' and class_cd7 = :20) or (:21 is null and trim(class_cd7) is null))
                            and (wpd_id7 = :22 or (:23 is null and trim(wpd_id7) is null) or :24 < 2005 or :25 <> 'LBR') 
                            and (bulk_alctn_cd7 = :26 or (:27 is null and trim(bulk_alctn_cd7) is null) or :28 = 'N') 
                            and ((((:29 = 'LBR' and proj_trans_type like 'LB%') or (:30 <> 'LBR' and proj_trans_type = :31))
                            and (proj_trans_code = :32 or (:33 is null
                            and not exists (select * from mctr_trans_type
                                                where cmpon_cd = mctr_rp_master_vw.bus_unit_gl_from
                                                and proj_trans_type = mctr_rp_master_vw.proj_trans_type
                                                and proj_trans_code = mctr_rp_master_vw.proj_trans_code))))
                                or (:34 in ('OTH','MTL') and :35 is null and proj_trans_type not like 'LB%'))
                            group by fiscal_year, accounting_period, analysis_type, account, project_id, activity_id,
                                    resource_sub_cat, wpd_id7, bulk_alctn_cd7, proj_trans_type, proj_trans_code,
                                    decode(deptid,null,' ',deptid), decode(deptid_from,null,' ',deptid_from),
                                    work_location_cd7, home_location_cd7, bus_unit_gl_from, business_unit_gl, class_cd7, affiliate");
            parameters[0] = new OracleParameter(":activity_id_from", OracleDbType.Varchar2, mctrLineItem.ACTIVITY_ID_FROM, ParameterDirection.Input);
            parameters[1] = new OracleParameter(":project_id_from", OracleDbType.Varchar2, mctrLineItem.PROJECT_ID_FROM, ParameterDirection.Input);
            parameters[2] = new OracleParameter(":account_from", OracleDbType.Varchar2, mctrLineItem.ACCOUNT_FROM, ParameterDirection.Input);
            parameters[3] = new OracleParameter(":home_bugl_from", OracleDbType.Varchar2, mctrLineItem.HOME_BUGL_FROM, ParameterDirection.Input);
            parameters[4] = new OracleParameter(":work_bugl_from", OracleDbType.Varchar2, mctrLineItem.WORK_BUGL_FROM, ParameterDirection.Input);
            parameters[5] = new OracleParameter(":affiliate_from", OracleDbType.Varchar2, mctrLineItem.AFFILIATE_FROM ?? "", ParameterDirection.Input);
            parameters[6] = new OracleParameter(":work_loc_from", OracleDbType.Varchar2, mctrLineItem.WORK_LOC_FROM, ParameterDirection.Input);
            parameters[7] = new OracleParameter(":work_loc_from", OracleDbType.Varchar2, mctrLineItem.WORK_LOC_FROM, ParameterDirection.Input);
            parameters[8] = new OracleParameter(":home_loc_from", OracleDbType.Varchar2, mctrLineItem.HOME_LOC_FROM, ParameterDirection.Input);
            parameters[9] = new OracleParameter(":home_loc_from", OracleDbType.Varchar2, mctrLineItem.HOME_LOC_FROM, ParameterDirection.Input);
            parameters[10] = new OracleParameter(":work_dept_from", OracleDbType.Varchar2, mctrLineItem.WORK_DEPT_FROM, ParameterDirection.Input);
            parameters[11] = new OracleParameter(":work_dept_from", OracleDbType.Varchar2, mctrLineItem.WORK_DEPT_FROM, ParameterDirection.Input);
            parameters[12] = new OracleParameter(":home_dept_from", OracleDbType.Varchar2, mctrLineItem.HOME_DEPT_FROM, ParameterDirection.Input);
            parameters[13] = new OracleParameter(":home_dept_from", OracleDbType.Varchar2, mctrLineItem.HOME_DEPT_FROM, ParameterDirection.Input);
            parameters[14] = new OracleParameter(":rsc_from", OracleDbType.Varchar2, mctrLineItem.RSC_FROM ?? "", ParameterDirection.Input);
            parameters[15] = new OracleParameter(":rsc_from", OracleDbType.Varchar2, mctrLineItem.RSC_FROM ?? "", ParameterDirection.Input);
            parameters[16] = new OracleParameter(":v_rsc_lbr_flg", OracleDbType.Varchar2, v_rsc_lbr_flg, ParameterDirection.Input);
            parameters[17] = new OracleParameter(":rsc_from", OracleDbType.Varchar2, mctrLineItem.RSC_FROM ?? "", ParameterDirection.Input);
            parameters[18] = new OracleParameter(":v_cls_vdt_flg", OracleDbType.Varchar2, v_cls_vdt_flg, ParameterDirection.Input);
            parameters[19] = new OracleParameter(":v_cls_vdt_flg", OracleDbType.Varchar2, v_cls_vdt_flg, ParameterDirection.Input);
            parameters[20] = new OracleParameter(":class_cd_from", OracleDbType.Varchar2, mctrLineItem.CLASS_CD_FROM, ParameterDirection.Input);
            parameters[21] = new OracleParameter(":class_cd_from", OracleDbType.Varchar2, mctrLineItem.CLASS_CD_FROM, ParameterDirection.Input);
            parameters[22] = new OracleParameter(":wpd_from", OracleDbType.Varchar2, mctrLineItem.WPD_FROM ?? "", ParameterDirection.Input);
            parameters[23] = new OracleParameter(":wpd_from", OracleDbType.Varchar2, mctrLineItem.WPD_FROM ?? "", ParameterDirection.Input);
            parameters[24] = new OracleParameter(":fiscal_year", OracleDbType.Int32, Convert.ToInt32(mctrLineItem.FYEAR), ParameterDirection.Input);
            parameters[25] = new OracleParameter(":proj_trans_type_from", OracleDbType.Varchar2, mctrLineItem.PROJ_TRANS_TYPE_FROM, ParameterDirection.Input);
            parameters[26] = new OracleParameter(":bulk_from", OracleDbType.Varchar2, mctrLineItem.BULK_FROM ?? "", ParameterDirection.Input);
            parameters[27] = new OracleParameter(":bulk_from", OracleDbType.Varchar2, mctrLineItem.BULK_FROM ?? "", ParameterDirection.Input);
            parameters[28] = new OracleParameter(":v_bulk_flg", OracleDbType.Varchar2, v_bulk_flg, ParameterDirection.Input);
            parameters[29] = new OracleParameter(":proj_trans_type_from", OracleDbType.Varchar2, mctrLineItem.PROJ_TRANS_TYPE_FROM, ParameterDirection.Input);
            parameters[30] = new OracleParameter(":proj_trans_type_from", OracleDbType.Varchar2, mctrLineItem.PROJ_TRANS_TYPE_FROM, ParameterDirection.Input);
            parameters[31] = new OracleParameter(":proj_trans_type_from", OracleDbType.Varchar2, mctrLineItem.PROJ_TRANS_TYPE_FROM, ParameterDirection.Input);
            parameters[32] = new OracleParameter(":proj_trans_code_from", OracleDbType.Varchar2, mctrLineItem.PROJ_TRANS_CODE_FROM ?? "", ParameterDirection.Input);
            parameters[33] = new OracleParameter(":proj_trans_code_from", OracleDbType.Varchar2, mctrLineItem.PROJ_TRANS_CODE_FROM ?? "", ParameterDirection.Input);
            parameters[34] = new OracleParameter(":proj_trans_type_from", OracleDbType.Varchar2, mctrLineItem.PROJ_TRANS_TYPE_FROM, ParameterDirection.Input);
            parameters[35] = new OracleParameter(":proj_trans_code_from", OracleDbType.Varchar2, mctrLineItem.PROJ_TRANS_CODE_FROM ?? "", ParameterDirection.Input);
            var response = entities.Database.SqlQuery<DomainEntity.MctrRP_MASTER_VW>(sql.ToString(), parameters).ToList<DomainEntity.MctrRP_MASTER_VW>();
            return response;
        }

        /// <summary>
        /// Cursor forLineItemm PostInsert
        ///       c_ttd_from  
        /// 
        /// </summary>
        /// <param name="mctrCreateForm"></param>
        /// <returns></returns>
        /// 
        public List<DomainEntity.MctrRP_MASTER_V> c_ttd_from(MctrCreateForm mctrcreateform, string v_rsc_lbr_flg, string v_cls_vdt_flg, string v_bulk_flg)
        {

            MctrLineItem mctrLineItem = mctrcreateform.mctrLineItem.First();
            StringBuilder sql = new StringBuilder(@"select fiscal_year, accounting_period, analysis_type, account, project_id, activity_id,
            resource_sub_cat, wpd_id7, bulk_alctn_cd7, proj_trans_type, proj_trans_code,
            decode(deptid, null, ' ', deptid) as deptid , decode(deptid_from, null, ' ', deptid_from) as deptid_from,
            work_location_cd7, home_location_cd7, bus_unit_gl_from, business_unit_gl, class_cd7,
            sum(ttd_quantity7) as SUM_TTD_QUANTITY7 , sum(ttd_domestic_amt7) as SUM_TTD_DOMESTIC_AMT7
       from mctr_rp_master_v
      where activity_id = :0
        and project_id = :1
        and account = :2
        and bus_unit_gl_from = :3
        and business_unit_gl = :4
        and(work_location_cd7 = :5 or(:6 is null and trim(work_location_cd7) is null))
        and(home_location_cd7 = :7 or(:8 is null and trim(home_location_cd7) is null))
        and(deptid = :9 or(:10 is null and trim(deptid) is null))
        and(deptid_from = :11 or(:12 is null and trim(deptid_from) is null))
        and((resource_sub_cat = :13) or(:14 is null and trim(resource_sub_cat) is null) or(:15 = 'N' and :16  like '0%')) 
        and((:17 = 'N') or(:18 = 'Y' and class_cd7 = :19) or(:20 is null and trim(class_cd7) is null))
        and(wpd_id7 = :21 or(:22 is null and trim(wpd_id7) is null) or :23 < 2005 or :24 <> 'LBR')
        and(bulk_alctn_cd7 = :25 or(:26 is null and trim(bulk_alctn_cd7) is null) or :27 = 'N')
        and((((:28 = 'LBR' and proj_trans_type like 'LB%') or(:29 <> 'LBR' and proj_trans_type = :30))
        and(proj_trans_code = :31 or(:32 is null
        and not exists(select * from mctr_trans_type
                         where cmpon_cd = mctr_rp_master_v.bus_unit_gl_from
                           and proj_trans_type = mctr_rp_master_v.proj_trans_type
                           and proj_trans_code = mctr_rp_master_v.proj_trans_code))))
         or(:33 in ('OTH', 'MTL') and :34 is null and proj_trans_type not like 'LB%'))
     group by fiscal_year, accounting_period, analysis_type, account, project_id, activity_id,
              resource_sub_cat, wpd_id7, bulk_alctn_cd7, proj_trans_type, proj_trans_code,
              decode(deptid, null, ' ', deptid), decode(deptid_from, null, ' ', deptid_from),
              work_location_cd7, home_location_cd7, bus_unit_gl_from, business_unit_gl, class_cd7");
            OracleParameter[] parameters = new OracleParameter[35];
            parameters[0] = new OracleParameter(":activity_id_from", OracleDbType.Varchar2, mctrLineItem.ACTIVITY_ID_FROM, ParameterDirection.Input);
            parameters[1] = new OracleParameter(":project_id_from", OracleDbType.Varchar2, mctrLineItem.PROJECT_ID_FROM, ParameterDirection.Input);
            parameters[2] = new OracleParameter(":account_from", OracleDbType.Varchar2, mctrLineItem.ACCOUNT_FROM, ParameterDirection.Input);
            parameters[3] = new OracleParameter(":home_bugl_from", OracleDbType.Varchar2, mctrLineItem.HOME_BUGL_FROM, ParameterDirection.Input);
            parameters[4] = new OracleParameter(":work_bugl_from", OracleDbType.Varchar2, mctrLineItem.WORK_BUGL_FROM, ParameterDirection.Input);
            parameters[5] = new OracleParameter(":work_loc_from", OracleDbType.Varchar2, mctrLineItem.WORK_LOC_FROM, ParameterDirection.Input);
            parameters[6] = new OracleParameter(":work_loc_from", OracleDbType.Varchar2, mctrLineItem.WORK_LOC_FROM, ParameterDirection.Input);
            parameters[7] = new OracleParameter(":home_loc_from", OracleDbType.Varchar2, mctrLineItem.HOME_LOC_FROM, ParameterDirection.Input);
            parameters[8] = new OracleParameter(":home_loc_from", OracleDbType.Varchar2, mctrLineItem.HOME_LOC_FROM, ParameterDirection.Input);
            parameters[9] = new OracleParameter(":work_dept_from", OracleDbType.Varchar2, mctrLineItem.WORK_DEPT_FROM, ParameterDirection.Input);
            parameters[10] = new OracleParameter(":work_dept_from", OracleDbType.Varchar2, mctrLineItem.WORK_DEPT_FROM, ParameterDirection.Input);
            parameters[11] = new OracleParameter(":home_dept_from", OracleDbType.Varchar2, mctrLineItem.HOME_DEPT_FROM, ParameterDirection.Input);
            parameters[12] = new OracleParameter(":home_dept_from", OracleDbType.Varchar2, mctrLineItem.HOME_DEPT_FROM, ParameterDirection.Input);
            parameters[13] = new OracleParameter(":rsc_from", OracleDbType.Varchar2, mctrLineItem.RSC_FROM ?? "", ParameterDirection.Input);
            parameters[14] = new OracleParameter(":rsc_from", OracleDbType.Varchar2, mctrLineItem.RSC_FROM ?? "", ParameterDirection.Input);
            parameters[15] = new OracleParameter(":v_rsc_lbr_flg", OracleDbType.Varchar2, v_rsc_lbr_flg, ParameterDirection.Input);
            parameters[16] = new OracleParameter(":rsc_from", OracleDbType.Varchar2, mctrLineItem.RSC_FROM ?? "", ParameterDirection.Input);
            parameters[17] = new OracleParameter(":v_cls_vdt_flg", OracleDbType.Varchar2, v_cls_vdt_flg, ParameterDirection.Input);
            parameters[18] = new OracleParameter(":v_cls_vdt_flg", OracleDbType.Varchar2, v_cls_vdt_flg, ParameterDirection.Input);
            parameters[19] = new OracleParameter(":class_cd_from", OracleDbType.Varchar2, mctrLineItem.CLASS_CD_FROM, ParameterDirection.Input);
            parameters[20] = new OracleParameter(":class_cd_from", OracleDbType.Varchar2, mctrLineItem.CLASS_CD_FROM, ParameterDirection.Input);
            parameters[21] = new OracleParameter(":wpd_from", OracleDbType.Varchar2, mctrLineItem.WPD_FROM ?? "", ParameterDirection.Input);
            parameters[22] = new OracleParameter(":wpd_from", OracleDbType.Varchar2, mctrLineItem.WPD_FROM ?? "", ParameterDirection.Input);
            parameters[23] = new OracleParameter(":fiscal_year", OracleDbType.Int32, Convert.ToInt32(mctrLineItem.FYEAR), ParameterDirection.Input);
            parameters[24] = new OracleParameter(":proj_trans_type_from", OracleDbType.Varchar2, mctrLineItem.PROJ_TRANS_TYPE_FROM, ParameterDirection.Input);
            parameters[25] = new OracleParameter(":bulk_from", OracleDbType.Varchar2, mctrLineItem.BULK_FROM ?? "", ParameterDirection.Input);
            parameters[26] = new OracleParameter(":bulk_from", OracleDbType.Varchar2, mctrLineItem.BULK_FROM ?? "", ParameterDirection.Input);
            parameters[27] = new OracleParameter(":v_bulk_flg", OracleDbType.Varchar2, v_bulk_flg, ParameterDirection.Input);
            parameters[28] = new OracleParameter(":proj_trans_type_from", OracleDbType.Varchar2, mctrLineItem.PROJ_TRANS_TYPE_FROM, ParameterDirection.Input);
            parameters[29] = new OracleParameter(":proj_trans_type_from", OracleDbType.Varchar2, mctrLineItem.PROJ_TRANS_TYPE_FROM, ParameterDirection.Input);
            parameters[30] = new OracleParameter(":proj_trans_type_from", OracleDbType.Varchar2, mctrLineItem.PROJ_TRANS_TYPE_FROM, ParameterDirection.Input);
            parameters[31] = new OracleParameter(":proj_trans_code_from", OracleDbType.Varchar2, mctrLineItem.PROJ_TRANS_CODE_FROM ?? "", ParameterDirection.Input);
            parameters[32] = new OracleParameter(":proj_trans_code_from", OracleDbType.Varchar2, mctrLineItem.PROJ_TRANS_CODE_FROM ?? "", ParameterDirection.Input);
            parameters[33] = new OracleParameter(":proj_trans_type_from", OracleDbType.Varchar2, mctrLineItem.PROJ_TRANS_TYPE_FROM, ParameterDirection.Input);
            parameters[34] = new OracleParameter(":proj_trans_code_from", OracleDbType.Varchar2, mctrLineItem.PROJ_TRANS_CODE_FROM ?? "", ParameterDirection.Input);

            var response = entities.Database.SqlQuery<DomainEntity.MctrRP_MASTER_V>(sql.ToString(), parameters).ToList<DomainEntity.MctrRP_MASTER_V>();
            return response;
        }

        /// <summary>
        /// Cursor for LineItemm PostInsert  
        ///     c_pri_per_from_aff    
        /// 
        /// </summary>
        /// <param name="mctrCreateForm"></param>
        /// <returns></returns>
        public List<DomainEntity.MctrRP_MASTER_VW> c_pri_per_from_aff(MctrCreateForm mctrcreateform, string v_rsc_lbr_flg, string v_cls_vdt_flg, string v_bulk_flg)
        {

            MctrLineItem mctrLineItem = mctrcreateform.mctrLineItem.First();
            OracleParameter[] parameters = new OracleParameter[37];
            // SQL: select ovrhd_base_yr_cd7 , '12' , analysis_type , account , project_id , activity_id , resource_sub_cat , wpd_id7 , bulk_alctn_cd7 , proj_trans_type , proj_trans_code , decode ( deptid , null , ' ' , deptid ) , decode ( deptid_from , null , ' ' , deptid_from ) , work_location_cd7 , home_location_cd7 , bus_unit_gl_from , business_unit_gl , class_cd7 , affiliate , sum ( ttd_quantity7 ) , sum ( ttd_domestic_amt7 ) from mctr_rp_master_vw where activity_id = : activity_id_from and project_id = : project_id_from and account = : account_from and bus_unit_gl_from = : home_bugl_from and business_unit_gl = : work_bugl_from and affiliate = : affiliate_from and ovrhd_base_yr_cd7 = : mctr_header . fiscal_year and ( work_location_cd7 = : work_loc_from or ( : work_loc_from is null and trim ( work_location_cd7 ) is null ) ) and ( home_location_cd7 = : home_loc_from or ( : home_loc_from is null and trim ( home_location_cd7 ) is null ) ) and ( deptid = : work_dept_from or ( : work_dept_from is null and trim ( deptid ) is null ) ) and ( deptid_from = : home_dept_from or ( : home_dept_from is null and trim ( deptid_from ) is null ) ) and ( ( resource_sub_cat = : rsc_from ) or ( : rsc_from is null and trim ( resource_sub_cat ) is null ) or ( v_rsc_lbr_flg = 'N' and : rsc_from like '0%' ) ) and ( ( v_cls_vdt_flg = 'N' ) or ( v_cls_vdt_flg = 'Y' and class_cd7 = : class_cd_from ) or ( : class_cd_from is null and trim ( class_cd7 ) is null ) ) and ( wpd_id7 = : wpd_from or ( : wpd_from is null and trim ( wpd_id7 ) is null ) or : fiscal_year < 2005 or : proj_trans_type_from <> 'LBR' ) and ( bulk_alctn_cd7 = : bulk_from or ( : bulk_from is null and trim ( bulk_alctn_cd7 ) is null ) or v_bulk_flg = 'N' ) and ( ( ( ( : proj_trans_type_from = 'LBR' and proj_trans_type like 'LB%' ) or ( : proj_trans_type_from <> 'LBR' and proj_trans_type = : proj_trans_type_from ) ) and ( proj_trans_code = : proj_trans_code_from or ( : proj_trans_code_from is null and not exists ( select * from mctr_trans_type where cmpon_cd = mctr_rp_master_vw . bus_unit_gl_from and proj_trans_type = mctr_rp_master_vw . proj_trans_type and proj_trans_code = mctr_rp_master_vw . proj_trans_code ) ) ) ) or ( : proj_trans_type_from in ( 'OTH' , 'MTL' ) and : proj_trans_code_from is null and proj_trans_type not like 'LB%' ) ) group by ovrhd_base_yr_cd7 , '12' , analysis_type , account , project_id , activity_id , resource_sub_cat , wpd_id7 , bulk_alctn_cd7 , proj_trans_type , proj_trans_code , decode ( deptid , null , ' ' , deptid ) , decode ( deptid_from , null , ' ' , deptid_from ) , work_location_cd7 , home_location_cd7 , bus_unit_gl_from , business_unit_gl , class_cd7 , affiliate
            StringBuilder sql = new StringBuilder(@"select ovrhd_base_yr_cd7 , '12', analysis_type, account, project_id, activity_id, resource_sub_cat,
            wpd_id7, bulk_alctn_cd7, proj_trans_type, proj_trans_code,
            decode(deptid,null,' ',deptid) as deptid , decode(deptid_from,null,' ',deptid_from) as deptid_from ,
            work_location_cd7, home_location_cd7, bus_unit_gl_from, business_unit_gl, class_cd7, affiliate,
            sum(ttd_quantity7) as SUM_TTD_QUANTITY7 , sum(ttd_domestic_amt7) as SUM_TTD_DOMESTIC_AMT7
       from mctr_rp_master_vw
      where activity_id = :0
        and project_id = :1
        and account = :2
        and bus_unit_gl_from = :3
        and business_unit_gl = :4
        and affiliate = :5
        and ovrhd_base_yr_cd7 = :6
        and (work_location_cd7 = :7 or (:8 is null and trim(work_location_cd7) is null))
        and (home_location_cd7 = :9 or (:10 is null and trim(home_location_cd7) is null))
        and (deptid = :11 or (:12 is null and trim(deptid) is null))
        and (deptid_from = :13 or (:14 is null and trim(deptid_from) is null))
        and ((resource_sub_cat = :15) or (:16 is null and trim(resource_sub_cat) is null) or (:17 = 'N' and :18 like '0%'))
        and ((:19 = 'N') or (:20 = 'Y' and class_cd7 = :21) or (:22 is null and trim(class_cd7) is null))
        and (wpd_id7 = :23 or (:24 is null and trim(wpd_id7) is null) or :25 < 2005 or :26 <> 'LBR')
        and (bulk_alctn_cd7 = :27 or (:28 is null and trim(bulk_alctn_cd7) is null) or :29 = 'N')
        and ((((:30 = 'LBR' and proj_trans_type like 'LB%') or (:31 <> 'LBR' and proj_trans_type = :32))
        and (proj_trans_code = :33 or (:34 is null
        and not exists (select * from mctr_trans_type
                         where cmpon_cd = mctr_rp_master_vw.bus_unit_gl_from
                           and proj_trans_type = mctr_rp_master_vw.proj_trans_type
                           and proj_trans_code = mctr_rp_master_vw.proj_trans_code))))
         or (:35 in ('OTH','MTL') and :36 is null and proj_trans_type not like 'LB%'))
     group by ovrhd_base_yr_cd7, '12', analysis_type, account, project_id, activity_id, resource_sub_cat,
              wpd_id7, bulk_alctn_cd7, proj_trans_type, proj_trans_code,
              decode(deptid,null,' ',deptid), decode(deptid_from,null,' ',deptid_from),
              work_location_cd7, home_location_cd7, bus_unit_gl_from, business_unit_gl, class_cd7, affiliate");


            parameters[0] = new OracleParameter(":activity_id_from", OracleDbType.Varchar2, mctrLineItem.ACTIVITY_ID_FROM, ParameterDirection.Input);
            parameters[1] = new OracleParameter(":project_id_from", OracleDbType.Varchar2, mctrLineItem.PROJECT_ID_FROM, ParameterDirection.Input);
            parameters[2] = new OracleParameter(":account_from", OracleDbType.Varchar2, mctrLineItem.ACCOUNT_FROM, ParameterDirection.Input);
            parameters[3] = new OracleParameter(":home_bugl_from", OracleDbType.Varchar2, mctrLineItem.HOME_BUGL_FROM, ParameterDirection.Input);
            parameters[4] = new OracleParameter(":work_bugl_from", OracleDbType.Varchar2, mctrLineItem.WORK_BUGL_FROM, ParameterDirection.Input);
            parameters[5] = new OracleParameter(":affiliate_from", OracleDbType.Varchar2, mctrLineItem.AFFILIATE_FROM ?? "", ParameterDirection.Input);
            parameters[6] = new OracleParameter(":fiscal_year", OracleDbType.Int32, Convert.ToInt32(mctrLineItem.FYEAR), ParameterDirection.Input);
            parameters[7] = new OracleParameter(":work_loc_from", OracleDbType.Varchar2, mctrLineItem.WORK_LOC_FROM, ParameterDirection.Input);
            parameters[8] = new OracleParameter(":work_loc_from", OracleDbType.Varchar2, mctrLineItem.WORK_LOC_FROM, ParameterDirection.Input);
            parameters[9] = new OracleParameter(":home_loc_from", OracleDbType.Varchar2, mctrLineItem.HOME_LOC_FROM, ParameterDirection.Input);
            parameters[10] = new OracleParameter(":home_loc_from", OracleDbType.Varchar2, mctrLineItem.HOME_LOC_FROM, ParameterDirection.Input);
            parameters[11] = new OracleParameter(":work_dept_from", OracleDbType.Varchar2, mctrLineItem.WORK_DEPT_FROM, ParameterDirection.Input);
            parameters[12] = new OracleParameter(":work_dept_from", OracleDbType.Varchar2, mctrLineItem.WORK_DEPT_FROM, ParameterDirection.Input);
            parameters[13] = new OracleParameter(":home_dept_from", OracleDbType.Varchar2, mctrLineItem.HOME_DEPT_FROM, ParameterDirection.Input);
            parameters[14] = new OracleParameter(":home_dept_from", OracleDbType.Varchar2, mctrLineItem.HOME_DEPT_FROM, ParameterDirection.Input);
            parameters[15] = new OracleParameter(":rsc_from", OracleDbType.Varchar2, mctrLineItem.RSC_FROM ?? "", ParameterDirection.Input);
            parameters[16] = new OracleParameter(":rsc_from", OracleDbType.Varchar2, mctrLineItem.RSC_FROM ?? "", ParameterDirection.Input);
            parameters[17] = new OracleParameter(":v_rsc_lbr_flg", OracleDbType.Varchar2, v_rsc_lbr_flg, ParameterDirection.Input);
            parameters[18] = new OracleParameter(":rsc_from", OracleDbType.Varchar2, mctrLineItem.RSC_FROM ?? "", ParameterDirection.Input);
            parameters[19] = new OracleParameter(":v_cls_vdt_flg", OracleDbType.Varchar2, v_cls_vdt_flg, ParameterDirection.Input);
            parameters[20] = new OracleParameter(":v_cls_vdt_flg", OracleDbType.Varchar2, v_cls_vdt_flg, ParameterDirection.Input);
            parameters[21] = new OracleParameter(":class_cd_from", OracleDbType.Varchar2, mctrLineItem.CLASS_CD_FROM, ParameterDirection.Input);
            parameters[22] = new OracleParameter(":class_cd_from", OracleDbType.Varchar2, mctrLineItem.CLASS_CD_FROM, ParameterDirection.Input);
            parameters[23] = new OracleParameter(":wpd_from", OracleDbType.Varchar2, mctrLineItem.WPD_FROM ?? "", ParameterDirection.Input);
            parameters[24] = new OracleParameter(":wpd_from", OracleDbType.Varchar2, mctrLineItem.WPD_FROM ?? "", ParameterDirection.Input);
            parameters[25] = new OracleParameter(":fiscal_year", OracleDbType.Int32, Convert.ToInt32(mctrLineItem.FYEAR), ParameterDirection.Input);
            parameters[26] = new OracleParameter(":proj_trans_type_from", OracleDbType.Varchar2, mctrLineItem.PROJ_TRANS_TYPE_FROM, ParameterDirection.Input);
            parameters[27] = new OracleParameter(":bulk_from", OracleDbType.Varchar2, mctrLineItem.BULK_FROM ?? "", ParameterDirection.Input);
            parameters[28] = new OracleParameter(":bulk_from", OracleDbType.Varchar2, mctrLineItem.BULK_FROM ?? "", ParameterDirection.Input);
            parameters[29] = new OracleParameter(":v_bulk_flg", OracleDbType.Varchar2, v_bulk_flg, ParameterDirection.Input);
            parameters[30] = new OracleParameter(":proj_trans_type_from", OracleDbType.Varchar2, mctrLineItem.PROJ_TRANS_TYPE_FROM, ParameterDirection.Input);
            parameters[31] = new OracleParameter(":proj_trans_type_from", OracleDbType.Varchar2, mctrLineItem.PROJ_TRANS_TYPE_FROM, ParameterDirection.Input);
            parameters[32] = new OracleParameter(":proj_trans_type_from", OracleDbType.Varchar2, mctrLineItem.PROJ_TRANS_TYPE_FROM, ParameterDirection.Input);
            parameters[33] = new OracleParameter(":proj_trans_code_from", OracleDbType.Varchar2, mctrLineItem.PROJ_TRANS_CODE_FROM ?? "", ParameterDirection.Input);
            parameters[34] = new OracleParameter(":proj_trans_code_from", OracleDbType.Varchar2, mctrLineItem.PROJ_TRANS_CODE_FROM ?? "", ParameterDirection.Input);
            parameters[35] = new OracleParameter(":proj_trans_type_from", OracleDbType.Varchar2, mctrLineItem.PROJ_TRANS_TYPE_FROM, ParameterDirection.Input);
            parameters[36] = new OracleParameter(":proj_trans_code_from", OracleDbType.Varchar2, mctrLineItem.PROJ_TRANS_CODE_FROM ?? "", ParameterDirection.Input);

            var response = entities.Database.SqlQuery<DomainEntity.MctrRP_MASTER_VW>(sql.ToString(), parameters).ToList<DomainEntity.MctrRP_MASTER_VW>();
            return response;
        }

        /// <summary>
        /// Cursor for LineItemm PostInsert 
        ///      c_pri_per_from   
        /// 
        /// </summary>
        /// <param name="mctrCreateForm"></param>
        /// <returns></returns>
        public List<DomainEntity.MctrRP_MASTER_VW> c_pri_per_from(MctrCreateForm mctrcreateform, string v_rsc_lbr_flg, string v_cls_vdt_flg, string v_bulk_flg)
        {

            MctrLineItem mctrLineItem = mctrcreateform.mctrLineItem.First();
            OracleParameter[] parameters = new OracleParameter[36];
            // SQL: select ovrhd_base_yr_cd7 , '12' , analysis_type , account , project_id , activity_id , resource_sub_cat , wpd_id7 , bulk_alctn_cd7 , proj_trans_type , proj_trans_code , decode ( deptid , null , ' ' , deptid ) , decode ( deptid_from , null , ' ' , deptid_from ) , work_location_cd7 , home_location_cd7 , bus_unit_gl_from , business_unit_gl , class_cd7 , affiliate , sum ( ttd_quantity7 ) , sum ( ttd_domestic_amt7 ) from mctr_rp_master_vw where activity_id = : activity_id_from and project_id = : project_id_from and account = : account_from and bus_unit_gl_from = : home_bugl_from and business_unit_gl = : work_bugl_from and affiliate = : affiliate_from and ovrhd_base_yr_cd7 = : mctr_header . fiscal_year and ( work_location_cd7 = : work_loc_from or ( : work_loc_from is null and trim ( work_location_cd7 ) is null ) ) and ( home_location_cd7 = : home_loc_from or ( : home_loc_from is null and trim ( home_location_cd7 ) is null ) ) and ( deptid = : work_dept_from or ( : work_dept_from is null and trim ( deptid ) is null ) ) and ( deptid_from = : home_dept_from or ( : home_dept_from is null and trim ( deptid_from ) is null ) ) and ( ( resource_sub_cat = : rsc_from ) or ( : rsc_from is null and trim ( resource_sub_cat ) is null ) or ( v_rsc_lbr_flg = 'N' and : rsc_from like '0%' ) ) and ( ( v_cls_vdt_flg = 'N' ) or ( v_cls_vdt_flg = 'Y' and class_cd7 = : class_cd_from ) or ( : class_cd_from is null and trim ( class_cd7 ) is null ) ) and ( wpd_id7 = : wpd_from or ( : wpd_from is null and trim ( wpd_id7 ) is null ) or : fiscal_year < 2005 or : proj_trans_type_from <> 'LBR' ) and ( bulk_alctn_cd7 = : bulk_from or ( : bulk_from is null and trim ( bulk_alctn_cd7 ) is null ) or v_bulk_flg = 'N' ) and ( ( ( ( : proj_trans_type_from = 'LBR' and proj_trans_type like 'LB%' ) or ( : proj_trans_type_from <> 'LBR' and proj_trans_type = : proj_trans_type_from ) ) and ( proj_trans_code = : proj_trans_code_from or ( : proj_trans_code_from is null and not exists ( select * from mctr_trans_type where cmpon_cd = mctr_rp_master_vw . bus_unit_gl_from and proj_trans_type = mctr_rp_master_vw . proj_trans_type and proj_trans_code = mctr_rp_master_vw . proj_trans_code ) ) ) ) or ( : proj_trans_type_from in ( 'OTH' , 'MTL' ) and : proj_trans_code_from is null and proj_trans_type not like 'LB%' ) ) group by ovrhd_base_yr_cd7 , '12' , analysis_type , account , project_id , activity_id , resource_sub_cat , wpd_id7 , bulk_alctn_cd7 , proj_trans_type , proj_trans_code , decode ( deptid , null , ' ' , deptid ) , decode ( deptid_from , null , ' ' , deptid_from ) , work_location_cd7 , home_location_cd7 , bus_unit_gl_from , business_unit_gl , class_cd7 , affiliate
            StringBuilder sql = new StringBuilder(@"select ovrhd_base_yr_cd7, '12', analysis_type, account, project_id, activity_id, resource_sub_cat,
            wpd_id7, bulk_alctn_cd7, proj_trans_type, proj_trans_code,
            decode(deptid,null,' ',deptid) AS deptid , decode(deptid_from,null,' ',deptid_from) as deptid_from,
            work_location_cd7, home_location_cd7, bus_unit_gl_from, business_unit_gl, class_cd7, 
            sum(ttd_quantity7) as SUM_TTD_QUANTITY7 , sum(ttd_domestic_amt7) as SUM_TTD_DOMESTIC_AMT7
       from mctr_rp_master_v
      where activity_id = :0
        and project_id = :1
        and account = :2
        and bus_unit_gl_from = :3
        and business_unit_gl = :4
        and ovrhd_base_yr_cd7 = :5
        and (work_location_cd7 = :6 or (:7 is null and trim(work_location_cd7) is null))
        and (home_location_cd7 = :8 or (:9 is null and trim(home_location_cd7) is null))
        and (deptid = :10 or (:11 is null and trim(deptid) is null))
        and (deptid_from = :12 or (:13 is null and trim(deptid_from) is null))
        and ((resource_sub_cat = :14) or (:15 is null and trim(resource_sub_cat) is null) or (:16 = 'N' and :17 like '0%'))
        and ((:18 = 'N') or (:19 = 'Y' and class_cd7 = :20) or (:21 is null and trim(class_cd7) is null))
        and (wpd_id7 = :22 or (:23 is null and trim(wpd_id7) is null) or :24 < 2005 or :25 <> 'LBR')
        and (bulk_alctn_cd7 = :26 or (:27 is null and trim(bulk_alctn_cd7) is null) or :28 = 'N')
        and ((((:29 = 'LBR' and proj_trans_type like 'LB%') or (:30 <> 'LBR' and proj_trans_type = :31))
        and (proj_trans_code = :32 or (:33 is null
        and not exists (select * from mctr_trans_type
                         where cmpon_cd = mctr_rp_master_v.bus_unit_gl_from
                           and proj_trans_type = mctr_rp_master_v.proj_trans_type
                           and proj_trans_code = mctr_rp_master_v.proj_trans_code))))
         or (:34 in ('OTH','MTL') and :35 is null and proj_trans_type not like 'LB%'))
     group by ovrhd_base_yr_cd7, '12', analysis_type, account, project_id, activity_id, resource_sub_cat,
              wpd_id7, bulk_alctn_cd7, proj_trans_type, proj_trans_code,
              decode(deptid,null,' ',deptid), decode(deptid_from,null,' ',deptid_from),
              work_location_cd7, home_location_cd7, bus_unit_gl_from, business_unit_gl, class_cd7");

            parameters[0] = new OracleParameter(":activity_id_from", OracleDbType.Varchar2, mctrLineItem.ACTIVITY_ID_FROM, ParameterDirection.Input);
            parameters[1] = new OracleParameter(":project_id_from", OracleDbType.Varchar2, mctrLineItem.PROJECT_ID_FROM, ParameterDirection.Input);
            parameters[2] = new OracleParameter(":account_from", OracleDbType.Varchar2, mctrLineItem.ACCOUNT_FROM, ParameterDirection.Input);
            parameters[3] = new OracleParameter(":home_bugl_from", OracleDbType.Varchar2, mctrLineItem.HOME_BUGL_FROM, ParameterDirection.Input);
            parameters[4] = new OracleParameter(":work_bugl_from", OracleDbType.Varchar2, mctrLineItem.WORK_BUGL_FROM, ParameterDirection.Input);
            parameters[5] = new OracleParameter(":fiscal_year", OracleDbType.Int32, Convert.ToInt32(mctrLineItem.FYEAR), ParameterDirection.Input);
            parameters[6] = new OracleParameter(":work_loc_from", OracleDbType.Varchar2, mctrLineItem.WORK_LOC_FROM, ParameterDirection.Input);
            parameters[7] = new OracleParameter(":work_loc_from", OracleDbType.Varchar2, mctrLineItem.WORK_LOC_FROM, ParameterDirection.Input);
            parameters[8] = new OracleParameter(":home_loc_from", OracleDbType.Varchar2, mctrLineItem.HOME_LOC_FROM, ParameterDirection.Input);
            parameters[9] = new OracleParameter(":home_loc_from", OracleDbType.Varchar2, mctrLineItem.HOME_LOC_FROM, ParameterDirection.Input);
            parameters[10] = new OracleParameter(":work_dept_from", OracleDbType.Varchar2, mctrLineItem.WORK_DEPT_FROM, ParameterDirection.Input);
            parameters[11] = new OracleParameter(":work_dept_from", OracleDbType.Varchar2, mctrLineItem.WORK_DEPT_FROM, ParameterDirection.Input);
            parameters[12] = new OracleParameter(":home_dept_from", OracleDbType.Varchar2, mctrLineItem.HOME_DEPT_FROM, ParameterDirection.Input);
            parameters[13] = new OracleParameter(":home_dept_from", OracleDbType.Varchar2, mctrLineItem.HOME_DEPT_FROM, ParameterDirection.Input);
            parameters[14] = new OracleParameter(":rsc_from", OracleDbType.Varchar2, mctrLineItem.RSC_FROM ?? "", ParameterDirection.Input);
            parameters[15] = new OracleParameter(":rsc_from", OracleDbType.Varchar2, mctrLineItem.RSC_FROM ?? "", ParameterDirection.Input);
            parameters[16] = new OracleParameter(":v_rsc_lbr_flg", OracleDbType.Varchar2, v_rsc_lbr_flg, ParameterDirection.Input);
            parameters[17] = new OracleParameter(":rsc_from", OracleDbType.Varchar2, mctrLineItem.RSC_FROM ?? "", ParameterDirection.Input);
            parameters[18] = new OracleParameter(":v_cls_vdt_flg", OracleDbType.Varchar2, v_cls_vdt_flg, ParameterDirection.Input);
            parameters[19] = new OracleParameter(":v_cls_vdt_flg", OracleDbType.Varchar2, v_cls_vdt_flg, ParameterDirection.Input);
            parameters[20] = new OracleParameter(":class_cd_from", OracleDbType.Varchar2, mctrLineItem.CLASS_CD_FROM, ParameterDirection.Input);
            parameters[21] = new OracleParameter(":class_cd_from", OracleDbType.Varchar2, mctrLineItem.CLASS_CD_FROM, ParameterDirection.Input);
            parameters[22] = new OracleParameter(":wpd_from", OracleDbType.Varchar2, mctrLineItem.WPD_FROM ?? "", ParameterDirection.Input);
            parameters[23] = new OracleParameter(":wpd_from", OracleDbType.Varchar2, mctrLineItem.WPD_FROM ?? "", ParameterDirection.Input);
            parameters[24] = new OracleParameter(":fiscal_year", OracleDbType.Int32, Convert.ToInt32(mctrLineItem.FYEAR), ParameterDirection.Input);
            parameters[25] = new OracleParameter(":proj_trans_type_from", OracleDbType.Varchar2, mctrLineItem.PROJ_TRANS_TYPE_FROM, ParameterDirection.Input);
            parameters[26] = new OracleParameter(":bulk_from", OracleDbType.Varchar2, mctrLineItem.BULK_FROM ?? "", ParameterDirection.Input);
            parameters[27] = new OracleParameter(":bulk_from", OracleDbType.Varchar2, mctrLineItem.BULK_FROM ?? "", ParameterDirection.Input);
            parameters[28] = new OracleParameter(":v_bulk_flg", OracleDbType.Varchar2, v_bulk_flg, ParameterDirection.Input);
            parameters[29] = new OracleParameter(":proj_trans_type_from", OracleDbType.Varchar2, mctrLineItem.PROJ_TRANS_TYPE_FROM, ParameterDirection.Input);
            parameters[30] = new OracleParameter(":proj_trans_type_from", OracleDbType.Varchar2, mctrLineItem.PROJ_TRANS_TYPE_FROM, ParameterDirection.Input);
            parameters[31] = new OracleParameter(":proj_trans_type_from", OracleDbType.Varchar2, mctrLineItem.PROJ_TRANS_TYPE_FROM, ParameterDirection.Input);
            parameters[32] = new OracleParameter(":proj_trans_code_from", OracleDbType.Varchar2, mctrLineItem.PROJ_TRANS_CODE_FROM ?? "", ParameterDirection.Input);
            parameters[33] = new OracleParameter(":proj_trans_code_from", OracleDbType.Varchar2, mctrLineItem.PROJ_TRANS_CODE_FROM ?? "", ParameterDirection.Input);
            parameters[34] = new OracleParameter(":proj_trans_type_from", OracleDbType.Varchar2, mctrLineItem.PROJ_TRANS_TYPE_FROM, ParameterDirection.Input);
            parameters[35] = new OracleParameter(":proj_trans_code_from", OracleDbType.Varchar2, mctrLineItem.PROJ_TRANS_CODE_FROM ?? "", ParameterDirection.Input);



            var response = entities.Database.SqlQuery<DomainEntity.MctrRP_MASTER_VW>(sql.ToString(), parameters).ToList<DomainEntity.MctrRP_MASTER_VW>();
            return response;

        }

        /// <summary>
        /// Cursor for LineItemm PostInsert
        ///        c_comp_rates_from 
        /// 
        /// </summary>
        /// <param name="mctrCreateForm"></param>
        /// <returns></returns>
        public List<MCTR_COMP_RATES> c_comp_rates_from(MctrCreateForm mctrcreateform, string v_setid, string cust_grp, string rsc_input, string v_bum_cd_from)
        {

            MctrLineItem mctrLineItem = mctrcreateform.mctrLineItem.First();
            List<MCTR_COMP_RATES> rates = new List<MCTR_COMP_RATES>();
            // SQL: select rsc_output , pool_output , rate_output , rate_override from mctr_comp_rates where cmpon_cd = v_setid and fiscal_year = : fiscal_year and rsc_input = v_rsc_pl_from_mod and ( cust_type_input = v_cust_grp_from or cust_type_input = 'nl' ) and ( bum_input = v_bum_cd_from or bum_input = 'nl' ) and :cb_mtl_jrnl = 'N'
            StringBuilder sql = new StringBuilder("select * from MCTR_COMP_RATES where cmpon_cd = :0 and fiscal_year = :1 and rsc_input = :2 and ( cust_type_input = :3 or cust_type_input = 'nl' ) and ( bum_input = :4 or bum_input = 'nl' ) and :5 = 'N' ");
            OracleParameter[] parameters = new OracleParameter[6];
            var fiscalYear1 = Convert.ToInt32(mctrcreateform.fyear);
            parameters[0] = new OracleParameter(":v_setid", OracleDbType.Varchar2, v_setid, ParameterDirection.Input);
            parameters[1] = new OracleParameter(":fiscal_year", OracleDbType.Int32, fiscalYear1, ParameterDirection.Input);
            parameters[2] = new OracleParameter(":v_rsc_pl_from_mod", OracleDbType.Varchar2, mctrLineItem.AFFILIATE_FROM, ParameterDirection.Input);
            parameters[3] = new OracleParameter(":v_cust_grp_from", OracleDbType.Varchar2, cust_grp, ParameterDirection.Input);
            parameters[4] = new OracleParameter(":v_bum_cd_from", OracleDbType.Varchar2, "PWB", ParameterDirection.Input);
            parameters[5] = new OracleParameter(":cb_mtl_jrnl", OracleDbType.Varchar2, mctrLineItem.MTL_JRNL, ParameterDirection.Input);

            try
            {
                var fiscalYear = Convert.ToInt32(mctrcreateform.fyear);
                if (mctrLineItem.MTL_JRNL == "N")
                {
                    var response = from obj in entities.MCTR_COMP_RATES
                                   where obj.CMPON_CD == v_setid
                                   && obj.FISCAL_YEAR == fiscalYear && obj.RSC_INPUT == rsc_input
                                   && (obj.CUST_TYPE_INPUT == cust_grp || obj.CUST_TYPE_INPUT == "nl")
                                   && (obj.BUM_INPUT == v_bum_cd_from || obj.BUM_INPUT == "nl")
                                   select obj;
                    rates = AutoMapper.Mapper.DynamicMap<List<DataEntity.MCTR_COMP_RATES>, List<MCTR_COMP_RATES>>(response.ToList<DataEntity.MCTR_COMP_RATES>());
                }
            }
            catch (Exception ex)
            {
                logger.Error(ex.Message);
            }

            return rates;
        }

        /// <summary>
        /// Cursor for LineItemm PostInsert
        ///         c_comp_rates_to
        /// 
        /// </summary>
        /// <param name="mctrCreateForm"></param>
        /// <returns></returns>
        public List<MCTR_COMP_RATES> c_comp_rates_to(MctrCreateForm mctrcreateform, string v_setid, string cust_grp, string rsc_input, string v_bum_cd_to)
        {

            MctrLineItem mctrLineItem = mctrcreateform.mctrLineItem.First();
            List<MCTR_COMP_RATES> rates = new List<MCTR_COMP_RATES>();

            var fiscalYear = Convert.ToInt32(mctrcreateform.fyear);
            if (mctrLineItem.MTL_JRNL == "N")
            {
                var response = from obj in entities.MCTR_COMP_RATES
                               where obj.CMPON_CD == v_setid && obj.FISCAL_YEAR == fiscalYear && obj.RSC_INPUT == rsc_input && (obj.CUST_TYPE_INPUT == cust_grp || obj.CUST_TYPE_INPUT == "nl") && (obj.BUM_INPUT == v_bum_cd_to || obj.BUM_INPUT == "nl")
                               select obj;
                rates = AutoMapper.Mapper.DynamicMap<List<DataEntity.MCTR_COMP_RATES>, List<MCTR_COMP_RATES>>(response.ToList<DataEntity.MCTR_COMP_RATES>());
            }
            return rates;
        }

        /// <summary>
        /// Cursor for LineItemm PostInsert
        ///         c_offset_li
        /// 
        /// </summary>
        /// <param name="mctrCreateForm"></param>
        /// <returns></returns>

        public List<MctrLINE_ITEM_V> c_offset_li(MctrCreateForm mctrcreateform)
        {
            // SQL: select home_bugl , home_dept , home_loc , home_pool , work_bugl , work_dept , work_loc , work_pool , proj_trans_type , proj_trans_code , rsc , oh_base_year , affiliate , sum ( li_amount ) from mctr_line_item_v where mctr_no = : mctr_header . mctr_no and : global . py_cy_status = 'py' group by home_bugl , home_dept , home_loc , home_pool , work_bugl , work_dept , work_loc , work_pool , proj_trans_type , proj_trans_code , rsc , oh_base_year , affiliate having sum ( li_amount ) <> 0
            StringBuilder sql = new StringBuilder("select home_bugl , home_dept , home_loc , home_pool , work_bugl , work_dept , work_loc , work_pool , proj_trans_type , proj_trans_code , rsc , oh_base_year , affiliate , sum ( li_amount ) as sum_li_amount from mctr_line_item_v where mctr_no = :0 and :1 = 'PY' group by home_bugl , home_dept , home_loc , home_pool , work_bugl , work_dept , work_loc , work_pool , proj_trans_type , proj_trans_code , rsc , oh_base_year , affiliate having sum ( li_amount ) <> 0 ");
            OracleParameter[] parameters = new OracleParameter[2];
            parameters[0] = new OracleParameter(":mctr_no", OracleDbType.Int32, mctrcreateform.MctrNo, ParameterDirection.Input);
            parameters[1] = new OracleParameter(":py_cy_status", OracleDbType.Varchar2, mctrcreateform.py_cy_status, ParameterDirection.Input);

            var response = entities.Database.SqlQuery<MctrLINE_ITEM_V>(sql.ToString(), parameters).ToList<MctrLINE_ITEM_V>();

            return response;
        }

        /// <summary>
        /// Cursor for LineItemm PostInsert
        ///         c_offset_oh
        /// 
        /// </summary>
        /// <param name="mctrCreateForm"></param>
        /// <returns></returns>
        public List<MctrOhFormBl> c_offset_oh(MctrCreateForm mctrcreateform)
        {

            // SQL: select oh . home_bugl_from , oh . home_dept_from , oh . home_loc_from , oh . work_bugl_from , oh . work_dept_from , oh . work_loc_from , oh . proj_trans_type_from , oh . proj_trans_code_from , oh . rsc_from , oh . oh_base_yr_from , oh . home_pool_from , oh . work_pool_from , oh . affiliate_from , sum ( oh . amount_from )  from mctr_ovrhd oh , mctr_line_item li where oh . mctr_no = : mctr_header . mctr_no and li . mctr_no = : mctr_header . mctr_no and oh . line_no = li . line_no and li . mtl_jrnl = 'N' group by oh . home_bugl_from , oh . home_dept_from , oh . home_loc_from , oh . work_bugl_from , oh . work_dept_from , oh . work_loc_from , oh . proj_trans_type_from , oh . proj_trans_code_from , oh . rsc_from , oh . oh_base_yr_from , oh . home_pool_from , oh . work_pool_from , oh . affiliate_from having sum ( oh . amount_from ) <> 0
            StringBuilder sql = new StringBuilder("select oh.home_bugl_from , oh.home_dept_from , oh.home_loc_from , oh.work_bugl_from , oh.work_dept_from , oh.work_loc_from , oh.proj_trans_type_from , oh.proj_trans_code_from , oh.rsc_from , oh.oh_base_yr_from , oh.home_pool_from , oh.work_pool_from , oh.affiliate_from , sum ( oh.amount_from ) as sum_amount_from  from mctr_ovrhd oh , mctr_line_item li where oh.mctr_no = :0 and li.mctr_no = :1 and oh.line_no = li.line_no and li.mtl_jrnl = 'N' group by oh.home_bugl_from , oh.home_dept_from , oh.home_loc_from , oh.work_bugl_from , oh.work_dept_from , oh.work_loc_from , oh.proj_trans_type_from , oh.proj_trans_code_from , oh.rsc_from , oh.oh_base_yr_from , oh.home_pool_from , oh.work_pool_from , oh.affiliate_from having sum ( oh.amount_from ) <> 0 ");
            OracleParameter[] parameters = new OracleParameter[2];
            parameters[0] = new OracleParameter(":mctr_no", OracleDbType.Int32, mctrcreateform.MctrNo, ParameterDirection.Input);
            parameters[1] = new OracleParameter(":mctr_no", OracleDbType.Int32, mctrcreateform.MctrNo, ParameterDirection.Input);
            var response = entities.Database.SqlQuery<MctrOhFormBl>(sql.ToString(), parameters).ToList();

            return response;
        }

        /// <summary>
        /// Cursor for LineItemm PostInsert
        ///         c_cur_per_from
        /// 
        /// </summary>
        /// <param name="mctrCreateForm"></param>
        /// <returns></returns>
        public List<DomainEntity.MctrRP_MASTER_V> c_cur_per_from(MctrCreateForm mctrcreateform, string v_rsc_lbr_flg, string v_cls_vdt_flg, string v_bulk_flg)
        {

            MctrLineItem mctrLineItem = mctrcreateform.mctrLineItem.First();
            OracleParameter[] parameters = new OracleParameter[36];
            // SQL: select ovrhd_base_yr_cd7 , accounting_period , analysis_type , account , project_id , activity_id , resource_sub_cat , wpd_id7 , bulk_alctn_cd7 , proj_trans_type , proj_trans_code , decode ( deptid , null , ' ' , deptid ) , decode ( deptid_from , null , ' ' , deptid_from ) , work_location_cd7 , home_location_cd7 , bus_unit_gl_from , business_unit_gl , class_cd7 , sum ( ttd_quantity7 ) , sum ( ttd_domestic_amt7 ) from mctr_rp_master_v where activity_id = : activity_id_from and project_id = : project_id_from and account = : account_from and bus_unit_gl_from = : home_bugl_from and business_unit_gl = : work_bugl_from and ovrhd_base_yr_cd7 = : mctr_header . fiscal_year and fiscal_year = ovrhd_base_yr_cd7 and ( work_location_cd7 = : work_loc_from or ( : work_loc_from is null and trim ( work_location_cd7 ) is null ) ) and ( home_location_cd7 = : home_loc_from or ( : home_loc_from is null and trim ( home_location_cd7 ) is null ) ) and ( deptid = : work_dept_from or ( : work_dept_from is null and trim ( deptid ) is null ) ) and ( deptid_from = : home_dept_from or ( : home_dept_from is null and trim ( deptid_from ) is null ) ) and ( ( resource_sub_cat = : rsc_from ) or ( : rsc_from is null and trim ( resource_sub_cat ) is null ) or ( v_rsc_lbr_flg = 'N' and : rsc_from like '0%' ) ) and ( ( v_cls_vdt_flg = 'N' ) or ( v_cls_vdt_flg = 'Y' and class_cd7 = : class_cd_from ) or ( : class_cd_from is null and trim ( class_cd7 ) is null ) ) and ( wpd_id7 = : wpd_from or ( : wpd_from is null and trim ( wpd_id7 ) is null ) or : fiscal_year < 2005 or : proj_trans_type_from <> 'LBR' ) and ( bulk_alctn_cd7 = : bulk_from or ( : bulk_from is null and trim ( bulk_alctn_cd7 ) is null ) or v_bulk_flg = 'N' ) and ( ( ( ( : proj_trans_type_from = 'LBR' and proj_trans_type like 'LB%' ) or ( : proj_trans_type_from <> 'LBR' and proj_trans_type = : proj_trans_type_from ) ) and ( proj_trans_code = : proj_trans_code_from or ( : proj_trans_code_from is null and not exists ( select * from mctr_trans_type where cmpon_cd = mctr_rp_master_v . bus_unit_gl_from and proj_trans_type = mctr_rp_master_v . proj_trans_type and proj_trans_code = mctr_rp_master_v . proj_trans_code ) ) ) ) or ( : proj_trans_type_from in ( 'OTH' , 'MTL' ) and : proj_trans_code_from is null and proj_trans_type not like 'LB%' ) ) group by ovrhd_base_yr_cd7 , accounting_period , analysis_type , account , project_id , activity_id , resource_sub_cat , wpd_id7 , bulk_alctn_cd7 , proj_trans_type , proj_trans_code , decode ( deptid , null , ' ' , deptid ) , decode ( deptid_from , null , ' ' , deptid_from ) , work_location_cd7 , home_location_cd7 , bus_unit_gl_from , business_unit_gl , class_cd7
            StringBuilder sql = new StringBuilder(@"select ovrhd_base_yr_cd7, accounting_period, analysis_type, account, project_id, activity_id,
            resource_sub_cat, wpd_id7, bulk_alctn_cd7, proj_trans_type, proj_trans_code,
            decode(deptid,null,' ',deptid) as deptid , decode(deptid_from,null,' ',deptid_from) as deptid_from,
            work_location_cd7, home_location_cd7, bus_unit_gl_from, business_unit_gl, class_cd7,
            sum(ttd_quantity7) as SUM_TTD_QUANTITY7 , sum(ttd_domestic_amt7) as SUM_TTD_DOMESTIC_AMT7
       from mctr_rp_master_v
      where activity_id = :0
        and project_id = :1
        and account = :2
        and bus_unit_gl_from = :3
        and business_unit_gl = :4
        and ovrhd_base_yr_cd7 = :5
        and fiscal_year = ovrhd_base_yr_cd7
        and (work_location_cd7 = :6 or (:7 is null and trim(work_location_cd7) is null))
        and (home_location_cd7 = :8 or (:9 is null and trim(home_location_cd7) is null))
        and (deptid = :10 or (:11 is null and trim(deptid) is null)) 
        and (deptid_from = :12 or (:13 is null and trim(deptid_from) is null)) 
        and ((resource_sub_cat = :14) or (:15 is null and trim(resource_sub_cat) is null) or (:16 = 'N' and :17 like '0%')) 
        and ((:18 = 'N') or (:19 = 'Y' and class_cd7 = :20) or (:21 is null and trim(class_cd7) is null))
        and (wpd_id7 = :22 or (:23 is null and trim(wpd_id7) is null) or :24 < 2005 or :25 <> 'LBR') 
        and (bulk_alctn_cd7 = :26 or (:27 is null and trim(bulk_alctn_cd7) is null) or :28 = 'N') 
        and ((((:29 = 'LBR' and proj_trans_type like 'LB%') or (:30 <> 'LBR' and proj_trans_type = :31))
        and (proj_trans_code = :32 or (:33 is null
        and not exists (select * from mctr_trans_type
                         where cmpon_cd = mctr_rp_master_v.bus_unit_gl_from
                           and proj_trans_type = mctr_rp_master_v.proj_trans_type
                           and proj_trans_code = mctr_rp_master_v.proj_trans_code))))
         or (:34 in ('OTH','MTL') and :35 is null and proj_trans_type not like 'LB%'))
     group by ovrhd_base_yr_cd7, accounting_period, analysis_type, account, project_id, activity_id,
              resource_sub_cat, wpd_id7, bulk_alctn_cd7, proj_trans_type, proj_trans_code,
              decode(deptid,null,' ',deptid), decode(deptid_from,null,' ',deptid_from),
              work_location_cd7, home_location_cd7, bus_unit_gl_from, business_unit_gl, class_cd7");
            parameters[0] = new OracleParameter(":activity_id_from", OracleDbType.Varchar2, mctrLineItem.ACTIVITY_ID_FROM, ParameterDirection.Input);
            parameters[1] = new OracleParameter(":project_id_from", OracleDbType.Varchar2, mctrLineItem.PROJECT_ID_FROM, ParameterDirection.Input);
            parameters[2] = new OracleParameter(":account_from", OracleDbType.Varchar2, mctrLineItem.ACCOUNT_FROM, ParameterDirection.Input);
            parameters[3] = new OracleParameter(":home_bugl_from", OracleDbType.Varchar2, mctrLineItem.HOME_BUGL_FROM, ParameterDirection.Input);
            parameters[4] = new OracleParameter(":work_bugl_from", OracleDbType.Varchar2, mctrLineItem.WORK_BUGL_FROM, ParameterDirection.Input);
            parameters[5] = new OracleParameter(":fiscal_year", OracleDbType.Int32, Convert.ToInt32(mctrcreateform.fyear), ParameterDirection.Input);
            parameters[6] = new OracleParameter(":work_loc_from", OracleDbType.Varchar2, mctrLineItem.WORK_LOC_FROM, ParameterDirection.Input);
            parameters[7] = new OracleParameter(":work_loc_from", OracleDbType.Varchar2, mctrLineItem.WORK_LOC_FROM, ParameterDirection.Input);
            parameters[8] = new OracleParameter(":home_loc_from", OracleDbType.Varchar2, mctrLineItem.HOME_LOC_FROM, ParameterDirection.Input);
            parameters[9] = new OracleParameter(":home_loc_from", OracleDbType.Varchar2, mctrLineItem.HOME_LOC_FROM, ParameterDirection.Input);
            parameters[10] = new OracleParameter(":work_dept_from", OracleDbType.Varchar2, mctrLineItem.WORK_DEPT_FROM, ParameterDirection.Input);
            parameters[11] = new OracleParameter(":work_dept_from", OracleDbType.Varchar2, mctrLineItem.WORK_DEPT_FROM, ParameterDirection.Input);
            parameters[12] = new OracleParameter(":home_dept_from", OracleDbType.Varchar2, mctrLineItem.HOME_DEPT_FROM, ParameterDirection.Input);
            parameters[13] = new OracleParameter(":home_dept_from", OracleDbType.Varchar2, mctrLineItem.HOME_DEPT_FROM, ParameterDirection.Input);
            parameters[14] = new OracleParameter(":rsc_from", OracleDbType.Varchar2, mctrLineItem.RSC_FROM, ParameterDirection.Input);
            parameters[15] = new OracleParameter(":rsc_from", OracleDbType.Varchar2, mctrLineItem.RSC_FROM, ParameterDirection.Input);
            parameters[16] = new OracleParameter(":v_rsc_lbr_flg", OracleDbType.Varchar2, v_rsc_lbr_flg, ParameterDirection.Input);
            parameters[17] = new OracleParameter(":rsc_from", OracleDbType.Varchar2, mctrLineItem.RSC_FROM, ParameterDirection.Input);
            parameters[18] = new OracleParameter(":v_cls_vdt_flg", OracleDbType.Varchar2, v_cls_vdt_flg, ParameterDirection.Input);
            parameters[19] = new OracleParameter(":v_cls_vdt_flg", OracleDbType.Varchar2, v_cls_vdt_flg, ParameterDirection.Input);
            parameters[20] = new OracleParameter(":class_cd_from", OracleDbType.Varchar2, mctrLineItem.CLASS_CD_FROM, ParameterDirection.Input);
            parameters[21] = new OracleParameter(":class_cd_from", OracleDbType.Varchar2, mctrLineItem.CLASS_CD_FROM, ParameterDirection.Input);
            parameters[22] = new OracleParameter(":wpd_from", OracleDbType.Varchar2, mctrLineItem.WPD_FROM, ParameterDirection.Input);
            parameters[23] = new OracleParameter(":wpd_from", OracleDbType.Varchar2, mctrLineItem.WPD_FROM, ParameterDirection.Input);
            parameters[24] = new OracleParameter(":fiscal_year", OracleDbType.Int32, Convert.ToInt32(mctrcreateform.fyear), ParameterDirection.Input);
            parameters[25] = new OracleParameter(":proj_trans_type_from", OracleDbType.Varchar2, mctrLineItem.PROJ_TRANS_TYPE_FROM, ParameterDirection.Input);
            parameters[26] = new OracleParameter(":bulk_from", OracleDbType.Varchar2, mctrLineItem.BULK_FROM, ParameterDirection.Input);
            parameters[27] = new OracleParameter(":bulk_from", OracleDbType.Varchar2, mctrLineItem.BULK_FROM, ParameterDirection.Input);
            parameters[28] = new OracleParameter(":v_bulk_flg", OracleDbType.Varchar2, v_bulk_flg, ParameterDirection.Input);
            parameters[29] = new OracleParameter(":proj_trans_type_from", OracleDbType.Varchar2, mctrLineItem.PROJ_TRANS_TYPE_FROM, ParameterDirection.Input);
            parameters[30] = new OracleParameter(":proj_trans_type_from", OracleDbType.Varchar2, mctrLineItem.PROJ_TRANS_TYPE_FROM, ParameterDirection.Input);
            parameters[31] = new OracleParameter(":proj_trans_type_from", OracleDbType.Varchar2, mctrLineItem.PROJ_TRANS_TYPE_FROM, ParameterDirection.Input);
            parameters[32] = new OracleParameter(":proj_trans_code_from", OracleDbType.Varchar2, mctrLineItem.PROJ_TRANS_CODE_FROM, ParameterDirection.Input);
            parameters[33] = new OracleParameter(":proj_trans_code_from", OracleDbType.Varchar2, mctrLineItem.PROJ_TRANS_CODE_FROM, ParameterDirection.Input);
            parameters[34] = new OracleParameter(":proj_trans_type_from", OracleDbType.Varchar2, mctrLineItem.PROJ_TRANS_TYPE_FROM, ParameterDirection.Input);
            parameters[35] = new OracleParameter(":proj_trans_code_from", OracleDbType.Varchar2, mctrLineItem.PROJ_TRANS_CODE_FROM, ParameterDirection.Input);

            var response = entities.Database.SqlQuery<DomainEntity.MctrRP_MASTER_V>(sql.ToString(), parameters).ToList<DomainEntity.MctrRP_MASTER_V>();
            return response;

        }

        public IEnumerable<MctrCreateForm> pycystatuscheckbubut(IEnumerable<MctrCreateForm> mctrCreateForm)
        {
            var countcheck = mctrCreateForm.First<MctrCreateForm>();
            List<MctrCreateForm> a = new List<MctrCreateForm>();
            OracleParameter[] parameter100 = new OracleParameter[2];
            string query = @"select count(*) into v_count from (
                 select distinct fiscal_year from mctr_incr_rates 
                  where cmpon_cd = :0 
                    and exists (select business_unit from mctr_bu_profile
                                 where business_unit = :0 and man_rated_flg = 'N') 
                 union
                 select distinct fiscal_year from mctr_incr_rates 
                 where fiscal_year > 2007 
                   and exists (select business_unit from mctr_bu_profile
                               where business_unit = :0 and man_rated_flg = 'Y') 
                 union
                 select distinct fiscal_year from mctr_mth_cal_mv
                  where setid = 'MDC'
                    and calendar_id = '01'
                    and begin_dt <= trunc(sysdate)
                    and end_dt >= trunc(sysdate)
                    and exists (select business_unit from mctr_bu_profile
                                 where business_unit = :orig_bu and pyr_only_flg = 'N'))
                where fiscal_year = :1;";

            parameter100[0] = new OracleParameter(":orig_bu", OracleDbType.Varchar2, countcheck.OrigBu, ParameterDirection.Input);
            parameter100[1] = new OracleParameter(":fiscal_year", OracleDbType.Varchar2, countcheck.fyear, ParameterDirection.Input);


            var result = entities.Database.SqlQuery<MctrCreateForm>(query, parameter100).Single<MctrCreateForm>();
            a.Add(result);
            return a;

        }


        public IEnumerable<MctrCreateForm> fyearperiodvalidation(IEnumerable<MctrCreateForm> mctrCreateForm)
        {
            MctrCreateForm mctrcreateform = mctrCreateForm.First<MctrCreateForm>();

            OracleParameter[] parameter100 = new OracleParameter[1];
            parameter100[0] = new OracleParameter(":fiscal_year", OracleDbType.Varchar2, mctrcreateform.fyear, ParameterDirection.Input);

            string query = @"select to_char(begin_dt,'dd-mon-yyyy') as PeriodFrom
         from mctr_mth_cal_mv
        where fiscal_year = :0 and accounting_period = 1;";
            var result = entities.Database.SqlQuery<MctrCreateForm>(query, parameter100).Single();
            mctrcreateform.PeriodFrom = result.PeriodFrom;
            string query1 = @" select to_char(max(end_dt),'dd-mon-yyyy') as PeriodTo
         from mctr_mth_cal_mv
        where fiscal_year = :0 and begin_dt <= sysdate;";

            result = entities.Database.SqlQuery<MctrCreateForm>(query1, parameter100).Single();
            mctrcreateform.PeriodTo = result.PeriodTo;
            return mctrCreateForm;
        }


        public IEnumerable<MctrCreateForm> validApprover(IEnumerable<MctrCreateForm> mctrCreateForm)
        {
            MctrCreateForm mctrcreateform = mctrCreateForm.First<MctrCreateForm>();
            OracleParameter[] parameter = new OracleParameter[3];
            int count;

            string query = @"select count(*)  from mctr_employee_v e, mctr_role r where r.bems = :0
          and e.bems_id = r.bems and r.active = 'Y' and exists
            (select lu.business_unit from mctr_role_bu lu where lu.bems = r.bems
                and (lu.business_unit = :1 or (lu.group_cd7 = :2 and lu.business_unit = '**')))";
            parameter[0] = new OracleParameter(":bems", OracleDbType.Varchar2, mctrcreateform.approvalbems, ParameterDirection.Input);
            parameter[1] = new OracleParameter(":orig_bu", OracleDbType.Varchar2, mctrcreateform.OrigBu, ParameterDirection.Input);
            parameter[2] = new OracleParameter(":orig_group", OracleDbType.Varchar2, mctrcreateform.OrigGroup, ParameterDirection.Input);

            count = entities.Database.SqlQuery<int>(query, parameter).Single<int>();

            if (count != 0)
            {
                mctrcreateform.approvalbems = "true";
            }
            else
            {
                mctrcreateform.approvalbems = "false";
            }
            return mctrCreateForm;
        }

        public IEnumerable<MctrCreateForm> mctrLineItemrscToPostTextItemOpenLOV(IEnumerable<MctrCreateForm> mctrCreateForm)
        {

            MctrCreateForm mctrcreateform = mctrCreateForm.First();
            MctrLineItem mctrlineitem = mctrcreateform.mctrLineItem.First();

            mctrcreateform.V_Count = new Dictionary<string, int>();
            mctrcreateform.V_Count.Clear();
            String sql = "";
            var v_count = 0;
            var v_cow_date = mctrlineitem.COW;
            var period_to = mctrlineitem.PERIOD_TO;
            OracleParameter[] parameters;
            try
            {
                if (mctrlineitem.HOME_DEPT_TO != "")
                {

                    sql = @" select count(*) 
               from mctr_locn_dept_mv dpt
              where setid = :v_setid 
                and deptid = :home_dept_to
                and acctg_loc_cd7 = :home_loc_to
                and resource_sub_cat = :rsc_to
                and effdt = (select max(a_ed.effdt) from mctr_locn_dept_mv a_ed
                              where setid = dpt.setid
                                and deptid = dpt.deptid
                                and acctg_loc_cd7 = dpt.acctg_loc_cd7
                                and effdt <= :v_cow_date
                                and resource_sub_cat = dpt.resource_sub_cat)";
                    parameters = new OracleParameter[5];
                    parameters[0] = new OracleParameter(":v_setid", OracleDbType.Varchar2, mctrlineitem.SETID, ParameterDirection.Input);
                    parameters[1] = new OracleParameter(":home_dept_to", OracleDbType.Varchar2, mctrlineitem.HOME_DEPT_TO, ParameterDirection.Input);
                    parameters[2] = new OracleParameter(":home_loc_to", OracleDbType.Varchar2, mctrlineitem.HOME_LOC_TO, ParameterDirection.Input);
                    parameters[3] = new OracleParameter(":rsc_to", OracleDbType.Varchar2, mctrlineitem.RSC_TO, ParameterDirection.Input);
                    parameters[4] = new OracleParameter(":v_cow_date", OracleDbType.Date, v_cow_date, ParameterDirection.Input);

                    v_count = entities.Database.SqlQuery<int>(sql, parameters).SingleOrDefault();
                    mctrcreateform.V_Count.Add("RSC", v_count);
                }
                if (v_count == 0 && mctrlineitem.WORK_DEPT_TO != "")
                {
                    sql = @" select count(*) 
               from mctr_locn_dept_mv dpt
              where setid = :v_setid
                and deptid = :work_dept_to
                and acctg_loc_cd7 = :work_loc_to
                and resource_sub_cat = :rsc_to
                and effdt = (select max(a_ed.effdt) from mctr_locn_dept_mv a_ed
                              where setid = dpt.setid
                                and deptid = dpt.deptid
                                and acctg_loc_cd7 = dpt.acctg_loc_cd7
                                and effdt <= :v_cow_date
                                and resource_sub_cat = dpt.resource_sub_cat)";
                    parameters = new OracleParameter[5];
                    parameters[0] = new OracleParameter(":v_setid", OracleDbType.Varchar2, mctrlineitem.SETID, ParameterDirection.Input);
                    parameters[1] = new OracleParameter(":work_dept_to", OracleDbType.Varchar2, mctrlineitem.WORK_DEPT_TO, ParameterDirection.Input);
                    parameters[2] = new OracleParameter(":work_loc_to", OracleDbType.Varchar2, mctrlineitem.WORK_LOC_TO, ParameterDirection.Input);
                    parameters[3] = new OracleParameter(":rsc_to", OracleDbType.Varchar2, mctrlineitem.RSC_TO, ParameterDirection.Input);
                    parameters[4] = new OracleParameter(":v_cow_date", OracleDbType.Date, v_cow_date, ParameterDirection.Input);

                    v_count = entities.Database.SqlQuery<int>(sql, parameters).SingleOrDefault();
                    mctrcreateform.V_Count.Add("RSCcount", v_count);
                }


                sql = @" select count(*) 
             from mctr_rsc_mv a 
            where a.resource_sub_cat = :rsc_to
              and a.effdt = (select max(a_ed.effdt) from mctr_rsc_mv a_ed
                              where a.resource_sub_cat = a_ed.resource_sub_cat
                                and a_ed.effdt <= :v_cow_date)";
                parameters = new OracleParameter[2];
                parameters[0] = new OracleParameter(":rsc_to", OracleDbType.Varchar2, mctrlineitem.RSC_TO, ParameterDirection.Input);
                parameters[1] = new OracleParameter(":v_cow_date", OracleDbType.Date, v_cow_date, ParameterDirection.Input);


                v_count = entities.Database.SqlQuery<int>(sql, parameters).SingleOrDefault();
                mctrcreateform.V_Count.Add("RSCLOV", v_count);
            }
            catch (Exception ex)
            {
                logger.Error("Error from  Mctr.DataAccess.mctrLineItemrscToPostTextItemOpenLOV():" + ex.Message);
            }



            return mctrCreateForm;

        }

        public IEnumerable<MctrCreateForm> mctrLineItemaccountToPostTextItem(IEnumerable<MctrCreateForm> mctrCreateForm)
        {

            MctrCreateForm mctrcreateform = mctrCreateForm.First();
            MctrLineItem mctrlineitem = mctrcreateform.mctrLineItem.First();

            mctrcreateform.V_Count = new Dictionary<string, int>();
            mctrcreateform.V_Count.Clear();
            String sql = "";
            var v_count = 0;
            OracleParameter[] parameters;
            try
            {
                try
                {
                    sql = @"select count(*) 
             from mctr_account_v
            where setid = :work_bugl_to
              and account = :account_to
              and eff_status = 'A'";

                    parameters = new OracleParameter[2];
                    parameters[0] = new OracleParameter(":work_bugl_to", OracleDbType.Varchar2, mctrlineitem.WORK_BUGL_TO, ParameterDirection.Input);
                    parameters[1] = new OracleParameter(":account_to", OracleDbType.Varchar2, mctrlineitem.ACCOUNT_TO, ParameterDirection.Input);
                    sql = "select count(*) from mctr_account_v where setid ='" + mctrlineitem.WORK_BUGL_TO + "' and account = '" + mctrlineitem.ACCOUNT_TO + "' and eff_status = 'A'";
                    int response = entities.Database.SqlQuery<int>(sql).Single<int>();
                    mctrcreateform.V_Count.Add("account_to", response);
                }
                catch (Exception ex)
                {
                    logger.Error("Error at MctrCreateFormRepository.mctrLineItemaccountToPostTextItem() with the message:" + ex);
                    mctrcreateform.V_Count.Add("account_to", v_count);
                }

                try
                {
                    if (mctrlineitem.PROJ_TRANS_TYPE_TO == "LBR")
                    {
                        sql = @" select count(*) 
                 from mctr_major_acct_v
                where major_account_nbr7 = substr(:account_to,1,4)
                  and eff_status = 'A'
                  and wpd_indirect_flg7 = 'Y'
                  and :proj_trans_type_to = 'LBR'";
                        parameters = new OracleParameter[2];
                        parameters[0] = new OracleParameter(":account_to", OracleDbType.Varchar2, mctrlineitem.ACCOUNT_TO, ParameterDirection.Input);
                        parameters[1] = new OracleParameter(":proj_trans_type_to", OracleDbType.Varchar2, mctrlineitem.PROJ_TRANS_TYPE_TO, ParameterDirection.Input);

                        v_count = entities.Database.SqlQuery<int>(sql, parameters).Single();
                        mctrcreateform.V_Count.Add("account_to_wpd", v_count);
                    }
                }
                catch (Exception ex)
                {
                    logger.Error("Error at MctrCreateFormRepository.mctrLineItemaccountToPostTextItem() with the message:" + ex);
                    mctrcreateform.V_Count.Add("account_to_wpd", v_count);
                }

            }
            catch (Exception ex)
            {

                logger.Error(ex.Message);
            }
            return mctrCreateForm;
        }

        public IEnumerable<MctrCreateForm> mctrLineItemestmtgPricgCdFromPostTextItemOpenLOV(IEnumerable<MctrCreateForm> mctrCreateForm)
        {

            MctrCreateForm mctrcreateform = mctrCreateForm.First();
            MctrLineItem mctrlineitem = mctrcreateform.mctrLineItem.First();
            mctrcreateform.V_Count = new Dictionary<string, int>();
            mctrcreateform.V_Count.Clear();

            String sql = "";
            var v_count = 0;
            OracleParameter[] parameters;

            try
            {
                sql = @"select count(*)
           from mctr_estmtg_pricg_v
          where estmtg_pricg_cd7 = :0
            and setid = :1";

                parameters = new OracleParameter[2];
                parameters[0] = new OracleParameter(":0", OracleDbType.Varchar2, mctrlineitem.ESTMTG_PRICG_CD_FROM, ParameterDirection.Input);
                parameters[1] = new OracleParameter(":1", OracleDbType.Varchar2, mctrlineitem.SETID, ParameterDirection.Input);
                v_count = entities.Database.SqlQuery<int>(sql, parameters).SingleOrDefault();
                mctrcreateform.V_Count.Add("estmtgPricg", v_count);

                if (v_count == 0)
                {

                    sql = @" select count(*) 
             from mctr_estmtg_pricg_v
            where setid = :0";
                    parameters = new OracleParameter[1];
                    parameters[0] = new OracleParameter(":v_setid", OracleDbType.Varchar2, mctrlineitem.SETID, ParameterDirection.Input);

                    v_count = entities.Database.SqlQuery<int>(sql, parameters).SingleOrDefault();
                    mctrcreateform.V_Count.Add("estmtgPricgCd", v_count);
                }

            }
            catch (Exception ex)
            {
                logger.Error(ex.Message);
            }
            return mctrCreateForm;
        }

        public IEnumerable<MctrCreateForm> mctrLineItemquantityFromPostTextItem(IEnumerable<MctrCreateForm> mctrCreateForm)
        {

            MctrCreateForm mctrcreateform = mctrCreateForm.First();
            MctrLineItem mctrlineitem = mctrcreateform.mctrLineItem.First();
            mctrcreateform.V_Count = new Dictionary<string, int>();
            mctrcreateform.V_CountDouble = new Dictionary<string, Double>();
            mctrcreateform.V_Count.Clear();

            String sql = "";
            var v_count = 0;
            Double v_rate;
            OracleParameter[] parameters;

            try
            {
                try
                {
                    sql = @"select count(*) 
                     from mctr_major_acct_v
                    where major_account_nbr7 = substr(:account_to,1,4)
                      and eff_status = 'A'
                      and wpd_indirect_flg7 = 'Y'
                      and :proj_trans_type_to = 'LBR'";

                    parameters = new OracleParameter[2];
                    parameters[0] = new OracleParameter(":account_to", OracleDbType.Varchar2, mctrlineitem.ACCOUNT_TO, ParameterDirection.Input);
                    parameters[1] = new OracleParameter(":proj_trans_type_to", OracleDbType.Varchar2, mctrlineitem.PROJ_TRANS_TYPE_TO, ParameterDirection.Input);
                    v_count = entities.Database.SqlQuery<int>(sql, parameters).SingleOrDefault();
                    mctrcreateform.V_Count.Add("quantityWpdSet", v_count);
                }
                catch (Exception e)
                {
                    mctrcreateform.V_Count.Add("quantityWpdSet", 0);
                    logger.Error(e.Message);
                }

                if ((mctrcreateform.py_cy_status == ("PY")))
                {
                    if ((Convert.ToInt32(mctrlineitem.FYEAR) > 2007 && mctrlineitem.AFFILIATE_FROM != null))

                    {
                        mctrlineitem.SETID = mctrlineitem.AFFILIATE_FROM;
                    }

                    else
                    {
                        mctrlineitem.SETID = mctrlineitem.HOME_BUGL_FROM;

                    }

                    try
                    {

                        sql = @" select rate 
               from mctr_lbr_rate
              where setid = :v_setid
                and fiscal_year = :fiscal_year
                and labor_rate_cd7 = :labor_rate_cd7_from
                and proj_trans_code = :proj_trans_code_from";
                        parameters = new OracleParameter[4];
                        parameters[0] = new OracleParameter(":v_setid", OracleDbType.Varchar2, mctrlineitem.SETID, ParameterDirection.Input);
                        parameters[1] = new OracleParameter(":fiscal_year", OracleDbType.Int16, mctrlineitem.FYEAR, ParameterDirection.Input);
                        parameters[2] = new OracleParameter(":labor_rate_cd7_from", OracleDbType.Varchar2, mctrlineitem.LABOR_RATE_CD7_FROM, ParameterDirection.Input);
                        parameters[3] = new OracleParameter(":proj_trans_code_from", OracleDbType.Varchar2, mctrlineitem.PROJ_TRANS_CODE_FROM, ParameterDirection.Input);

                        v_rate = entities.Database.SqlQuery<Double>(sql, parameters).SingleOrDefault();
                        mctrcreateform.V_CountDouble.Add("quantityratefrom", v_rate);
                    }
                    catch (Exception e)
                    {
                        mctrcreateform.V_CountDouble.Add("quantityratefrom", 0);
                        logger.Error(e.Message);
                    }
                }


                else
                {
                    try
                    {
                        sql = @" select rate 
               from mctr_lbr_rate_v
              where setid = :home_bugl_from
                and fiscal_year = :fiscal_year
                and labor_rate_cd7 = :labor_rate_cd7_from
                and proj_trans_code = :proj_trans_code_from";
                        parameters = new OracleParameter[4];
                        parameters[0] = new OracleParameter(":home_bugl_from", OracleDbType.Varchar2, mctrlineitem.HOME_BUGL_FROM, ParameterDirection.Input);
                        parameters[1] = new OracleParameter(":fiscal_year", OracleDbType.Int16, mctrlineitem.FYEAR, ParameterDirection.Input);
                        parameters[2] = new OracleParameter(":labor_rate_cd7_from", OracleDbType.Varchar2, mctrlineitem.LABOR_RATE_CD7_FROM, ParameterDirection.Input);
                        parameters[3] = new OracleParameter(":proj_trans_code_from", OracleDbType.Varchar2, mctrlineitem.PROJ_TRANS_CODE_FROM, ParameterDirection.Input);

                        v_rate = entities.Database.SqlQuery<Double>(sql, parameters).SingleOrDefault();
                        mctrcreateform.V_CountDouble.Add("quantityratefromV", v_rate);
                    }
                    catch (Exception e)
                    {
                        logger.Error("Error from  Mctr.DataAccess.mctrLineItemquantityFromPostTextItem():" + e.Message);
                        mctrcreateform.V_CountDouble.Add("quantityratefromV", 0);
                    }
                }

                if ((mctrcreateform.py_cy_status == ("PY")))
                {
                    if ((Convert.ToInt32(mctrlineitem.FYEAR) > 2007 && mctrlineitem.AFFILIATE_FROM != null))

                    {
                        mctrlineitem.SETID = mctrlineitem.AFFILIATE_TO;
                    }

                    else
                    {
                        mctrlineitem.SETID = mctrlineitem.HOME_BUGL_TO;

                    }

                    try
                    {

                        sql = @" select rate 
               from mctr_lbr_rate
              where setid = :v_setid
                and fiscal_year = :fiscal_year
                and labor_rate_cd7 = :labor_rate_cd7_to
                and proj_trans_code = :proj_trans_code_to";
                        parameters = new OracleParameter[4];
                        parameters[0] = new OracleParameter(":v_setid", OracleDbType.Varchar2, mctrlineitem.SETID, ParameterDirection.Input);
                        parameters[1] = new OracleParameter(":fiscal_year", OracleDbType.Int16, mctrlineitem.FYEAR, ParameterDirection.Input);
                        parameters[2] = new OracleParameter(":labor_rate_cd7_to", OracleDbType.Varchar2, mctrlineitem.LABOR_RATE_CD7_TO, ParameterDirection.Input);
                        parameters[3] = new OracleParameter(":proj_trans_code_to", OracleDbType.Varchar2, mctrlineitem.PROJ_TRANS_CODE_TO, ParameterDirection.Input);

                        v_rate = entities.Database.SqlQuery<Double>(sql, parameters).SingleOrDefault();
                        mctrcreateform.V_CountDouble.Add("quantityrateto", v_rate);
                    }
                    catch (Exception e)
                    {
                        mctrcreateform.V_CountDouble.Add("quantityrateto", 0);
                        logger.Error(e.Message);
                    }
                }


                else
                {
                    try
                    {
                        sql = @" select rate 
               from mctr_lbr_rate_v
              where setid = :home_bugl_to
                and fiscal_year = :fiscal_year
                and labor_rate_cd7 = :labor_rate_cd7_to
                and proj_trans_code = :proj_trans_code_to";
                        parameters = new OracleParameter[4];
                        parameters[0] = new OracleParameter(":home_bugl_to", OracleDbType.Varchar2, mctrlineitem.HOME_BUGL_TO, ParameterDirection.Input);
                        parameters[1] = new OracleParameter(":fiscal_year", OracleDbType.Int16, mctrlineitem.FYEAR, ParameterDirection.Input);
                        parameters[2] = new OracleParameter(":labor_rate_cd7_to", OracleDbType.Varchar2, mctrlineitem.LABOR_RATE_CD7_TO, ParameterDirection.Input);
                        parameters[3] = new OracleParameter(":proj_trans_code_to", OracleDbType.Varchar2, mctrlineitem.PROJ_TRANS_CODE_TO, ParameterDirection.Input);

                        v_rate = entities.Database.SqlQuery<Double>(sql, parameters).SingleOrDefault();
                        mctrcreateform.V_CountDouble.Add("quantityratetoV", v_rate);
                    }
                    catch (Exception e)
                    {
                        mctrcreateform.V_CountDouble.Add("quantityratetoV", 0);
                        logger.Error(e.Message);
                    }
                }

            }
            catch (Exception ex)
            {
                logger.Error(ex.Message);
            }
            return mctrCreateForm;

        }

        public IEnumerable<MctrCreateForm> submitBtnmctrLineItemquantityFromPostTextItem(IEnumerable<MctrCreateForm> mctrCreateForm)
        {

            MctrCreateForm mctrcreateform = mctrCreateForm.First();
            MctrLineItem mctrlineitem = mctrcreateform.mctrLineItem.First();
            mctrcreateform.V_Count = new Dictionary<string, int>();
            mctrcreateform.V_CountDouble = new Dictionary<string, Double>();
            mctrcreateform.V_Count.Clear();

            String sql = "";
            Double v_rate;
            OracleParameter[] parameters;

            try
            {
                if (mctrcreateform.py_cy_status == "PY")
                {
                    if ((Convert.ToInt32(mctrlineitem.FYEAR) > 2007 && mctrlineitem.AFFILIATE_FROM != null))

                    {
                        mctrlineitem.SETID = mctrlineitem.AFFILIATE_FROM;
                    }

                    else
                    {
                        mctrlineitem.SETID = mctrlineitem.HOME_BUGL_FROM;

                    }

                    try
                    {

                        sql = @" select rate 
                from mctr_lbr_rate
                where setid = :v_setid
                and fiscal_year = :fiscal_year
                and labor_rate_cd7 = :labor_rate_cd7_from
                and proj_trans_code = :proj_trans_code_from
                and (rate is not null or (1 > rate and rate > -1))";
                        parameters = new OracleParameter[4];
                        parameters[0] = new OracleParameter(":v_setid", OracleDbType.Varchar2, mctrlineitem.SETID, ParameterDirection.Input);
                        parameters[1] = new OracleParameter(":fiscal_year", OracleDbType.Int16, mctrlineitem.FYEAR, ParameterDirection.Input);
                        parameters[2] = new OracleParameter(":labor_rate_cd7_from", OracleDbType.Varchar2, mctrlineitem.LABOR_RATE_CD7_FROM, ParameterDirection.Input);
                        parameters[3] = new OracleParameter(":proj_trans_code_from", OracleDbType.Varchar2, mctrlineitem.PROJ_TRANS_CODE_FROM, ParameterDirection.Input);

                        v_rate = entities.Database.SqlQuery<Double>(sql, parameters).SingleOrDefault();
                        mctrcreateform.V_CountDouble.Add("pyquantityratefrom", v_rate);
                    }
                    catch (Exception e)
                    {
                        logger.Error("Error from  Mctr.DataAccess.submitBtnmctrLineItemquantityFromPostTextItem():" + e.Message);
                        mctrcreateform.V_CountDouble.Add("pyquantityratefrom", 0);

                    }

                    try
                    {

                        sql = @" select rate 
                            from mctr_lbr_rate
                            where setid = :v_setid
                            and fiscal_year = :fiscal_year
                            and labor_rate_cd7 = :labor_rate_cd7_to
                            and proj_trans_code = :proj_trans_code_to";
                        parameters = new OracleParameter[4];
                        parameters[0] = new OracleParameter(":v_setid", OracleDbType.Varchar2, mctrlineitem.SETID, ParameterDirection.Input);
                        parameters[1] = new OracleParameter(":fiscal_year", OracleDbType.Int16, mctrlineitem.FYEAR, ParameterDirection.Input);
                        parameters[2] = new OracleParameter(":labor_rate_cd7_to", OracleDbType.Varchar2, mctrlineitem.LABOR_RATE_CD7_TO, ParameterDirection.Input);
                        parameters[3] = new OracleParameter(":proj_trans_code_to", OracleDbType.Varchar2, mctrlineitem.PROJ_TRANS_CODE_TO, ParameterDirection.Input);

                        v_rate = entities.Database.SqlQuery<Double>(sql, parameters).SingleOrDefault();
                        mctrcreateform.V_CountDouble.Add("pyquantityrateto", v_rate);
                    }
                    catch (Exception e)
                    {
                        logger.Error(e.Message);
                        mctrcreateform.V_CountDouble.Add("pyquantityrateto", 0);
                    }

                    try
                    {

                        sql = @" select rate 
                                 from mctr_lbr_rate_v
                                 where setid = :v_setid
                                 and fiscal_year = :fiscal_year
                                 and labor_rate_cd7 = :labor_rate_cd7_from
                                 and proj_trans_code = :proj_trans_code_from
                                 and (rate is not null or (1 > rate and rate > -1))";
                        parameters = new OracleParameter[4];
                        parameters[0] = new OracleParameter(":v_setid", OracleDbType.Varchar2, mctrlineitem.SETID, ParameterDirection.Input);
                        parameters[1] = new OracleParameter(":fiscal_year", OracleDbType.Int16, mctrlineitem.FYEAR, ParameterDirection.Input);
                        parameters[2] = new OracleParameter(":labor_rate_cd7_from", OracleDbType.Varchar2, mctrlineitem.LABOR_RATE_CD7_FROM, ParameterDirection.Input);
                        parameters[3] = new OracleParameter(":proj_trans_code_from", OracleDbType.Varchar2, mctrlineitem.PROJ_TRANS_CODE_FROM, ParameterDirection.Input);

                        v_rate = entities.Database.SqlQuery<Double>(sql, parameters).SingleOrDefault();
                        mctrcreateform.V_CountDouble.Add("cyquantityratefrom", v_rate);
                    }
                    catch (Exception e)
                    {
                        logger.Error(e.Message);
                        mctrcreateform.V_CountDouble.Add("cyquantityratefrom", 0);

                    }
                }
            }
            catch (Exception e)
            {
                logger.Error(e.Message);
                throw;
            }
            return mctrCreateForm;

        }

        public IEnumerable<MctrCreateForm> mctrLineItemworkLocToPostTextItemOpenLOV(IEnumerable<MctrCreateForm> mctrCreateForm)
        {

            MctrCreateForm mctrcreateform = mctrCreateForm.First();
            MctrLineItem mctrlineitem = mctrcreateform.mctrLineItem.First();
            mctrcreateform.V_Count = new Dictionary<string, int>();
            mctrcreateform.V_Count.Clear();

            string sql = "";
            var v_count = 0;
            var v_cow_date = DateTime.Parse(mctrcreateform.COW);
            var period_to = DateTime.Parse(mctrcreateform.PeriodTo);
            OracleParameter[] parameters;
            try
            {
                if (mctrlineitem.WORK_DEPT_TO != "")
                {
                    sql = @"select end_dt from mctr_cow_v";
                    v_cow_date = entities.Database.SqlQuery<DateTime>(sql).SingleOrDefault();

                }
                if (mctrlineitem.WORK_LOC_TO != null)
                {

                    try
                    {
                        sql = @" select count(*) 
               from mctr_locn_dept_mv a,
                    mctr_locn_dept_mv a2
              where a.setid = :v_setid
                and a.deptid = :work_dept_to
                and a.acctg_loc_cd7 = :work_loc_to
                and a.effdt = (select max(a_ed.effdt) 
                                 from mctr_locn_dept_mv a_ed
                                where a.setid = a_ed.setid
                                  and a.acctg_loc_cd7 = a_ed.acctg_loc_cd7
                                  and a.deptid = a_ed.deptid
                                  and a_ed.effdt <= :period_to)
                and a.setid = a2.setid 
                and a.deptid = a2.deptid
                and a.acctg_loc_cd7 = a2.acctg_loc_cd7
                and a2.effdt = (select max(a2_ed.effdt) 
                                  from mctr_locn_dept_mv a2_ed
                                 where a2.setid = a2_ed.setid
                                   and a2.acctg_loc_cd7 = a2_ed.acctg_loc_cd7
                                   and a2.deptid = a2_ed.deptid
                                   and a2_ed.effdt <= :v_cow_date)";
                        parameters = new OracleParameter[5];
                        parameters[0] = new OracleParameter(":v_setid", OracleDbType.Varchar2, mctrlineitem.SETID, ParameterDirection.Input);
                        parameters[1] = new OracleParameter(":work_dept_to", OracleDbType.Varchar2, mctrlineitem.WORK_DEPT_TO, ParameterDirection.Input);
                        parameters[2] = new OracleParameter(":work_loc_to", OracleDbType.Varchar2, mctrlineitem.WORK_LOC_TO, ParameterDirection.Input);
                        parameters[3] = new OracleParameter(":period_to", OracleDbType.Date, period_to, ParameterDirection.Input);
                        parameters[4] = new OracleParameter(":v_cow_date", OracleDbType.Date, v_cow_date, ParameterDirection.Input);
                        v_count = entities.Database.SqlQuery<int>(sql, parameters).SingleOrDefault();

                        mctrcreateform.V_Count.Add("WorkLoc", v_count);
                    }
                    catch (Exception e)
                    {
                        logger.Error(e.Message);
                        throw;
                    }
                }

                if (mctrlineitem.WORK_LOC_TO == "" || v_count == 0)
                {
                    try
                    {
                        sql = @" select count(*) 
               from mctr_locn_dept_mv a,
                    mctr_locn_dept_mv a2
              where a.setid = :v_setid
                and a.deptid = :work_dept_to
                and a.effdt = (select max(a_ed.effdt) 
                                 from mctr_locn_dept_mv a_ed
                                where a.setid = a_ed.setid
                                  and a.acctg_loc_cd7 = a_ed.acctg_loc_cd7
                                  and a.deptid = a_ed.deptid
                                  and a_ed.effdt <= :period_to)
                and a.setid = a2.setid 
                and a.deptid = a2.deptid
                and a.acctg_loc_cd7 = a2.acctg_loc_cd7
                and a2.effdt = (select max(a2_ed.effdt) 
                                  from mctr_locn_dept_mv a2_ed
                                 where a2.setid = a2_ed.setid
                                   and a2.acctg_loc_cd7 = a2_ed.acctg_loc_cd7
                                   and a2.deptid = a2_ed.deptid
                                   and a2_ed.effdt <= :v_cow_date)";
                        parameters = new OracleParameter[4];
                        parameters[0] = new OracleParameter(":v_setid", OracleDbType.Varchar2, mctrlineitem.SETID, ParameterDirection.Input);
                        parameters[1] = new OracleParameter(":work_dept_to", OracleDbType.Varchar2, mctrlineitem.WORK_DEPT_TO, ParameterDirection.Input);
                        parameters[2] = new OracleParameter(":period_to", OracleDbType.Date, period_to, ParameterDirection.Input);
                        parameters[3] = new OracleParameter(":v_cow_date", OracleDbType.Date, v_cow_date, ParameterDirection.Input);

                        v_count = entities.Database.SqlQuery<int>(sql, parameters).SingleOrDefault();
                        mctrcreateform.V_Count.Add("WorkLocTo", v_count);
                    }
                    catch (Exception e)
                    {
                        logger.Error(e.Message);
                        throw;
                    }
                }
                if (mctrlineitem.WORK_LOC_TO != "")
                {
                    try
                    {
                        sql = @"select count(*) 
             from mctr_locn_mv a 
            where a.setid = :v_setid
              and a.acctg_loc_cd7 = :work_loc_to
              and a.effdt = (select max(a_ed.effdt)
                               from mctr_locn_mv a_ed
                              where a.setid = a_ed.setid
                                and a.acctg_loc_cd7 = a_ed.acctg_loc_cd7
                                and a_ed.effdt <= :period_to)
              and a.eff_status = 'A'";

                        parameters = new OracleParameter[3];
                        parameters[0] = new OracleParameter(":v_setid", OracleDbType.Varchar2, mctrlineitem.SETID, ParameterDirection.Input);
                        parameters[1] = new OracleParameter(":work_loc_to", OracleDbType.Varchar2, mctrlineitem.WORK_LOC_TO, ParameterDirection.Input);
                        parameters[2] = new OracleParameter(":period_to", OracleDbType.Date, period_to, ParameterDirection.Input);
                        v_count = entities.Database.SqlQuery<int>(sql, parameters).SingleOrDefault();
                    }
                    catch (Exception e)
                    {
                        logger.Error(e.Message);
                        throw;
                    }
                    mctrcreateform.V_Count.Add("WorkLocToLOV", v_count);
                }
            }

            catch (Exception ex)
            {
                logger.Error(ex.Message);
                throw;
            }

            return mctrCreateForm;

        }

        public IEnumerable<MctrCreateForm> mctrLineItemworkDeptToPostTextItemOpenLOV(IEnumerable<MctrCreateForm> mctrCreateForm)
        {

            MctrCreateForm mctrcreateform = mctrCreateForm.First();
            MctrLineItem mctrlineitem = mctrcreateform.mctrLineItem.First();
            mctrcreateform.V_Count = new Dictionary<string, int>();
            mctrcreateform.V_Count.Clear();

            String sql = "";
            var v_count = 0;
            var v_cow_date = DateTime.Now;
            var periodTo = DateTime.Parse(mctrcreateform.PeriodTo);
            OracleParameter[] parameters;
            try
            {
                if (mctrlineitem.WORK_DEPT_TO != "")
                {
                    sql = @"select end_dt from mctr_cow_v";
                    v_cow_date = entities.Database.SqlQuery<DateTime>(sql).SingleOrDefault();
                }


                sql = @" select count(*) 
             from mctr_locn_dept_mv a,
                  mctr_locn_dept_mv a2
            where a.setid = :v_setid
              and a.deptid = :work_dept_to
              and a.effdt = (select max(a_ed.effdt) 
                               from mctr_locn_dept_mv a_ed
                              where a.setid = a_ed.setid
                                and a.acctg_loc_cd7 = a_ed.acctg_loc_cd7
                                and a.deptid = a_ed.deptid
                                and a_ed.effdt <= :period_to)
              and a.setid = a2.setid 
              and a.deptid = a2.deptid
              and a.acctg_loc_cd7 = a2.acctg_loc_cd7
              and a2.effdt = (select max(a2_ed.effdt) 
                                from mctr_locn_dept_mv a2_ed
                               where a2.setid = a2_ed.setid
                                 and a2.acctg_loc_cd7 = a2_ed.acctg_loc_cd7
                                 and a2.deptid = a2_ed.deptid
                                 and a2_ed.effdt <= :v_cow_date)";
                parameters = new OracleParameter[4];
                parameters[0] = new OracleParameter(":v_setid", OracleDbType.Varchar2, mctrlineitem.SETID, ParameterDirection.Input);
                parameters[1] = new OracleParameter(":work_dept_to", OracleDbType.Varchar2, mctrlineitem.WORK_DEPT_TO, ParameterDirection.Input);
                parameters[2] = new OracleParameter(":period_to", OracleDbType.Date, periodTo, ParameterDirection.Input);
                parameters[3] = new OracleParameter(":v_cow_date", OracleDbType.Date, v_cow_date, ParameterDirection.Input);

                v_count = entities.Database.SqlQuery<int>(sql, parameters).SingleOrDefault();
                mctrcreateform.V_Count.Add("WorkDept", v_count);
            }
            catch (Exception ex)
            {
                logger.Error(ex.Message);
                throw;
            }
            return mctrCreateForm;

        }

        public IEnumerable<MctrCreateForm> mctrLineItemhomeBuglToPostTextItem(IEnumerable<MctrCreateForm> mctrCreateForm)
        {

            MctrCreateForm mctrcreateform = mctrCreateForm.First();
            MctrLineItem mctrlineitem = mctrcreateform.mctrLineItem.First();
            mctrcreateform.V_Count = new Dictionary<string, int>();
            mctrcreateform.V_Count.Clear();

            String sql = "";
            var v_count = 0;
            OracleParameter[] parameters;
            try
            {
                try
                {
                    sql = @"select count(*) 
               from mctr_bu_profile
              where business_unit = :home_bugl_to";

                    parameters = new OracleParameter[1];
                    parameters[0] = new OracleParameter(":home_bugl_to", OracleDbType.Varchar2, mctrlineitem.HOME_BUGL_TO, ParameterDirection.Input);
                    v_count = entities.Database.SqlQuery<int>(sql, parameters).SingleOrDefault();
                    mctrcreateform.V_Count.Add("buCheck", v_count);
                }
                catch (Exception e)
                {

                    logger.Error("Error from  Mctr.DataAccess.mctrLineItemhomeBuglToPostTextItem():" + e.Message);
                    mctrcreateform.V_Count.Add("buCheck", 0);

                }

                try
                {
                    sql = @" select count(*) 
               from mctr_bus_unit_v b
              where b.business_unit =:home_bugl_to
                and exists
                   (select rb.business_unit from mctr_role_bu rb
                     where rb.bems = :session_bems
                       and ((rb.group_cd7 = b.group_cd7 and rb.business_unit = b.business_unit)
                        or  (rb.group_cd7 = b.group_cd7 and rb.business_unit = '**')))
                and exists (select bp.business_unit from mctr_bu_profile bp
                             where bp.business_unit = b.business_unit)";
                    parameters = new OracleParameter[2];
                    parameters[0] = new OracleParameter(":home_bugl_to", OracleDbType.Varchar2, mctrlineitem.HOME_BUGL_TO, ParameterDirection.Input);
                    parameters[1] = new OracleParameter(":session_bems", OracleDbType.Varchar2, mctrcreateform.session_bems, ParameterDirection.Input);

                    v_count = entities.Database.SqlQuery<int>(sql, parameters).SingleOrDefault();
                    mctrcreateform.V_Count.Add("buAuthority", v_count);
                }
                catch (Exception e)
                {
                    logger.Error(e.Message);
                    mctrcreateform.V_Count.Add("buAuthority", 0);
                }
            }
            catch (Exception ex)
            {
                logger.Error(ex.Message);
            }
            return mctrCreateForm;
        }

        public IEnumerable<MctrCreateForm> mctrLineItemhomeDeptToPostTextItemOpenLOV(IEnumerable<MctrCreateForm> mctrCreateForm)
        {

            MctrCreateForm mctrcreateform = mctrCreateForm.First();
            MctrLineItem mctrlineitem = mctrcreateform.mctrLineItem.First();
            mctrcreateform.V_Count = new Dictionary<string, int>();
            mctrcreateform.V_Count.Clear();

            String sql = "";
            var v_count = 0;
            var v_cow_date = DateTime.Now;
            var periodTo = DateTime.Parse(mctrcreateform.PeriodTo);
            OracleParameter[] parameters;
            try
            {
                if (mctrlineitem.HOME_DEPT_TO != null)
                {
                    sql = @"select end_dt from mctr_cow_v";
                    v_cow_date = entities.Database.SqlQuery<DateTime>(sql).SingleOrDefault();
                }

                if (mctrlineitem.HOME_LOC_TO != null)
                {
                    sql = @"select count(*) 
             from mctr_locn_dept_mv a,
                  mctr_locn_dept_mv a2
            where a.setid = :0
              and a.deptid = :1
              and a.effdt = (select max(a_ed.effdt) 
                               from mctr_locn_dept_mv a_ed
                              where a.setid = a_ed.setid
                                and a.acctg_loc_cd7 = a_ed.acctg_loc_cd7
                                and a.deptid = a_ed.deptid
                                and a_ed.effdt <= :2)
              and a.setid = a2.setid
              and a.deptid = a2.deptid
              and a.acctg_loc_cd7 = a2.acctg_loc_cd7
              and a2.effdt = (select max(a2_ed.effdt) 
                                from mctr_locn_dept_mv a2_ed
                               where a2.setid = a2_ed.setid
                                 and a2.acctg_loc_cd7 = a2_ed.acctg_loc_cd7
                                 and a2.deptid = a2_ed.deptid
                                 and a2_ed.effdt <= :3)";
                    parameters = new OracleParameter[4];
                    parameters[0] = new OracleParameter(":v_setid", OracleDbType.Varchar2, mctrlineitem.SETID, ParameterDirection.Input);
                    parameters[1] = new OracleParameter(":home_dept_to", OracleDbType.Varchar2, mctrlineitem.HOME_DEPT_TO, ParameterDirection.Input);
                    parameters[2] = new OracleParameter(":period_to", OracleDbType.Date, periodTo, ParameterDirection.Input);
                    parameters[3] = new OracleParameter(":v_cow_date", OracleDbType.Date, v_cow_date, ParameterDirection.Input);

                    v_count = entities.Database.SqlQuery<int>(sql, parameters).SingleOrDefault();

                }
            }
            catch (Exception ex)
            {
                logger.Error(ex.Message);
                throw;
            }



            return mctrCreateForm;

        }
        public IEnumerable<MctrCreateForm> mctrLineItemhomeLocToPostTextItemOpenLOV(IEnumerable<MctrCreateForm> mctrCreateForm)
        {

            MctrCreateForm mctrcreateform = mctrCreateForm.First();
            MctrLineItem mctrlineitem = mctrcreateform.mctrLineItem.First();
            mctrcreateform.V_Count = new Dictionary<string, int>();
            mctrcreateform.V_Count.Clear();

            String sql = "";
            var v_count = 0;
            var v_cow_date = DateTime.Parse(mctrcreateform.COW);
            var period_to = DateTime.Parse(mctrcreateform.PeriodTo);
            OracleParameter[] parameters;
            try
            {
                if (mctrlineitem.HOME_DEPT_TO != null)
                {
                    sql = @"select end_dt from mctr_cow_v";
                    v_cow_date = entities.Database.SqlQuery<DateTime>(sql).SingleOrDefault();
                }

                if (mctrlineitem.HOME_LOC_TO != null)
                {
                    sql = @" select count(*) 
               from mctr_locn_dept_mv a,
                    mctr_locn_dept_mv a2
              where a.setid = :v_setid
                and a.deptid = :home_dept_to
                and a.acctg_loc_cd7 = :home_loc_to
                and a.effdt = (select max(a_ed.effdt) 
                                 from mctr_locn_dept_mv a_ed 
                                where a.setid = a_ed.setid
                                  and a.acctg_loc_cd7 = a_ed.acctg_loc_cd7
                                  and a.deptid = a_ed.deptid
                                  and a_ed.effdt <= :period_to)
                and a.setid = a2.setid 
                and a.deptid = a2.deptid
                and a.acctg_loc_cd7 = a2.acctg_loc_cd7
                and a2.effdt = (select max(a2_ed.effdt) 
                                  from mctr_locn_dept_mv a2_ed
                                 where a2.setid = a2_ed.setid
                                   and a2.acctg_loc_cd7 = a2_ed.acctg_loc_cd7
                                   and a2.deptid = a2_ed.deptid
                                   and a2_ed.effdt <= :v_cow_date)";
                    parameters = new OracleParameter[5];
                    parameters[0] = new OracleParameter(":v_setid", OracleDbType.Varchar2, mctrlineitem.SETID, ParameterDirection.Input);
                    parameters[1] = new OracleParameter(":home_dept_to", OracleDbType.Varchar2, mctrlineitem.HOME_DEPT_TO, ParameterDirection.Input);
                    parameters[2] = new OracleParameter(":home_loc_to", OracleDbType.Varchar2, mctrlineitem.HOME_LOC_TO, ParameterDirection.Input);
                    parameters[3] = new OracleParameter(":period_to", OracleDbType.Date, period_to, ParameterDirection.Input);
                    parameters[4] = new OracleParameter(":v_cow_date", OracleDbType.Date, v_cow_date, ParameterDirection.Input);

                    v_count = entities.Database.SqlQuery<int>(sql, parameters).SingleOrDefault();
                    mctrcreateform.V_Count.Add("homeLocEAS", v_count);
                }
                if (mctrlineitem.HOME_LOC_TO == null || v_count == 0)
                {
                    sql = @" select count(*) 
               from mctr_locn_dept_mv a,
                    mctr_locn_dept_mv a2
              where a.setid = :v_setid
                and a.deptid = :home_dept_to
                and a.effdt = (select max(a_ed.effdt) 
                                 from mctr_locn_dept_mv a_ed
                                where a.setid = a_ed.setid
                                  and a.acctg_loc_cd7 = a_ed.acctg_loc_cd7
                                  and a.deptid = a_ed.deptid
                                  and a_ed.effdt <= :period_to)
                and a.setid = a2.setid
                and a.deptid = a2.deptid
                and a.acctg_loc_cd7 = a2.acctg_loc_cd7
                and a2.effdt = (select max(a2_ed.effdt) 
                                  from mctr_locn_dept_mv a2_ed
                                 where a2.setid = a2_ed.setid
                                   and a2.acctg_loc_cd7 = a2_ed.acctg_loc_cd7
                                   and a2.deptid = a2_ed.deptid
                                  and a2_ed.effdt <= :v_cow_date)";
                    parameters = new OracleParameter[4];
                    parameters[0] = new OracleParameter(":v_setid", OracleDbType.Varchar2, mctrlineitem.SETID, ParameterDirection.Input);
                    parameters[1] = new OracleParameter(":home_dept_to", OracleDbType.Varchar2, mctrlineitem.HOME_DEPT_TO, ParameterDirection.Input);
                    parameters[2] = new OracleParameter(":period_to", OracleDbType.Date, period_to, ParameterDirection.Input);
                    parameters[3] = new OracleParameter(":v_cow_date", OracleDbType.Date, v_cow_date, ParameterDirection.Input);

                    v_count = entities.Database.SqlQuery<int>(sql, parameters).SingleOrDefault();

                }
                mctrcreateform.V_Count.Add("HomeLocTo", v_count);
                if (mctrlineitem.HOME_LOC_TO != null)
                {

                    sql = @"  select count(*) 
             from mctr_locn_mv a 
            where a.setid = :v_setid
              and a.acctg_loc_cd7 = :home_loc_to
              and a.effdt = (select max(a_ed.effdt)
                               from mctr_locn_mv a_ed
                              where a.setid = a_ed.setid
                                and a.acctg_loc_cd7 =   a_ed.acctg_loc_cd7
                                and a_ed.effdt <= :period_to) 
             and a.eff_status = 'A'";
                    parameters = new OracleParameter[3];
                    parameters[0] = new OracleParameter(":v_setid", OracleDbType.Varchar2, mctrlineitem.SETID, ParameterDirection.Input);
                    parameters[1] = new OracleParameter(":home_loc_to", OracleDbType.Varchar2, mctrlineitem.HOME_LOC_TO, ParameterDirection.Input);
                    parameters[2] = new OracleParameter(":period_to", OracleDbType.Date, period_to, ParameterDirection.Input);

                    v_count = entities.Database.SqlQuery<int>(sql, parameters).SingleOrDefault();
                    mctrcreateform.V_Count.Add("HomeLocToLOV", v_count);
                }
            }
            catch (Exception ex)
            {
                logger.Error(ex.Message);
                throw;
            }
            return mctrCreateForm;
        }

        public IEnumerable<MctrCreateForm> mctrHeaderPreUpdate(IEnumerable<MctrCreateForm> mctrCreateForm)
        {
            MctrCreateForm recievedValues = mctrCreateForm.First();
            DateTime sysTime = DateTime.Now;
            // SQL: update mctr_status_hist set date_time_left =:3 where mctr_no = : mctr_header . mctr_no and date_time_entered = ( select max ( date_time_entered ) from mctr_status_hist where mctr_no = : mctr_header . mctr_no )
            StringBuilder sql = new StringBuilder("update mctr_status_hist set date_time_left = :0 where mctr_no = :1 and date_time_entered = ( select max ( date_time_entered ) from mctr_status_hist where mctr_no = :2)");
            OracleParameter[] parameters = new OracleParameter[3];
            parameters[2] = new OracleParameter(":mctr_no", OracleDbType.Int32, recievedValues.MctrNo, ParameterDirection.Input);
            parameters[1] = new OracleParameter(":mctr_no", OracleDbType.Int32, recievedValues.MctrNo, ParameterDirection.Input);
            parameters[0] = new OracleParameter(":sysdate", OracleDbType.Date, sysTime, ParameterDirection.Input);
            int result1 = entities.Database.ExecuteSqlCommand(sql.ToString(), parameters);
            sysTime = DateTime.Now;
            string x = String.Format("{0:dd MMM yyyy hh mm ss}", sysTime);
            //SQL:insert into mctr_status_hist (mctr_no, date_time_entered, prior_status, next_status) values(:mctr_header.mctr_no, v_status_date_time, 'sa', 'or');
            StringBuilder sql1 = new StringBuilder("insert into mctr_status_hist (mctr_no, date_time_entered, prior_status, next_status,reject_code) values(:0,TO_DATE('" + x + "','DD-MON-YY HH:MI:SS A.M.'), '" + recievedValues.oldStatus + "', '" + recievedValues.StatusId + "','" + recievedValues.RejectCode + "')");
            OracleParameter[] parameters1 = new OracleParameter[1];
            parameters1[0] = new OracleParameter(":mctr_no", OracleDbType.Int32, Convert.ToInt32(recievedValues.MctrNo), ParameterDirection.Input);
            try {
                var result2 = entities.Database.ExecuteSqlCommand(sql1.ToString(), parameters1);
            }
            catch(Exception e)
            {
               

            }

            return mctrCreateForm;
        }

        public IEnumerable<MctrCreateForm> mctrLineItemaccountFromPostTextItem(IEnumerable<MctrCreateForm> mctrCreateForm)
        {
            MctrCreateForm mctrcreateform = mctrCreateForm.First();
            MctrLineItem mctrlineitem = mctrcreateform.mctrLineItem.First();
            mctrcreateform.V_Count = new Dictionary<string, int>();
            mctrcreateform.V_Count.Clear();

            try
            {
                string sql = @"select count(*)
             from mctr_account_v
            where setid = :0
              and account = :1 ";
                OracleParameter[] parameters = new OracleParameter[2];
                parameters[0] = new OracleParameter(":work_bugl_from", OracleDbType.Varchar2, mctrlineitem.WORK_BUGL_FROM, ParameterDirection.Input);
                parameters[1] = new OracleParameter(":account_from", OracleDbType.Varchar2, mctrlineitem.ACCOUNT_FROM, ParameterDirection.Input);
                var v_count = entities.Database.SqlQuery<int>(sql, parameters).SingleOrDefault();
                //mctrcreateform.V_Count.Add("account_from", v_count);

                if (v_count == 0)
                {
                    sql = @"select count(*) 
               from mctr_rp_master_v
              where activity_id = :activity_id_from
                and project_id = :project_id_from 
                and account = :account_from
                and bus_unit_gl_from = :home_bugl_from
                and business_unit_gl = :work_bugl_from ";
                    OracleParameter[] parameters1 = new OracleParameter[5];

                    parameters1[0] = new OracleParameter(":activity_id_from", OracleDbType.Varchar2, mctrlineitem.ACTIVITY_ID_FROM, ParameterDirection.Input);
                    parameters1[1] = new OracleParameter(":project_id_from", OracleDbType.Varchar2, mctrlineitem.PROJECT_ID_FROM, ParameterDirection.Input);
                    parameters1[2] = new OracleParameter(":account_from", OracleDbType.Varchar2, mctrlineitem.ACCOUNT_FROM, ParameterDirection.Input);
                    parameters1[3] = new OracleParameter(":home_bugl_from", OracleDbType.Varchar2, mctrlineitem.HOME_BUGL_FROM, ParameterDirection.Input);
                    parameters1[4] = new OracleParameter(":work_bugl_from", OracleDbType.Varchar2, mctrlineitem.WORK_BUGL_FROM, ParameterDirection.Input);

                    v_count = entities.Database.SqlQuery<int>(sql, parameters1).SingleOrDefault();
                    mctrcreateform.V_Count.Add("account_from", v_count);
                }
                else
                {
                    mctrcreateform.V_Count.Add("account_from", v_count);
                }
            }
            catch (Exception ex)
            {
                logger.Error(ex.Message);
                throw;

            }
            return mctrCreateForm;

        }

        public IEnumerable<MctrCreateForm> mctrLineItemaffiliateFromPostTextItemOpenLOV(IEnumerable<MctrCreateForm> mctrCreateForm)
        {
            MctrCreateForm mctrcreateform = mctrCreateForm.First();
            MctrLineItem mctrlineitem = mctrcreateform.mctrLineItem.First();
            mctrcreateform.V_Count = new Dictionary<string, int>();
            mctrcreateform.V_Count.Clear();

            String sql = "";
            var v_count = 0;
            OracleParameter[] parameters;
            try
            {
                sql = @"select count(*) 
             from mctr_incr_rates
            where cmpon_cd = :affiliate_from
              and fiscal_year = :fiscal_year";
                parameters = new OracleParameter[2];
                parameters[0] = new OracleParameter(":affiliate_from", OracleDbType.Varchar2, mctrlineitem.AFFILIATE_FROM, ParameterDirection.Input);
                parameters[1] = new OracleParameter(":fiscal_year", OracleDbType.Int16, mctrlineitem.FYEAR, ParameterDirection.Input);
                v_count = entities.Database.SqlQuery<int>(sql, parameters).SingleOrDefault();

                mctrcreateform.V_Count.Add("affiliate", v_count);
                sql = @" select count(*) 
               from mctr_rp_master_vw
              where activity_id = :activity_id_from
                and project_id = :project_id_from 
                and account = :account_from
                and bus_unit_gl_from = :home_bugl_from
                and business_unit_gl = :work_bugl_from
                and proj_trans_type like 'LB%'
                and affiliate = :affiliate_from";
                parameters = new OracleParameter[6];
                parameters[0] = new OracleParameter(":activity_id_from", OracleDbType.Varchar2, mctrlineitem.ACTIVITY_ID_FROM, ParameterDirection.Input);
                parameters[1] = new OracleParameter(":project_id_from", OracleDbType.Varchar2, mctrlineitem.PROJECT_ID_FROM, ParameterDirection.Input);
                parameters[2] = new OracleParameter(":account_from", OracleDbType.Varchar2, mctrlineitem.ACCOUNT_FROM, ParameterDirection.Input);
                parameters[3] = new OracleParameter(":home_bugl_from", OracleDbType.Varchar2, mctrlineitem.HOME_BUGL_FROM, ParameterDirection.Input);
                parameters[4] = new OracleParameter(":work_bugl_from", OracleDbType.Varchar2, mctrlineitem.WORK_BUGL_FROM, ParameterDirection.Input);
                parameters[5] = new OracleParameter(":affiliate_from", OracleDbType.Varchar2, mctrlineitem.AFFILIATE_FROM, ParameterDirection.Input);
                v_count = entities.Database.SqlQuery<int>(sql, parameters).SingleOrDefault();
                mctrcreateform.V_Count.Add("affiliateValid", v_count);

                sql = @" select count(*) 
               from mctr_rp_master_vw
              where activity_id = :activity_id_from
                and project_id = :project_id_from 
                and account = :account_from
                and bus_unit_gl_from = :home_bugl_from
                and business_unit_gl = :work_bugl_from
                and proj_trans_type = :proj_trans_type_from
                and affiliate = :affiliate_from";
                parameters = new OracleParameter[7];
                parameters[0] = new OracleParameter(":activity_id_from", OracleDbType.Varchar2, mctrlineitem.ACTIVITY_ID_FROM, ParameterDirection.Input);
                parameters[1] = new OracleParameter(":project_id_from", OracleDbType.Varchar2, mctrlineitem.PROJECT_ID_FROM, ParameterDirection.Input);
                parameters[2] = new OracleParameter(":account_from", OracleDbType.Varchar2, mctrlineitem.ACCOUNT_FROM, ParameterDirection.Input);
                parameters[3] = new OracleParameter(":home_bugl_from", OracleDbType.Varchar2, mctrlineitem.HOME_BUGL_FROM, ParameterDirection.Input);
                parameters[4] = new OracleParameter(":work_bugl_from", OracleDbType.Varchar2, mctrlineitem.WORK_BUGL_FROM, ParameterDirection.Input);
                parameters[5] = new OracleParameter(":proj_trans_type_from", OracleDbType.Varchar2, mctrlineitem.PROJ_TRANS_TYPE_FROM, ParameterDirection.Input);
                parameters[6] = new OracleParameter(":affiliate_from", OracleDbType.Varchar2, mctrlineitem.AFFILIATE_FROM, ParameterDirection.Input);

                v_count = entities.Database.SqlQuery<int>(sql, parameters).SingleOrDefault();
                mctrcreateform.V_Count.Add("affiliateValidation", v_count);
            }
            catch (Exception ex)
            {
                logger.Error(ex.Message);
                throw;
            }
            return mctrCreateForm;

        }


        public IEnumerable<MctrCreateForm> mctrLineItemClassCditemOpenLOV(IEnumerable<MctrCreateForm> mctrCreateForm)
        {

            MctrCreateForm mctrcreateform = mctrCreateForm.First();
            MctrLineItem mctrlineitem = mctrcreateform.mctrLineItem.First();
            mctrcreateform.V_Count = new Dictionary<string, int>();
            mctrcreateform.V_Count.Clear();
            mctrcreateform.V_Countstring = new Dictionary<string, string>();
            mctrcreateform.V_Countstring.Clear();

            String sql = "";
            var v_count = 0;
            OracleParameter[] parameters;

            if ((mctrcreateform.py_cy_status == "PY") && (Convert.ToInt32(mctrcreateform.fyear) > 2007) && mctrlineitem.AFFILIATE_FROM != "")
            {
                mctrlineitem.SETID = mctrlineitem.AFFILIATE_FROM;
            }
            else
            {
                mctrlineitem.SETID = mctrlineitem.HOME_BUGL_FROM;
            }

            try
            {
                sql = @"select count(*)
                                from mctr_class_code_v
                                where class_cd7 = :0
                                and proj_trans_type = :1
                                and setid = :2";
                parameters = new OracleParameter[3];
                parameters[0] = new OracleParameter(":class_cd_from", OracleDbType.Varchar2, mctrlineitem.CLASS_CD_FROM, ParameterDirection.Input);
                parameters[1] = new OracleParameter(":proj_trans_type_from", OracleDbType.Varchar2, mctrlineitem.PROJ_TRANS_TYPE_FROM, ParameterDirection.Input);
                parameters[2] = new OracleParameter(":v_setid", OracleDbType.Varchar2, mctrlineitem.SETID, ParameterDirection.Input);
                v_count = entities.Database.SqlQuery<int>(sql, parameters).SingleOrDefault();
                mctrcreateform.V_Count.Add("ClassCd", v_count);

                if (v_count == 0)
                {
                    if (mctrlineitem.PROJ_TRANS_TYPE_FROM == "LBR")
                    {

                        sql = @" select count(*) 
                                 from mctr_rp_master_v
                                 where activity_id = :0
                                  and project_id = :1
                                  and account = :2
                                  and bus_unit_gl_from = :3
                                  and business_unit_gl = :4
                                  and proj_trans_type like 'LB%'
                                  and class_cd7 = :5";
                        parameters = new OracleParameter[6];
                        parameters[0] = new OracleParameter(":activity_id_from", OracleDbType.Varchar2, mctrlineitem.ACTIVITY_ID_FROM, ParameterDirection.Input);
                        parameters[1] = new OracleParameter(":project_id_from", OracleDbType.Varchar2, mctrlineitem.PROJECT_ID_FROM, ParameterDirection.Input);
                        parameters[2] = new OracleParameter(":account_from", OracleDbType.Varchar2, mctrlineitem.ACCOUNT_FROM, ParameterDirection.Input);
                        parameters[3] = new OracleParameter(":home_bugl_from", OracleDbType.Varchar2, mctrlineitem.HOME_BUGL_FROM, ParameterDirection.Input);
                        parameters[4] = new OracleParameter(":work_bugl_from", OracleDbType.Varchar2, mctrlineitem.WORK_BUGL_FROM, ParameterDirection.Input);
                        parameters[5] = new OracleParameter(":class_cd_from", OracleDbType.Varchar2, mctrlineitem.CLASS_CD_FROM, ParameterDirection.Input);
                        v_count = entities.Database.SqlQuery<int>(sql, parameters).SingleOrDefault();


                    }
                    else
                    {

                        sql = @" select count(*) 
                                 from mctr_rp_master_v
                                 where activity_id = :0
                                  and project_id = :1
                                  and account = :2
                                  and bus_unit_gl_from = :3
                                  and business_unit_gl = :4
                                  and proj_trans_type = :5
                                  and class_cd7 = :6";
                        parameters = new OracleParameter[7];
                        parameters[0] = new OracleParameter(":activity_id_from", OracleDbType.Varchar2, mctrlineitem.ACTIVITY_ID_FROM, ParameterDirection.Input);
                        parameters[1] = new OracleParameter(":project_id_from", OracleDbType.Varchar2, mctrlineitem.PROJECT_ID_FROM, ParameterDirection.Input);
                        parameters[2] = new OracleParameter(":account_from", OracleDbType.Varchar2, mctrlineitem.ACCOUNT_FROM, ParameterDirection.Input);
                        parameters[3] = new OracleParameter(":home_bugl_from", OracleDbType.Varchar2, mctrlineitem.HOME_BUGL_FROM, ParameterDirection.Input);
                        parameters[4] = new OracleParameter(":work_bugl_from", OracleDbType.Varchar2, mctrlineitem.WORK_BUGL_FROM, ParameterDirection.Input);
                        parameters[5] = new OracleParameter(":proj_trans_type", OracleDbType.Varchar2, mctrlineitem.PROJ_TRANS_TYPE_FROM, ParameterDirection.Input);
                        parameters[6] = new OracleParameter(":class_cd_from", OracleDbType.Varchar2, mctrlineitem.CLASS_CD_FROM, ParameterDirection.Input);
                        v_count = entities.Database.SqlQuery<int>(sql, parameters).SingleOrDefault();

                    }
                }

                mctrcreateform.V_Count.Add("ClassCdEAS", v_count);

            }
            catch (Exception ex)
            {
                logger.Error(ex.Message);
                mctrcreateform.V_Count.Add("ClassCdEAS", 0);
            }
            try
            {
                sql = @"select count(*)
                                from mctr_class_code_v
                                where proj_trans_type = :0
                                and setid = :1";
                parameters = new OracleParameter[2];
                parameters[0] = new OracleParameter(":proj_trans_type_from", OracleDbType.Varchar2, mctrlineitem.PROJ_TRANS_TYPE_FROM, ParameterDirection.Input);
                parameters[1] = new OracleParameter(":v_setid", OracleDbType.Varchar2, mctrlineitem.SETID, ParameterDirection.Input);
                v_count = entities.Database.SqlQuery<int>(sql, parameters).SingleOrDefault();

                mctrcreateform.V_Count.Add("ClassCdLOV", v_count);
            }
            catch (Exception ex)
            {
                logger.Error(ex.Message);
                mctrcreateform.V_Count.Add("ClassCdLOV", 0);
            }
            try
            {
                sql = @"select resource_sub_cat
                               from mctr_class_code_v
                              where class_cd7 = :0
                                and proj_trans_type = :1
                                and setid = :2
                                and trim(resource_sub_cat) is not null";
                parameters = new OracleParameter[3];
                parameters[0] = new OracleParameter(":class_cd_from", OracleDbType.Varchar2, mctrlineitem.CLASS_CD_FROM, ParameterDirection.Input);
                parameters[1] = new OracleParameter(":proj_trans_type_from", OracleDbType.Varchar2, mctrlineitem.PROJ_TRANS_TYPE_FROM, ParameterDirection.Input);
                parameters[2] = new OracleParameter(":v_setid", OracleDbType.Varchar2, mctrlineitem.SETID, ParameterDirection.Input);
                //mctrcreateform.RscFrom = entities.Database.SqlQuery<string>(sql, parameters).SingleOrDefault();
                string rscfrom = entities.Database.SqlQuery<string>(sql, parameters).SingleOrDefault();
                mctrcreateform.V_Countstring.Add("rscfrom", rscfrom);
            }
            catch (Exception ex)
            {
                logger.Error(ex.Message);
                mctrcreateform.RscFrom = "";
            }

            return mctrCreateForm;

        }

        public IEnumerable<MctrCreateForm> mctrLineItemclassCdToPostTextItemOpenLOV(IEnumerable<MctrCreateForm> mctrCreateForm)
        {

            MctrCreateForm mctrcreateform = mctrCreateForm.First();
            MctrLineItem mctrlineitem = mctrcreateform.mctrLineItem.First();
            mctrcreateform.V_Count = new Dictionary<string, int>();
            mctrcreateform.V_Count.Clear();
            mctrcreateform.V_Countstring = new Dictionary<string, string>();
            mctrcreateform.V_Countstring.Clear();

            String sql = "";
            var v_count = 0;
            OracleParameter[] parameters;

            if ((mctrcreateform.py_cy_status == "PY") && (Convert.ToInt32(mctrcreateform.fyear) > 2007) && mctrlineitem.AFFILIATE_TO != "")
            {
                mctrlineitem.SETID = mctrlineitem.AFFILIATE_TO;
            }
            else
            {
                mctrlineitem.SETID = mctrlineitem.HOME_BUGL_TO;
            }

            try
            {
                sql = @"select count(*)
                                FROM mctr_class_code_v
                                where class_cd7 = :0
                                and proj_trans_type = :1
                                and setid = :2
                                and eff_status = 'A'";
                parameters = new OracleParameter[3];
                parameters[0] = new OracleParameter(":class_cd_to", OracleDbType.Varchar2, mctrlineitem.CLASS_CD_TO, ParameterDirection.Input);
                parameters[1] = new OracleParameter(":proj_trans_type_to", OracleDbType.Varchar2, mctrlineitem.PROJ_TRANS_TYPE_TO, ParameterDirection.Input);
                parameters[2] = new OracleParameter(":v_setid", OracleDbType.Varchar2, mctrlineitem.SETID, ParameterDirection.Input);
                v_count = entities.Database.SqlQuery<int>(sql, parameters).SingleOrDefault();
                mctrcreateform.V_Count.Add("ClassCd", v_count);
            }
            catch (Exception e)
            {
                logger.Error(e.Message);
                mctrcreateform.V_Count.Add("ClassCd", 0);
            }

            try
            {
                sql = @"select count(*)
                                FROM mctr_class_code_v
                                where proj_trans_type = :0
                                and setid = :1";
                parameters = new OracleParameter[2];
                parameters[0] = new OracleParameter(":proj_trans_type_TO", OracleDbType.Varchar2, mctrlineitem.PROJ_TRANS_TYPE_TO, ParameterDirection.Input);
                parameters[1] = new OracleParameter(":v_setid", OracleDbType.Varchar2, mctrlineitem.SETID, ParameterDirection.Input);
                v_count = entities.Database.SqlQuery<int>(sql, parameters).SingleOrDefault();

                mctrcreateform.V_Count.Add("ClassCdLOV", v_count);
            }
            catch (Exception ex)
            {
                logger.Error(ex.Message);
                mctrcreateform.V_Count.Add("ClassCdLOV", 0);
            }
            try
            {
                sql = @"select resource_sub_cat
                               FROM mctr_class_code_v
                              where class_cd7 = :0
                                and proj_trans_type = :1
                                and setid = :2
                                and trim(resource_sub_cat) is not null";
                parameters = new OracleParameter[3];
                parameters[0] = new OracleParameter(":class_cd_TO", OracleDbType.Varchar2, mctrlineitem.CLASS_CD_TO, ParameterDirection.Input);
                parameters[1] = new OracleParameter(":proj_trans_type_TO", OracleDbType.Varchar2, mctrlineitem.PROJ_TRANS_TYPE_TO, ParameterDirection.Input);
                parameters[2] = new OracleParameter(":v_setid", OracleDbType.Varchar2, mctrlineitem.SETID, ParameterDirection.Input);
                string rscto = entities.Database.SqlQuery<string>(sql, parameters).SingleOrDefault();
                mctrcreateform.V_Countstring.Add("rscto", rscto);
            }
            catch (Exception ex)
            {
                logger.Error(ex.Message);
                mctrcreateform.RscTo = "";
            }

            return mctrCreateForm;

        }
        public IEnumerable<MctrCreateForm> mctrLineItemhomeDeptFromPostTextItemOpenLOV(IEnumerable<MctrCreateForm> mctrCreateForm)
        {

            MctrCreateForm mctrcreateform = mctrCreateForm.First();
            MctrLineItem mctrlineitem = mctrcreateform.mctrLineItem.First();
            mctrcreateform.V_Count = new Dictionary<string, int>();
            mctrcreateform.V_Count.Clear();

            String sql = "";
            var v_count = 0;
            var v_cow_date = DateTime.Now;
            OracleParameter[] parameters;
            try
            {
                if (mctrlineitem.HOME_DEPT_FROM != null)
                {
                    sql = @"select end_dt from mctr_cow_v";
                    v_cow_date = entities.Database.SqlQuery<DateTime>(sql).SingleOrDefault();
                }


                sql = @"select count(*) 
             from mctr_locn_dept_mv a,
                  mctr_locn_dept_mv a2
            where a.setid = :v_setid
              and a.deptid = :home_dept_from
              and a.effdt = (select max(a_ed.effdt)
                               from mctr_locn_dept_mv a_ed
                              where a.setid = a_ed.setid
                                and a.acctg_loc_cd7 = a_ed.acctg_loc_cd7
                                and a.deptid = a_ed.deptid
                                and a_ed.effdt <= :period_to)
              and a.setid = a2.setid
              and a.deptid = a2.deptid
              and a.acctg_loc_cd7 = a2.acctg_loc_cd7
              and a2.effdt = (select max(a2_ed.effdt)
                                from mctr_locn_dept_mv a2_ed
                               where a2.setid = a2_ed.setid
                                 and a2.acctg_loc_cd7 = a2_ed.acctg_loc_cd7
                                 and a2.deptid = a2_ed.deptid
                                 and a2_ed.effdt <= :v_cow_date)";
                parameters = new OracleParameter[4];
                parameters[0] = new OracleParameter(":v_setid", OracleDbType.Varchar2, mctrlineitem.SETID, ParameterDirection.Input);
                parameters[1] = new OracleParameter(":home_dept_from", OracleDbType.Varchar2, mctrlineitem.HOME_DEPT_FROM, ParameterDirection.Input);
                parameters[2] = new OracleParameter(":period_to", OracleDbType.Date, mctrlineitem.PERIOD_TO, ParameterDirection.Input);
                parameters[3] = new OracleParameter(":v_cow_date", OracleDbType.Date, v_cow_date, ParameterDirection.Input);
                v_count = entities.Database.SqlQuery<int>(sql, parameters).SingleOrDefault();
                mctrcreateform.V_Count.Add("HomeDept", v_count);
            }
            catch (Exception ex)
            {
                logger.Error(ex.Message);
            }

            return mctrCreateForm;

        }

        public IEnumerable<MctrCreateForm> mctrLineItemhomeLocFromPostTextItemOpenLOV(IEnumerable<MctrCreateForm> mctrCreateForm)
        {


            MctrCreateForm mctrcreateform = mctrCreateForm.First();
            MctrLineItem mctrlineitem = mctrcreateform.mctrLineItem.First();
            mctrcreateform.V_Count = new Dictionary<string, int>();
            mctrcreateform.V_Count.Clear();

            String sql = "";
            var v_count = 0;
            var v_cow_date = DateTime.Parse(mctrcreateform.COW);
            var period_to = DateTime.Parse(mctrcreateform.PeriodTo);

            OracleParameter[] parameters;
            try
            {
                try
                {
                    sql = @"select count(*) 
               from mctr_locn_dept_mv a,
                    mctr_locn_dept_mv a2
              where a.setid = :v_setid
                and a.deptid = :home_dept_from
                and a.acctg_loc_cd7 = :home_loc_from
                and a.effdt = (select max(a_ed.effdt) 
                                 from mctr_locn_dept_mv a_ed 
                                where a.setid = a_ed.setid
                                  and a.acctg_loc_cd7 = a_ed.acctg_loc_cd7
                                  and a.deptid = a_ed.deptid
                                  and a_ed.effdt <= :period_to)
                and a.setid = a2.setid 
                and a.deptid = a2.deptid
                and a.acctg_loc_cd7 = a2.acctg_loc_cd7
                and a2.effdt = (select max(a2_ed.effdt) 
                                  from mctr_locn_dept_mv a2_ed
                                 where a2.setid = a2_ed.setid
                                   and a2.acctg_loc_cd7 = a2_ed.acctg_loc_cd7
                                   and a2.deptid = a2_ed.deptid
                                   and a2_ed.effdt <= :v_cow_date)";
                    parameters = new OracleParameter[5];
                    parameters[0] = new OracleParameter(":v_setid", OracleDbType.Varchar2, mctrlineitem.SETID, ParameterDirection.Input);
                    parameters[1] = new OracleParameter(":home_dept_from", OracleDbType.Varchar2, mctrlineitem.HOME_DEPT_FROM, ParameterDirection.Input);
                    parameters[2] = new OracleParameter(":home_loc_from", OracleDbType.Varchar2, mctrlineitem.HOME_LOC_FROM, ParameterDirection.Input);
                    parameters[3] = new OracleParameter(":period_to", OracleDbType.Date, period_to, ParameterDirection.Input);
                    parameters[4] = new OracleParameter(":v_cow_date", OracleDbType.Date, v_cow_date, ParameterDirection.Input);

                    v_count = entities.Database.SqlQuery<int>(sql, parameters).SingleOrDefault();
                    mctrcreateform.V_Count.Add("HomeLoc", v_count);
                }
                catch (Exception e)
                {
                    logger.Error("Error from  Mctr.DataAccess.mctrLineItemhomeLocFromPostTextItemOpenLOV():" + e.Message);
                    mctrcreateform.V_Count.Add("HomeLoc", 0);
                }
                if (mctrlineitem.HOME_LOC_FROM == null || v_count == 0)
                {

                    sql = @" select count(*) 
               from mctr_locn_dept_mv a,
                    mctr_locn_dept_mv a2
              where a.setid = :v_setid
                and a.deptid = :home_dept_from
                and a.effdt = (select max(a_ed.effdt) 
                                 from mctr_locn_dept_mv a_ed 
                                where a.setid = a_ed.setid
                                  and a.acctg_loc_cd7 = a_ed.acctg_loc_cd7
                                  and a.deptid = a_ed.deptid
                                  and a_ed.effdt <= :period_to)
                and a.setid = a2.setid 
                and a.deptid = a2.deptid
                and a.acctg_loc_cd7 = a2.acctg_loc_cd7
                and a2.effdt = (select max(a2_ed.effdt) 
                                  from mctr_locn_dept_mv a2_ed
                                 where a2.setid = a2_ed.setid
                                   and a2.acctg_loc_cd7 = a2_ed.acctg_loc_cd7
                                   and a2.deptid = a2_ed.deptid
                                   and a2_ed.effdt <= :v_cow_date)";
                    parameters = new OracleParameter[4];
                    parameters[0] = new OracleParameter(":v_setid", OracleDbType.Varchar2, mctrlineitem.SETID, ParameterDirection.Input);
                    parameters[1] = new OracleParameter(":home_dept_from", OracleDbType.Varchar2, mctrlineitem.HOME_DEPT_FROM, ParameterDirection.Input);
                    parameters[2] = new OracleParameter(":period_to", OracleDbType.Date, period_to, ParameterDirection.Input);
                    parameters[3] = new OracleParameter(":v_cow_date", OracleDbType.Date, v_cow_date, ParameterDirection.Input);
                    v_count = entities.Database.SqlQuery<int>(sql, parameters).SingleOrDefault();

                }
                mctrcreateform.V_Count.Add("HomeLocFrom", v_count);
                if (mctrlineitem.HOME_LOC_FROM != null)
                {

                    sql = @" select count(*) 
             from mctr_locn_mv a
            where a.setid = :v_setid
              and a.acctg_loc_cd7 = :home_loc_from";
                    parameters = new OracleParameter[2];
                    parameters[0] = new OracleParameter(":v_setid", OracleDbType.Varchar2, mctrlineitem.SETID, ParameterDirection.Input);
                    parameters[1] = new OracleParameter(":home_loc_from", OracleDbType.Varchar2, mctrlineitem.HOME_LOC_FROM, ParameterDirection.Input);
                    v_count = entities.Database.SqlQuery<int>(sql, parameters).SingleOrDefault();
                    mctrcreateform.V_Count.Add("HomeLocFromLOV", v_count);
                }
            }
            catch (Exception ex)
            {
                logger.Error(ex.Message);
            }
            return mctrCreateForm;

        }
        public IEnumerable<MctrCreateForm> mctrLineItemwpdFromPostTextItemOpenLOV(IEnumerable<MctrCreateForm> mctrCreateForm)
        {

            MctrCreateForm mctrcreateform = mctrCreateForm.First();
            mctrcreateform.V_Count = new Dictionary<string, int>();
            mctrcreateform.V_Count.Clear();
            MctrLineItem mctrlineitem = mctrcreateform.mctrLineItem.First();

            try
            {
                string sql = @"select count(*)   from mctr_wp_master_v where wpd_id7 = :0";
                OracleParameter[] parameters = new OracleParameter[1];
                parameters[0] = new OracleParameter(":wpd_id7", OracleDbType.Varchar2, mctrlineitem.WPD_FROM, ParameterDirection.Input);
                var v_count = entities.Database.SqlQuery<int>(sql, parameters).SingleOrDefault();
                mctrcreateform.V_Count.Add("WPD", v_count);

                if (mctrlineitem.PROJ_TRANS_TYPE_FROM == "LBR")
                {
                    sql = @"select count(*) 
                 from mctr_rp_master_v
                where activity_id = :0
                  and project_id = :1
                  and account = :2
                  and bus_unit_gl_from = :3
                  and business_unit_gl = :4
                  and proj_trans_type like 'LB%'
                  and wpd_id7 = :5";
                    parameters = new OracleParameter[6];
                    parameters[0] = new OracleParameter(":activity_id_from", OracleDbType.Varchar2, mctrlineitem.ACTIVITY_ID_FROM, ParameterDirection.Input);
                    parameters[1] = new OracleParameter(":project_id_from", OracleDbType.Varchar2, mctrlineitem.PROJECT_ID_FROM, ParameterDirection.Input);
                    parameters[2] = new OracleParameter(":account_from", OracleDbType.Varchar2, mctrlineitem.ACCOUNT_FROM, ParameterDirection.Input);
                    parameters[3] = new OracleParameter(":home_bugl_from", OracleDbType.Varchar2, mctrlineitem.HOME_BUGL_FROM, ParameterDirection.Input);
                    parameters[4] = new OracleParameter(":work_bugl_from", OracleDbType.Varchar2, mctrlineitem.WORK_BUGL_FROM, ParameterDirection.Input);
                    parameters[5] = new OracleParameter(":wpd_from", OracleDbType.Varchar2, mctrlineitem.WPD_FROM, ParameterDirection.Input);
                    v_count = entities.Database.SqlQuery<int>(sql, parameters).SingleOrDefault();
                    mctrcreateform.V_Count.Add("WPDEAS", v_count);
                }
                else
                {
                    sql = @"select count(*) 
                 from mctr_rp_master_v
                where activity_id = :0
                  and project_id = :1
                  and account = :2
                  and bus_unit_gl_from = :3
                  and business_unit_gl = :4
                  and wpd_id7 = :5";
                    parameters = new OracleParameter[6];
                    parameters[0] = new OracleParameter(":activity_id_from", OracleDbType.Varchar2, mctrlineitem.ACTIVITY_ID_FROM, ParameterDirection.Input);
                    parameters[1] = new OracleParameter(":project_id_from", OracleDbType.Varchar2, mctrlineitem.PROJECT_ID_FROM, ParameterDirection.Input);
                    parameters[2] = new OracleParameter(":account_from", OracleDbType.Varchar2, mctrlineitem.ACCOUNT_FROM, ParameterDirection.Input);
                    parameters[3] = new OracleParameter(":home_bugl_from", OracleDbType.Varchar2, mctrlineitem.HOME_BUGL_FROM, ParameterDirection.Input);
                    parameters[4] = new OracleParameter(":work_bugl_from", OracleDbType.Varchar2, mctrlineitem.WORK_BUGL_FROM, ParameterDirection.Input);
                    parameters[5] = new OracleParameter(":wpd_from", OracleDbType.Varchar2, mctrlineitem.WPD_FROM, ParameterDirection.Input);
                    v_count = entities.Database.SqlQuery<int>(sql, parameters).SingleOrDefault();
                    mctrcreateform.V_Count.Add("WPDEAS1", v_count);
                }

            }
            catch (Exception ex)
            {
                logger.Error(ex.Message);
            }
            return mctrCreateForm;

        }

        public IEnumerable<MctrCreateForm> mctrLineItemrscFromPostTextItemOpenLOV(IEnumerable<MctrCreateForm> mctrCreateForm)
        {

            MctrCreateForm mctrcreateform = mctrCreateForm.First();
            MctrLineItem mctrlineitem = mctrcreateform.mctrLineItem.First();

            mctrcreateform.V_Count = new Dictionary<string, int>();
            mctrcreateform.V_Count.Clear();
            var period_to = DateTime.Parse(mctrcreateform.PeriodTo);

            var v_count = 0;
            try
            {
                string sql = @"select count(*) 
               from mctr_rsc_mv a 
              where a.resource_sub_cat = :rsc_from
                and a.effdt = (select max(a_ed.effdt)
                                 from mctr_rsc_mv a_ed
                                where a.resource_sub_cat = a_ed.resource_sub_cat
                                  and a_ed.effdt <= :period_to)";
                OracleParameter[] parameters = new OracleParameter[2];
                parameters[0] = new OracleParameter(":rsc_from", OracleDbType.Varchar2, mctrlineitem.RSC_FROM, ParameterDirection.Input);
                parameters[1] = new OracleParameter(":period_to", OracleDbType.Date, period_to, ParameterDirection.Input);

                v_count = entities.Database.SqlQuery<int>(sql, parameters).SingleOrDefault();
                mctrcreateform.V_Count.Add("RSC", v_count);

                if (v_count == 0)
                {
                    try
                    {
                        if (mctrlineitem.PROJ_TRANS_TYPE_FROM == "LBR")
                        {
                            sql = @"select count(*) 
                 from mctr_rp_master_v
                where activity_id = :activity_id_from
                  and project_id = :project_id_from
                  and account = :account_from
                  and bus_unit_gl_from = :home_bugl_from
                  and business_unit_gl = :work_bugl_from
                  and proj_trans_type like 'LB%'
                  and resource_sub_cat = :rsc_from";
                            parameters = new OracleParameter[6];
                            parameters[0] = new OracleParameter(":activity_id_from", OracleDbType.Varchar2, mctrlineitem.ACTIVITY_ID_FROM, ParameterDirection.Input);
                            parameters[1] = new OracleParameter(":project_id_from", OracleDbType.Varchar2, mctrlineitem.PROJECT_ID_FROM, ParameterDirection.Input);
                            parameters[2] = new OracleParameter(":account_from", OracleDbType.Varchar2, mctrlineitem.ACCOUNT_FROM, ParameterDirection.Input);
                            parameters[3] = new OracleParameter(":home_bugl_from", OracleDbType.Varchar2, mctrlineitem.HOME_BUGL_FROM, ParameterDirection.Input);
                            parameters[4] = new OracleParameter(":work_bugl_from", OracleDbType.Varchar2, mctrlineitem.WORK_BUGL_FROM, ParameterDirection.Input);
                            parameters[5] = new OracleParameter(":rsc_from", OracleDbType.Varchar2, mctrlineitem.RSC_FROM, ParameterDirection.Input);
                            v_count = entities.Database.SqlQuery<int>(sql, parameters).SingleOrDefault();
                            mctrcreateform.V_Count.Add("RSCEAS", v_count);
                        }
                        else
                        {
                            sql = @"select count(*) 
                 from mctr_rp_master_v
                where activity_id = :activity_id_from
                  and project_id = :project_id_from
                  and account = :account_from
                  and bus_unit_gl_from = :home_bugl_from
                  and business_unit_gl = :work_bugl_from
                  and proj_trans_type = :proj_trans_type_from
                  and resource_sub_cat = :rsc_from";
                            parameters = new OracleParameter[6];
                            parameters[0] = new OracleParameter(":activity_id_from", OracleDbType.Varchar2, mctrlineitem.ACTIVITY_ID_FROM, ParameterDirection.Input);
                            parameters[1] = new OracleParameter(":project_id_from", OracleDbType.Varchar2, mctrlineitem.PROJECT_ID_FROM, ParameterDirection.Input);
                            parameters[2] = new OracleParameter(":account_from", OracleDbType.Varchar2, mctrlineitem.ACCOUNT_FROM, ParameterDirection.Input);
                            parameters[3] = new OracleParameter(":home_bugl_from", OracleDbType.Varchar2, mctrlineitem.HOME_BUGL_FROM, ParameterDirection.Input);
                            parameters[4] = new OracleParameter(":work_bugl_from", OracleDbType.Varchar2, mctrlineitem.WORK_BUGL_FROM, ParameterDirection.Input);
                            parameters[5] = new OracleParameter(":proj_trans_type_from", OracleDbType.Varchar2, mctrlineitem.PROJ_TRANS_TYPE_FROM, ParameterDirection.Input);
                            parameters[5] = new OracleParameter(":rsc_from", OracleDbType.Varchar2, mctrlineitem.RSC_FROM, ParameterDirection.Input);

                            v_count = entities.Database.SqlQuery<int>(sql, parameters).SingleOrDefault();
                            mctrcreateform.V_Count.Add("RSCEAS", v_count);

                        }
                    }
                    catch (Exception e)
                    {
                        logger.Error(e.Message);
                        mctrcreateform.V_Count.Add("RSCEAS", 0);
                    }
                }
            }
            catch (Exception ex)
            {
                logger.Error(ex.Message);
                mctrcreateform.V_Count.Add("", 0);
            }
            return mctrCreateForm;

        }

        public IEnumerable<MctrCreateForm> mctrLineItemworkLocFromPostTextItemOpenLOV(IEnumerable<MctrCreateForm> mctrCreateForm)
        {

            MctrCreateForm mctrcreateform = mctrCreateForm.First();
            MctrLineItem mctrlineitem = mctrcreateform.mctrLineItem.First();
            mctrcreateform.V_Count = new Dictionary<string, int>();
            mctrcreateform.V_Count.Clear();

            var v_count = 0;
            var v_cow_date = DateTime.Parse(mctrcreateform.COW);
            var period_to = DateTime.Parse(mctrcreateform.PeriodTo);
            OracleParameter[] parameters;
            string sql;
            try
            {
                if (mctrlineitem.WORK_DEPT_FROM != "")
                {

                    sql = @"select end_dt from mctr_cow_v";
                    v_cow_date = entities.Database.SqlQuery<DateTime>(sql).SingleOrDefault();
                }

                if (mctrlineitem.WORK_LOC_FROM != "")
                {
                    try
                    {
                        sql = @"select count(*) 
               from mctr_locn_dept_mv a,
                    mctr_locn_dept_mv a2
              where a.setid = :v_setid
                and a.deptid = :work_dept_from
                and a.acctg_loc_cd7 = :work_loc_from
                and a.effdt = (select max(a_ed.effdt) 
                                 from mctr_locn_dept_mv a_ed
                                where a.setid = a_ed.setid
                                  and a.acctg_loc_cd7 = a_ed.acctg_loc_cd7
                                  and a.deptid = a_ed.deptid
                                  and a_ed.effdt <= :period_to)
                and a.setid = a2.setid 
                and a.deptid = a2.deptid
                and a.acctg_loc_cd7 = a2.acctg_loc_cd7
                and a2.effdt = (select max(a2_ed.effdt) 
                                  from mctr_locn_dept_mv a2_ed
                                 where a2.setid = a2_ed.setid
                                   and a2.acctg_loc_cd7 = a2_ed.acctg_loc_cd7
                                   and a2.deptid = a2_ed.deptid
                                   and a2_ed.effdt <= :v_cow_date)";

                        parameters = new OracleParameter[5];
                        parameters[0] = new OracleParameter(":v_setid", OracleDbType.Varchar2, mctrlineitem.SETID, ParameterDirection.Input);
                        parameters[1] = new OracleParameter(":work_dept_from", OracleDbType.Varchar2, mctrlineitem.WORK_DEPT_FROM, ParameterDirection.Input);
                        parameters[2] = new OracleParameter(":work_loc_from", OracleDbType.Varchar2, mctrlineitem.WORK_LOC_FROM, ParameterDirection.Input);
                        parameters[3] = new OracleParameter(":period_to", OracleDbType.Date, period_to, ParameterDirection.Input);
                        parameters[4] = new OracleParameter(":v_cow_date", OracleDbType.Date, v_cow_date, ParameterDirection.Input);
                        v_count = entities.Database.SqlQuery<int>(sql, parameters).SingleOrDefault();
                    }
                    catch (Exception e)
                    {
                        logger.Error("Error from  Mctr.DataAccess.mctrLineItemworkLocFromPostTextItemOpenLOV():" + e.Message);
                        v_count = 0;
                        throw;
                    }
                    mctrcreateform.V_Count.Add("WorkLoc", v_count);

                }
                if (mctrlineitem.WORK_LOC_FROM == "" || v_count == 0)
                {

                    try
                    {
                        sql = @"select count(*) 
               from mctr_locn_dept_mv a,
                    mctr_locn_dept_mv a2
              where a.setid = :v_setid
                and a.deptid = :work_dept_from
                and a.effdt = (select max(a_ed.effdt) 
                                 from mctr_locn_dept_mv a_ed
                                where a.setid = a_ed.setid
                                  and a.acctg_loc_cd7 = a_ed.acctg_loc_cd7
                                  and a.deptid = a_ed.deptid
                                  and a_ed.effdt <= :period_to)
                and a.setid = a2.setid 
                and a.deptid = a2.deptid
                and a.acctg_loc_cd7 = a2.acctg_loc_cd7
                and a2.effdt = (select max(a2_ed.effdt) 
                                  from mctr_locn_dept_mv a2_ed
                                 where a2.setid = a2_ed.setid
                                   and a2.acctg_loc_cd7 = a2_ed.acctg_loc_cd7
                                   and a2.deptid = a2_ed.deptid
                                   and a2_ed.effdt <= :v_cow_date)";
                        parameters = new OracleParameter[4];
                        parameters[0] = new OracleParameter(":v_setid", OracleDbType.Varchar2, mctrlineitem.SETID, ParameterDirection.Input);
                        parameters[1] = new OracleParameter(":work_dept_from", OracleDbType.Varchar2, mctrlineitem.WORK_DEPT_FROM, ParameterDirection.Input);
                        parameters[2] = new OracleParameter(":period_to", OracleDbType.Date, period_to, ParameterDirection.Input);
                        parameters[3] = new OracleParameter(":v_cow_date", OracleDbType.Date, v_cow_date, ParameterDirection.Input);

                        v_count = entities.Database.SqlQuery<int>(sql, parameters).SingleOrDefault();
                    }
                    catch (Exception e)
                    {
                        logger.Error(e.Message);
                        v_count = 0;
                        throw;
                    }

                }
                mctrcreateform.V_Count.Add("WorkLocFrom", v_count);

                if (mctrlineitem.WORK_LOC_FROM != null)
                {

                    try
                    {
                        sql = @"select count(*) 
             from mctr_locn_mv a
            where a.setid = :v_setid
              and a.acctg_loc_cd7 = :work_loc_from
              and a.effdt = (select max(a_ed.effdt) 
                               from mctr_locn_mv a_ed
                              where a.setid = a_ed.setid
                                and a.acctg_loc_cd7 = a_ed.acctg_loc_cd7
                                and a_ed.effdt <= :period_to)";
                        parameters = new OracleParameter[3];
                        parameters[0] = new OracleParameter(":v_setid", OracleDbType.Varchar2, mctrlineitem.SETID, ParameterDirection.Input);
                        parameters[1] = new OracleParameter(":work_loc_from", OracleDbType.Varchar2, mctrlineitem.WORK_LOC_FROM, ParameterDirection.Input);
                        parameters[2] = new OracleParameter(":period_to", OracleDbType.Date, period_to, ParameterDirection.Input);

                        v_count = entities.Database.SqlQuery<int>(sql, parameters).SingleOrDefault();
                    }
                    catch (Exception e)
                    {
                        logger.Error(e.Message);
                        throw;
                    }
                    mctrcreateform.V_Count.Add("WorkLocFromLOV", v_count);
                }
            }
            catch (Exception e)
            {
                logger.Error(e.Message);
                throw;
            }
            return mctrCreateForm;

        }
        public IEnumerable<MctrCreateForm> mctrLineItemworkDeptFromPostTextItemOpenLOV(IEnumerable<MctrCreateForm> mctrCreateForm)
        {

            MctrCreateForm mctrcreateform = mctrCreateForm.First();
            MctrLineItem mctrlineitem = mctrcreateform.mctrLineItem.First();
            mctrcreateform.V_Count = new Dictionary<string, int>();
            mctrcreateform.V_Count.Clear();

            var v_count = 0;
            var v_cow_date = DateTime.Now;
            var period_to = DateTime.Parse(mctrcreateform.PeriodTo);
            string sql;
            try
            {
                if (mctrlineitem.WORK_DEPT_FROM != null)
                {
                    try
                    {
                        sql = @"select end_dt as v_cow_date from mctr_cow_v";
                        v_cow_date = entities.Database.SqlQuery<DateTime>(sql).SingleOrDefault();
                    }
                    catch (Exception e)
                    {
                        logger.Error(e.Message);
                        v_cow_date = DateTime.Now;
                    }
                }


                sql = @"select count(*) 
             from mctr_locn_dept_mv a,
                  mctr_locn_dept_mv a2
            where a.setid = :v_setid
              and a.deptid = :work_dept_from
              and a.effdt = (select max(a_ed.effdt) 
                               from mctr_locn_dept_mv a_ed
                              where a.setid = a_ed.setid
                                and a.acctg_loc_cd7 = a_ed.acctg_loc_cd7
                                and a.deptid = a_ed.deptid
                                and a_ed.effdt <= :period_to)
              and a.setid = a2.setid 
              and a.deptid = a2.deptid
              and a.acctg_loc_cd7 = a2.acctg_loc_cd7
              and a2.effdt = (select max(a2_ed.effdt) 
                                from mctr_locn_dept_mv a2_ed
                               where a2.setid = a2_ed.setid
                                 and a2.acctg_loc_cd7 = a2_ed.acctg_loc_cd7
                                 and a2.deptid = a2_ed.deptid
                                 and a2_ed.effdt <= :v_cow_date)";

                OracleParameter[] parameters = new OracleParameter[4];
                parameters[0] = new OracleParameter(":v_setid", OracleDbType.Varchar2, mctrlineitem.SETID, ParameterDirection.Input);
                parameters[1] = new OracleParameter(":work_dept_from", OracleDbType.Varchar2, mctrlineitem.WORK_DEPT_FROM, ParameterDirection.Input);
                parameters[2] = new OracleParameter(":period_to", OracleDbType.Date, period_to, ParameterDirection.Input);
                parameters[3] = new OracleParameter(":v_cow_date", OracleDbType.Date, v_cow_date, ParameterDirection.Input);
                v_count = entities.Database.SqlQuery<int>(sql, parameters).SingleOrDefault();
                mctrcreateform.V_Count.Add("WorkDept", v_count);


            }
            catch (Exception ex)
            {
                logger.Error(ex.Message);
                throw;
            }
            return mctrCreateForm;

        }

        public IEnumerable<BuProfile> mctrLineItembulkFromPostTextItemOpenLOVBulkFlag(IEnumerable<BuProfile> BuProfile)
        {
            BuProfile buprofile = BuProfile.First();

            try
            {
                string sql = @" select bulk_flg
             from mctr_bu_profile
            where business_unit = :0";
                OracleParameter[] parameters = new OracleParameter[1];
                parameters[0] = new OracleParameter(":orig_bu", OracleDbType.Varchar2, buprofile.Business_Unit, ParameterDirection.Input);
                buprofile.Bulk_Flg = entities.Database.SqlQuery<string>(sql, parameters).SingleOrDefault();
            }
            catch (Exception ex)
            {
                logger.Error(ex.Message);
                buprofile.Bulk_Flg = "N";
            }
            return BuProfile;


        }
        public IEnumerable<MctrCreateForm> mctrLineItembulkFromPostTextItemOpenLOV(IEnumerable<MctrCreateForm> mctrCreateForm)
        {
            MctrCreateForm mctrcreateform = mctrCreateForm.First();
            MctrLineItem mctrlineitem = mctrcreateform.mctrLineItem.First();
            mctrcreateform.V_Count = new Dictionary<string, int>();
            mctrcreateform.V_Count.Clear();

            string sql = "";
            var v_count = 0;
            OracleParameter[] parameters;

            try
            {
                sql = @" select count(*) 
               from mctr_bulk_alctn_v
              where setid = :v_setid
                and proj_trans_type = :proj_trans_type_from
                and bulk_alctn_cd7 = :bulk_from";

                parameters = new OracleParameter[3];
                parameters[0] = new OracleParameter(":v_setid", OracleDbType.Varchar2, mctrlineitem.SETID, ParameterDirection.Input);
                parameters[1] = new OracleParameter(":proj_trans_type_from", OracleDbType.Varchar2, mctrlineitem.PROJ_TRANS_TYPE_FROM, ParameterDirection.Input);
                parameters[2] = new OracleParameter(":bulk_from", OracleDbType.Varchar2, mctrlineitem.BULK_FROM, ParameterDirection.Input);
                v_count = entities.Database.SqlQuery<int>(sql, parameters).SingleOrDefault();
                mctrcreateform.V_Count.Add("BulkCOUNT", v_count);
                if (v_count == 0)
                {
                    if (mctrlineitem.PROJ_TRANS_TYPE_FROM == "LBR")
                    {
                        sql = @"select count(*) 
                 from mctr_rp_master_v
                where activity_id = :0
                  and project_id = :1
                  and account = :2
                  and bus_unit_gl_from = :3
                  and business_unit_gl = :4
                  and proj_trans_type like 'LB%'
                  and bulk_alctn_cd7 = :5";
                        parameters = new OracleParameter[6];
                        parameters[0] = new OracleParameter(":activity_id_from", OracleDbType.Varchar2, mctrlineitem.ACTIVITY_ID_FROM, ParameterDirection.Input);
                        parameters[1] = new OracleParameter(":project_id_from", OracleDbType.Varchar2, mctrlineitem.PROJECT_ID_FROM, ParameterDirection.Input);
                        parameters[2] = new OracleParameter(":account_from", OracleDbType.Varchar2, mctrlineitem.ACCOUNT_FROM, ParameterDirection.Input);
                        parameters[3] = new OracleParameter(":home_bugl_from", OracleDbType.Varchar2, mctrlineitem.HOME_BUGL_FROM, ParameterDirection.Input);
                        parameters[4] = new OracleParameter(":work_bugl_from", OracleDbType.Varchar2, mctrlineitem.WORK_BUGL_FROM, ParameterDirection.Input);
                        parameters[5] = new OracleParameter(":bulk_from", OracleDbType.Varchar2, mctrlineitem.BULK_FROM, ParameterDirection.Input);
                        v_count = entities.Database.SqlQuery<int>(sql, parameters).SingleOrDefault();
                        mctrcreateform.V_Count.Add("BulkEAS", v_count);
                    }
                    else
                    {
                        sql = @"select count(*) 
                 from mctr_rp_master_v
                where activity_id = :0
                  and project_id = :1
                  and account = :2
                  and bus_unit_gl_from = :3
                  and business_unit_gl = :4
                  and bulk_alctn_cd7 = :5";
                        parameters = new OracleParameter[6];
                        parameters[0] = new OracleParameter(":activity_id_from", OracleDbType.Varchar2, mctrlineitem.ACTIVITY_ID_FROM, ParameterDirection.Input);
                        parameters[1] = new OracleParameter(":project_id_from", OracleDbType.Varchar2, mctrlineitem.PROJECT_ID_FROM, ParameterDirection.Input);
                        parameters[2] = new OracleParameter(":account_from", OracleDbType.Varchar2, mctrlineitem.ACCOUNT_FROM, ParameterDirection.Input);
                        parameters[3] = new OracleParameter(":home_bugl_from", OracleDbType.Varchar2, mctrlineitem.HOME_BUGL_FROM, ParameterDirection.Input);
                        parameters[4] = new OracleParameter(":work_bugl_from", OracleDbType.Varchar2, mctrlineitem.WORK_BUGL_FROM, ParameterDirection.Input);
                        parameters[5] = new OracleParameter(":bulk_from", OracleDbType.Varchar2, mctrlineitem.BULK_FROM, ParameterDirection.Input);
                        v_count = entities.Database.SqlQuery<int>(sql, parameters).SingleOrDefault();
                        mctrcreateform.V_Count.Add("BulkEAS", v_count);
                    }
                }

            }
            catch (Exception ex)
            {
                logger.Error(ex.Message);
                mctrcreateform.V_Count.Add("BulkEAS", 0);
            }

            return mctrCreateForm;
        }

        public IEnumerable<HeaderExcel> mctrheaderbuttoxlswhenbuttonpressed(IEnumerable<HeaderExcel> mctrCreateForm)
        {
            HeaderExcel headerExcel = mctrCreateForm.First();
            HeaderExcel excelFinalResults = new HeaderExcel();

            try
            {
                excelFinalResults.MCTR_NO = headerExcel.MCTR_NO;
                excelFinalResults = getHeaderExcelList(excelFinalResults);
                getMCTRLineItem(excelFinalResults);
                getMCTROffsetOvrhd(excelFinalResults);
            }
            catch (Exception ex)
            {
                logger.Error(ex.Message);
                throw ex;
            }
            List<HeaderExcel> headerExcelList = new List<HeaderExcel>();
            headerExcelList.Add(excelFinalResults);
            IEnumerable<HeaderExcel> excelFinalResultsList = headerExcelList.ToList();

            return excelFinalResultsList;
        }

        private HeaderExcel getHeaderExcelList(HeaderExcel excelFinalResults)
        {

            HeaderExcel firstTable = new HeaderExcel();
            HeaderExcel firstTable_two = new HeaderExcel();
            HeaderExcel firstTable_three = new HeaderExcel();
            HeaderExcel firstTable_four = new HeaderExcel();
            HeaderExcel firstTable_five = new HeaderExcel();
            HeaderExcel firstTable_six = new HeaderExcel();
            string sql = "";
            OracleParameter[] parameters;

            try
            {
                sql = @"  select h.title, h.orig_bu, h.fiscal_year,TO_CHAR(h.date_enter, 'DD-MM-YYYY') as date_enter  ,TO_CHAR(h.date_journal, 'DD-MM-YYYY') as date_journal ,
              h.reason_code, r.reason_descr, h.status_id, s.status_descr,
              h.appl_jrnl_id, h.jv_item_cd,  h.bems_orig,org.last_name,org.first_name,org.middle_int,
              decode(rtrim(rtrim(org.last_name) || ', ' || rtrim(org.first_name) || ' ' || rtrim(org.middle_int)),
              ',',' ',(rtrim(org.last_name) || ', ' || rtrim(org.first_name) || ' ' || rtrim(org.middle_int)))
              as bems_orig_name, h.orig_group, abu.descr
         
         from mctr_header h,
              mctr_status s,
              mctr_reason_code r,
              mctr_bus_unit_v abu,
              mctr_employee_v org
        where h.mctr_no = :mctr_headermctr_no
          and h.status_id = s.status_id(+)
          and h.reason_code = r.reason_code(+)
          and h.orig_bu = abu.business_unit(+)
          and h.bems_orig = org.bems_id(+)";

                parameters = new OracleParameter[1];
                parameters[0] = new OracleParameter(":mctr_headermctr_no", OracleDbType.Int32, excelFinalResults.MCTR_NO, ParameterDirection.Input);
                firstTable = entities.Database.SqlQuery<HeaderExcel>(sql, parameters).ToList<HeaderExcel>().FirstOrDefault();
                firstTable.bems_orig_name = "\"" + firstTable.LAST_NAME + " , " + firstTable.FIRST_NAME + " " + firstTable.MIDDLE_INT + ";" + "\"";



                sql = @"select count ( * )as Lines_Fr, sum ( quantity_from ) as Lines_Hours_Fr , sum ( amount_from + adjustment_from ) as Lines_Amount_Fr from mctr_line_item  where mctr_no = :mctr_headermctr_no and mtl_jrnl = 'N'";
                parameters = new OracleParameter[1];
                parameters[0] = new OracleParameter(":mctr_headermctr_no", OracleDbType.Int32, excelFinalResults.MCTR_NO, ParameterDirection.Input);
                firstTable_two = entities.Database.SqlQuery<HeaderExcel>(sql, parameters).ToList<HeaderExcel>().FirstOrDefault();
                firstTable.Lines_Fr = firstTable_two.Lines_Fr;
                firstTable.Lines_Hours_Fr = firstTable_two.Lines_Hours_Fr;
                firstTable.Lines_Amount_Fr = firstTable_two.Lines_Amount_Fr;

                sql = @"select count ( * ) as Lines_To , sum ( quantity_to ) as Lines_Hours_To , sum ( amount_to + adjustment_to ) as Lines_Amount_To from mctr_line_item where mctr_no = :mctr_headermctr_no and mtl_jrnl = 'N'";
                parameters = new OracleParameter[1];
                parameters[0] = new OracleParameter(":mctr_headermctr_no", OracleDbType.Int32, excelFinalResults.MCTR_NO, ParameterDirection.Input);
                firstTable_three = entities.Database.SqlQuery<HeaderExcel>(sql, parameters).ToList<HeaderExcel>().FirstOrDefault();
                firstTable.Lines_To = firstTable_three.Lines_To;
                firstTable.Lines_Hours_To = firstTable_three.Lines_Hours_To;
                firstTable.Lines_Amount_To = firstTable_three.Lines_Amount_To;

                sql = @"select sum ( amount_from + adjustment_from + amount_to + adjustment_to ) as Lines_Total_Amount from mctr_line_item where mctr_no = :mctr_headermctr_no and mtl_jrnl = 'N'";
                parameters = new OracleParameter[1];
                parameters[0] = new OracleParameter(":mctr_headermctr_no", OracleDbType.Int32, excelFinalResults.MCTR_NO, ParameterDirection.Input);
                firstTable_four = entities.Database.SqlQuery<HeaderExcel>(sql, parameters).ToList<HeaderExcel>().FirstOrDefault();
                firstTable.Lines_Total_Amount = firstTable_four.Lines_Total_Amount;

                sql = @"select to_char ( nvl ( sum ( decode ( amount_from , null , 0 , amount_from ) ) , 0 ) ) as offset_smry_amt from mctr_offset where mctr_no = :mctr_headermctr_no";
                parameters = new OracleParameter[1];
                parameters[0] = new OracleParameter(":mctr_headermctr_no", OracleDbType.Int32, excelFinalResults.MCTR_NO, ParameterDirection.Input);
                firstTable_five = entities.Database.SqlQuery<HeaderExcel>(sql, parameters).ToList<HeaderExcel>().FirstOrDefault();
                firstTable.offset_smry_amt = firstTable_five.offset_smry_amt;

                sql = @"select to_char ( nvl ( sum ( decode ( amount_from , null , 0 , amount_from ) ) , 0 ) ) as Overhead_Smry_Amt , to_char ( nvl ( sum ( decode ( from_to , 'F' , 1 , 0 ) ) , 0 ) ) as Overhead_Lines_Fr , to_char ( nvl ( sum ( decode ( from_to , 'T' , 1 , 0 ) ) , 0 ) ) as Overhead_Lines_To , to_char ( nvl ( sum ( decode ( from_to , 'F' , amount_from , 0 ) ) , 0 ) ) as Overhead_Amount_Fr , to_char ( nvl ( sum ( decode ( from_to , 'T' , amount_from , 0 ) ) , 0 ) ) as Overhead_Amount_To from mctr_ovrhd  where mctr_no = :mctr_headermctr_no";
                parameters = new OracleParameter[1];
                parameters[0] = new OracleParameter(":mctr_headermctr_no", OracleDbType.Int32, excelFinalResults.MCTR_NO, ParameterDirection.Input);
                firstTable_six = entities.Database.SqlQuery<HeaderExcel>(sql, parameters).ToList<HeaderExcel>().FirstOrDefault();
                firstTable.Overhead_Smry_Amt = firstTable_six.Overhead_Smry_Amt;
                firstTable.Overhead_Lines_Fr = firstTable_six.Overhead_Lines_Fr;
                firstTable.Overhead_Lines_To = firstTable_six.Overhead_Lines_To;
                firstTable.Overhead_Amount_Fr = firstTable_six.Overhead_Amount_Fr;
                firstTable.Overhead_Amount_To = firstTable_six.Overhead_Amount_To;

                firstTable.MCTR_NO = excelFinalResults.MCTR_NO;


            }
            catch (Exception ex)
            {
                logger.Error(ex.Message);
                throw ex;
            }
            return firstTable;
        }

        private void getMCTRLineItem(HeaderExcel excelFinalResults)
        {

            string sql = "";
            OracleParameter[] parameters;

            try
            {
                sql = @" select line_no, from_to,line_no_oh,activity_id,work_bugl,
   project_id,contract_num, account, bum_cd, cust_type_cd,ptt,ptc,stat_code,uom, affiliate,
   home_dept, home_loc, home_bugl, home_pool,class_cd, labor_rate_cd,
   work_dept, work_loc, work_pool,BUM_CD7_TO_ORIG,
    rsc, wpd, bulk_alctn_cd,oh_base_yr,causal_id,estmtg_pricg_cd,po_id,part_no,PO_LINE,epacs_ctt,shop_order,mtl_qty,
  quantity, amount,adjustment,GLPC_Backup_TTD,GLPC_Backup_Year
   from ( 
   select line_no, 'Fr' as from_to, 0 as line_no_oh,
   activity_id_from as activity_id,work_bugl_from as work_bugl, project_id_from as project_id,contract_num_from as contract_num,
   account_from as account, bum_cd7_from as bum_cd, cust_type_cd7_from as cust_type_cd,proj_trans_type_from as ptt,proj_trans_code_from as ptc,stat_code_from as stat_code,uom_from  as uom, affiliate_from as affiliate,
   home_dept_from as home_dept, home_loc_from as home_loc, home_bugl_from as home_bugl, home_pool_from as home_pool,
   class_cd_from as class_cd, labor_rate_cd7_from as labor_rate_cd,work_dept_from as work_dept,work_loc_from as work_loc,work_pool_from as work_pool,BUM_CD7_TO_ORIG,
   rsc_from as rsc, wpd_from as wpd, bulk_from as bulk_alctn_cd,
   oh_base_yr_from as oh_base_yr,causal_id_from as causal_id,estmtg_pricg_cd_from as estmtg_pricg_cd,po_id_from as po_id,part_no_from as part_no,PO_LINE_FROM as PO_LINE,epacs_ctt_from as epacs_ctt,shop_order_from as shop_order,material_quantity_from as mtl_qty,
   quantity_from as quantity,amount_from as amount,adjustment_from as adjustment,ttd_flag as GLPC_Backup_TTD,per_flag as GLPC_Backup_Year
   from mctr_line_item where mctr_no = :mctr_headermctr_no
   union
   select line_no, 'To' as from_to, 0 as line_no_oh,
   activity_id_to as activity_id,work_bugl_to as work_bugl, project_id_to as project_id,contract_num_to as contract_num,
   account_to as account, bum_cd7_to as bum_cd, cust_type_cd7_to as cust_type_cd,proj_trans_type_to as ptt,proj_trans_code_to as ptc,stat_code_to as stat_code,uom_to  as uom, affiliate_to as affiliate,
   home_dept_to as home_dept, home_loc_to as home_loc, home_bugl_to as home_bugl, home_pool_to as home_pool,
   class_cd_to as class_cd, labor_rate_cd7_to as labor_rate_cd,work_dept_to as work_dept,work_loc_to as work_loc,work_pool_to as work_pool,BUM_CD7_TO_ORIG,
   rsc_to as rsc, wpd_to as wpd, bulk_to as bulk_alctn_cd,
   oh_base_yr_to as oh_base_yr,causal_id_to as causal_id,estmtg_pricg_cd_from as estmtg_pricg_cd,po_id_to as po_id,part_no_to as part_no,PO_LINE_TO as PO_LINE,epacs_ctt_to as epacs_ctt,shop_order_to as shop_order,material_quantity_to as mtl_qty,
   quantity_to as quantity,amount_to as amount,adjustment_to as adjustment,ttd_flag as GLPC_Backup_TTD,per_flag as GLPC_Backup_Year
   from mctr_line_item where mctr_no = :mctr_headermctr_no)
   order by line_no, from_to, line_no_oh";

                parameters = new OracleParameter[2];
                parameters[0] = new OracleParameter(":mctr_headermctr_no", OracleDbType.Int32, excelFinalResults.MCTR_NO, ParameterDirection.Input);
                parameters[1] = new OracleParameter(":mctr_headermctr_no", OracleDbType.Int32, excelFinalResults.MCTR_NO, ParameterDirection.Input);
                List<MctrLineItemASIS> mctrLineItemList = new List<MctrLineItemASIS>();
                mctrLineItemList = entities.Database.SqlQuery<MctrLineItemASIS>(sql, parameters).ToList<MctrLineItemASIS>();
                excelFinalResults.mctrLineItemList = mctrLineItemList;
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }

        private void getMCTROffsetOvrhd(HeaderExcel excelFinalResults)
        {

            string sql = "";
            OracleParameter[] parameters;

            try
            {
                sql = @" select line_no, from_to, line_no_oh, activity_id,
   project_id, account, bum_cd, cust_type_cd, affiliate,
   home_dept, home_loc, home_bugl, home_pool,
   work_dept, work_loc, work_bugl, work_pool,
   class_cd, labor_rate_cd, rsc, wpd, bulk_alctn_cd,
   ptt, ptc, stat_code, uom, oh_base_yr, quantity, amount
   from (
   select line_no, from_to, line_no_oh,
   activity_id_from as activity_id, project_id_from as project_id,
   account_from as account, bum_cd7_from as bum_cd, cus_type_cd7_from as cust_type_cd, affiliate_from as affiliate,
   home_dept_from as home_dept, home_loc_from as home_loc, home_bugl_from as home_bugl, home_pool_from as home_pool,
   class_cd_from as class_cd, labor_rate_cd7_from as labor_rate_cd,
   rsc_from as rsc, wpd_from as wpd, bulk_alctn_cd7 as bulk_alctn_cd,
   work_dept_from as work_dept, work_loc_from as work_loc, work_bugl_from as work_bugl, work_pool_from as work_pool,
   proj_trans_type_from as ptt, proj_trans_code_from as ptc, stat_code_from as stat_code, uom_from as uom,
   oh_base_yr_from as oh_base_yr, quantity_from as quantity, amount_from as amount
   from mctr_ovrhd where mctr_no = :mctr_headermctr_no
   union
   select 0 as line_no, 'o' as from_to, line_no as line_no_oh,
   activity_id_from as activity_id, project_id_from as project_id,
   account_from as account, null as bum_cd, null as cust_type_cd, affiliate_from as affiliate,
   home_dept_from as home_dept, home_loc_from as home_loc, home_bugl_from as home_bugl, home_pool_from as home_pool,
   class_cd_from as class_cd, labor_rate_cd7_from as labor_rate_cd,
   rsc_from as rsc, null as wpd, null as bulk_alctn_cd,
   work_dept_from as work_dept, work_loc_from as work_loc, work_bugl_from as work_bugl, work_pool_from as work_pool,
   proj_trans_type_from as ptt, proj_trans_code_from as ptc, stat_code_from as stat_code, uom_from as uom,
   oh_base_yr_from as oh_base_yr, quantity_from as quantity, amount_from as amount
   from mctr_offset where mctr_no = :mctr_headermctr_no
   union
   select line_no, 'F' as from_to, 0 as line_no_oh,
   activity_id_from as activity_id, project_id_from as project_id,
   account_from as account, bum_cd7_from as bum_cd, cust_type_cd7_from as cust_type_cd, affiliate_from as affiliate,
   home_dept_from as home_dept, home_loc_from as home_loc, home_bugl_from as home_bugl, home_pool_from as home_pool,
   class_cd_from as class_cd, labor_rate_cd7_from as labor_rate_cd,
   rsc_from as rsc, wpd_from as wpd, bulk_from as bulk_alctn_cd,
   work_dept_from as work_dept, work_loc_from as work_loc, work_bugl_from as work_bugl, work_pool_from as work_pool,
   proj_trans_type_from as ptt, proj_trans_code_from as ptc, stat_code_from as stat_code, uom_from  as uom,
   oh_base_yr_from as oh_base_yr, quantity_from as quantity, (amount_from + adjustment_from) as amount
   from mctr_line_item where mctr_no = :mctr_headermctr_no
   union
   select line_no, 'T' as from_to, 0 as line_no_oh,
   activity_id_to as activity_id, project_id_to as project_id,
   account_to as account, bum_cd7_to as bum_cd, cust_type_cd7_to as cust_type_cd, affiliate_to as affiliate,
   home_dept_to as home_dept, home_loc_to as home_loc, home_bugl_to as home_bugl, home_pool_to as home_pool,
   class_cd_to as class_cd, labor_rate_cd7_to as labor_rate_cd,
   rsc_to as rsc, wpd_to as wpd, bulk_to as bulk_alctn_cd,
   work_dept_to as work_dept, work_loc_to as work_loc, work_bugl_to as work_bugl, work_pool_to as work_pool,
   proj_trans_type_to as ptt, proj_trans_code_to as ptc, stat_code_to as stat_code, uom_to as uom,
   oh_base_yr_to as oh_base_yr, quantity_to as quantity, (amount_to + adjustment_to) as amount
   from mctr_line_item where mctr_no = :mctr_headermctr_no)
   order by line_no, from_to, line_no_oh";

                parameters = new OracleParameter[4];
                parameters[0] = new OracleParameter(":mctr_headermctr_no", OracleDbType.Int32, excelFinalResults.MCTR_NO, ParameterDirection.Input);
                parameters[1] = new OracleParameter(":mctr_headermctr_no", OracleDbType.Int32, excelFinalResults.MCTR_NO, ParameterDirection.Input);
                parameters[2] = new OracleParameter(":mctr_headermctr_no", OracleDbType.Int32, excelFinalResults.MCTR_NO, ParameterDirection.Input);
                parameters[3] = new OracleParameter(":mctr_headermctr_no", OracleDbType.Int32, excelFinalResults.MCTR_NO, ParameterDirection.Input);

                List<OvrhdOffsetExcel> ovrhdOffsetExcelList = new List<OvrhdOffsetExcel>();
                ovrhdOffsetExcelList = entities.Database.SqlQuery<OvrhdOffsetExcel>(sql, parameters).ToList<OvrhdOffsetExcel>();
                excelFinalResults.ovrhdOffsetExcelList = ovrhdOffsetExcelList;
            }
            catch (Exception ex)
            {
                logger.Error(ex.Message);
                throw ex;
            }
        }

        private IEnumerable<HeaderExcel> getHeaderExcelList(IEnumerable<HeaderExcel> mctrCreateForm)
        {
            HeaderExcel headerExcel = mctrCreateForm.First();

            string sql = "";
            OracleParameter[] parameters;

            try
            {
                sql = @" select h.title, h.orig_bu, h.fiscal_year, h.date_enter, h.date_journal,
              h.reason_code, r.reason_descr, h.status_id, s.status_descr,
              h.appl_jrnl_id, h.jv_item_cd,  h.bems_orig,
              decode(rtrim(rtrim(org.last_name) || ', ' || rtrim(org.first_name) || ' ' || rtrim(org.middle_int)),
              ',',' ',(rtrim(org.last_name) || ', ' || rtrim(org.first_name) || ' ' || rtrim(org.middle_int)))
              as bems_orig_name, h.orig_group, abu.descr
         
         from mctr_header h,
              mctr_status s,
              mctr_reason_code r,
              mctr_bus_unit_v abu,
              mctr_employee_v org
        where h.mctr_no = :mctr_headermctr_no
          and h.status_id = s.status_id(+)
          and h.reason_code = r.reason_code(+)
          and h.orig_bu = abu.business_unit(+)
          and h.bems_orig = org.bems_id(+)";

                parameters = new OracleParameter[1];
                parameters[0] = new OracleParameter(":mctr_headermctr_no", OracleDbType.Int32, headerExcel.MCTR_NO, ParameterDirection.Input);
                mctrCreateForm = entities.Database.SqlQuery<HeaderExcel>(sql, parameters).ToList<HeaderExcel>();
            }
            catch (Exception ex)
            {
                logger.Error(ex.Message);
                throw ex;
            }
            return mctrCreateForm;
        }
        public IEnumerable<MctrCreateForm> mctrLineItembutBulkWhenButtonPressedOpenLOV(IEnumerable<MctrCreateForm> mctrCreateForm)
        {
            MctrCreateForm mctrcreateform = mctrCreateForm.First();
            MctrLineItem mctrlineitem = mctrcreateform.mctrLineItem.First();
            mctrcreateform.V_Count = new Dictionary<string, int>();
            mctrcreateform.V_Countstring = new Dictionary<string, string>();
            mctrcreateform.V_Count.Clear();
            mctrcreateform.V_Countstring.Clear();


            string sql = "";
            var v_count = 0;
            var v_bulk_flg = "";
            OracleParameter[] parameters;

            try
            {
                sql = @" select bulk_flg 
         from mctr_bu_profile
        where business_unit = :orig_bu";

                parameters = new OracleParameter[1];
                parameters[0] = new OracleParameter(":orig_bu", OracleDbType.Varchar2, mctrcreateform.OrigBu, ParameterDirection.Input);
                v_bulk_flg = entities.Database.SqlQuery<string>(sql, parameters).SingleOrDefault();

                mctrcreateform.V_Countstring.Add("Bulkflag", v_bulk_flg);
                sql = @"select count(*) 
               from mctr_bulk_alctn_v
              where setid = :v_setid
                and proj_trans_type = :proj_trans_type_to
                and bulk_alctn_cd7 = :bulk_to";
                parameters = new OracleParameter[3];
                parameters[0] = new OracleParameter(":v_setid", OracleDbType.Varchar2, mctrlineitem.SETID, ParameterDirection.Input);
                parameters[1] = new OracleParameter(":proj_trans_type_to", OracleDbType.Varchar2, mctrlineitem.PROJ_TRANS_TYPE_TO, ParameterDirection.Input);
                parameters[2] = new OracleParameter(":bulk_to", OracleDbType.Varchar2, mctrlineitem.BULK_TO, ParameterDirection.Input);
                v_count = entities.Database.SqlQuery<int>(sql, parameters).SingleOrDefault();
                mctrcreateform.V_Count.Add("BulkCount", v_count);

                sql = "select bulk_alctn_cd7, proj_trans_type, descr, eff_status  from mctr_bulk_alctn_v where setid = :0 and proj_trans_type = :1 union select null,' ', '** NO BULK ALLOCATION (BLANK VALUE)',null from dual where :2 is not null order by 1";

                parameters[0] = new OracleParameter(":globalsetid", OracleDbType.Varchar2, mctrlineitem.SETID, ParameterDirection.Input);
                parameters[1] = new OracleParameter(":proj_trans_type_to", OracleDbType.Varchar2, mctrlineitem.PROJ_TRANS_TYPE_TO, ParameterDirection.Input);
                parameters[2] = new OracleParameter(":bulk_to", OracleDbType.Varchar2, mctrlineitem.BULK_TO, ParameterDirection.Input);
                var list = entities.Database.SqlQuery<mctrbulkalctnv>(sql, parameters).ToList();
               
                mctrcreateform.V_Count.Add("BulkCountLOV", list.Count);




            }
            catch (Exception ex)
            {
                logger.Error(ex.Message);
                throw;
            }

            return mctrCreateForm;
        }

        public IEnumerable<MctrCreateForm> mctrLineItembutWpdWhenButtonPressedOpenLOV(IEnumerable<MctrCreateForm> mctrCreateForm)
        {
            MctrCreateForm mctrcreateform = mctrCreateForm.First();
            MctrLineItem mctrlineitem = mctrcreateform.mctrLineItem.First();
            mctrcreateform.V_Count = new Dictionary<string, int>();
            mctrcreateform.V_Count.Clear();

            string sql = "";
            var v_count = 0;

            OracleParameter[] parameters;

            try
            {
                try
                {
                    sql = @" select count(*) 
           from mctr_major_acct_v
          where major_account_nbr7 = substr(:account_to,1,4)
            and eff_status = 'A'
            and wpd_indirect_flg7 = 'Y'
            and :proj_trans_type_to = 'LBR'";

                    parameters = new OracleParameter[2];
                    parameters[0] = new OracleParameter(":account_to", OracleDbType.Varchar2, mctrlineitem.ACCOUNT_TO, ParameterDirection.Input);
                    parameters[1] = new OracleParameter(":proj_trans_type_to", OracleDbType.Varchar2, mctrlineitem.PROJ_TRANS_TYPE_TO, ParameterDirection.Input);

                    v_count = entities.Database.SqlQuery<int>(sql, parameters).SingleOrDefault();
                    mctrcreateform.V_Count.Add("WpdCount", v_count);
                }
                catch (Exception e)
                {
                    logger.Error("Error from  Mctr.DataAccess.mctrLineItembutWpdWhenButtonPressedOpenLOV():" + e.Message);
                    mctrcreateform.V_Count.Add("WpdCount", 0);
                }

                if (v_count > 0)
                {
                    mctrlineitem.WPD_TO = "IN";
                }
                try
                {
                    sql = @"  select count(*) 
                 from mctr_wp_master_v
                where wpd_id7 = :wpd_to
                  and eff_status = 'A'
                  and wpd_id7 not in ('IN','999')";
                    parameters = new OracleParameter[1];
                    parameters[0] = new OracleParameter(":wpd_to", OracleDbType.Varchar2, mctrlineitem.WPD_TO, ParameterDirection.Input);
                    v_count = entities.Database.SqlQuery<int>(sql, parameters).SingleOrDefault();
                    mctrcreateform.V_Count.Add("WpdCountmas", v_count);
                }
                catch (Exception e)
                {
                    logger.Error(e.Message);
                    mctrcreateform.V_Count.Add("WpdCountmas", 0);
                }
            }
            catch (Exception ex)
            {
                logger.Error(ex.Message);
                throw;
            }
            return mctrCreateForm;
        }


        public IEnumerable<MctrCreateForm> mctrLineItemamountfromPostTextItemOpenLOV(IEnumerable<MctrCreateForm> mctrCreateForm)
        {

            MctrCreateForm mctrcreateform = mctrCreateForm.First();
            MctrLineItem mctrlineitem = mctrcreateform.mctrLineItem.First();
            mctrcreateform.V_CountDouble = new Dictionary<string, Double>();
            mctrcreateform.V_CountDouble.Clear();

            string sql = "";
            Double v_count = 0;
            var v_setid = "";
            OracleParameter[] parameters;
            try
            {

                if (Convert.ToInt32(mctrcreateform.fyear) > 2007 && mctrlineitem.AFFILIATE_FROM != "")
                {
                    v_setid = mctrlineitem.AFFILIATE_FROM;
                }
                else
                {
                    v_setid = mctrlineitem.HOME_BUGL_FROM;
                }

                sql = @"select rate 
                          from mctr_lbr_rate
                         where setid = :v_setid
                           and fiscal_year = :fiscal_year
                and labor_rate_cd7 = :labor_rate_cd7_from
                and proj_trans_code = :proj_trans_code_from";
                parameters = new OracleParameter[4];
                parameters[0] = new OracleParameter(":v_setid", OracleDbType.Varchar2, v_setid, ParameterDirection.Input);
                parameters[1] = new OracleParameter(":fiscal_year", OracleDbType.Int16, Convert.ToInt16(mctrcreateform.fyear), ParameterDirection.Input);
                parameters[2] = new OracleParameter(":labor_rate_cd7_from", OracleDbType.Varchar2, mctrlineitem.LABOR_RATE_CD7_FROM, ParameterDirection.Input);
                parameters[3] = new OracleParameter(":proj_trans_code_from", OracleDbType.Varchar2, mctrlineitem.PROJ_TRANS_CODE_FROM, ParameterDirection.Input);
                v_count = entities.Database.SqlQuery<Double>(sql, parameters).SingleOrDefault();
                mctrcreateform.V_CountDouble.Add("Vrate", v_count);
            }
            catch (Exception e)
            {
                logger.Error("Error from  Mctr.DataAccess.mctrLineItemamountfromPostTextItemOpenLOV():" + e.Message);
                mctrcreateform.V_CountDouble.Add("Vrate", 0);
            }
            try
            {
                sql = @" select rate 
                            from mctr_lbr_rate_v
                           where setid = :home_bugl_from
                             and fiscal_year = :fiscal_year
                             and labor_rate_cd7 = :labor_rate_cd7_from
                             and proj_trans_code = :proj_trans_code_from";
                parameters = new OracleParameter[4];
                parameters[0] = new OracleParameter(":home_bugl_from", OracleDbType.Varchar2, mctrlineitem.HOME_BUGL_FROM, ParameterDirection.Input);
                parameters[1] = new OracleParameter(":fiscal_year", OracleDbType.Int16, Convert.ToInt16(mctrcreateform.fyear), ParameterDirection.Input);
                parameters[2] = new OracleParameter(":labor_rate_cd7_from", OracleDbType.Varchar2, mctrlineitem.LABOR_RATE_CD7_FROM, ParameterDirection.Input);

                parameters[3] = new OracleParameter(":proj_trans_code_from", OracleDbType.Varchar2, mctrlineitem.PROJ_TRANS_CODE_FROM, ParameterDirection.Input);
                v_count = entities.Database.SqlQuery<Double>(sql, parameters).SingleOrDefault();
                mctrcreateform.V_CountDouble.Add("Vrateview", v_count);
            }
            catch (Exception e)
            {
                logger.Error(e.Message);
                mctrcreateform.V_CountDouble.Add("Vrateview", 0);
            }
            return mctrCreateForm;

        }


        public IEnumerable<MctrLineItem> overheadOnLoad(IEnumerable<MctrLineItem> mctrLineItem)
        {
            return null;
        }
        /// <summary>
        /// mctrHeaderbutBuWhenButtonPressedOpenLOV
        ///         
        /// 
        /// </summary>
        /// <param name="mctrCreateForm"></param>
        /// <returns></returns>
        public IEnumerable<MctrCreateForm> mctrHeaderbutBuWhenButtonPressedOpenLOV(IEnumerable<MctrCreateForm> mctrCreateForm)
        {


            MctrCreateForm mctrcreateform = mctrCreateForm.First();
            OracleParameter[] parameters;
            string query;
            try
            {

                // SQL: insert into mctr_status_hist(mctr_no, date_time_entered, date_time_left, prior_status, next_status) values(:mctr_no, sysdate, null, 'oa', 'oa');
                query = @"select op_segment_7  
                          from mctr_bus_unit_v
                          where business_unit = :orig_bu";
                parameters = new OracleParameter[1];
                parameters[0] = new OracleParameter(":orig_bu", OracleDbType.Varchar2, mctrcreateform.OrigBu, ParameterDirection.Input);

                var v_hold_sment = entities.Database.SqlQuery<string>(query, parameters).SingleOrDefault();

                query = @" select count(*) 
                            from mctr_bu_profile
                            where business_unit = :orig_bu and pyr_only_flg = 'N'";
                parameters = new OracleParameter[1];
                parameters[0] = new OracleParameter(":orig_bu", OracleDbType.Varchar2, mctrcreateform.OrigBu, ParameterDirection.Input);

                var CYPYFlag = entities.Database.SqlQuery<int>(query, parameters).SingleOrDefault();


                if (CYPYFlag > 0)
                {
                    mctrcreateform.fyear = DateTime.Now.Year.ToString();
                    query = @"select to_char(begin_dt,'dd-mon-yyyy')
                 from mctr_mth_cal_mv
                where fiscal_year = :fiscal_year and accounting_period = 1";
                    parameters = new OracleParameter[1];
                    parameters[0] = new OracleParameter(":fiscal_year", OracleDbType.Int32, DateTime.Now.Year, ParameterDirection.Input);
                    mctrcreateform.PeriodFrom = entities.Database.SqlQuery<string>(query, parameters).SingleOrDefault();
                    query = @"select to_char(max(end_dt),'dd-mon-yyyy')
                 from mctr_mth_cal_mv
                where fiscal_year = :fiscal_year and accounting_period = 1";
                    parameters = new OracleParameter[1];
                    parameters[0] = new OracleParameter(":fiscal_year", OracleDbType.Int32, DateTime.Now.Year, ParameterDirection.Input);
                    mctrcreateform.PeriodTo = entities.Database.SqlQuery<string>(query, parameters).SingleOrDefault();
                }
                else
                {
                    mctrcreateform.fyear = "";
                    mctrcreateform.py_cy_status = "";

                    query = @" select count(*) from (
                 select distinct fiscal_year from mctr_incr_rates 
                  where cmpon_cd = :orig_bu 
                    and exists (select business_unit from mctr_bu_profile
                                 where business_unit = :orig_bu and man_rated_flg = 'N') 
                 union
                 select distinct fiscal_year from mctr_incr_rates 
                 where fiscal_year > 2007 
                   and exists (select business_unit from mctr_bu_profile
                               where business_unit = :orig_bu and man_rated_flg = 'Y') 
                 union
                 select distinct fiscal_year from mctr_mth_cal_mv
                  where setid = 'mdc'
                    and calendar_id = '01'
                    and begin_dt <= trunc(sysdate)
                    and end_dt >= trunc(sysdate)
                    and exists (select business_unit from mctr_bu_profile
                                 where business_unit = :orig_bu and pyr_only_flg = 'N'))
                where fiscal_year = :fiscal_year";
                    parameters = new OracleParameter[5];
                    parameters[0] = new OracleParameter(":orig_bu", OracleDbType.Varchar2, mctrcreateform.OrigBu, ParameterDirection.Input);
                    parameters[1] = new OracleParameter(":orig_bu", OracleDbType.Varchar2, mctrcreateform.OrigBu, ParameterDirection.Input);
                    parameters[2] = new OracleParameter(":orig_bu", OracleDbType.Varchar2, mctrcreateform.OrigBu, ParameterDirection.Input);
                    parameters[3] = new OracleParameter(":orig_bu", OracleDbType.Varchar2, mctrcreateform.OrigBu, ParameterDirection.Input);
                    parameters[4] = new OracleParameter(":fiscal_year", OracleDbType.Int32, DateTime.Now.Year, ParameterDirection.Input);
                    var v_count = entities.Database.SqlQuery<int>(query, parameters).SingleOrDefault();

                    if (v_count == 0)
                    {
                        mctrcreateform.fyear = "";
                        mctrcreateform.py_cy_status = "";
                    }
                }

                if (mctrcreateform.ReasonCode != "" && v_hold_sment != "")
                {
                    query = @"select count(*)  from mctr_bus_unit_v
                where business_unit = :orig_bu and op_segment_7 = :v_hold_sment";
                    parameters = new OracleParameter[2];
                    parameters[0] = new OracleParameter(":orig_bu", OracleDbType.Varchar2, mctrcreateform.OrigBu, ParameterDirection.Input);
                    parameters[1] = new OracleParameter(":v_hold_sment", OracleDbType.Varchar2, v_hold_sment, ParameterDirection.Input);
                    var ReasonCodeFlag = entities.Database.SqlQuery<int>(query, parameters).SingleOrDefault();
                    if (ReasonCodeFlag == 0)
                    {
                        mctrcreateform.ReasonCode = "";
                    }

                }


                return mctrCreateForm;
            }
            catch (Exception ex)
            {
                logger.Error("Exception Occured at :mctrHeaderbutJrnlWhenButtonPressed " + ex);
                throw;
            }

        }
        public IEnumerable<MctrCreateForm> buButPressPTTValidation(IEnumerable<MctrCreateForm> mctrCreateForm)
        {


            MctrCreateForm mctrcreateform = mctrCreateForm.First();
            MctrLineItem mctrlineitem = mctrcreateform.mctrLineItem.Last();
            string query;
            OracleParameter[] parameters;
            mctrcreateform.V_Count = new Dictionary<string, int>();
            mctrcreateform.V_Count.Clear();

            try
            {


                mctrcreateform.V_Count = new Dictionary<string, int>();
                mctrcreateform.V_Count.Clear();
                query = @" select count(*)
                 from mctr_trans_type 
                where cmpon_cd = :orig_bu
                  and proj_trans_type = :proj_trans_type_from";
                parameters = new OracleParameter[2];
                parameters[0] = new OracleParameter(":orig_bu", OracleDbType.Varchar2, mctrcreateform.OrigBu, ParameterDirection.Input);
                parameters[1] = new OracleParameter(":proj_trans_type_from", OracleDbType.Varchar2, mctrlineitem.PROJ_TRANS_TYPE_FROM, ParameterDirection.Input);

                var projTranTypeCount = entities.Database.SqlQuery<int>(query, parameters).SingleOrDefault();

                if (projTranTypeCount == 0)
                {
                    mctrcreateform.V_Count.Add("PTTflag", projTranTypeCount);
                }
                else
                {
                    mctrcreateform.V_Count.Add("PTTflag", -1);
                }


                return mctrCreateForm;
            }
            catch (Exception ex)
            {
                logger.Error("Exception Occured at :mctrHeaderbutJrnlWhenButtonPressed " + ex);
                throw;
            }

        }


        /// <summary>
        /// mctrHeaderbutFiscalYearWhenButtonPressedOpenLOV
        ///         
        /// 
        /// </summary>
        /// <param name="mctrCreateForm"></param>
        /// <returns></returns>
        public IEnumerable<MctrCreateForm> mctrHeaderbutFiscalYearWhenButtonPressedOpenLOV(IEnumerable<MctrCreateForm> mctrCreateForm)
        {


            MctrCreateForm mctrcreateform = mctrCreateForm.First();

            try
            {
                var result = GetDates(mctrcreateform);
                mctrCreateForm.First().PeriodFrom = result.PeriodFrom;
                mctrCreateForm.First().PeriodTo = result.PeriodTo;
                mctrCreateForm.First().COW = result.COW;

                return mctrCreateForm;
            }
            catch (Exception ex)
            {
                logger.Error("Exception Occured at :mctrHeaderbutJrnlWhenButtonPressed " + ex);
                throw;
            }

        }
        public IEnumerable<MctrLineItem> mctrLineItembutTransFromWhenButtonPressedOpenLOV(IEnumerable<MctrLineItem> mctrLineItem)
        {
            MctrLineItem mctrlineItem = mctrLineItem.First();

            OracleParameter[] parameters = new OracleParameter[2];
            if (mctrlineItem.ACCOUNT_TO != "")
            {
                string query = @"SELECT COUNT(*)
              FROM MCTR_MAJOR_ACCT_V
             WHERE MAJOR_ACCOUNT_NBR7 = SUBSTR(:ACCOUNT_TO,1,4)
               AND EFF_STATUS = 'A'
               AND WPD_INDIRECT_FLG7 = 'Y'
               AND :PROJ_TRANS_TYPE_TO = 'LBR'";
                parameters[0] = new OracleParameter(":ACCOUNT_TO", OracleDbType.Varchar2, mctrlineItem.ACCOUNT_TO, ParameterDirection.Input);
                parameters[1] = new OracleParameter(":PROJ_TRANS_TYPE_TO", OracleDbType.Varchar2, mctrlineItem.PROJ_TRANS_TYPE_TO, ParameterDirection.Input);
                var flag = entities.Database.SqlQuery<int>(query, parameters).SingleOrDefault();
                if (flag > 0)
                {
                    mctrLineItem.First().WPD_TO = "IN";
                }
                if (mctrLineItem.First().WPD_TO != "" && mctrLineItem.First().WPD_TO == "IN")
                {
                    mctrLineItem.First().WPD_TO = "";
                }

            }

            return mctrLineItem;

        }

        public IEnumerable<MctrCreateForm> ValidateActivityID(IEnumerable<MctrCreateForm> mctrCreateForm)
        {
            MctrCreateForm mctrcreateform = mctrCreateForm.First();

            OracleParameter[] parameters = new OracleParameter[1];
            mctrcreateform.V_Count = new Dictionary<string, int>();
            mctrcreateform.V_Count.Clear();
            string query;
            query = "select count(*) from mctr_activity_v where activity_id = :activity_id";

            parameters[0] = new OracleParameter(":activity_id", OracleDbType.Varchar2, mctrcreateform.ActivityId, ParameterDirection.Input);

            var v_count = entities.Database.SqlQuery<int>(query, parameters).SingleOrDefault();
            mctrcreateform.V_Count.Add("valid", v_count);
            query = "select count(*) from mctr_activity_v where activity_id = :activity_id  and (eff_status = 'A' or (eff_status = 'I' and direct_chrg_flg7 = 'Y'))";

            parameters[0] = new OracleParameter(":activity_id", OracleDbType.Varchar2, mctrcreateform.ActivityId, ParameterDirection.Input);

            v_count = entities.Database.SqlQuery<int>(query, parameters).SingleOrDefault();
            mctrcreateform.V_Count.Add("validStatus", v_count);

            return mctrCreateForm;
        }

        public IEnumerable<MctrCreateForm> mctrLineItembutProjToWhenButtonPressedOpenLOV(IEnumerable<MctrCreateForm> mctrCreateForm)
        {
            MctrCreateForm mctrcreateform = mctrCreateForm.First();
            MctrLineItem mctrlineitem = mctrcreateform.mctrLineItem.FirstOrDefault();

            OracleParameter[] parameters = new OracleParameter[1];
            mctrcreateform.V_Count = new Dictionary<string, int>();
            mctrcreateform.V_Count.Clear();
            var bumcount = 0;
            string query;

            query = @" select count(*) 
             from mctr_doh_2002_rate
            where (fiscal_year = :fiscal_year and mctr_bus_unit_cd7 = :bum_cd7_to)
               or (fiscal_year = :fiscal_year and mctr_bus_unit_cd7 = substr(:bum_cd7_to,2,2))";
            parameters = new OracleParameter[4];
            parameters[0] = new OracleParameter(":fiscal_year", OracleDbType.Int32, Convert.ToInt32(mctrcreateform.fyear), ParameterDirection.Input);
            parameters[1] = new OracleParameter(":bum_cd7_to", OracleDbType.Varchar2, mctrlineitem.BUM_CD7_TO, ParameterDirection.Input);
            parameters[2] = new OracleParameter(":fiscal_year", OracleDbType.Int32, Convert.ToInt32(mctrcreateform.fyear), ParameterDirection.Input);
            parameters[3] = new OracleParameter(":bum_cd7_to", OracleDbType.Varchar2, mctrlineitem.BUM_CD7_TO, ParameterDirection.Input);
            var v_doh_2002_count = entities.Database.SqlQuery<int>(query, parameters).SingleOrDefault();

            query = @" select count(*)  
             from mctr_bus_unit_mgmt
            where fiscal_year = :fiscal_year
              and bus_unit_mgmt_cd7 = :bum_cd7_to";
            parameters = new OracleParameter[2];
            parameters[0] = new OracleParameter(":fiscal_year", OracleDbType.Int32, Convert.ToInt32(mctrcreateform.fyear), ParameterDirection.Input);
            parameters[1] = new OracleParameter(":bum_cd7_to", OracleDbType.Varchar2, mctrlineitem.BUM_CD7_TO, ParameterDirection.Input);
            var v_bum_count = entities.Database.SqlQuery<int>(query, parameters).SingleOrDefault();

            if (v_doh_2002_count == 0 && v_bum_count == 0)
            {
                bumcount = 1;
            }
            mctrcreateform.V_Count.Add("bumcount", bumcount);

            query = @" select count(*) 
                 from mctr_major_acct_v
                where major_account_nbr7 = substr(:account_to,1,4)
                  and eff_status = 'A'
                  and wpd_indirect_flg7 = 'Y'
                  and :proj_trans_type_to = 'LBR'";
            parameters = new OracleParameter[2];
            parameters[0] = new OracleParameter(":account_to", OracleDbType.Varchar2, mctrlineitem.ACCOUNT_TO, ParameterDirection.Input);
            parameters[1] = new OracleParameter(":proj_trans_type_to", OracleDbType.Varchar2, mctrlineitem.PROJ_TRANS_TYPE_TO, ParameterDirection.Input);
            var wpdCount = entities.Database.SqlQuery<int>(query, parameters).SingleOrDefault();

            mctrcreateform.V_Count.Add("wpdcount", wpdCount);


            return mctrCreateForm;
        }

        public IEnumerable<MctrCreateForm> querymodecheck(IEnumerable<MctrCreateForm> mctrCreateForm)
        {
            MctrCreateForm mctrcreateform = mctrCreateForm.First();
            StringBuilder sql = new StringBuilder();

            OracleParameter[] parameters = new OracleParameter[1];
            // SQL: delete from mctr_ovrhd where mctr_no = : mctr_line_item . mctr_no and line_no = : mctr_line_item . line_no
            sql = new StringBuilder(" select * from  mctr_header where mctr_no=:0");
            parameters[0] = new OracleParameter(":mctr_no", OracleDbType.Int32, mctrcreateform.MctrNo, ParameterDirection.Input);
            var result = entities.MCTR_HEADER.SqlQuery(sql.ToString(), parameters).ToList<MCTR_HEADER>();
            if (result.Count > 0)
            {
                return mctrCreateForm;
            }
            else
            {
                MctrCreateForm newfrom = new MctrCreateForm();
                List<MctrCreateForm> result1 = new List<MctrCreateForm>();
                return result1;
            }
        }
        public IEnumerable<MctrCreateForm> batchModeCheck(IEnumerable<MctrCreateForm> mctrCreateForm)
        {
            IEnumerable<MctrLineItem> mctrLineItem = mctrCreateForm.First().mctrLineItem;
            List<MctrLineItem> result = new List<MctrLineItem>();
            string pyCyStatus = mctrCreateForm.First().py_cy_status;
            StringBuilder sql = new StringBuilder();
            string vAccountFrom;
            string vAccountTo;
            string v_bulk_flg = string.Empty;

            try
            {
                // SQL: select bulk_flg , rsc_lbr_flg , cls_vdt_flg into v_bulk_flg , v_rsc_lbr_flg , v_cls_vdt_flg from mctr_bu_profile where business_unit = : orig_bu
                sql = new StringBuilder("select bulk_flg from  mctr_bu_profile where business_unit = :0 ");
                OracleParameter[] parameters = new OracleParameter[1];
                parameters[0] = new OracleParameter(":business_unit", OracleDbType.Varchar2, mctrCreateForm.First().OrigBu, ParameterDirection.Input);
                var response = entities.Database.SqlQuery<BuProfile>(sql.ToString(), parameters).Single();
                v_bulk_flg = response.Bulk_Flg;

            }
            catch
            {
                v_bulk_flg = "N";

            }

            foreach (var lineItem in mctrLineItem)
            {
                string cowDate = string.Format("{0:dd-MMM-yyyy}", lineItem.COW);
                string periodTo = string.Format("{0:dd-MMM-yyyy}", lineItem.PERIOD_TO);
                lineItem.HOME_BUGL_FROM = mctrCreateForm.First().OrigBu;
                lineItem.HOME_BUGL_TO = mctrCreateForm.First().OrigBu;
                string v_class_cd_from = lineItem.CLASS_CD_FROM;
                string v_class_cd_to = lineItem.CLASS_CD_TO;
                string v_rsc_from = lineItem.RSC_FROM;
                string v_rsc_to = lineItem.RSC_TO;

                vAccountFrom = lineItem.ACCOUNT_FROM;
                vAccountTo = lineItem.ACCOUNT_TO;
                lineItem.flagValidations = new Dictionary<string, string>();
                lineItem.flagValidations.Clear();
                lineItem.activityStatus = "X";
                lineItem.projectStatus = "X";
                //validate from activity and project and get the effective status for each.
                if (lineItem.ACTIVITY_ID_FROM != "" && lineItem.PROJECT_ID_FROM != "" && lineItem.WORK_BUGL_FROM != "" && (lineItem.PROJECT_ID_FROM != "REQUIRED" && lineItem.ACTIVITY_ID_FROM != "REQUIRED"))
                {
                    lineItem.flagValidations.Add("ACCOUNT_FROM", "white");
                    //set_item_instance_property('account_from', current_record, visual_attribute, 'field_white');
                    if (pyCyStatus == "PY")
                    {
                        try
                        {
                            OracleParameter[] parameters2 = new OracleParameter[7];

                            string VcowDate = string.Format("{0:dd-MMM-yyyy}", mctrCreateForm.First().COW);
                            string VperiodTo = string.Format("{0:dd-MMM-yyyy}", mctrCreateForm.First().PeriodTo);

                            sql = new StringBuilder(@"select a2.eff_status as activityStatus, p2.eff_status as projectStatus,p.contract_num as contract_num_from, p.account as account_from, p.bus_unit_mgmt_cd7 as bum_cd7_from, p.customer_type_cd7 as cust_type_cd7_from
                    
                     from mctr_activity_v a, mctr_project_v p, mctr_activity_v a2, mctr_project_v p2
                    where a.activity_id = :activity_id_from
                      and a.project_id = :project_id_from
                      and a.business_unit_gl = :work_bugl_from
                      and a.setid = 'MDC'
                      and a.effdt = (select max(effdt) from mctr_activity_v
                                      where activity_id = a.activity_id
                                        and project_id = a.project_id
                                        and effdt <= :v_cow_date
                                        and eff_status = 'A')
                      and p.setid = a.setid
                      and p.project_id = a.project_id
                      and p.business_unit_gl = a.business_unit_gl
                      and p.effdt = (select max(effdt) from mctr_project_v
                                      where project_id = p.project_id
                                        and effdt <= :period_to
                                        and eff_status = 'A')
                      and a2.activity_id = a.activity_id
                      and a2.project_id = a.project_id
                      and a2.business_unit_gl = a.business_unit_gl
                      and a2.effdt = (select max(effdt) from mctr_activity_v
                                       where activity_id = a2.activity_id
                                         and project_id = a2.project_id
                                         and effdt <= :v_cow_date)
                      and p2.setid = a2.setid
                      and p2.project_id = a2.project_id
                      and p2.business_unit_gl = a2.business_unit_gl
                      and p2.effdt = (select max(effdt) from mctr_project_v
                                       where project_id = p2.project_id
                                         and effdt <= :v_cow_date)");

                            parameters2[0] = new OracleParameter(":activity_id_from", OracleDbType.Varchar2, lineItem.ACTIVITY_ID_FROM, ParameterDirection.Input);
                            parameters2[1] = new OracleParameter(":project_id_from", OracleDbType.Varchar2, lineItem.PROJECT_ID_FROM, ParameterDirection.Input);
                            parameters2[2] = new OracleParameter(":work_bugl_from", OracleDbType.Varchar2, lineItem.WORK_BUGL_FROM, ParameterDirection.Input);
                            parameters2[3] = new OracleParameter(":v_cow_date", OracleDbType.Varchar2, VcowDate, ParameterDirection.Input);
                            parameters2[4] = new OracleParameter(":period_to", OracleDbType.Varchar2, VperiodTo, ParameterDirection.Input);
                            parameters2[5] = new OracleParameter(":v_cow_date", OracleDbType.Varchar2, VcowDate, ParameterDirection.Input);
                            parameters2[6] = new OracleParameter(":v_cow_date", OracleDbType.Varchar2, VcowDate, ParameterDirection.Input);

                            var response = entities.Database.SqlQuery<MctrLineItem>(sql.ToString(), parameters2).ToList();

                            lineItem.activityStatus = response.First().activityStatus;
                            lineItem.projectStatus = response.First().projectStatus;
                            lineItem.CONTRACT_NUM_FROM = response.First().CONTRACT_NUM_FROM;
                            lineItem.ACCOUNT_FROM = response.First().ACCOUNT_FROM;
                            lineItem.BUM_CD7_FROM = response.First().BUM_CD7_FROM;
                            lineItem.CUST_TYPE_CD7_FROM = response.First().CUST_TYPE_CD7_FROM;

                        }
                        catch (Exception e)
                        {
                            lineItem.activityStatus = "X";
                            lineItem.projectStatus = "X";
                        }
                    }
                    else
                    {
                        try
                        {
                            OracleParameter[] parameters3 = new OracleParameter[7];

                            string VcowDate = string.Format("{0:dd-MMM-yyyy}", mctrCreateForm.First().COW);
                            string VperiodTo = string.Format("{0:dd-MMM-yyyy}", mctrCreateForm.First().PeriodTo);

                            sql = new StringBuilder(@"select a2.eff_status as activityStatus, p2.eff_status as projectStatus,
                          p.contract_num as contract_num_from, p.account as account_from, p.bus_unit_mgmt_cd7 as bum_cd7_from, p.customer_type_cd7 as cust_type_cd7_from
                     
                     from mctr_activity_v a,
                          mctr_project_v p,
                          mctr_activity_v a2,
                          mctr_project_v p2
                    where a.activity_id = :activity_id_from
                      and a.project_id = :project_id_from
                      and a.business_unit_gl = :work_bugl_from
                      and a.setid = 'MDC'
                      and a.effdt = (select max(a_ed.effdt) from mctr_activity_v a_ed
                                      where a.activity_id = a_ed.activity_id
                                        and a.project_id = a_ed.project_id
                                        and a_ed.effdt <= :period_to)
                      and p.setid = a.setid
                      and p.project_id = a.project_id
                      and p.business_unit_gl = a.business_unit_gl
                      and p.effdt = (select max(p_ed.effdt) from mctr_project_v p_ed
                                      where p.project_id = p_ed.project_id
                                        and p_ed.effdt <= :period_to)
                      and a2.activity_id = a.activity_id
                      and a2.project_id = a.project_id
                      and a2.business_unit_gl = a.business_unit_gl
                      and a2.effdt = (select max(a2_ed.effdt) from mctr_activity_v a2_ed
                                       where a2.activity_id = a2_ed.activity_id
                                         and a2.project_id = a2_ed.project_id
                                         and a2_ed.effdt <= :v_cow_date)
                      and p2.setid = a2.setid
                      and p2.project_id = a2.project_id
                      and p2.business_unit_gl = a2.business_unit_gl
                      and p2.effdt = (select max(p2_ed.effdt) from mctr_project_v p2_ed
                                       where p2.project_id = p2_ed.project_id
                                         and p2_ed.effdt <= :v_cow_date)");

                            parameters3[0] = new OracleParameter(":activity_id_from", OracleDbType.Varchar2, lineItem.ACTIVITY_ID_FROM, ParameterDirection.Input);
                            parameters3[1] = new OracleParameter(":project_id_from", OracleDbType.Varchar2, lineItem.PROJECT_ID_FROM, ParameterDirection.Input);
                            parameters3[2] = new OracleParameter(":work_bugl_from", OracleDbType.Varchar2, lineItem.WORK_BUGL_FROM, ParameterDirection.Input);
                            parameters3[3] = new OracleParameter(":period_to", OracleDbType.Varchar2, VperiodTo, ParameterDirection.Input);
                            parameters3[4] = new OracleParameter(":period_to", OracleDbType.Varchar2, VperiodTo, ParameterDirection.Input);
                            parameters3[5] = new OracleParameter(":v_cow_date", OracleDbType.Varchar2, VcowDate, ParameterDirection.Input);
                            parameters3[6] = new OracleParameter(":v_cow_date", OracleDbType.Varchar2, VcowDate, ParameterDirection.Input);

                            var response = entities.Database.SqlQuery<MctrLineItem>(sql.ToString(), parameters3).ToList();

                            lineItem.activityStatus = response.First().activityStatus;
                            lineItem.projectStatus = response.First().projectStatus;
                            lineItem.CONTRACT_NUM_FROM = response.First().CONTRACT_NUM_FROM;
                            lineItem.ACCOUNT_FROM = response.First().ACCOUNT_FROM;
                            lineItem.BUM_CD7_FROM = response.First().BUM_CD7_FROM;
                            lineItem.CUST_TYPE_CD7_FROM = response.First().CUST_TYPE_CD7_FROM;
                        }
                        catch (Exception e)
                        {
                            lineItem.activityStatus = "X";
                            lineItem.projectStatus = "X";

                        }
                    }

                    if (lineItem.activityStatus == "X" && lineItem.projectStatus == "X")
                    {
                        try
                        {
                            OracleParameter[] parameters1 = new OracleParameter[5];

                            string VcowDate = string.Format("{0:dd-MMM-yyyy}", mctrCreateForm.First().COW);
                            string VperiodTo = string.Format("{0:dd-MMM-yyyy}", mctrCreateForm.First().PeriodTo);

                            sql = new StringBuilder(@"select a2.eff_status as activityStatus, p2.eff_status as projectStatus,
                          p2.contract_num as contract_num_from , p2.account as account_from, p2.bus_unit_mgmt_cd7 as bum_cd7_from, p2.customer_type_cd7 as cust_type_cd7_from
                    
                     from mctr_activity_v a2,
                          mctr_project_v p2
                    where a2.activity_id = :activity_id_from
                      and a2.project_id = :project_id_from
                      and a2.business_unit_gl = :work_bugl_from
                      and a2.setid = 'mdc'
                      and a2.effdt = (select max(effdt)
                                        from mctr_activity_v
                                       where activity_id = a2.activity_id
                                         and project_id = a2.project_id
                                         and business_unit_gl = a2.business_unit_gl
                                         and effdt <= :v_cow_date)
                      and p2.setid = a2.setid
                      and p2.project_id = a2.project_id
                      and p2.business_unit_gl = a2.business_unit_gl
                      and p2.effdt = (select max(effdt)
                                        from mctr_project_v
                                       where project_id = p2.project_id
                                         and business_unit_gl = p2.business_unit_gl
                                         and effdt <= :v_cow_date)");

                            parameters1[0] = new OracleParameter(":activity_id_from", OracleDbType.Varchar2, lineItem.ACTIVITY_ID_FROM, ParameterDirection.Input);
                            parameters1[1] = new OracleParameter(":project_id_from", OracleDbType.Varchar2, lineItem.PROJECT_ID_FROM, ParameterDirection.Input);
                            parameters1[2] = new OracleParameter(":work_bugl_from", OracleDbType.Varchar2, lineItem.WORK_BUGL_FROM, ParameterDirection.Input);
                            parameters1[3] = new OracleParameter(":v_cow_date", OracleDbType.Varchar2, VcowDate, ParameterDirection.Input);
                            parameters1[4] = new OracleParameter(":v_cow_date", OracleDbType.Varchar2, VcowDate, ParameterDirection.Input);


                            var response = entities.Database.SqlQuery<MctrLineItem>(sql.ToString(), parameters1).ToList();

                            lineItem.activityStatus = response.First().activityStatus;
                            lineItem.projectStatus = response.First().projectStatus;
                            lineItem.CONTRACT_NUM_FROM = response.First().CONTRACT_NUM_FROM;
                            lineItem.ACCOUNT_FROM = response.First().ACCOUNT_FROM;
                            lineItem.BUM_CD7_FROM = response.First().BUM_CD7_FROM;
                            lineItem.CUST_TYPE_CD7_FROM = response.First().CUST_TYPE_CD7_FROM;

                        }
                        catch (Exception e)
                        {
                            lineItem.activityStatus = "X";
                            lineItem.projectStatus = "X";
                        }
                    }
                    //apply account for override
                    if (lineItem.activityStatus != "X" && lineItem.projectStatus != "X" && lineItem.ACCOUNT_FROM != "1200000")
                    {
                        //Changing colours
                        if (vAccountFrom.Length == 7 && vAccountFrom != lineItem.ACCOUNT_FROM)
                        {
                            int vCountVal = 0;
                            try
                            {
                                OracleParameter[] params1 = new OracleParameter[2];
                                lineItem.ACCOUNT_FROM = vAccountFrom;
                                sql = new StringBuilder(@"select count(*) from mctr_account_v where setid = :work_bugl_from and account = :account_from");
                                params1[0] = new OracleParameter("work_bugl_from", OracleDbType.Varchar2, lineItem.WORK_BUGL_FROM, ParameterDirection.Input);
                                params1[1] = new OracleParameter("account_from", OracleDbType.Varchar2, lineItem.ACCOUNT_FROM, ParameterDirection.Input);
                                var response = entities.Database.SqlQuery<int>(sql.ToString(), params1).SingleOrDefault();
                                vCountVal = Convert.ToInt32(response.ToString());
                            }
                            catch (Exception e)
                            {
                                vCountVal = 0;
                            }
                            if (vCountVal == 0)
                            {
                                lineItem.flagValidations.Add("ACCOUNT_FROM", "red");
                            }
                            else
                            {
                                lineItem.flagValidations.Add("ACCOUNT_FROM", "white");
                            }
                            //check for prior year accounts not allowed.
                            if (mctrCreateForm.First().py_cy_status == "PY" && lineItem.ACCOUNT_FROM.StartsWith("6") || lineItem.ACCOUNT_FROM.StartsWith("7") || lineItem.ACCOUNT_FROM.StartsWith("8"))
                            {
                                lineItem.flagValidations.Add("ACCOUNT_FROM", "red");
                            }
                        }

                    }
                }
                //check from activity id, project id and account fields. 
                if (lineItem.activityStatus == "I" || lineItem.projectStatus == "I")
                {
                    lineItem.ACTY_RED_FLG_FROM = "Y";
                    if (lineItem.activityStatus == "I")
                    {
                        lineItem.flagValidations.Add("ACTIVITY_ID_FROM", "orange");
                    }
                    else
                    {
                        lineItem.flagValidations.Add("ACTIVITY_ID_FROM", "white");
                    }
                    if (lineItem.projectStatus == "I")
                    {
                        lineItem.flagValidations.Add("PROJECT_ID_FROM", "orange");
                    }
                    else
                    {
                        lineItem.flagValidations.Add("PROJECT_ID_FROM", "");
                    }
                }
                else if (lineItem.activityStatus == "X" || lineItem.projectStatus == "X")
                {
                    lineItem.flagValidations.Add("ACTIVITY_ID_FROM", "red");
                    lineItem.flagValidations.Add("PROJECT_ID_FROM", "red");

                }
                else
                {
                    lineItem.flagValidations.Add("ACTIVITY_ID_FROM", "white");
                    lineItem.flagValidations.Add("PROJECT_ID_FROM", "");
                }
                //validate to activity and project and get the effective status for each.
                lineItem.activityStatus = "X";
                lineItem.projectStatus = "X";

                if (lineItem.ACTIVITY_ID_TO != "" && lineItem.PROJECT_ID_TO != "" && lineItem.WORK_BUGL_TO != "" && (lineItem.PROJECT_ID_FROM != "to" && lineItem.ACTIVITY_ID_TO != "REQUIRED"))
                {
                    lineItem.flagValidations.Add("ACCOUNT_TO", "white");
                    if (pyCyStatus == "PY")
                    {
                        try
                        {
                            OracleParameter[] parameters1 = new OracleParameter[7];

                            string VcowDate = string.Format("{0:dd-MMM-yyyy}", mctrCreateForm.First().COW);
                            string VperiodTo = string.Format("{0:dd-MMM-yyyy}", mctrCreateForm.First().PeriodTo);


                            sql = new StringBuilder(@"select a2.eff_status as activityStatus, p2.eff_status as projectStatus,
                          p.contract_num as contract_num_to, p.account as account_to, p.bus_unit_mgmt_cd7 as bum_cd7_to, p.customer_type_cd7 as cust_type_cd7_to
                    
                     from mctr_activity_v a,
                          mctr_project_v p,
                          mctr_activity_v a2,
                          mctr_project_v p2
                    where a.activity_id = :activity_id_to
                      and a.project_id = :project_id_to
                      and a.business_unit_gl = :work_bugl_to
                      and a.setid = 'MDC'
                      and a.effdt = (select max(a_ed.effdt) from mctr_activity_v a_ed
                                      where a.activity_id = a_ed.activity_id
                                        and a.project_id = a_ed.project_id
                                        and a_ed.effdt <= :v_cow_date
                                        and a_ed.eff_status = 'A')
                      and p.setid = a.setid
                      and p.project_id = a.project_id
                      and p.business_unit_gl = a.business_unit_gl
                      and p.effdt = (select max(p_ed.effdt) from mctr_project_v p_ed
                                      where p.project_id = p_ed.project_id
                                        and p_ed.effdt <= :period_to
                                        and p_ed.eff_status = 'A')
                      and a2.activity_id = a.activity_id
                      and a2.project_id = a.project_id
                      and a2.business_unit_gl = a.business_unit_gl
                      and a2.effdt = (select max(a2_ed.effdt) from mctr_activity_v a2_ed
                                       where a2.activity_id = a2_ed.activity_id
                                         and a2.project_id = a2_ed.project_id
                                         and a2_ed.effdt <= :v_cow_date)
                      and p2.setid = a2.setid
                      and p2.project_id = a2.project_id
                      and p2.business_unit_gl = a2.business_unit_gl
                      and p2.effdt = (select max(p2_ed.effdt) from mctr_project_v p2_ed
                                       where p2.project_id = p2_ed.project_id
                                         and p2_ed.effdt <= :v_cow_date)");
                            parameters1[0] = new OracleParameter(":activity_id_to", OracleDbType.Varchar2, lineItem.ACTIVITY_ID_TO, ParameterDirection.Input);
                            parameters1[1] = new OracleParameter(":project_id_to", OracleDbType.Varchar2, lineItem.PROJECT_ID_TO, ParameterDirection.Input);
                            parameters1[2] = new OracleParameter(":work_bugl_to", OracleDbType.Varchar2, lineItem.WORK_BUGL_TO, ParameterDirection.Input);
                            parameters1[3] = new OracleParameter(":v_cow_date", OracleDbType.Varchar2, VcowDate, ParameterDirection.Input);
                            parameters1[4] = new OracleParameter(":period_to", OracleDbType.Varchar2, VperiodTo, ParameterDirection.Input);
                            parameters1[5] = new OracleParameter(":v_cow_date", OracleDbType.Varchar2, VcowDate, ParameterDirection.Input);
                            parameters1[6] = new OracleParameter(":v_cow_date", OracleDbType.Varchar2, VcowDate, ParameterDirection.Input);


                            var response = entities.Database.SqlQuery<MctrLineItem>(sql.ToString(), parameters1).ToList();

                            lineItem.activityStatus = response.First().activityStatus;
                            lineItem.projectStatus = response.First().projectStatus;
                            lineItem.CONTRACT_NUM_TO = response.First().CONTRACT_NUM_TO;
                            lineItem.ACCOUNT_TO = response.First().ACCOUNT_TO;
                            lineItem.BUM_CD7_TO = response.First().BUM_CD7_TO;
                            lineItem.CUST_TYPE_CD7_TO = response.First().CUST_TYPE_CD7_TO;


                        }
                        catch (Exception e)
                        {
                            lineItem.activityStatus = "X";
                            lineItem.projectStatus = "X";
                        }
                    }
                    else
                    {
                        try
                        {
                            OracleParameter[] parameter = new OracleParameter[7];

                            string VcowDate = string.Format("{0:dd-MMM-yyyy}", mctrCreateForm.First().COW);
                            string VperiodTo = string.Format("{0:dd-MMM-yyyy}", mctrCreateForm.First().PeriodTo);

                            sql = new StringBuilder(@"select a2.eff_status as activityStatus, p2.eff_status as projectStatus,
                          p.contract_num as contract_num_to, p.account as account_to, p.bus_unit_mgmt_cd7 as bum_cd7_to, p.customer_type_cd7 as cust_type_cd7_to
                    
                     from mctr_activity_v a,
                          mctr_project_v p,
                          mctr_activity_v a2,
                          mctr_project_v p2
                    where a.activity_id = :activity_id_to
                      and a.project_id = :project_id_to
                      and a.business_unit_gl = :work_bugl_to
                      and a.setid = 'MDC'
                      and a.effdt = (select max(a_ed.effdt) from mctr_activity_v a_ed
                                      where a.activity_id = a_ed.activity_id
                                        and a.project_id = a_ed.project_id
                                        and a_ed.effdt <= :period_to)
                      and p.setid = a.setid
                      and p.project_id = a.project_id
                      and p.business_unit_gl = a.business_unit_gl
                      and p.effdt = (select max(p_ed.effdt) from mctr_project_v p_ed
                                      where p.project_id = p_ed.project_id
                                        and p_ed.effdt <= :period_to)
                      and a2.activity_id = a.activity_id
                      and a2.project_id = a.project_id
                      and a2.business_unit_gl = a.business_unit_gl
                      and a2.effdt = (select max(a2_ed.effdt) from mctr_activity_v a2_ed
                                       where a2.activity_id = a2_ed.activity_id
                                         and a2.project_id = a2_ed.project_id
                                         and a2_ed.effdt <= :v_cow_date)
                      and p2.setid = a2.setid
                      and p2.project_id = a2.project_id
                      and p2.business_unit_gl = a2.business_unit_gl
                      and p2.effdt = (select max(p2_ed.effdt) from mctr_project_v p2_ed
                                       where p2.project_id = p2_ed.project_id
                                         and p2_ed.effdt <= :v_cow_date)");

                            parameter[0] = new OracleParameter(":activity_id_to", OracleDbType.Varchar2, lineItem.ACTIVITY_ID_FROM, ParameterDirection.Input);
                            parameter[1] = new OracleParameter(":project_id_to", OracleDbType.Varchar2, lineItem.PROJECT_ID_FROM, ParameterDirection.Input);
                            parameter[2] = new OracleParameter(":work_bugl_to", OracleDbType.Varchar2, lineItem.WORK_BUGL_FROM, ParameterDirection.Input);
                            parameter[3] = new OracleParameter(":period_to", OracleDbType.Varchar2, VperiodTo, ParameterDirection.Input);
                            parameter[4] = new OracleParameter(":period_to", OracleDbType.Varchar2, VperiodTo, ParameterDirection.Input);
                            parameter[5] = new OracleParameter(":v_cow_date", OracleDbType.Varchar2, VcowDate, ParameterDirection.Input);
                            parameter[6] = new OracleParameter(":v_cow_date", OracleDbType.Varchar2, VcowDate, ParameterDirection.Input);


                            var response = entities.Database.SqlQuery<MctrLineItem>(sql.ToString(), parameter).ToList();

                            lineItem.activityStatus = response.First().activityStatus;
                            lineItem.projectStatus = response.First().projectStatus;
                            lineItem.CONTRACT_NUM_TO = response.First().CONTRACT_NUM_TO;
                            lineItem.ACCOUNT_TO = response.First().ACCOUNT_TO;
                            lineItem.BUM_CD7_TO = response.First().BUM_CD7_TO;
                            lineItem.CUST_TYPE_CD7_TO = response.First().CUST_TYPE_CD7_TO;

                        }
                        catch (Exception e)
                        {
                            lineItem.activityStatus = "X";
                            lineItem.projectStatus = "X";
                        }

                    }
                    if (lineItem.activityStatus == "X" && lineItem.projectStatus == "X")
                    {
                        try
                        {
                            OracleParameter[] parameter = new OracleParameter[5];

                            string VcowDate = string.Format("{0:dd-MMM-yyyy}", mctrCreateForm.First().COW);
                            string VperiodTo = string.Format("{0:dd-MMM-yyyy}", mctrCreateForm.First().PeriodTo);

                            sql = new StringBuilder(@"select a2.eff_status as activityStatus, p2.eff_status as projectStatus,
                          p2.contract_num as contract_num_to, p2.account as account_to, p2.bus_unit_mgmt_cd7 as bum_cd7_to, p2.customer_type_cd7 as cust_type_cd7_to
                  
                     from mctr_activity_v a2,
                          mctr_project_v p2
                    where a2.activity_id = :activity_id_to
                      and a2.project_id = :project_id_to
                      and a2.business_unit_gl = :work_bugl_to
                      and a2.setid = 'MDC'
                      and a2.effdt = (select max(a2_ed.effdt)
                                        from mctr_activity_v a2_ed
                                       where a2.activity_id = a2_ed.activity_id
                                         and a2.project_id = a2_ed.project_id
                                         and a2_ed.effdt <= :v_cow_date)
                      and p2.setid = a2.setid
                      and p2.project_id = a2.project_id
                      and p2.business_unit_gl = a2.business_unit_gl
                      and p2.effdt = (select max(p2_ed.effdt)
                                        from mctr_project_v p2_ed
                                       where p2.project_id = p2_ed.project_id
                                         and p2.business_unit_gl = p2_ed.business_unit_gl
                                         and p2_ed.effdt <= :v_cow_date)");

                            parameter[0] = new OracleParameter(":activity_id_to", OracleDbType.Varchar2, lineItem.ACTIVITY_ID_FROM, ParameterDirection.Input);
                            parameter[1] = new OracleParameter(":project_id_to", OracleDbType.Varchar2, lineItem.PROJECT_ID_FROM, ParameterDirection.Input);
                            parameter[2] = new OracleParameter(":work_bugl_to", OracleDbType.Varchar2, lineItem.WORK_BUGL_FROM, ParameterDirection.Input);
                            parameter[3] = new OracleParameter(":v_cow_date", OracleDbType.Varchar2, VcowDate, ParameterDirection.Input);
                            parameter[4] = new OracleParameter(":v_cow_date", OracleDbType.Varchar2, VcowDate, ParameterDirection.Input);


                            var response = entities.Database.SqlQuery<MctrLineItem>(sql.ToString(), parameter).ToList();

                            lineItem.activityStatus = response.First().activityStatus;
                            lineItem.projectStatus = response.First().projectStatus;
                            lineItem.CONTRACT_NUM_TO = response.First().CONTRACT_NUM_TO;
                            lineItem.ACCOUNT_TO = response.First().ACCOUNT_TO;
                            lineItem.BUM_CD7_TO = response.First().BUM_CD7_TO;
                            lineItem.CUST_TYPE_CD7_TO = response.First().CUST_TYPE_CD7_TO;

                        }
                        catch (Exception e)
                        {
                            lineItem.activityStatus = "X";
                            lineItem.projectStatus = "X";
                        }
                    }
                    //apply account to override
                    if (lineItem.activityStatus != "X" && lineItem.projectStatus != "X" && lineItem.ACCOUNT_TO != "1200000")
                    {
                        if (vAccountTo.Length == 7 && vAccountTo != lineItem.ACCOUNT_TO)
                        {
                            int vCountVal = 0;
                            try
                            {
                                OracleParameter[] params1 = new OracleParameter[2];
                                lineItem.ACCOUNT_TO = vAccountTo;
                                sql = new StringBuilder(@"select count(*) from mctr_account_v where setid = :work_bugl_to and account = :account_to and eff_status = 'A'");
                                params1[0] = new OracleParameter("work_bugl_from", OracleDbType.Varchar2, lineItem.WORK_BUGL_FROM, ParameterDirection.Input);
                                params1[1] = new OracleParameter("account_from", OracleDbType.Varchar2, lineItem.ACCOUNT_FROM, ParameterDirection.Input);
                                var response = entities.Database.SqlQuery<int>(sql.ToString(), params1).SingleOrDefault();
                                vCountVal = Convert.ToInt32(response.ToString());
                            }
                            catch (Exception e)
                            {
                                vCountVal = 0;
                            }
                            if (vCountVal == 0)
                            {
                                lineItem.flagValidations.Add("ACCOUNT_TO", "red");
                            }
                            else
                            {
                                lineItem.flagValidations.Add("ACCOUNT_TO", "white");
                            }
                            //check for prior year accounts not allowed.
                            if (mctrCreateForm.First().py_cy_status == "PY" && lineItem.ACCOUNT_TO.StartsWith("6") || lineItem.ACCOUNT_TO.StartsWith("7") || lineItem.ACCOUNT_TO.StartsWith("8"))
                            {
                                lineItem.flagValidations.Add("ACCOUNT_TO", "red");
                            }
                        }
                    }
                }

                // check to activity id and project id status fields
                if (lineItem.activityStatus == "I" && lineItem.projectStatus == "I")
                {
                    lineItem.ACTY_RED_FLG_TO = "Y";
                    if (lineItem.activityStatus == "I")
                    {
                        lineItem.flagValidations.Add("ACTIVITY_ID_TO", "orange");
                    }
                    else
                    {
                        lineItem.flagValidations.Add("ACTIVITY_ID_TO", "white");

                    }
                    if (lineItem.projectStatus == "I")
                    {
                        lineItem.flagValidations.Add("PROJECT_ID_TO", "orange");
                    }
                    else
                    {
                        lineItem.flagValidations.Add("PROJECT_ID_TO", "");
                    }
                }

                else if (lineItem.activityStatus == "X" && lineItem.projectStatus == "X")
                {
                    lineItem.flagValidations.Add("ACTIVITY_ID_TO", "red");
                    lineItem.flagValidations.Add("PROJECT_ID_TO", "red");
                }
                else
                {
                    lineItem.flagValidations.Add("ACTIVITY_ID_TO", "white");
                    lineItem.flagValidations.Add("PROJECT_ID_TO", "");

                }
                //validate bum code to and set orig bum code.
                lineItem.BUM_CD7_TO_ORIG = lineItem.BUM_CD7_TO;
                OracleParameter[] parameters = new OracleParameter[4];
                int v_doh_2002_count = 0;
                int v_bum_count = 0;
                try
                {
                    sql = new StringBuilder(@"select count(*) from mctr_doh_2002_rate where (fiscal_year = :fiscal_year and mctr_bus_unit_cd7 = :bum_cd7_to) 
                   or (fiscal_year = :fiscal_year and mctr_bus_unit_cd7 = substr(:bum_cd7_to,2,2))");
                    parameters[0] = new OracleParameter("fiscal_year", OracleDbType.Int32, Convert.ToInt32(mctrCreateForm.First().fyear), ParameterDirection.Input);
                    parameters[1] = new OracleParameter("bum_cd7_to", OracleDbType.Varchar2, lineItem.BUM_CD7_TO, ParameterDirection.Input);
                    parameters[2] = new OracleParameter("fiscal_year", OracleDbType.Int32, Convert.ToInt32(mctrCreateForm.First().fyear), ParameterDirection.Input);
                    parameters[3] = new OracleParameter("bum_cd7_to", OracleDbType.Varchar2, lineItem.BUM_CD7_TO, ParameterDirection.Input);

                    var response = entities.Database.SqlQuery<int>(sql.ToString(), parameters).SingleOrDefault();

                    v_doh_2002_count = Convert.ToInt32(response.ToString());


                }
                catch (Exception e)
                {
                    v_doh_2002_count = 1;
                }
                try
                {
                    OracleParameter[] parameters5 = new OracleParameter[2];
                    sql = new StringBuilder(@"select count(*) from mctr_bus_unit_mgmt where (fiscal_year = :fiscal_year and  bus_unit_mgmt_cd7 = :bum_cd7_to)");
                    parameters5[0] = new OracleParameter("fiscal_year", OracleDbType.Int32, Convert.ToInt32(mctrCreateForm.First().fyear), ParameterDirection.Input);
                    parameters5[1] = new OracleParameter("bum_cd7_to", OracleDbType.Varchar2, lineItem.BUM_CD7_TO, ParameterDirection.Input);
                    var response = entities.Database.SqlQuery<int>(sql.ToString(), parameters5).SingleOrDefault();

                    v_bum_count = Convert.ToInt32(response.ToString());
                }
                catch (Exception e1)
                {
                    v_bum_count = 0;
                }

                if (v_doh_2002_count == 0 && v_bum_count == 0)
                {
                    lineItem.BUM_CD7_TO = lineItem.BUM_CD7_FROM;
                }

                //validate trans type fields

                //check for labour project transations
                if (lineItem.PROJ_TRANS_TYPE_FROM == "LBR")
                {
                    if ((lineItem.PROJ_TRANS_CODE_FROM == "") || (lineItem.PROJ_TRANS_CODE_FROM != "OTS" || lineItem.PROJ_TRANS_CODE_FROM != "STR" || lineItem.PROJ_TRANS_CODE_FROM != "PRM"))
                    {
                        if (lineItem.QUANTITY_FROM != 0)
                        {
                            lineItem.PROJ_TRANS_CODE_FROM = "STR";
                        }
                    }
                }
                else
                {
                    if ((lineItem.PROJ_TRANS_CODE_FROM != "OTS" || lineItem.PROJ_TRANS_CODE_FROM != "STR" || lineItem.PROJ_TRANS_CODE_FROM != "PRM") && (lineItem.QUANTITY_FROM != 0) && (lineItem.PROJ_TRANS_TYPE_FROM == "" || lineItem.PROJ_TRANS_TYPE_FROM != "LBR"))
                    {
                        lineItem.PROJ_TRANS_TYPE_FROM = "LBR";
                    }
                }
                try
                {
                    OracleParameter[] parameters5 = new OracleParameter[3];
                    sql = new StringBuilder(@"select statistics_code as stat_code_from, unit_of_measure
                  as uom_from
                 from mctr_trans_type
                where cmpon_cd = :home_bugl_from
                  and proj_trans_type = :proj_trans_type_from 
                  and proj_trans_code = :proj_trans_code_from");
                    parameters5[0] = new OracleParameter(":home_bugl_from", OracleDbType.Varchar2, lineItem.HOME_BUGL_FROM, ParameterDirection.Input);
                    parameters5[1] = new OracleParameter(":proj_trans_type_from", OracleDbType.Varchar2, lineItem.PROJ_TRANS_TYPE_FROM, ParameterDirection.Input);
                    parameters5[2] = new OracleParameter(":proj_trans_code_from", OracleDbType.Varchar2, lineItem.PROJ_TRANS_CODE_FROM, ParameterDirection.Input);
                    var response = entities.Database.SqlQuery<MctrLineItem>(sql.ToString(), parameters5).SingleOrDefault();
                    lineItem.STAT_CODE_FROM = response.STAT_CODE_FROM;
                    lineItem.UOM_FROM = response.UOM_FROM;

                }
                catch (Exception e)
                {
                    try
                    {
                        OracleParameter[] parameters5 = new OracleParameter[2];
                        sql = new StringBuilder(@"select proj_trans_code
                   from mctr_trans_type
                  where cmpon_cd = :home_bugl_from
                    and proj_trans_type = :proj_trans_type_from 
                    and proj_trans_code is null");
                        parameters5[0] = new OracleParameter(":home_bugl_from", OracleDbType.Varchar2, lineItem.HOME_BUGL_FROM, ParameterDirection.Input);
                        parameters5[1] = new OracleParameter(":proj_trans_type_from", OracleDbType.Varchar2, lineItem.PROJ_TRANS_TYPE_FROM, ParameterDirection.Input);

                        lineItem.PROJ_TRANS_CODE_FROM = entities.Database.SqlQuery<string>(sql.ToString(), parameters5).SingleOrDefault();

                    }
                    catch (Exception e1)
                    {
                        lineItem.flagValidations.Add("PROJECT_TRANS_TYPE_FROM", "red");
                        lineItem.PROJ_TRANS_TYPE_FROM = "REQ";
                        lineItem.PROJ_TRANS_CODE_FROM = "";
                        lineItem.STAT_CODE_FROM = "";
                        lineItem.UOM_FROM = "";
                    }
                }
                lineItem.PROJ_TRANS_TYPE_TO = lineItem.PROJ_TRANS_TYPE_FROM;
                lineItem.PROJ_TRANS_CODE_TO = lineItem.PROJ_TRANS_CODE_FROM;
                lineItem.STAT_CODE_TO = lineItem.STAT_CODE_FROM;
                lineItem.UOM_TO = lineItem.UOM_FROM;
                //validate affiliate, department and location fields 

                if (pyCyStatus == "PY" && Convert.ToInt32(mctrCreateForm.First().fyear) > 2007)
                {
                    lineItem.AFFILIATE_FROM = lineItem.HOME_BUGL_FROM;
                    lineItem.AFFILIATE_TO = lineItem.AFFILIATE_FROM;
                }
                string deptStatus = "X";
                if (lineItem.HOME_DEPT_FROM == "" && lineItem.HOME_LOC_FROM == "")
                {
                    deptStatus = "";
                }
                else if (lineItem.HOME_DEPT_FROM != "" && lineItem.HOME_LOC_FROM != "")
                {
                    try
                    {

                        sql = new StringBuilder(@"select a2.eff_status as deptStatus, a.allow_pool_cd7 as home_pool_from , a.labor_rate_cd7 as labor_rate_cd7_from , 
                        decode(a.resource_sub_cat,'095','B','A') as class_cd_from, a.resource_sub_cat as rsc_from
                   from mctr_locn_dept_mv a,
                        mctr_locn_dept_mv a2
                  where a.setid = :home_bugl_from and
                        a.deptid = :home_dept_from and 
                        a.acctg_loc_cd7 = :home_loc_from and
                        a.effdt = (select max(a_ed.effdt) 
                                     from mctr_locn_dept_mv a_ed 
                                    where a.setid = a_ed.setid and 
                                          a.acctg_loc_cd7 = a_ed.acctg_loc_cd7 and 
                                          a.deptid = a_ed.deptid and 
                                          a_ed.effdt <= :period_to) and
                        a.setid = a2.setid and
                        a.deptid = a2.deptid and
                        a.acctg_loc_cd7 = a2.acctg_loc_cd7 and
                        a2.effdt = (select max(a2_ed.effdt) 
                                      from mctr_locn_dept_mv a2_ed
                                     where a2.setid = a2_ed.setid and 
                                           a2.acctg_loc_cd7 = a2_ed.acctg_loc_cd7 and 
                                           a2.deptid = a2_ed.deptid and 
                                           a2_ed.effdt <= :v_cow_date)");
                        parameters = new OracleParameter[5];
                        parameters[0] = new OracleParameter(":home_bugl_from", OracleDbType.Varchar2, lineItem.HOME_BUGL_FROM, ParameterDirection.Input);
                        parameters[1] = new OracleParameter(":home_dept_from", OracleDbType.Varchar2, lineItem.HOME_DEPT_FROM, ParameterDirection.Input);
                        parameters[2] = new OracleParameter(":home_loc_from", OracleDbType.Varchar2, lineItem.HOME_LOC_FROM, ParameterDirection.Input);
                        parameters[3] = new OracleParameter(":period_to", OracleDbType.Varchar2, periodTo, ParameterDirection.Input);
                        parameters[4] = new OracleParameter(":v_cow_date", OracleDbType.Varchar2, cowDate, ParameterDirection.Input);


                        var response = entities.Database.SqlQuery<MctrLineItem>(sql.ToString(), parameters).SingleOrDefault();
                        deptStatus = response.deptStatus;
                        lineItem.HOME_POOL_FROM = response.HOME_POOL_FROM;
                        lineItem.CLASS_CD_FROM = response.CLASS_CD_FROM;
                        lineItem.RSC_FROM = response.RSC_FROM;
                        lineItem.LABOR_RATE_CD7_FROM = response.LABOR_RATE_CD7_FROM;


                    }
                    catch (Exception e)
                    {
                        deptStatus = "X";
                    }
                }
                else if (lineItem.HOME_LOC_FROM != "" && lineItem.HOME_DEPT_FROM == "")
                {
                    int vCount = 0;
                    try
                    {
                        OracleParameter[] parameters7 = new OracleParameter[2];
                        sql = new StringBuilder(@"select count(*) 
                   from mctr_locn_mv a
                  where a.setid = :home_bugl_from
                    and a.acctg_loc_cd7 = :home_loc_from");
                        parameters7[0] = new OracleParameter(":home_bugl_from", OracleDbType.Varchar2, lineItem.HOME_BUGL_FROM, ParameterDirection.Input);
                        parameters7[1] = new OracleParameter(":home_loc_from", OracleDbType.Varchar2, lineItem.HOME_LOC_FROM, ParameterDirection.Input);
                        vCount = entities.Database.SqlQuery<int>(sql.ToString(), parameters7).SingleOrDefault();
                    }
                    catch (Exception e)
                    {
                        vCount = 0;
                    }
                    if (vCount == 0)
                    {
                        deptStatus = "X";
                    }
                    else
                    {
                        deptStatus = string.Empty;
                    }

                }
                if (deptStatus == "I")
                {
                    lineItem.flagValidations.Add("HOME_DEPT_FROM", "orange");
                    lineItem.DEPT_RED_FLG_FROM = "Y";
                }
                else if (deptStatus == "X")
                {
                    if (lineItem.HOME_LOC_FROM != "" && lineItem.HOME_DEPT_FROM == "")
                    {
                        lineItem.flagValidations.Add("HOME_LOC_FROM", "red");
                    }
                    else
                    {
                        lineItem.flagValidations.Add("HOME_DEPT_FROM", "red");
                    }


                }
                // check from work department and work location
                deptStatus = "X";
                if (lineItem.WORK_DEPT_FROM == "" && lineItem.WORK_LOC_FROM == "")
                {
                    deptStatus = string.Empty;
                }
                else if (lineItem.WORK_DEPT_FROM != "" && lineItem.WORK_LOC_FROM != "")
                {
                    try
                    {
                        OracleParameter[] parameters8 = new OracleParameter[5];
                        sql = new StringBuilder(@"select a2.eff_status as deptStatus, a.allow_pool_cd7 as work_pool_from, a.resource_sub_cat as rsc_from
                   from mctr_locn_dept_mv a,
                        mctr_locn_dept_mv a2
                  where a.setid = :home_bugl_from and 
                        a.deptid = :work_dept_from and 
                        a.acctg_loc_cd7 = :work_loc_from and
                        a.effdt = (select max(a_ed.effdt) 
                                     from mctr_locn_dept_mv a_ed 
                                    where a.setid = a_ed.setid and 
                                          a.acctg_loc_cd7 = a_ed.acctg_loc_cd7 and 
                                          a.deptid = a_ed.deptid and 
                                          a_ed.effdt <= :period_to) and
                        a.setid = a2.setid and
                        a.deptid = a2.deptid and
                        a.acctg_loc_cd7 = a2.acctg_loc_cd7 and
                        a2.effdt = (select max(a2_ed.effdt) 
                                      from mctr_locn_dept_mv a2_ed
                                     where a2.setid = a2_ed.setid and 
                                           a2.acctg_loc_cd7 = a2_ed.acctg_loc_cd7 and 
                                           a2.deptid = a2_ed.deptid and 
                                           a2_ed.effdt <= :v_cow_date)");
                        parameters8[0] = new OracleParameter(":home_bugl_from", OracleDbType.Varchar2, lineItem.HOME_BUGL_FROM, ParameterDirection.Input);
                        parameters8[1] = new OracleParameter(":work_dept_from", OracleDbType.Varchar2, lineItem.WORK_DEPT_FROM, ParameterDirection.Input);
                        parameters8[2] = new OracleParameter(":work_loc_from", OracleDbType.Varchar2, lineItem.WORK_LOC_FROM, ParameterDirection.Input);
                        parameters8[3] = new OracleParameter(":period_to", OracleDbType.Varchar2, periodTo, ParameterDirection.Input);
                        parameters8[4] = new OracleParameter(":v_cow_date", OracleDbType.Varchar2, cowDate, ParameterDirection.Input);
                        var response = entities.Database.SqlQuery<MctrLineItem>(sql.ToString(), parameters8).SingleOrDefault();
                        deptStatus = response.deptStatus;
                        lineItem.WORK_POOL_FROM = response.WORK_POOL_FROM;
                        lineItem.RSC_FROM = response.RSC_FROM;

                    }
                    catch (Exception e)
                    {
                        deptStatus = "X";
                    }
                }
                else if (lineItem.WORK_DEPT_FROM == "" && lineItem.WORK_LOC_FROM != "")
                {
                    int v_count1 = 0;
                    try
                    {
                        OracleParameter[] parameters9 = new OracleParameter[2];
                        sql = new StringBuilder(@"select count(*) 
                   from mctr_locn_mv a
                  where a.setid = :home_bugl_from
                    and a.acctg_loc_cd7 = :work_loc_from");
                        parameters9[0] = new OracleParameter(":home_bugl_from", OracleDbType.Varchar2, lineItem.HOME_BUGL_FROM, ParameterDirection.Input);
                        parameters9[1] = new OracleParameter(":work_loc_from", OracleDbType.Varchar2, lineItem.WORK_LOC_FROM, ParameterDirection.Input);
                        v_count1 = entities.Database.SqlQuery<int>(sql.ToString(), parameters9).SingleOrDefault();
                    }
                    catch (Exception e)
                    {
                        v_count1 = 0;
                    }
                    if (v_count1 == 0)
                    {
                        deptStatus = "X";
                    }
                    else
                    {
                        deptStatus = string.Empty;
                    }
                }


                if (deptStatus == "I")
                {
                    lineItem.flagValidations.Add("WORK_DEPT_FROM", "orange");
                    lineItem.WORK_DEPT_RED_FLG_FROM = "Y";
                }
                else if (deptStatus == "X")
                {
                    if (lineItem.WORK_LOC_FROM != "" && lineItem.WORK_DEPT_FROM == "")
                    {
                        lineItem.flagValidations.Add("WORK_LOC_FROM", "red");
                    }
                    else
                    {
                        lineItem.flagValidations.Add("WORK_DEPT_FROM", "red");
                    }
                }
                // check to home department and home location
                deptStatus = "X";
                if (lineItem.HOME_DEPT_TO == "" && lineItem.HOME_LOC_TO == "")
                {
                    deptStatus = "I";
                }
                else if (lineItem.HOME_DEPT_TO != "" && lineItem.HOME_LOC_TO != "")
                {
                    try
                    {
                        OracleParameter[] parameter2 = new OracleParameter[5];
                        sql = new StringBuilder(@"select a2.eff_status as deptStatus, a.allow_pool_cd7 as home_pool_to, a.labor_rate_cd7 as labor_rate_cd7_to, 
                        decode(a.resource_sub_cat,'095','B','A') as class_cd_to, a.resource_sub_cat as rsc_to
                   from mctr_locn_dept_mv a,
                        mctr_locn_dept_mv a2
                  where a.setid = :home_bugl_to and 
                        a.deptid = :home_dept_to and 
                        a.acctg_loc_cd7 = :home_loc_to and
                        a.effdt = (select max(a_ed.effdt) 
                                     from mctr_locn_dept_mv a_ed 
                                    where a.setid = a_ed.setid and 
                                          a.acctg_loc_cd7 = a_ed.acctg_loc_cd7 and 
                                          a.deptid = a_ed.deptid and 
                                          a_ed.effdt <= :period_to) and
                        a.setid = a2.setid and
                        a.deptid = a2.deptid and
                        a.acctg_loc_cd7 = a2.acctg_loc_cd7 and
                        a2.effdt = (select max(a2_ed.effdt) 
                                      from mctr_locn_dept_mv a2_ed
                                     where a2.setid = a2_ed.setid and 
                                           a2.acctg_loc_cd7 = a2_ed.acctg_loc_cd7 and 
                                           a2.deptid = a2_ed.deptid and 
                                           a2_ed.effdt <= :v_cow_date)");
                        parameter2[0] = new OracleParameter(":home_bugl_from", OracleDbType.Varchar2, lineItem.HOME_BUGL_FROM, ParameterDirection.Input);
                        parameter2[1] = new OracleParameter(":home_dept_to", OracleDbType.Varchar2, lineItem.HOME_DEPT_TO, ParameterDirection.Input);
                        parameter2[2] = new OracleParameter(":home_loc_to", OracleDbType.Varchar2, lineItem.HOME_LOC_TO, ParameterDirection.Input);
                        parameter2[3] = new OracleParameter(":period_to", OracleDbType.Varchar2, periodTo, ParameterDirection.Input);
                        parameter2[4] = new OracleParameter(":v_cow_date", OracleDbType.Varchar2, cowDate, ParameterDirection.Input);
                        var response = entities.Database.SqlQuery<MctrLineItem>(sql.ToString(), parameter2).SingleOrDefault();
                        deptStatus = response.deptStatus;
                        lineItem.HOME_POOL_TO = response.HOME_POOL_TO;
                        lineItem.LABOR_RATE_CD7_TO = response.LABOR_RATE_CD7_TO;
                        lineItem.CLASS_CD_TO = response.CLASS_CD_TO;
                        lineItem.RSC_TO = response.RSC_TO;

                    }
                    catch (Exception e)
                    {
                        deptStatus = "X";
                    }
                }
                else if (lineItem.HOME_LOC_TO != "" && lineItem.HOME_DEPT_TO == "")
                {
                    OracleParameter[] parameter2 = new OracleParameter[2];
                    sql = new StringBuilder(@"select count(*) 
                   from mctr_locn_mv a
                  where a.setid = :home_bugl_to
                    and a.acctg_loc_cd7 = :home_loc_to
                    and a.eff_status = 'A'");
                    parameter2[0] = new OracleParameter(":home_bugl_to", OracleDbType.Varchar2, lineItem.HOME_BUGL_TO, ParameterDirection.Input);
                    parameter2[1] = new OracleParameter(":home_loc_to", OracleDbType.Varchar2, lineItem.HOME_LOC_TO, ParameterDirection.Input);

                    var vCountLoc = entities.Database.SqlQuery<int>(sql.ToString(), parameter2).SingleOrDefault();
                    if (vCountLoc == 0)
                    {
                        deptStatus = "X";
                    }
                    else
                    {
                        deptStatus = string.Empty;
                    }

                }
                if (deptStatus == "I")
                {
                    lineItem.flagValidations.Add("HOME_LOC_TO", "orange");
                    lineItem.DEPT_RED_FLG_TO = "Y";
                }
                else if (deptStatus == "X")
                {
                    if (lineItem.HOME_LOC_TO != "" && lineItem.HOME_DEPT_TO == "")
                    {
                        lineItem.flagValidations.Add("HOME_LOC_TO", "red");

                    }
                    else
                    {
                        lineItem.flagValidations.Add("HOME_DEPT_TO", "red");
                    }

                }

                //check to work department and work location
                deptStatus = "X";
                if (lineItem.WORK_DEPT_TO == "" && lineItem.WORK_LOC_TO == "")
                {
                    deptStatus = "";
                }
                else if (lineItem.WORK_DEPT_TO != "" && lineItem.WORK_LOC_TO != "")
                {
                    try
                    {
                        OracleParameter[] parameter2 = new OracleParameter[5];
                        sql = new StringBuilder(@"select a2.eff_status as dept_status, a.allow_pool_cd7 as work_pool_to, a.resource_sub_cat as rsc_to
                   from mctr_locn_dept_mv a,
                        mctr_locn_dept_mv a2
                  where a.setid = :home_bugl_to and 
                        a.deptid = :work_dept_to and 
                        a.acctg_loc_cd7 = :work_loc_to and
                        a.effdt = (select max(a_ed.effdt) 
                                     from mctr_locn_dept_mv a_ed 
                                    where a.setid = a_ed.setid and 
                                          a.acctg_loc_cd7 = a_ed.acctg_loc_cd7 and 
                                          a.deptid = a_ed.deptid and 
                                          a_ed.effdt <= :period_to) and
                        a.setid = a2.setid and
                        a.deptid = a2.deptid and
                        a.acctg_loc_cd7 = a2.acctg_loc_cd7 and
                        a2.effdt = (select max(a2_ed.effdt) 
                                      from mctr_locn_dept_mv a2_ed
                                     where a2.setid = a2_ed.setid and 
                                           a2.acctg_loc_cd7 = a2_ed.acctg_loc_cd7 and 
                                           a2.deptid = a2_ed.deptid and 
                                           a2_ed.effdt <= :v_cow_date)");
                        parameter2[0] = new OracleParameter(":home_bugl_to", OracleDbType.Varchar2, lineItem.HOME_BUGL_TO, ParameterDirection.Input);
                        parameter2[1] = new OracleParameter(":work_dept_to", OracleDbType.Varchar2, lineItem.WORK_DEPT_TO, ParameterDirection.Input);
                        parameter2[2] = new OracleParameter(":work_loc_to", OracleDbType.Varchar2, lineItem.WORK_LOC_TO, ParameterDirection.Input);
                        parameter2[3] = new OracleParameter(":period_to", OracleDbType.Varchar2, periodTo, ParameterDirection.Input);
                        parameter2[4] = new OracleParameter(":v_cow_date", OracleDbType.Varchar2, cowDate, ParameterDirection.Input);

                        var response = entities.Database.SqlQuery<MctrLineItem>(sql.ToString(), parameter2).SingleOrDefault();
                        deptStatus = response.deptStatus;
                        lineItem.WORK_POOL_TO = response.WORK_POOL_TO;
                        lineItem.RSC_TO = response.RSC_TO;
                    }
                    catch (Exception e)
                    {
                        deptStatus = "X";
                    }
                }
                else if (lineItem.WORK_LOC_TO != "" && lineItem.WORK_DEPT_TO == "")
                {
                    OracleParameter[] parameter2 = new OracleParameter[2];
                    sql = new StringBuilder(@"select count(*) 
                   from mctr_locn_mv a
                  where a.setid = :home_bugl_to
                    and a.acctg_loc_cd7 = :work_loc_to
                    and a.eff_status = 'A'");
                    parameter2[0] = new OracleParameter(":home_bugl_to", OracleDbType.Varchar2, lineItem.HOME_BUGL_TO, ParameterDirection.Input);
                    parameter2[1] = new OracleParameter(":work_loc_to", OracleDbType.Varchar2, lineItem.WORK_LOC_TO, ParameterDirection.Input);

                    var vCountWorkLoc = entities.Database.SqlQuery<int>(sql.ToString(), parameter2).SingleOrDefault();
                    if (vCountWorkLoc == 0)
                    {
                        deptStatus = "X";
                    }
                    else
                    {
                        deptStatus = string.Empty;
                    }
                }

                if (deptStatus == "I")
                {
                    lineItem.flagValidations.Add("WORK_DEPT_TO", "orange");
                    lineItem.DEPT_RED_FLG_TO = "Y";
                }
                else if (deptStatus == "X")
                {
                    if (lineItem.WORK_LOC_TO != "" && lineItem.WORK_DEPT_TO == "")
                    {
                        lineItem.flagValidations.Add("WORK_LOC_TO", "red");
                    }
                    else
                    {
                        lineItem.flagValidations.Add("WORK_DEPT_TO", "red");
                    }

                }


                // clear if not labor transfer. must be overriden on input.

                if (lineItem.PROJ_TRANS_TYPE_FROM != "LBR" || lineItem.HOME_DEPT_FROM == "")
                {
                    lineItem.LABOR_RATE_CD7_FROM = string.Empty;
                    lineItem.CLASS_CD_FROM = string.Empty;
                    lineItem.RSC_FROM = string.Empty;
                }
                if (lineItem.PROJ_TRANS_TYPE_TO != "LBR" || lineItem.HOME_DEPT_TO == "")
                {
                    lineItem.LABOR_RATE_CD7_TO = string.Empty;
                    lineItem.CLASS_CD_TO = string.Empty;
                    lineItem.RSC_TO = string.Empty;
                }
                // set work department and location from/to fields if no overrides provided.
                if ((lineItem.WORK_DEPT_FROM == "" && lineItem.HOME_DEPT_FROM != "") &&
                   (lineItem.WORK_LOC_FROM == "" && lineItem.WORK_POOL_FROM == ""))
                {
                    lineItem.WORK_DEPT_FROM = lineItem.HOME_DEPT_FROM;
                    lineItem.WORK_LOC_FROM = lineItem.HOME_LOC_FROM;
                    lineItem.WORK_POOL_FROM = lineItem.HOME_POOL_FROM;
                }
                else if ((lineItem.WORK_LOC_FROM == "" && (lineItem.HOME_LOC_FROM) != "") &&
                      (lineItem.HOME_DEPT_FROM == "" && lineItem.HOME_POOL_FROM == "") &&
                      (lineItem.WORK_DEPT_FROM == "" && (lineItem.WORK_POOL_FROM) == ""))
                {
                    lineItem.WORK_LOC_FROM = lineItem.HOME_LOC_FROM;
                }
                if ((lineItem.WORK_DEPT_TO == "") && (lineItem.HOME_DEPT_TO) != "" &&
                   (lineItem.WORK_LOC_TO) == "" && (lineItem.WORK_POOL_TO) == "")
                {
                    lineItem.WORK_DEPT_TO = lineItem.HOME_DEPT_TO;
                    lineItem.WORK_LOC_TO = lineItem.HOME_LOC_TO;
                    lineItem.WORK_POOL_TO = lineItem.HOME_POOL_TO;
                }
                else if ((lineItem.WORK_LOC_TO) == "" && (lineItem.HOME_LOC_TO) != "" &&
                   (lineItem.HOME_DEPT_TO) == "" && (lineItem.HOME_POOL_TO) == "" &&
                   (lineItem.WORK_DEPT_TO) == "" && (lineItem.WORK_POOL_TO) == "")
                {
                    lineItem.WORK_LOC_TO = lineItem.HOME_LOC_TO;
                }

                // home department required on labor transactions.
                if (lineItem.PROJ_TRANS_TYPE_FROM == "LBR" && lineItem.HOME_DEPT_FROM == "")
                {
                    lineItem.HOME_DEPT_FROM = "REQ";
                    //set_item_instance_property('home_dept_from',current_record,visual_attribute,'field_red');
                    lineItem.flagValidations.Add("HOME_DEPT_FROM", "red");
                    //set_item_instance_property('home_loc_from',current_record,visual_attribute,'field_white');
                    lineItem.flagValidations.Add("HOME_DEPT_FROM", "");
                }
                if (lineItem.PROJ_TRANS_TYPE_FROM == "LBR" && lineItem.HOME_DEPT_TO == "")
                {
                    lineItem.HOME_DEPT_TO = "REQ";
                    //set_item_instance_property('home_dept_to',current_record,visual_attribute,'field_red');
                    lineItem.flagValidations.Add("HOME_DEPT_TO", "red");
                    //set_item_instance_property('home_loc_to',current_record,visual_attribute,'field_white');
                    lineItem.flagValidations.Add("HOME_LOC_TO", "");
                }
                // apply program logic overrides first.
                if (lineItem.PROJ_TRANS_CODE_FROM == "PRM")
                {
                    lineItem.LABOR_RATE_CD7_FROM = string.Empty;
                }
                if (lineItem.PROJ_TRANS_CODE_TO == "PRM")
                {
                    lineItem.LABOR_RATE_CD7_TO = string.Empty;
                }
                // apply class code overrides
                // v_class_cd_from = trim(upper(v_class_cd_from));
                // v_class_cd_to = trim(upper(v_class_cd_to));

                int v_count = 0;
                if ((v_class_cd_from != "") &&
                   (v_class_cd_from != lineItem.CLASS_CD_FROM || lineItem.CLASS_CD_FROM == ""))
                {
                    try
                    {
                        OracleParameter[] parameter2 = new OracleParameter[3];
                        sql = new StringBuilder(@"select count(*) 
                   from mctr_class_code_v
                  where class_cd7 = :v_class_cd_from
                    and proj_trans_type = :proj_trans_type_from
                    and setid = :home_bugl_from");
                        parameter2[0] = new OracleParameter(":v_class_cd_from", OracleDbType.Varchar2, lineItem.CLASS_CD_FROM, ParameterDirection.Input);
                        parameter2[1] = new OracleParameter(":proj_trans_type_from", OracleDbType.Varchar2, lineItem.PROJ_TRANS_TYPE_FROM, ParameterDirection.Input);
                        parameter2[2] = new OracleParameter(":home_bugl_from", OracleDbType.Varchar2, lineItem.HOME_BUGL_FROM, ParameterDirection.Input);

                        v_count = entities.Database.SqlQuery<int>(sql.ToString(), parameter2).SingleOrDefault();
                    }
                    catch (Exception e)
                    {
                        v_count = 0;
                    }

                    lineItem.CLASS_CD_FROM = v_class_cd_from;
                    if (v_count == 0)
                    {
                        lineItem.flagValidations.Add("class_cd_from", "red");
                        //set_item_instance_property('class_cd_from',current_record,visual_attribute,'field_red');
                    }
                    else
                    {
                        lineItem.flagValidations.Add("class_cd_from", "");
                        //set_item_instance_property('class_cd_from',current_record,visual_attribute,'field_white');
                    }
                }
                else
                {
                    lineItem.flagValidations.Add("class_cd_from", "");
                    //set_item_instance_property('class_cd_from',current_record,visual_attribute,'field_white');
                }
                if ((v_class_cd_to != "") &&
                   (v_class_cd_to != lineItem.CLASS_CD_TO || lineItem.CLASS_CD_TO == ""))
                {
                    try
                    {
                        OracleParameter[] parameter2 = new OracleParameter[3];
                        sql = new StringBuilder(@"select count(*) 
                  from mctr_class_code_v
                 where class_cd7 = :v_class_cd_to
                   and proj_trans_type = :proj_trans_type_to
                   and setid = :home_bugl_to
                   and eff_status = 'A'");
                        parameter2[0] = new OracleParameter(":v_class_cd_to", OracleDbType.Varchar2, lineItem.CLASS_CD_TO, ParameterDirection.Input);
                        parameter2[1] = new OracleParameter(":proj_trans_type_to", OracleDbType.Varchar2, lineItem.PROJ_TRANS_TYPE_TO, ParameterDirection.Input);
                        parameter2[2] = new OracleParameter(":home_bugl_to", OracleDbType.Varchar2, lineItem.HOME_BUGL_TO, ParameterDirection.Input);

                        v_count = entities.Database.SqlQuery<int>(sql.ToString(), parameter2).SingleOrDefault();
                    }
                    catch (Exception e)
                    {
                        v_count = 0;
                    }
                    lineItem.CLASS_CD_TO = v_class_cd_to;
                    if (v_count == 0)
                    {
                        //set_item_instance_property('class_cd_to',current_record,visual_attribute,'field_red');
                        lineItem.flagValidations.Add("CLASS_CD_TO", "red");
                    }
                    else
                    {
                        //set_item_instance_property('class_cd_to',current_record,visual_attribute,'field_white');

                        if (lineItem.flagValidations.ContainsKey("CLASS_CD_TO"))

                        {
                            lineItem.flagValidations["CLASS_CD_TO"] = "";
                        }
                        else
                        {

                            lineItem.flagValidations.Add("CLASS_CD_TO", "");
                        }
                    }
                }
                else
                {
                    //set_item_instance_property('class_cd_to',current_record,visual_attribute,'field_white');
                    lineItem.flagValidations.Add("CLASS_CD_TO", "");
                }
                // set resource sub cat based on class code when non labor entry.
                if (lineItem.CLASS_CD_FROM != "" && (lineItem.PROJ_TRANS_TYPE_FROM != "LBR"))
                {
                    try
                    {
                        OracleParameter[] parameter2 = new OracleParameter[3];
                        sql = new StringBuilder(@"select resource_sub_cat as rsc_from
                   from mctr_class_code_v
                  where class_cd7 = :class_cd_from
                    and proj_trans_type = :proj_trans_type_from
                    and setid = :home_bugl_from
                    and trim(resource_sub_cat) !="";");
                        parameter2[0] = new OracleParameter(":class_cd_from", OracleDbType.Varchar2, lineItem.CLASS_CD_FROM, ParameterDirection.Input);
                        parameter2[1] = new OracleParameter(":proj_trans_type_from", OracleDbType.Varchar2, lineItem.PROJ_TRANS_TYPE_FROM, ParameterDirection.Input);
                        parameter2[2] = new OracleParameter(":home_bugl_from", OracleDbType.Varchar2, lineItem.HOME_BUGL_FROM, ParameterDirection.Input);

                        lineItem.RSC_FROM = entities.Database.SqlQuery<string>(sql.ToString(), parameter2).SingleOrDefault();
                    }
                    catch (Exception e)
                    {
                        lineItem.RSC_FROM = string.Empty;
                    }
                }

                if (lineItem.CLASS_CD_TO != "" && (lineItem.PROJ_TRANS_TYPE_TO != "LBR"))
                {
                    OracleParameter[] parameter2 = new OracleParameter[2];
                    sql = new StringBuilder(@"select resource_sub_cat as rsc_to
                   from mctr_class_code_v
                  where class_cd7 = :class_cd_to
                    and proj_trans_type = :proj_trans_type_to
                    and setid = :home_bugl_to
                    and eff_status = 'A'
                    and trim(resource_sub_cat) is not null;");
                    parameter2[0] = new OracleParameter(":class_cd_to", OracleDbType.Varchar2, lineItem.CLASS_CD_TO, ParameterDirection.Input);
                    parameter2[2] = new OracleParameter(":proj_trans_type_to", OracleDbType.Varchar2, lineItem.PROJ_TRANS_TYPE_TO, ParameterDirection.Input);
                    parameter2[2] = new OracleParameter(":home_bugl_to", OracleDbType.Varchar2, lineItem.HOME_BUGL_TO, ParameterDirection.Input);

                    lineItem.RSC_TO = entities.Database.SqlQuery<string>(sql.ToString(), parameter2).SingleOrDefault();
                }
                //  exception when others then null;

                // apply resource sub cat overrides

                if ((v_rsc_from != "") &&
                   (v_rsc_from != lineItem.RSC_FROM || lineItem.RSC_FROM == ""))

                {
                    int vCountVal = 0;
                    try
                    {
                        OracleParameter[] parameter2 = new OracleParameter[2];
                        sql = new StringBuilder(@"select count(*)
                   from mctr_rsc_mv a 
                 where a.resource_sub_cat = :v_rsc_from
                   and a.effdt = (select max(a_ed.effdt)
                                    from mctr_rsc_mv a_ed
                                   where a.resource_sub_cat = a_ed.resource_sub_cat
                                     and a_ed.effdt <= :period_to)");
                        parameter2[0] = new OracleParameter(":v_rsc_from", OracleDbType.Varchar2, lineItem.RSC_FROM, ParameterDirection.Input);
                        parameter2[1] = new OracleParameter(":period_to", OracleDbType.Date, lineItem.PERIOD_TO, ParameterDirection.Input);

                        var response = entities.Database.SqlQuery<int>(sql.ToString(), parameter2).SingleOrDefault();
                        vCountVal = Convert.ToInt32(response.ToString());
                    }
                    catch (Exception e)
                    {
                        vCountVal = 0;
                    }
                    lineItem.RSC_FROM = v_rsc_from;
                    if (vCountVal == 0)
                    {
                        //set_item_instance_property('rsc_from',current_record,visual_attribute,'field_red');
                        lineItem.flagValidations.Add("RSC_FROM", "red");
                    }
                    else
                    {
                        //set_item_instance_property('rsc_from',current_record,visual_attribute,'field_white');
                        lineItem.flagValidations.Add("RSC_FROM", "");
                    }
                }
                else
                {
                    lineItem.flagValidations.Add("RSC_FROM", "");
                    //set_item_instance_property('rsc_from',current_record,visual_attribute,'field_white');
                }
                if ((v_rsc_to != "") &&
                    (v_rsc_to != lineItem.RSC_TO || lineItem.RSC_TO == ""))
                {
                    int vCountVal = 0;
                    try
                    {
                        OracleParameter[] parameter2 = new OracleParameter[2];
                        sql = new StringBuilder(@"select count(*)
                   from mctr_rsc_mv a 
                 where a.resource_sub_cat = :v_rsc_to
                   and a.effdt = (select max(a_ed.effdt)
                                    from mctr_rsc_mv a_ed
                                   where a.resource_sub_cat = a_ed.resource_sub_cat
                                     and a_ed.effdt <= :period_to)");

                        parameter2[0] = new OracleParameter(":v_rsc_to", OracleDbType.Varchar2, v_rsc_to, ParameterDirection.Input);
                        parameter2[1] = new OracleParameter(":period_to", OracleDbType.Varchar2, periodTo, ParameterDirection.Input);
                        var response = entities.Database.SqlQuery<int>(sql.ToString(), parameter2).SingleOrDefault();
                        vCountVal = Convert.ToInt32(response.ToString());
                    }
                    catch (Exception e)
                    {
                        vCountVal = 0;
                    }

                    lineItem.RSC_TO = v_rsc_to;
                    if (vCountVal == 0)
                    {
                        //set_item_instance_property('rsc_to',current_record,visual_attribute,'field_red');
                        lineItem.flagValidations.Add("RSC_TO", "red");
                    }
                    else
                    {
                        //set_item_instance_property('rsc_to',current_record,visual_attribute,'field_white');
                        lineItem.flagValidations.Add("RSC_TO", "");
                    }
                }
                else
                {
                    //set_item_instance_property('rsc_to',current_record,visual_attribute,'field_white');
                    lineItem.flagValidations.Add("RSC_TO", "");
                }


                if (lineItem.WPD_FROM != "" && lineItem.WPD_FROM != "IN")
                {
                    int vCountVal = 0;
                    OracleParameter[] parameter2 = new OracleParameter[1];
                    sql = new StringBuilder(@"select count(*)
                   from mctr_wp_master_v
                  where wpd_id7 = :wpd_from");
                    //exception when others then v_count = 0;
                    parameter2[0] = new OracleParameter(":wpd_from", OracleDbType.Varchar2, lineItem.WPD_FROM, ParameterDirection.Input);

                    try
                    {
                        var response = entities.Database.SqlQuery<int>(sql.ToString(), parameter2).SingleOrDefault();
                        vCountVal = Convert.ToInt32(response.ToString());
                    }
                    catch (Exception e)
                    {
                        vCountVal = 0;
                    }
                    if (vCountVal == 0)
                    {
                        //set_item_instance_property('wpd_from',current_record,visual_attribute,'field_red');
                        lineItem.flagValidations.Add("WPD_FROM", "red");
                    }
                    else
                    {
                        //set_item_instance_property('wpd_from',current_record,visual_attribute,'field_white');
                        lineItem.flagValidations.Add("WPD_FROM", "");
                    }
                }
                else
                {
                    //set_item_instance_property('wpd_from',current_record,visual_attribute,'field_white');
                    lineItem.flagValidations.Add("WPD_FROM", "");
                }
                // validate wpd_to indirect code
                if (lineItem.PROJ_TRANS_TYPE_TO == "LBR" && lineItem.WPD_TO != "")
                {

                    v_count = 0;
                    if (Convert.ToInt32(mctrCreateForm.First().fyear) >= 2005 && lineItem.ACCOUNT_TO != "")
                    {
                        OracleParameter[] parameter2 = new OracleParameter[2];
                        sql = new StringBuilder(@"select count(*)
                     from mctr_major_acct_v
                    where major_account_nbr7 = substr(:account_to,1,4)
                      and eff_status = 'A'
                      and wpd_indirect_flg7 = 'Y'
                      and :proj_trans_type_to = 'LBR'");
                        parameter2[0] = new OracleParameter(":account_to", OracleDbType.Varchar2, lineItem.ACCOUNT_TO, ParameterDirection.Input);
                        parameter2[1] = new OracleParameter(":proj_trans_type_to", OracleDbType.Varchar2, lineItem.PROJ_TRANS_TYPE_TO, ParameterDirection.Input);

                        var response = entities.Database.SqlQuery<int>(sql.ToString(), parameter2).SingleOrDefault();
                        v_count = Convert.ToInt32(response.ToString());


                        // exception when others then v_count = 0

                        if (v_count > 0)
                        {
                            lineItem.WPD_TO = "IN";
                        }
                    }
                    if (v_count == 0)
                    {
                        OracleParameter[] parameter2 = new OracleParameter[4];
                        sql = new StringBuilder(@"select count(*) 
                     from mctr_wp_locdept_v
                    where setid = :home_bugl_to
                      and acctg_loc_cd7 = :work_loc_to
                      and deptid = :work_dept_to
                      and wpd_id7 = :wpd_to
                      and eff_status = 'A'");
                        parameter2[0] = new OracleParameter(":home_bugl_to", OracleDbType.Varchar2, lineItem.HOME_BUGL_TO, ParameterDirection.Input);
                        parameter2[1] = new OracleParameter(":work_loc_to", OracleDbType.Varchar2, lineItem.WORK_LOC_TO, ParameterDirection.Input);
                        parameter2[2] = new OracleParameter(":work_dept_to", OracleDbType.Varchar2, lineItem.WORK_DEPT_TO, ParameterDirection.Input);
                        parameter2[3] = new OracleParameter(":wpd_to", OracleDbType.Varchar2, lineItem.WPD_TO, ParameterDirection.Input);

                        var response = entities.Database.SqlQuery<int>(sql.ToString(), parameter2).SingleOrDefault();
                        v_count = Convert.ToInt32(response.ToString());
                        //exception when others then v_count = 0;
                        if (v_count == 0)
                        {
                            OracleParameter[] parameter3 = new OracleParameter[1];
                            sql = new StringBuilder(@"select count(*)
                       from mctr_wp_master_v
                      where wpd_id7 = :wpd_to
                        and eff_status = 'A'
                        and wpd_id7 not in ('IN','999')");
                            parameter3[0] = new OracleParameter(":wpd_to", OracleDbType.Varchar2, lineItem.WPD_TO, ParameterDirection.Input);


                            var response4 = entities.Database.SqlQuery<int>(sql.ToString(), parameter3).SingleOrDefault();
                            v_count = Convert.ToInt32(response4.ToString());

                            // exception when others then v_count = 0;

                        }
                        if (v_count == 0)
                        {
                            //set_item_instance_property('wpd_to',current_record,visual_attribute,'field_red');
                            lineItem.flagValidations.Add("WPD_TO", "red");
                        }
                        else
                        {
                            //set_item_instance_property('wpd_to',current_record,visual_attribute,'field_black_on_gray');
                            lineItem.flagValidations.Add("WPD_TO", "");
                        }
                    }
                    else
                    {
                        //set_item_instance_property('wpd_to',current_record,visual_attribute,'field_black_on_gray');
                        lineItem.flagValidations.Add("WPD_TO", "");

                    }
                }
                else
                {
                    lineItem.WPD_TO = null;
                    //set_item_instance_property('wpd_to',current_record,visual_attribute,'field_black_on_gray');
                    lineItem.flagValidations.Add("WPD_TO", "");

                }
                // validate bulk allocation code

                if (v_bulk_flg == "N")
                {
                    lineItem.BULK_FROM = "";
                    lineItem.BULK_TO = "";
                    //set_item_instance_property('bulk_from',current_record,visual_attribute,'field_white');
                    //set_item_instance_property('bulk_to',current_record,visual_attribute,'field_white');
                    lineItem.flagValidations.Add("BULK_FROM", "");
                    lineItem.flagValidations.Add("BULK_TO", "");
                }
                else
                {
                    v_count = 0;
                    if (lineItem.BULK_FROM != null)
                    {
                        OracleParameter[] parameter2 = new OracleParameter[3];
                        sql = new StringBuilder(@"select count(*)
                     from mctr_bulk_alctn_v
                    where setid = :home_bugl_from
                      and proj_trans_type = :proj_trans_type_from
                      and bulk_alctn_cd7 = :bulk_from");
                        parameter2[0] = new OracleParameter(":home_bugl_from", OracleDbType.Varchar2, lineItem.HOME_BUGL_FROM, ParameterDirection.Input);
                        parameter2[1] = new OracleParameter(":proj_trans_type_from", OracleDbType.Varchar2, lineItem.PROJ_TRANS_TYPE_FROM, ParameterDirection.Input);
                        parameter2[2] = new OracleParameter(":bulk_from", OracleDbType.Varchar2, lineItem.BULK_FROM, ParameterDirection.Input);
                        try
                        {
                            var response = entities.Database.SqlQuery<int>(sql.ToString(), parameter2).SingleOrDefault();
                            v_count = Convert.ToInt32(response.ToString());
                        }
                        catch (Exception e)
                        {
                            v_count = 0;
                        }
                        //exception when others then v_count = 0;
                        //end;
                        if (v_count == 0)
                        {
                            //set_item_instance_property('bulk_from',current_record,visual_attribute,'field_red');
                            lineItem.flagValidations.Add("BULK_FROM", "red");
                        }
                        else
                        {
                            lineItem.flagValidations.Add("BULK_FROM", "");
                            //set_item_instance_property('bulk_from',current_record,visual_attribute,'field_white');
                        }
                    }
                    else
                    {
                        lineItem.flagValidations.Add("BULK_FROM", "");
                        //set_item_instance_property('bulk_from',current_record,visual_attribute,'field_white');
                    }
                    if (lineItem.BULK_TO != null)
                    {
                        v_count = 0;
                        OracleParameter[] parameter2 = new OracleParameter[3];
                        sql = new StringBuilder(@"select count(*)
                     from mctr_bulk_alctn_v
                    where setid = :home_bugl_to
                      and proj_trans_type = :proj_trans_type_to
                      and bulk_alctn_cd7 = :bulk_to");
                        parameter2[0] = new OracleParameter(":home_bugl_to", OracleDbType.Varchar2, lineItem.HOME_BUGL_TO, ParameterDirection.Input);
                        parameter2[1] = new OracleParameter(":proj_trans_type_to", OracleDbType.Varchar2, lineItem.PROJ_TRANS_TYPE_TO, ParameterDirection.Input);
                        parameter2[2] = new OracleParameter(":bulk_to", OracleDbType.Varchar2, lineItem.BULK_TO, ParameterDirection.Input);
                        try
                        {
                            var response = entities.Database.SqlQuery<int>(sql.ToString(), parameter2).SingleOrDefault();
                            v_count = Convert.ToInt32(response.ToString());
                        }
                        catch (Exception e)
                        {
                            v_count = 0;
                        }
                        //exception when others then v_count = 0;

                        if (v_count == 0)
                        {
                            //set_item_instance_property('bulk_to',current_record,visual_attribute,'field_red');
                            lineItem.flagValidations.Add("BULK_TO", "red");
                        }
                        else
                        {
                            //set_item_instance_property('bulk_to',current_record,visual_attribute,'field_black_on_gray');
                            lineItem.flagValidations.Add("BULK_TO", "");
                        }
                    }
                    else
                    {
                        lineItem.flagValidations.Add("BULK_TO", "");
                        //set_item_instance_property('bulk_to',current_record,visual_attribute,'field_white');
                    }
                }
                // validate material cec code from
                if (lineItem.ESTMTG_PRICG_CD_FROM != null)
                {
                    v_count = 0;
                    OracleParameter[] parameter2 = new OracleParameter[2];
                    sql = new StringBuilder(@"select count(*)
                   from mctr_estmtg_pricg_v
                  where estmtg_pricg_cd7 = :estmtg_pricg_cd_from
                    and setid = :home_bugl_from");
                    parameter2[0] = new OracleParameter(":estmtg_pricg_cd_from", OracleDbType.Varchar2, lineItem.ESTMTG_PRICG_CD_FROM, ParameterDirection.Input);
                    parameter2[1] = new OracleParameter(":home_bugl_from", OracleDbType.Varchar2, lineItem.HOME_BUGL_FROM, ParameterDirection.Input);
                    try
                    {
                        var response = entities.Database.SqlQuery<int>(sql.ToString(), parameter2).SingleOrDefault();
                        v_count = Convert.ToInt32(response.ToString());
                    }
                    catch (Exception e)
                    {
                        v_count = 0;
                    }
                    //exception when others then v_count = 0;

                    if (v_count == 0)
                    {
                        //set_item_instance_property('estmtg_pricg_cd_from',current_record,visual_attribute,'field_red');
                        lineItem.flagValidations.Add("ESTMTG_PRICG_CD_FROM","red");
                    }
                    else
                    {
                        lineItem.flagValidations.Add("ESTMTG_PRICG_CD_FROM", "white");
                        //set_item_instance_property('estmtg_pricg_cd_from',current_record,visual_attribute,'field_white');
                    }
                }
                else
                {
                    lineItem.flagValidations.Add("ESTMTG_PRICG_CD_FROM", "white");
                    //set_item_instance_property('estmtg_pricg_cd_from',current_record,visual_attribute,'field_white');
                }
                // validate material cec code from
                if (lineItem.ESTMTG_PRICG_CD_TO != null)
                {
                    v_count = 0;
                    OracleParameter[] parameter2 = new OracleParameter[2];
                    sql = new StringBuilder(@"select count(*)
                   from mctr_estmtg_pricg_v a
                  where estmtg_pricg_cd7 = :estmtg_pricg_cd_to
                    and setid = :home_bugl_to
                    and eff_status = 'A'");
                    parameter2[0] = new OracleParameter(":estmtg_pricg_cd_to", OracleDbType.Varchar2, lineItem.ESTMTG_PRICG_CD_TO, ParameterDirection.Input);
                    parameter2[1] = new OracleParameter(":home_bugl_to", OracleDbType.Varchar2, lineItem.HOME_BUGL_TO, ParameterDirection.Input);
                    try
                    {
                        var response = entities.Database.SqlQuery<int>(sql.ToString(), parameter2).SingleOrDefault();
                        v_count = Convert.ToInt32(response.ToString());
                    }
                    catch (Exception e)
                    {
                        v_count = 0;
                    }
                    // exception when others then v_count = 0;

                    if (v_count == 0)
                    {
                        //set_item_instance_property('estmtg_pricg_cd_to',current_record,visual_attribute,'field_red');
                        lineItem.flagValidations.Add("ESTMTG_PRICG_CD_TO", "red");
                    }
                    else
                    {
                        //set_item_instance_property('estmtg_pricg_cd_to',current_record,visual_attribute,'field_white');
                        lineItem.flagValidations.Add("ESTMTG_PRICG_CD_TO", "");
                    }
                }
                else
                {
                    lineItem.flagValidations.Add("ESTMTG_PRICG_CD_TO", "");
                    //set_item_instance_property('estmtg_pricg_cd_to',current_record,visual_attribute,'field_white');
                }
                // validate material quantity for numeric values.
                if (lineItem.MATERIAL_QUANTITY_FROM == 0 || lineItem.PROJ_TRANS_TYPE_FROM == "LBR")
                {
                    lineItem.MATERIAL_QUANTITY_FROM = 0;
                    lineItem.MATERIAL_QUANTITY_TO = 0;
                }
                else
                {
                    // reverse quantity (material)
                    lineItem.MATERIAL_QUANTITY_TO = lineItem.MATERIAL_QUANTITY_FROM * -1;
                }


                decimal v_lbr_amt_from = 0;
                decimal v_lbr_amt_to = 0;
                string v_amtfqty = "N";
                lineItem.flagValidations.Add("QUANTITY_FROM", "white");
                lineItem.flagValidations.Add("AMOUNT_FROM", "white");
                //set_item_instance_property('quantity_from',current_record,visual_attribute,'field_white');
                //set_item_instance_property('amount_from',current_record,visual_attribute,'field_white');
                // reverse labor hours and labor amount before calculating labor.
                // (pyr versus current year is not considered at this time.)
                lineItem.QUANTITY_TO = lineItem.QUANTITY_FROM * -1;
                lineItem.AMOUNT_TO = lineItem.AMOUNT_FROM * -1;
                // validate labor hours and labor amount
                if (lineItem.PROJ_TRANS_TYPE_FROM == "LBR" && lineItem.PROJ_TRANS_TYPE_TO == "LBR")
                {
                    if (lineItem.PROJ_TRANS_CODE_FROM == "STR" || lineItem.PROJ_TRANS_CODE_FROM == "OTS")
                    {
                        lineItem.QUANTITY_TO = lineItem.QUANTITY_FROM * -1;
                        // calculate labor amount from using labor hours from.
                        var v_rate = "";
                        OracleParameter[] parameter2 = new OracleParameter[4];
                        sql = new StringBuilder(@"select rate
                     from mctr_lbr_rate
                    where setid = :home_bugl_from
                      and fiscal_year = :fiscal_year
                      and labor_rate_cd7 = :labor_rate_cd7_from
                      and proj_trans_code = :proj_trans_code_from");
                        parameter2[0] = new OracleParameter(":home_bugl_from", OracleDbType.Varchar2, lineItem.HOME_BUGL_FROM, ParameterDirection.Input);
                        parameter2[1] = new OracleParameter(":fiscal_year", OracleDbType.Int32, Convert.ToInt32(mctrCreateForm.First().fyear), ParameterDirection.Input);
                        parameter2[2] = new OracleParameter(":labor_rate_cd7_from", OracleDbType.Varchar2, lineItem.LABOR_RATE_CD7_FROM, ParameterDirection.Input);
                        parameter2[3] = new OracleParameter(":proj_trans_code_from", OracleDbType.Varchar2, lineItem.PROJ_TRANS_CODE_FROM, ParameterDirection.Input);
                        try
                        {
                            var response = entities.Database.SqlQuery<int>(sql.ToString(), parameter2).SingleOrDefault();
                            v_rate = Convert.ToString(response);
                        }
                        catch (Exception e)
                        {
                            v_rate = "";
                        }

                        int v = 0;
                        if (v_rate == "" || Convert.ToInt32(v_rate)==0)
                        {
                            OracleParameter[] paramete3 = new OracleParameter[4];
                            sql = new StringBuilder(@"select rate
                       from mctr_lbr_rate_v
                      where setid = :home_bugl_from 
                        and fiscal_year = :fiscal_year
                        and labor_rate_cd7 = :labor_rate_cd7_from
                        and proj_trans_code = :proj_trans_code_from");
                            // exception when others then v_rate = null;
                            paramete3[0] = new OracleParameter(":home_bugl_from", OracleDbType.Varchar2, lineItem.HOME_BUGL_FROM, ParameterDirection.Input);
                            paramete3[1] = new OracleParameter(":fiscal_year", OracleDbType.Int32, mctrCreateForm.First().fyear, ParameterDirection.Input);
                            paramete3[2] = new OracleParameter(":labor_rate_cd7_from", OracleDbType.Varchar2, lineItem.LABOR_RATE_CD7_FROM, ParameterDirection.Input);
                            paramete3[3] = new OracleParameter(":proj_trans_code_from", OracleDbType.Varchar2, lineItem.PROJ_TRANS_CODE_FROM, ParameterDirection.Input);
                            try
                            {
                                var response3 = entities.Database.SqlQuery<string>(sql.ToString(), paramete3).SingleOrDefault();
                                v_rate = response3.ToString();
                            }
                            catch (Exception e)
                            {
                                v_rate = "";
                            }


                        }
                        if (v_rate == "" || ((1 > Convert.ToDecimal(v_rate)) && (Convert.ToDecimal(v_rate) > -1)))
                        {
                            v_rate = "";
                            // 'labor rate is not known. input amount is entered manually.
                            v_lbr_amt_from = Convert.ToDecimal(lineItem.AMOUNT_FROM);
                        }
                        else
                        {
                            v_lbr_amt_from = Convert.ToDecimal(lineItem.QUANTITY_FROM) * Convert.ToDecimal(v_rate);
                            v_amtfqty = "Y";
                        }
                        // calculate labor amount to using labor hours to.
                        v_rate = "";
                        OracleParameter[] parameter4 = new OracleParameter[4];
                        sql = new StringBuilder(@"select rate
                     from mctr_lbr_rate
                    where setid = :home_bugl_to
                      and fiscal_year = :fiscal_year
                      and labor_rate_cd7 = :labor_rate_cd7_to
                      and proj_trans_code = :proj_trans_code_to");
                        parameter4[0] = new OracleParameter(":home_bugl_to", OracleDbType.Varchar2, lineItem.HOME_BUGL_TO, ParameterDirection.Input);
                        parameter4[1] = new OracleParameter(":fiscal_year", OracleDbType.Int32, Convert.ToInt32(mctrCreateForm.First().fyear), ParameterDirection.Input);
                        parameter4[2] = new OracleParameter(":labor_rate_cd7_to", OracleDbType.Varchar2, lineItem.LABOR_RATE_CD7_TO, ParameterDirection.Input);
                        parameter4[3] = new OracleParameter(":proj_trans_code_to", OracleDbType.Varchar2, lineItem.PROJ_TRANS_CODE_TO, ParameterDirection.Input);
                        try
                        {
                            var response2 = entities.Database.SqlQuery<int>(sql.ToString(), parameter4).SingleOrDefault();
                            v_rate = Convert.ToString(response2);
                        }
                        catch (Exception e)
                        {
                            v_rate = "";
                        }
                        if (v_rate == "")
                        {
                            try
                            {
                                OracleParameter[] paramete2 = new OracleParameter[4];
                                sql = new StringBuilder(@"select rate
                       from mctr_lbr_rate_v
                      where setid = :home_bugl_to
                        and fiscal_year = :fiscal_year
                        and labor_rate_cd7 = :labor_rate_cd7_to
                        and proj_trans_code = :proj_trans_code_to");
                                paramete2[0] = new OracleParameter(":home_bugl_to", OracleDbType.Varchar2, lineItem.HOME_BUGL_TO, ParameterDirection.Input);
                                paramete2[1] = new OracleParameter(":fiscal_year", OracleDbType.Varchar2, mctrCreateForm.First().fyear, ParameterDirection.Input);
                                paramete2[2] = new OracleParameter(":labor_rate_cd7_to", OracleDbType.Varchar2, lineItem.LABOR_RATE_CD7_TO, ParameterDirection.Input);
                                paramete2[3] = new OracleParameter(":proj_trans_code_to", OracleDbType.Varchar2, lineItem.PROJ_TRANS_CODE_TO, ParameterDirection.Input);

                                var response1 = entities.Database.SqlQuery<int>(sql.ToString(), paramete2).SingleOrDefault();
                                v_rate = Convert.ToString(response1);
                            }
                            catch (Exception e)
                            {
                                v_rate = null;
                            }

                        }
                        if (v_rate == "" || (1 > Convert.ToDecimal(v_rate) && Convert.ToDecimal(v_rate) > -1))
                        {
                            v_rate = "";
                            // 'labor rate is not known. input amount is entered manually.
                            v_lbr_amt_to = Convert.ToDecimal(lineItem.AMOUNT_TO);
                        }
                        else
                        {
                            v_lbr_amt_to = Convert.ToDecimal(lineItem.QUANTITY_TO) * Convert.ToDecimal(v_rate);
                        }
                        if (mctrCreateForm.First().py_cy_status == "CY")
                        {
                            v_lbr_amt_to = Convert.ToDecimal(-1 * lineItem.AMOUNT_FROM);
                        }
                        if ((v_lbr_amt_from != lineItem.AMOUNT_FROM) && (lineItem.AMOUNT_FROM != 0) ||
                             ((v_lbr_amt_to != lineItem.AMOUNT_TO) && lineItem.AMOUNT_TO != 0))
                        {
                            if (v_amtfqty == "Y")
                            {
                                //set_item_instance_property('quantity_from',current_record,visual_attribute,'field_red');
                                if (lineItem.flagValidations.ContainsKey("QUANTITY_FROM"))
                                {
                                    lineItem.flagValidations["QUANTITY_FROM"] = "red";
                                }
                                else
                                {
                                    lineItem.flagValidations.Add("QUANTITY_FROM", "red");
                                }
                            }
                            else
                            {
                                if (lineItem.flagValidations.ContainsKey("AMOUNT_FROM"))
                                {
                                    //set_item_instance_property('amount_from',current_record,visual_attribute,'field_red');
                                    lineItem.flagValidations["AMOUNT_FROM"] = "red";
                                }
                                else
                                {
                                    lineItem.flagValidations.Add("AMOUNT_FROM", "red");
                                }
                            }
                        }
                        else
                        {
                            // when batch load labor amount is zero means user wants the calculated amount.
                            lineItem.AMOUNT_FROM = v_lbr_amt_from;
                            lineItem.AMOUNT_TO = v_lbr_amt_to;
                        }
                    }
                    if (lineItem.WPD_TO == "" && Convert.ToInt32(mctrCreateForm.First().fyear) >= 2005)
                    {
                        //set_item_instance_property('wpd_to',current_record,visual_attribute,'field_red');
                        lineItem.flagValidations.Add("WPD_TO", "red");
                    }
                    if (lineItem.CLASS_CD_FROM == "")
                    {
                        //set_item_instance_property('class_cd_from',current_record,visual_attribute,'field_red');
                        lineItem.flagValidations.Add("CLASS_CD_FROM", "red");
                    }
                    if (lineItem.CLASS_CD_TO == "")
                    {
                        //set_item_instance_property('class_cd_to',current_record,visual_attribute,'field_red');
                        lineItem.flagValidations.Add("CLASS_CD_TO", "red");
                    }
                }
                else
                {
                    lineItem.QUANTITY_FROM = 0;
                    lineItem.QUANTITY_TO = 0;
                }


                // validate from to fields relations
                if (lineItem.CONTRACT_NUM_FROM != lineItem.CONTRACT_NUM_TO)
                {
                    //set_item_instance_property('contract_num_to',current_record,visual_attribute,'field_blue_on_gray');
                    lineItem.flagValidations.Add("CONTRACT_NUM_TO", "");
                }
                else
                {
                    //set_item_instance_property('contract_num_to',current_record,visual_attribute,'field_black_on_gray');
                    lineItem.flagValidations.Add("CONTRACT_NUM_TO", "");
                }

                if (lineItem.LABOR_RATE_CD7_TO == "NR" && (lineItem.LABOR_RATE_CD7_FROM != "NR" || lineItem.LABOR_RATE_CD7_FROM == ""))
                {
                    //set_item_instance_property('labor_rate_cd7_to',current_record,visual_attribute,'field_yellow');
                    //set_item_instance_property('amount_to',current_record,visual_attribute,'field_yellow');
                    lineItem.flagValidations.Add("LABOR_RATE_CD7_TO", "yellow");
                    lineItem.flagValidations.Add("AMOUNT_TO", "yellow");
                }
                else
                {
                    //set_item_instance_property('labor_rate_cd7_to',current_record,visual_attribute,'field_black_on_gray');
                    //set_item_instance_property('amount_to',current_record,visual_attribute,'field_black_on_white');
                    lineItem.flagValidations.Add("LABOR_RATE_CD7_TO", "");
                    lineItem.flagValidations.Add("AMOUNT_TO", "");
                }
                if (lineItem.BUM_CD7_TO != lineItem.BUM_CD7_TO_ORIG)
                {
                    lineItem.flagValidations.Add("BUM_CD7_TO", "");
                    lineItem.flagValidations.Add("BUM_CD7_TO_ORIG", "");
                }
                else
                {
                    lineItem.flagValidations.Add("BUM_CD7_TO", "");
                    lineItem.flagValidations.Add("BUM_CD7_TO_ORIG", "");
                }

                deptStatus = "";
                lineItem.activityStatus = "";
                lineItem.projectStatus = "";
                lineItem.OH_BASE_YR_FROM = mctrCreateForm.First().fyear;
                lineItem.OH_BASE_YR_TO =Convert.ToInt16(mctrCreateForm.First().fyear);
                result.Add(lineItem);
            }
            mctrCreateForm.First().mctrLineItem = result;
            return mctrCreateForm;
        }
    }
}
