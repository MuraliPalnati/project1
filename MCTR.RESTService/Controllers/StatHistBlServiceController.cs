///*************************************************************************
/// 
/// BOEING CONFIDENTIAL
/// ___________________
/// 
///  BOEING is a trademark of Boeing Management Company.
///
///  Copyright © 2016 Boeing. All rights reserved.
/// 
/// NOTICE:  All information contained herein is, and remains
/// the property of Boeing and its suppliers, if any.  
/// The intellectual and technical concepts contained
/// herein are proprietary to Boeing and its suppliers and may be 
/// covered by U.S. and Foreign Patents, patents in process, 
/// and are protected by trade secret or copyright law.
/// Dissemination of this information or reproduction of this material
/// is strictly forbidden unless prior written permission is obtained
/// from Boeing. 
///

///************************************************************************
/// Author           : Generated by ATMA ®
/// Revision History :  


using System;
using System.Collections.Generic;
using System.Linq;
using System.Net;
using System.Net.Http;
using System.Web.Http;
using log4net;

using MCTR.DomainEntity;
using MCTR.BusinessInterface;
using MCTR.Business;

namespace MCTR.RESTService.Controllers
{
    ///*********************************************************************
    ///<summary>
    ///StatHistBlServiceController is a Rest controller implementation  
    ///which acts as a wrapper to the StatHistBlBusiness implementation and
    /// provides api path for each methods exposed.
    ///</summary>

    public class StatHistBlServiceController : ApiController
    {

         private readonly ILog logger;

        public StatHistBlServiceController()
        {
            logger = LogManager.GetLogger(System.Reflection.MethodBase.GetCurrentMethod().DeclaringType);
        }


        ///*************************************************************
        ///<summary>
        ///Method Name : mctrStatusHistMctrStatusHistOnLoad
        ///</summary>
        ///<param name = "StatHistBl"></param>
        ///<returns>IEnumerable<StatHistBl> </returns>

        [HttpPost]
        [ActionName("mctrStatusHistMctrStatusHistOnLoad")]
        public HttpResponseMessage mctrStatusHistMctrStatusHistOnLoad([FromBody]IEnumerable<StatusHistory> statHistBl)
        {
            logger.Info("Executing MCTR.RESTService.StatHistBlService.mctrStatusHistMctrStatusHistOnLoad() with request : " + statHistBl);
            if (statHistBl != null)
            {
                try {
                    IStatHistBlBusiness statHistBlBusiness = new StatHistBlBusiness();
                    var response = statHistBlBusiness.mctrStatusHistMctrStatusHistOnLoad(statHistBl);
                    logger.Info("Response received from MCTR.RESTService.StatHistBlService.statHistBlBusiness.mctrStatusHistMctrStatusHistOnLoad() : " + response);
                    return Request.CreateResponse(HttpStatusCode.OK, response);
                }
                catch (Exception ex)
                {
                    logger.Info("Exception Occured at MCTR.RESTService.StatHistBlService.mctrStatusHistMctrStatusHistOnLoad() : " + ex.Message);
                    return Request.CreateErrorResponse(HttpStatusCode.InternalServerError, ex.Message);
                }
            }
            return null;
        }

        ///*************************************************************
        ///<summary>
        ///Method Name : mctrStatusHisthistButtonCloseWhenButtonPressed
        ///</summary>
        ///<param name = "StatHistBl"></param>
        ///<returns>IEnumerable<StatHistBl> </returns>

        [HttpPost]
        [ActionName("mctrStatusHisthistButtonCloseWhenButtonPressed")]
        public HttpResponseMessage mctrStatusHisthistButtonCloseWhenButtonPressed([FromBody]IEnumerable<StatHistBl> statHistBl)
        {
            logger.Info("Executing MCTR.RESTService.StatHistBlService. mctrStatusHisthistButtonCloseWhenButtonPressed() with request : " + statHistBl);
            if (statHistBl != null)
            {
                IStatHistBlBusiness statHistBlBusiness = new StatHistBlBusiness();
                var response = statHistBlBusiness.mctrStatusHisthistButtonCloseWhenButtonPressed(statHistBl);
                logger.Info("Response received from statHistBlBusiness.mctrStatusHisthistButtonCloseWhenButtonPressed() : " + response);
                return Request.CreateResponse(HttpStatusCode.OK, response);
            }

            return null;
        }

        ///*************************************************************
        ///<summary>
        ///Method Name : mctrStatusHistPostQuery
        ///</summary>
        ///<param name = "StatHistBl"></param>
        ///<returns>IEnumerable<StatHistBl> </returns>

        [HttpPost]
        [ActionName("mctrStatusHistPostQuery")]
        public HttpResponseMessage mctrStatusHistPostQuery([FromBody]IEnumerable<StatHistBl> statHistBl)
        {
            logger.Info("Executing MCTR.RESTService.StatHistBlService. mctrStatusHistPostQuery() with request : " + statHistBl);
            if (statHistBl != null)
            {
                IStatHistBlBusiness statHistBlBusiness = new StatHistBlBusiness();
                var response = statHistBlBusiness.mctrStatusHistPostQuery(statHistBl);
                logger.Info("Response received from MCTR.RESTService.StatHistBlService.mctrStatusHistPostQuery() : " + response);
                return Request.CreateResponse(HttpStatusCode.OK, response);
            }
            return null;
        }

        ///*************************************************************
        ///<summary>
        ///Method Name : selectionrgrpSortWhenRadioChanged
        ///</summary>
        ///<param name = "StatHistBl"></param>
        ///<returns>IEnumerable<StatHistBl> </returns>

        [HttpPost]
        [ActionName("selectionrgrpSortWhenRadioChanged")]
        public HttpResponseMessage selectionrgrpSortWhenRadioChanged([FromBody]IEnumerable<StatHistBl> statHistBl)
        {
            logger.Info("Executing MCTR.RESTService.StatHistBlService. selectionrgrpSortWhenRadioChanged() with request : " + statHistBl);
            if (statHistBl != null)
            {
                IStatHistBlBusiness statHistBlBusiness = new StatHistBlBusiness();

                var response = statHistBlBusiness.selectionrgrpSortWhenRadioChanged(statHistBl);
                logger.Info("Response received from MCTR.RESTService.StatHistBlService.selectionrgrpSortWhenRadioChanged() : " + response);
                return Request.CreateResponse(HttpStatusCode.OK, response);
            }
            return null;
        }

        ///*************************************************************
        ///<summary>
        ///Method Name : selectionbutToXlsWhenButtonPressed
        ///</summary>
        ///<param name = "StatHistBl"></param>
        ///<returns>IEnumerable<StatHistBl> </returns>

        [HttpPost]
        [ActionName("selectionbutToXlsWhenButtonPressed")]
        public HttpResponseMessage selectionbutToXlsWhenButtonPressed([FromBody]IEnumerable<StatHistBl> statHistBl)
        {
            logger.Info("Executing MCTR.RESTService.StatHistBlService. selectionbutToXlsWhenButtonPressed() with request : " + statHistBl);
            if (statHistBl != null)
            {
                IStatHistBlBusiness statHistBlBusiness = new StatHistBlBusiness();
                var response = statHistBlBusiness.selectionbutToXlsWhenButtonPressed(statHistBl);
                logger.Info("Response received from MCTR.RESTService.StatHistBlService.selectionbutToXlsWhenButtonPressed() : " + response);
                return Request.CreateResponse(HttpStatusCode.OK, response);
            }
            return null;
        }

        ///*************************************************************
        ///<summary>
        ///Method Name : webutildummyWhenButtonPressed
        ///</summary>
        ///<param name = "StatHistBl"></param>
        ///<returns>IEnumerable<StatHistBl> </returns>

        [HttpPost]
        [ActionName("webutildummyWhenButtonPressed")]
        public HttpResponseMessage webutildummyWhenButtonPressed([FromBody]IEnumerable<StatHistBl> statHistBl)
        {
            logger.Info("Executing MCTR.RESTService.StatHistBlService. webutildummyWhenButtonPressed() with request : " + statHistBl);
            if (statHistBl != null)
            {
                IStatHistBlBusiness statHistBlBusiness = new StatHistBlBusiness();
                var response = statHistBlBusiness.webutildummyWhenButtonPressed(statHistBl);
                logger.Info("Response received from MCTR.RESTService.StatHistBlService.webutildummyWhenButtonPressed() : " + response);
                return Request.CreateResponse(HttpStatusCode.OK, response);
            }
            return null;
        }

        ///*************************************************************
        ///<summary>
        ///Method Name : webutilwebutilClientinfoFunctionsWhenCustomItemEvent
        ///</summary>
        ///<param name = "StatHistBl"></param>
        ///<returns>IEnumerable<StatHistBl> </returns>

        [HttpPost]
        [ActionName("webutilwebutilClientinfoFunctionsWhenCustomItemEvent")]
        public HttpResponseMessage webutilwebutilClientinfoFunctionsWhenCustomItemEvent([FromBody]IEnumerable<StatHistBl> statHistBl)
        {
            logger.Info("Executing MCTR.RESTService.StatHistBlService. webutilwebutilClientinfoFunctionsWhenCustomItemEvent() with request : " + statHistBl);
            if (statHistBl != null)
            {
                IStatHistBlBusiness statHistBlBusiness = new StatHistBlBusiness();
                var response = statHistBlBusiness.webutilwebutilClientinfoFunctionsWhenCustomItemEvent(statHistBl);
                logger.Info("Response received from MCTR.RESTService.StatHistBlService.webutilwebutilClientinfoFunctionsWhenCustomItemEvent() : " + response);
                return Request.CreateResponse(HttpStatusCode.OK, response);
            }
            return null;
        }

        ///*************************************************************
        ///<summary>
        ///Method Name : webutilwebutilFileFunctionsWhenCustomItemEvent
        ///</summary>
        ///<param name = "StatHistBl"></param>
        ///<returns>IEnumerable<StatHistBl> </returns>

        [HttpPost]
        [ActionName("webutilwebutilFileFunctionsWhenCustomItemEvent")]
        public HttpResponseMessage webutilwebutilFileFunctionsWhenCustomItemEvent([FromBody]IEnumerable<StatHistBl> statHistBl)
        {
            logger.Info("Executing MCTR.RESTService.StatHistBlService. webutilwebutilFileFunctionsWhenCustomItemEvent() with request : " + statHistBl);
            if (statHistBl != null)
            {
                IStatHistBlBusiness statHistBlBusiness = new StatHistBlBusiness();
                var response = statHistBlBusiness.webutilwebutilFileFunctionsWhenCustomItemEvent(statHistBl);
                logger.Info("Response received from MCTR.RESTService.StatHistBlService.webutilwebutilFileFunctionsWhenCustomItemEvent() : " + response);
                return Request.CreateResponse(HttpStatusCode.OK, response);
            }
            return null;
        }

        ///*************************************************************
        ///<summary>
        ///Method Name : webutilwebutilHostFunctionsWhenCustomItemEvent
        ///</summary>
        ///<param name = "StatHistBl"></param>
        ///<returns>IEnumerable<StatHistBl> </returns>

        [HttpPost]
        [ActionName("webutilwebutilHostFunctionsWhenCustomItemEvent")]
        public HttpResponseMessage webutilwebutilHostFunctionsWhenCustomItemEvent([FromBody]IEnumerable<StatHistBl> statHistBl)
        {
            logger.Info("Executing MCTR.RESTService.StatHistBlService. webutilwebutilHostFunctionsWhenCustomItemEvent() with request : " + statHistBl);
            if (statHistBl != null)
            {
                IStatHistBlBusiness statHistBlBusiness = new StatHistBlBusiness();
                var response = statHistBlBusiness.webutilwebutilHostFunctionsWhenCustomItemEvent(statHistBl);
                logger.Info("Response received from MCTR.RESTService.StatHistBlService.webutilwebutilHostFunctionsWhenCustomItemEvent() : " + response);
                return Request.CreateResponse(HttpStatusCode.OK, response);
            }
            return null;
        }

        ///*************************************************************
        ///<summary>
        ///Method Name : webutilwebutilSessionFunctionsWhenCustomItemEvent
        ///</summary>
        ///<param name = "StatHistBl"></param>
        ///<returns>IEnumerable<StatHistBl> </returns>

        [HttpPost]
        [ActionName("webutilwebutilSessionFunctionsWhenCustomItemEvent")]
        public HttpResponseMessage webutilwebutilSessionFunctionsWhenCustomItemEvent([FromBody]IEnumerable<StatHistBl> statHistBl)
        {
            logger.Info("Executing MCTR.RESTService.StatHistBlService. webutilwebutilSessionFunctionsWhenCustomItemEvent() with request : " + statHistBl);
            if (statHistBl != null)
            {
                IStatHistBlBusiness statHistBlBusiness = new StatHistBlBusiness();
                var response = statHistBlBusiness.webutilwebutilSessionFunctionsWhenCustomItemEvent(statHistBl);
                logger.Info("Response received from MCTR.RESTService.StatHistBlService.webutilwebutilSessionFunctionsWhenCustomItemEvent() : " + response);
                return Request.CreateResponse(HttpStatusCode.OK, response);
            }
            return null;
        }

        ///*************************************************************
        ///<summary>
        ///Method Name : webutilwebutilFiletransferFunctionsWhenCustomItemEvent
        ///</summary>
        ///<param name = "StatHistBl"></param>
        ///<returns>IEnumerable<StatHistBl> </returns>

        [HttpPost]
        [ActionName("webutilwebutilFiletransferFunctionsWhenCustomItemEvent")]
        public HttpResponseMessage webutilwebutilFiletransferFunctionsWhenCustomItemEvent([FromBody]IEnumerable<StatHistBl> statHistBl)
        {
            logger.Info("Executing MCTR.RESTService.StatHistBlService. webutilwebutilFiletransferFunctionsWhenCustomItemEvent() with request : " + statHistBl);
            if (statHistBl != null)
            {
                IStatHistBlBusiness statHistBlBusiness = new StatHistBlBusiness();
                var response = statHistBlBusiness.webutilwebutilFiletransferFunctionsWhenCustomItemEvent(statHistBl);
                logger.Info("Response received from MCTR.RESTService.StatHistBlService.webutilwebutilFiletransferFunctionsWhenCustomItemEvent() : " + response);
                return Request.CreateResponse(HttpStatusCode.OK, response);
            }
            return null;
        }

        ///*************************************************************
        ///<summary>
        ///Method Name : webutilwebutilOleFunctionsWhenCustomItemEvent
        ///</summary>
        ///<param name = "StatHistBl"></param>
        ///<returns>IEnumerable<StatHistBl> </returns>

        [HttpPost]
        [ActionName("webutilwebutilOleFunctionsWhenCustomItemEvent")]
        public HttpResponseMessage webutilwebutilOleFunctionsWhenCustomItemEvent([FromBody]IEnumerable<StatHistBl> statHistBl)
        {
            logger.Info("Executing MCTR.RESTService.StatHistBlService. webutilwebutilOleFunctionsWhenCustomItemEvent() with request : " + statHistBl);
            if (statHistBl != null)
            {
                IStatHistBlBusiness statHistBlBusiness = new StatHistBlBusiness();
                var response = statHistBlBusiness.webutilwebutilOleFunctionsWhenCustomItemEvent(statHistBl);
                logger.Info("Response received from MCTR.RESTService.StatHistBlService.webutilwebutilOleFunctionsWhenCustomItemEvent() : " + response);
                return Request.CreateResponse(HttpStatusCode.OK, response);
            }
            return null;
        }

        ///*************************************************************
        ///<summary>
        ///Method Name : webutilwebutilCApiFunctionsWhenCustomItemEvent
        ///</summary>
        ///<param name = "StatHistBl"></param>
        ///<returns>IEnumerable<StatHistBl> </returns>

        [HttpPost]
        [ActionName("webutilwebutilCApiFunctionsWhenCustomItemEvent")]
        public HttpResponseMessage webutilwebutilCApiFunctionsWhenCustomItemEvent([FromBody]IEnumerable<StatHistBl> statHistBl)
        {
            logger.Info("Executing MCTR.RESTService.StatHistBlService. webutilwebutilCApiFunctionsWhenCustomItemEvent() with request : " + statHistBl);
            if (statHistBl != null)
            {
                IStatHistBlBusiness statHistBlBusiness = new StatHistBlBusiness();
                var response = statHistBlBusiness.webutilwebutilCApiFunctionsWhenCustomItemEvent(statHistBl);
                logger.Info("Response received from MCTR.RESTService.StatHistBlService.webutilwebutilCApiFunctionsWhenCustomItemEvent() : " + response);
                return Request.CreateResponse(HttpStatusCode.OK, response);
            }
            return null;
        }

        ///*************************************************************
        ///<summary>
        ///Method Name : webutilwebutilBrowserFunctionsWhenCustomItemEvent
        ///</summary>
        ///<param name = "StatHistBl"></param>
        ///<returns>IEnumerable<StatHistBl> </returns>

        [HttpPost]
        [ActionName("webutilwebutilBrowserFunctionsWhenCustomItemEvent")]
        public HttpResponseMessage webutilwebutilBrowserFunctionsWhenCustomItemEvent([FromBody]IEnumerable<StatHistBl> statHistBl)
        {
            logger.Info("Executing MCTR.RESTService.StatHistBlService. webutilwebutilBrowserFunctionsWhenCustomItemEvent() with request : " + statHistBl);
            if (statHistBl != null)
            {
                IStatHistBlBusiness statHistBlBusiness = new StatHistBlBusiness();
                var response = statHistBlBusiness.webutilwebutilBrowserFunctionsWhenCustomItemEvent(statHistBl);
                logger.Info("Response received from MCTR.RESTService.StatHistBlService.webutilwebutilBrowserFunctionsWhenCustomItemEvent() : " + response);
                return Request.CreateResponse(HttpStatusCode.OK, response);
            }
            return null;
        }

        ///*************************************************************
        ///<summary>
        ///Method Name : statHistBlWhenNewFormInstance
        ///</summary>
        ///<param name = "StatHistBl"></param>
        ///<returns>IEnumerable<StatHistBl> </returns>

        [HttpPost]
        [ActionName("statHistBlWhenNewFormInstance")]
        public HttpResponseMessage statHistBlWhenNewFormInstance([FromBody]IEnumerable<StatHistBl> statHistBl)
        {
            logger.Info("Executing MCTR.RESTService.StatHistBlService. statHistBlWhenNewFormInstance() with request : " + statHistBl);
            if (statHistBl != null)
            {
                IStatHistBlBusiness statHistBlBusiness = new StatHistBlBusiness();
                var response = statHistBlBusiness.statHistBlWhenNewFormInstance(statHistBl);
                logger.Info("Response received from MCTR.RESTService.StatHistBlService.statHistBlWhenNewFormInstance() : " + response);
                return Request.CreateResponse(HttpStatusCode.OK, response);
            }
            return null;
        }

        ///*************************************************************
        ///<summary>
        ///Method Name : statHistBlWhenWindowClosed
        ///</summary>
        ///<param name = "StatHistBl"></param>
        ///<returns>IEnumerable<StatHistBl> </returns>

        [HttpPost]
        [ActionName("statHistBlWhenWindowClosed")]
        public HttpResponseMessage statHistBlWhenWindowClosed([FromBody]IEnumerable<StatHistBl> statHistBl)
        {
            logger.Info("Executing MCTR.RESTService.StatHistBlService.statHistBlWhenWindowClosed() with request : " + statHistBl);
            if (statHistBl != null)
            {
                IStatHistBlBusiness statHistBlBusiness = new StatHistBlBusiness();
                var response = statHistBlBusiness.statHistBlWhenWindowClosed(statHistBl);
                logger.Info("Response received from MCTR.RESTService.StatHistBlService.statHistBlWhenWindowClosed() : " + response);
                return Request.CreateResponse(HttpStatusCode.OK, response);
            }
            return null;
        }


    }

}

