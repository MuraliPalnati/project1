///*************************************************************************
/// 
/// BOEING CONFIDENTIAL
/// ___________________
/// 
///  BOEING is a trademark of Boeing Management Company.
///
///  Copyright © 2016 Boeing. All rights reserved.
/// 
/// NOTICE:  All information contained herein is, and remains
/// the property of Boeing and its suppliers, if any.  
/// The intellectual and technical concepts contained
/// herein are proprietary to Boeing and its suppliers and may be 
/// covered by U.S. and Foreign Patents, patents in process, 
/// and are protected by trade secret or copyright law.
/// Dissemination of this information or reproduction of this material
/// is strictly forbidden unless prior written permission is obtained
/// from Boeing. 
///

///************************************************************************
/// Author           : Generated by ATMA ®
/// Revision History :  
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

using MCTR.DomainEntity;

namespace MCTR.DataAccessInterface
{
    ///*********************************************************************
    ///<summary>
    ///ILbrRateRepository is an data access interface for the LbrRateCyRepository   
    ///which facilitates the dependency injection.
    ///</summary>

    public interface ILbrRateRepository 
  {
        ///*************************************************************
        ///<summary>
        ///Method Name : mctrIncrRatesWhenNewFormInstance
        ///</summary>
        ///<param name = "lbrrate"></param>
        ///<returns>IEnumerable<MctrIncrRates> </returns>
        IEnumerable<LbrRate> LbrRatesWhenNewFormInstance();
       
     
        ///*************************************************************
        ///<summary>
        ///Method Name : Create
        ///</summary>
        ///<param name = "lbrRate"></param>
        ///<returns>IEnumerable<Status> </returns>
        IEnumerable<LbrRate> Create(IEnumerable<LbrRate> lbrRate);
        ///*************************************************************
        ///<summary>
        ///Method Name : Delete
        ///</summary>
        ///<param name = "lbrRate"></param>
        ///<returns>IEnumerable<Status> </returns>
        IEnumerable<LbrRate> Delete(IEnumerable<LbrRate> lbrRate);

        ///*************************************************************
        ///<summary>
        ///Method Name : selectionfYearOnError
        ///</summary>
        ///<param name = "lbrRate"></param>
        ///<returns>IEnumerable<LbrRate> </returns>
        IEnumerable<LbrRate> selectionfYearOnError(IEnumerable<LbrRate> lbrRate);
        ///*************************************************************
        ///<summary>
        ///Method Name : selectionbutRatesListWhenButtonPressed
        ///</summary>
        ///<param name = "lbrRate"></param>
        ///<returns>IEnumerable<LbrRate> </returns>

        IEnumerable<LbrRate> selectionbutRatesListWhenButtonPressed(IEnumerable<LbrRate> lbrRate);
        ///*************************************************************
        ///<summary>
        ///Method Name : LbrRateOnLoad
        ///</summary>
        ///<param name = "lbrRate"></param>
        ///<returns>IEnumerable<> </returns>
        IEnumerable<LbrRate> LbrRateOnLoad(IEnumerable<LbrRate> lbrRate);
        ///*************************************************************
        ///<summary>
        ///Method Name : lbrRatesetidPostChange
        ///</summary>
        ///<param name = "lbrRate"></param>
        ///<returns>IEnumerable<LbrRate> </returns>
        IEnumerable<LbrRate> lbrRatesetidPostChange(IEnumerable<LbrRate> lbrRate);
        IEnumerable<LabourRatePyEdit> EditStatus(IEnumerable<LabourRatePyEdit> lbrRate);



    }

}

