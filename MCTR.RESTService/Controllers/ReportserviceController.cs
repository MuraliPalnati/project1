///*************************************************************************
/// 
/// BOEING CONFIDENTIAL
/// ___________________
/// 
///  BOEING is a trademark of Boeing Management Company.
///
///  Copyright © 2016 Boeing. All rights reserved.
/// 
/// NOTICE:  All information contained herein is, and remains
/// the property of Boeing and its suppliers, if any.  
/// The intellectual and technical concepts contained
/// herein are proprietary to Boeing and its suppliers and may be 
/// covered by U.S. and Foreign Patents, patents in process, 
/// and are protected by trade secret or copyright law.
/// Dissemination of this information or reproduction of this material
/// is strictly forbidden unless prior written permission is obtained
/// from Boeing. 
///
 
///************************************************************************
/// Author           : Generated by ATMA ®
/// Revision History :  
 
 
using System;
using System.Collections.Generic;
using System.Linq;
using System.Net;
using System.Net.Http;
using System.Web.Http;
using log4net;

using MCTR.DomainEntity;
using MCTR.BusinessInterface;
using MCTR.Business;

namespace MCTR.RESTService.Controllers
{
///*********************************************************************
///<summary>
///TtdStatusBlServiceController is a Rest controller implementation  
///which acts as a wrapper to the TtdStatusBlBusiness implementation and
/// provides api path for each methods exposed.
///</summary>

  public class ReportserviceController : ApiController
  {
   	
     private readonly ILog logger;
    
    public ReportserviceController()
    {
      logger = LogManager.GetLogger(System.Reflection.MethodBase.GetCurrentMethod().DeclaringType);
    }

        [HttpPost]
        [ActionName("selectionbutactiverolebulistwhenbuttonpressed")]
        public HttpResponseMessage selectionbutactiverolebulistwhenbuttonpressed([FromBody]IEnumerable<AdminTables> admintables)
        {
            try
            {
                logger.Info("Executing MCTR.RESTService.Controllers.MctrCreateFormServiceController.selectionbutactiverolebulistwhenbuttonpressed() with request : " + admintables);
                if (admintables != null)
                {
                    IReportsBusiness reportBusiness = new ReportsBusiness();
                    var response = reportBusiness.selectionbutactiverolebulistwhenbuttonpressed(admintables);
                    logger.Info("Response received from mctrCreateFormBusiness.mctrLineItemactivityIdFromPreTextItem() : " + response);
                    return Request.CreateResponse(HttpStatusCode.OK, response);
                }
                return null;
            }
            catch (Exception e)
            {
                logger.Error("Error from MCTR.RESTService.Controllers.mctrCreateFormBusiness.selectionbutRatesListWhenButtonPressed() " + e.Message);
                throw;
            }
        }
        [HttpPost]
        [ActionName("selectionbutactiveuserlistwhenbuttonpressed")]
        public HttpResponseMessage selectionbutactiveuserlistwhenbuttonpressed([FromBody]IEnumerable<AdminTables> admintables)
        {
            try
            {
                logger.Info("Executing MCTR.RESTService.Controllers.MctrCreateFormServiceController.selectionbutactiverolebulistwhenbuttonpressed() with request : " + admintables);
                if (admintables != null)
                {
                    IReportsBusiness reportBusiness = new ReportsBusiness();
                    var response = reportBusiness.selectionbutactiveuserlistwhenbuttonpressed(admintables);
                    logger.Info("Response received from mctrCreateFormBusiness.selectionbutactiveuserlistwhenbuttonpressed() : " + response);
                    return Request.CreateResponse(HttpStatusCode.OK, response);
                }
                return null;
            }
            catch (Exception e)
            {
                logger.Error("Error from MCTR.RESTService.Controllers.mctrCreateFormBusiness.selectionbutRatesListWhenButtonPressed() " + e.Message);
                throw;
            }
        }
        [HttpPost]
        [ActionName("selectionbutexceleotwhenbuttonpressed")]
        public HttpResponseMessage selectionbutexceleotwhenbuttonpressed([FromBody]IEnumerable<AdminTables> admintables)
        {
            try
            {
                logger.Info("Executing MCTR.RESTService.Controllers.MctrCreateFormServiceController.selectionbutexceleotwhenbuttonpressed() with request : " + admintables);
                if (admintables != null)
                {
                    IReportsBusiness reportBusiness = new ReportsBusiness();
                    var response = reportBusiness.selectionbutexceleotwhenbuttonpressed(admintables);
                    logger.Info("Response received from mctrCreateFormBusiness.selectionbutexceleotwhenbuttonpressed() : " + response);
                    return Request.CreateResponse(HttpStatusCode.OK, response);
                }
                return null;
            }
            catch (Exception e)
            {
                logger.Error("Error from MCTR.RESTService.Controllers.mctrCreateFormBusiness.selectionbutRatesListWhenButtonPressed() " + e.Message);
                throw;
            }
        }
        [HttpPost]
        [ActionName("selectionbutqtrlyrolelistwhenbuttonpressed")]
        public HttpResponseMessage selectionbutqtrlyrolelistwhenbuttonpressed([FromBody]IEnumerable<AdminTables> AdminTables)
        {
            try
            {
                logger.Info("Executing MCTR.RESTService.Controllers.MctrCreateFormServiceController.selectionbutqtrlyrolelistwhenbuttonpressed() with request : " + AdminTables);
                if (AdminTables != null)
                {
                    IReportsBusiness reportBusiness = new ReportsBusiness();
                    var response = reportBusiness.selectionbutqtrlyrolelistwhenbuttonpressed(AdminTables);
                    logger.Info("Response received from mctrCreateFormBusiness.selectionbutqtrlyrolelistwhenbuttonpressed() : " + response);
                    return Request.CreateResponse(HttpStatusCode.OK, response);
                }
                return null;
            }
            catch (Exception e)
            {
                logger.Error("Error from MCTR.RESTService.Controllers.mctrCreateFormBusiness.selectionbutRatesListWhenButtonPressed() " + e.Message);
                throw;
            }
        }
        

         [HttpPost]
        [ActionName("mctrJrnlbyDatedwldExcel")]
        public HttpResponseMessage mctrJrnlbyDatedwldExcel([FromBody]IEnumerable<RptJrnlbyDate> rptJrnlbyDate)
        {
            try
            {
                logger.Info("Executing MCTR.RESTService.Controllers.MctrCreateFormServiceController.mctrJrnlbyDatedwldExcel() with request : " + rptJrnlbyDate);
                if (rptJrnlbyDate != null)
                {
                    IReportsBusiness reportBusiness = new ReportsBusiness();
                    var response = reportBusiness.mctrJrnlbyDatedwldExcel(rptJrnlbyDate);
                    logger.Info("Response received from mctrCreateFormBusiness.mctrJrnlbyDatedwldExcel() : " + response);
                    return Request.CreateResponse(HttpStatusCode.OK, response);
                }
                return null;
            }
            catch (Exception e)
            {
                logger.Error("Error from MCTR.RESTService.Controllers.mctrCreateFormBusiness.mctrJrnlbyDatedwldExcel() " + e.Message);
                throw;
            }
        }

    }

}

