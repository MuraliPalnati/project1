///*************************************************************************
/// 
/// BOEING CONFIDENTIAL
/// ___________________
/// 
///  BOEING is a trademark of Boeing Management Company.
///
///  Copyright © 2016 Boeing. All rights reserved.
/// 
/// NOTICE:  All information contained herein is, and remains
/// the property of Boeing and its suppliers, if any.  
/// The intellectual and technical concepts contained
/// herein are proprietary to Boeing and its suppliers and may be 
/// covered by U.S. and Foreign Patents, patents in process, 
/// and are protected by trade secret or copyright law.
/// Dissemination of this information or reproduction of this material
/// is strictly forbidden unless prior written permission is obtained
/// from Boeing. 
///

///************************************************************************
/// Author           : Generated by ATMA ®
/// Revision History :  


using System;
using System.Collections.Generic;
using System.Linq;
using System.Net;
using System.Net.Http;
using System.Web.Http;
using log4net;

using MCTR.DomainEntity;
using MCTR.BusinessInterface;
using MCTR.Business;

namespace MCTR.RESTService.Controllers
{
    ///*********************************************************************
    ///<summary>
    ///mctrJrnlByDateServiceController is a Rest controller implementation  
    ///which acts as a wrapper to the MctrJrnlByDateRptBlBusiness implementation and
    /// provides api path for each methods exposed.
    ///</summary>

    public class MctrJrnlByDateRptBlSeviceController : ApiController
    {

         private readonly ILog logger;

        public MctrJrnlByDateRptBlSeviceController()
        {
            logger = LogManager.GetLogger(System.Reflection.MethodBase.GetCurrentMethod().DeclaringType);
        }

        ///*************************************************************
        ///<summary>
        ///Method Name : getRgFinCtlLOV
        ///</summary>
        ///<param name = "mctrJrnlByDate"></param>
        ///<returns>IEnumerable<MctrJrnlByDate> </returns>

        [HttpPost]
        [ActionName("getRgFinCtlLOV")]
        public HttpResponseMessage getRgFinCtlLOV([FromBody]IEnumerable<MctrJrnlByDate> mctrJrnlByDate)
        {
            logger.Info("Executing Rest API : selectionstatusWhenButtonPressed() with request : " + mctrJrnlByDate);
            if (mctrJrnlByDate != null)
            {
                IMctrJrnlByDateRptBlBusiness MctrJrnlByDateRptBlBusiness = new MctrJrnlByDateRptBlBusiness();
                var response = MctrJrnlByDateRptBlBusiness.getRgFinCtlLOV(mctrJrnlByDate);
                logger.Info("Response received from MctrJrnlByDateRptBlBusiness.selectionstatusWhenButtonPressed() : " + response);
                return Request.CreateResponse(HttpStatusCode.OK, response);
            }
            return null;
        }

        ///*************************************************************
        ///<summary>
        ///Method Name : getRgFinCtlLOV
        ///</summary>
        ///<param name = "mctrJrnlByDate"></param>
        ///<returns>IEnumerable<MctrJrnlByDate> </returns>

        [HttpPost]
        [ActionName("getRgOrigLOV")]
        public HttpResponseMessage getRgOrigLOV([FromBody]IEnumerable<MctrJrnlByDate> mctrJrnlByDate)
        {
            logger.Info("Executing Rest API : getRgOrigLOV() with request : " + mctrJrnlByDate);
            if (mctrJrnlByDate != null)
            {
                IMctrJrnlByDateRptBlBusiness MctrJrnlByDateRptBlBusiness = new MctrJrnlByDateRptBlBusiness();
                var response = MctrJrnlByDateRptBlBusiness.getRgOrigLOV(mctrJrnlByDate);
                logger.Info("Response received from MctrJrnlByDateRptBlBusiness.getRgOrigLOV() : " + response);
                return Request.CreateResponse(HttpStatusCode.OK, response);
            }
            return null;
        }


        ///*************************************************************
        ///<summary>
        ///Method Name : getRgFromDateLOV
        ///</summary>
        ///<param name = "mctrJrnlByDate"></param>
        ///<returns>IEnumerable<mctrJrnlByDate> </returns>

        [HttpPost]
        [ActionName("getRgFromDateLOV")]
        public HttpResponseMessage getRgFromDateLOV([FromBody]IEnumerable<MctrJrnlByDate> mctrJrnlByDate)
        {
            logger.Info("Executing Rest API : getRgFromDateLOV() with request : " + mctrJrnlByDate);
            if (mctrJrnlByDate != null)
            {
                IMctrJrnlByDateRptBlBusiness MctrJrnlByDateRptBlBusiness = new MctrJrnlByDateRptBlBusiness();
                var response = MctrJrnlByDateRptBlBusiness.getRgFromDateLOV(mctrJrnlByDate);
                logger.Info("Response received from MctrJrnlByDateRptBlBusiness.getRgFromDateLOV() : " + response);
                return Request.CreateResponse(HttpStatusCode.OK, response);
            }
            return null;
        }


        ///*************************************************************
        ///<summary>
        ///Method Name : getRgFromDateLOV
        ///</summary>
        ///<param name = "mctrJrnlByDate"></param>
        ///<returns>IEnumerable<mctrJrnlByDate> </returns>

        [HttpPost]
        [ActionName("getRgToDateLOV")]
        public HttpResponseMessage getRgToDateLOV([FromBody]IEnumerable<MctrJrnlByDate> mctrJrnlByDate)
        {
            logger.Info("Executing Rest API : getRgToDateLOV() with request : " + mctrJrnlByDate);
            if (mctrJrnlByDate != null)
            {
                IMctrJrnlByDateRptBlBusiness MctrJrnlByDateRptBlBusiness = new MctrJrnlByDateRptBlBusiness();
                var response = MctrJrnlByDateRptBlBusiness.getRgToDateLOV(mctrJrnlByDate);
                logger.Info("Response received from MctrJrnlByDateRptBlBusiness.getRgToDateLOV() : " + response);
                return Request.CreateResponse(HttpStatusCode.OK, response);
            }
            return null;
        }
    }
}


