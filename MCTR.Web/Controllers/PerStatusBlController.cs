
///*************************************************************************
/// 
/// BOEING CONFIDENTIAL
/// ___________________
/// 
///  BOEING is a trademark of Boeing Management Company.
///
///  Copyright © 2016 Boeing. All rights reserved.
/// 
/// NOTICE:  All information contained herein is, and remains
/// the property of Boeing and its suppliers, if any.  
/// The intellectual and technical concepts contained
/// herein are proprietary to Boeing and its suppliers and may be 
/// covered by U.S. and Foreign Patents, patents in process, 
/// and are protected by trade secret or copyright law.
/// Dissemination of this information or reproduction of this material
/// is strictly forbidden unless prior written permission is obtained
/// from Boeing. 
///

///************************************************************************
/// Author           : Generated by ATMA ®
/// Revision History :  


using MCTR.DomainEntity;
using MCTR.Web.Handlers;
using System;
using System.Web.Mvc;
using log4net;
using MCTR.Web.Security;

namespace MCTR.Web.Controllers
{
    ///*********************************************************************
    ///<summary>
    ///PerStatusBlController is a web controller implementation for the 
    ///PerStatusBl screen.
    ///</summary>
    ///
    [CustomAuthorize]
    public class PerStatusBlController : Controller
    {
         private readonly ILog logger;


        public PerStatusBlController()
        {
            logger = LogManager.GetLogger(System.Reflection.MethodBase.GetCurrentMethod().DeclaringType);

        }
        ///*************************************************************
        ///<summary>
        ///Method Name : lineItemLineItemOnLoad
        ///</summary>
        ///<param name = "PerStatusBl"></param>
        ///<returns>IEnumerable<PerStatusBl> </returns>
        [HttpPost]
        public ActionResult LineItemOnLoad(LineItem lineitem)
        {
            try
            {
                if (lineitem != null)
                {
                    logger.Info("Executing MCTR.Web.Controllers.PerStatusBlController.LineItemOnLoad() " + lineitem);
                    PerStatusBlHandler perStatusBlHandler = new PerStatusBlHandler();
                    logger.Debug("Executing MCTR.Web.Controllers.PerStatusBlController.LineItemOnLoad()");
                    var perStatusBlResp = perStatusBlHandler.LineItemOnLoad(lineitem);
                    logger.Info("Response Received from MCTR.Web.Controllers.PerStatusBlController.LineItemOnLoad(): " + perStatusBlResp);
                    return View("PerStatusBl", perStatusBlResp);
                }
                else
                {
                    logger.Info("Request object is null or doesn't contain any value.");
                    return View();
                }
            }
            catch (Exception e)
            {
                logger.Error(" Error from MCTR.Web.Controllers.PerStatusBlController.LineItemOnLoad()" + e.Message);
                throw;
            }
        }
        ///*************************************************************
        ///<summary>
        ///Method Name : perStatusBlWhenWindowClosed
        ///</summary>
        ///<param name = "PerStatusBl"></param>
        ///<returns>IEnumerable<PerStatusBl> </returns>
        [HttpPost]
        public ActionResult perStatusBlWhenWindowClosed(PerStatusBl perStatusBl)

        {
            try
            {
                if (perStatusBl != null)
                {
                    logger.Info("Executing MCTR.Web.Controllers.PerStatusBlController.perStatusBlWhenWindowClosed() " + perStatusBl);
                    PerStatusBlHandler perStatusBlHandler = new PerStatusBlHandler();
                    logger.Debug("Executing MCTR.Web.Controllers.PerStatusBlController.perStatusBlWhenWindowClosed()");
                    var perStatusBlResp = perStatusBlHandler.perStatusBlWhenWindowClosed(perStatusBl);
                    logger.Info("Response Received from MCTR.Web.Controllers.PerStatusBlController.perStatusBlWhenWindowClosed()  : " + perStatusBlResp);
                    return View("PerStatusBl", perStatusBlResp);
                }
                else
                {
                    logger.Info("Request object is null or doesn't contain any value.");
                    return View();

                }
            }
            catch (Exception e)
            {
                logger.Error("Error from MCTR.Web.Controllers.PerStatusBlController.perStatusBlWhenWindowClosed()" + e.Message);
                throw;
            }

        }
    }
}

       
