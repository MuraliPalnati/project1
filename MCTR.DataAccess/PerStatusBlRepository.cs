///*************************************************************************
/// 
/// BOEING CONFIDENTIAL
/// ___________________
/// 
///  BOEING is a trademark of Boeing Management Company.
///
///  Copyright © 2016 Boeing. All rights reserved.
/// 
/// NOTICE:  All information contained herein is, and remains
/// the property of Boeing and its suppliers, if any.  
/// The intellectual and technical concepts contained
/// herein are proprietary to Boeing and its suppliers and may be 
/// covered by U.S. and Foreign Patents, patents in process, 
/// and are protected by trade secret or copyright law.
/// Dissemination of this information or reproduction of this material
/// is strictly forbidden unless prior written permission is obtained
/// from Boeing. 
///
 
///************************************************************************
/// Author           : Generated by ATMA ®
/// Revision History :  

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using AutoMapper;
using System.Data;
using MCTR.DataEntity;
using log4net;
using Oracle.ManagedDataAccess.Client;

using MCTR.DomainEntity;
using MCTR.DataAccessInterface;


namespace MCTR.DataAccess
{
///*********************************************************************
///<summary>
///PerStatusBlRepository is a data access implementation which holds all 
///the data access logic in it.
///</summary>
  public class PerStatusBIRepository : BaseRepository, IPerStatusBlRepository
    {
    
        private readonly ILog logger = null;
        LineItem obj = new LineItem();

        public PerStatusBIRepository()
    {
      logger = LogManager.GetLogger(System.Reflection.MethodBase.GetCurrentMethod().DeclaringType);
    }


      public  IEnumerable<LineItem> LineItemOnLoad(IEnumerable<LineItem> lineitem)
        {
            try
            {
                obj = lineitem.First<LineItem>();
                logger.Debug("Executing MCTR.DataAccess.PerStatusBIRepository.LineItemOnLoad() with input :" + lineitem);
                OracleParameter[] parameter1 = new OracleParameter[2];
                string sqlstmt = ("select * from mctr_line_item where mctr_no = :0 and line_no = :1");
                parameter1[0] = new OracleParameter(":mctrNo", OracleDbType.Varchar2, obj.MCTR_NO, ParameterDirection.Input);
                parameter1[1] = new OracleParameter(":lineNo", OracleDbType.Varchar2, obj.LINE_NO, ParameterDirection.Input);
                var rlist = entities.MCTR_LINE_ITEM.SqlQuery(sqlstmt, parameter1).ToList<MCTR_LINE_ITEM>();

                var response = AutoMapper.Mapper.DynamicMap<IEnumerable<MCTR_LINE_ITEM>, IEnumerable<LineItem>>(rlist);

                return response;
            }
            catch(Exception e )
            {

                logger.Error("Error from MCTR.DataAccess.PerStatusBIRepository.LineItemOnLoad():" + e.Message);
                throw;

            }
        
    }
    ///*************************************************************
    ///<summary>
    ///Method Name : perStatusBlWhenWindowClosed
    ///</summary>
    ///<param name = "PerStatusBl"></param>
    ///<returns>IEnumerable<PerStatusBl> </returns>

    public IEnumerable<LineItem> perStatusBlWhenWindowClosed(IEnumerable<LineItem> lineitem)
        {
            try
            {
                OracleParameter[] parameters = new OracleParameter[10];
                logger.Debug("Executing MCTR.DataAccess.PerStatusBIRepository.perStatusBlWhenWindowClosed() with input : " + lineitem);
                //TODO: Move the Data Access logic from the Business implementation class to here.
                return null;
            }
            catch(Exception e)
            {
                logger.Error("Error from MCTR.DataAccess.PerStatusBIRepository.perStatusBlWhenWindowClosed():" + e.Message);
                throw;
            }
        }
    }

}

