///*************************************************************************
/// 
/// BOEING CONFIDENTIAL
/// ___________________
/// 
///  BOEING is a trademark of Boeing Management Company.
///
///  Copyright © 2016 Boeing. All rights reserved.
/// 
/// NOTICE:  All information contained herein is, and remains
/// the property of Boeing and its suppliers, if any.  
/// The intellectual and technical concepts contained
/// herein are proprietary to Boeing and its suppliers and may be 
/// covered by U.S. and Foreign Patents, patents in process, 
/// and are protected by trade secret or copyright law.
/// Dissemination of this information or reproduction of this material
/// is strictly forbidden unless prior written permission is obtained
/// from Boeing. 
///

///************************************************************************
/// Author           : Generated by ATMA ®
/// Revision History :  
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using MCTR.DataEntity;

using MCTR.DomainEntity;
using AutoMapper;
using MCTR.DataAccessInterface;
using MCTR.DataAccess;
//using Oracle.DataAccess.Client;
using System.Data;

using Oracle.ManagedDataAccess.Client;
using log4net;

namespace HCL.ATMA.DataAccess
{

    ///*********************************************************************
    ///<summary>
    ///JobStatusRepository is a data access implementation which holds all 
    ///the data access logic in it.
    ///</summary>
    public class JobStatusRepository : BaseRepository ,IJobRepository
    {
         private readonly ILog logger;
        MCTRJobStatus jobstat = new MCTRJobStatus();
        MCTR_JOB_STATUS dbobj;

        List<MCTRJobStatus> list = new List<MCTRJobStatus>();
        public JobStatusRepository()
        {
            logger = LogManager.GetLogger(System.Reflection.MethodBase.GetCurrentMethod().DeclaringType);
        }
        ///*************************************************************
        ///<summary>
        ///Method Name : MCTRJobStatusOnInsert
        ///</summary>
        ///<param name = "MCTRJobstatus"></param>
        ///<returns>IEnumerable<MCTRJobstatus> </returns> 
        public IEnumerable<MCTRJobStatus> MCTRJobStatusOnInsert(IEnumerable<MCTRJobStatus> MCTRJobstatus)
        {
            logger.Debug("Executing MCTR.DataAccess.JobStatusRepository.MCTRJobStatusOnInsert" + MCTRJobstatus);
            try
            {
                MCTRJobStatus recievedValue = MCTRJobstatus.First();
            
                jobstat.job_Id = "WeeklyStatus";
                jobstat.Date_Entered = DateTime.Now;
                jobstat.Bems_Admin = recievedValue.Bems_Admin;
                jobstat.Eff_Date_From = recievedValue.Eff_Date_From;
                jobstat.Eff_Date_Thru = recievedValue.Eff_Date_Thru;
                jobstat.Job_Status = recievedValue.Job_Status;
                jobstat.reason = recievedValue.reason;
                dbobj = AutoMapper.Mapper.DynamicMap<MCTRJobStatus, MCTR_JOB_STATUS>(jobstat);


                string sqlstmt = "INSERT INTO MCTR_JOB_STATUS(JOB_ID,JOB_STATUS, DATE_ENTERED,BEMS_ADMIN,EFF_DATE_FROM,EFF_DATE_THRU,REASON) VALUES(:0,:1,:2,:3,:4, :5,:6);";
                OracleParameter[] parameter1 = new OracleParameter[7];
                parameter1[0] = new OracleParameter(":JOB_ID", OracleDbType.Varchar2, jobstat.job_Id, ParameterDirection.Input);
                parameter1[1] = new OracleParameter(":JOB_STATUS", OracleDbType.Varchar2, jobstat.Job_Status, ParameterDirection.Input);
                parameter1[2] = new OracleParameter(":DATE_ENTERED", OracleDbType.Date, jobstat.Date_Entered, ParameterDirection.Input);
                parameter1[3] = new OracleParameter(":BEMS_ADMIN", OracleDbType.Varchar2, jobstat.Bems_Admin, ParameterDirection.Input);
                parameter1[4] = new OracleParameter(":EFF_DATE_FROM", OracleDbType.Date, jobstat.Eff_Date_From, ParameterDirection.Input);
                parameter1[5] = new OracleParameter(":EFF_DATE_THRU", OracleDbType.Date, jobstat.Eff_Date_Thru, ParameterDirection.Input);
                parameter1[6] = new OracleParameter(":REASON", OracleDbType.Varchar2, jobstat.reason, ParameterDirection.Input);

                int result = entities.Database.ExecuteSqlCommand("BEGIN " + sqlstmt + " END;", parameter1);

                if (result != 0)
                {
                    jobstat.RespMsg = "Saved into DB";
                }
                else
                {
                    jobstat.RespMsg = "Couldn't Save it into DB";
                }
            }
            catch (OracleException exp)
            {
                
                jobstat.RespMsg = exp.Message;
            }
            catch (Exception e)
            {
                logger.Error("Exception thrown from MCTR.DataAccess.JobStatusRepository.MCTRJobStatusOnInsert:" + e.Message);
                throw;
            }
            list.Add(jobstat);
            return list;
        }

        ///*************************************************************
        ///<summary>
        ///Method Name : GetData
        ///</summary>
        public IEnumerable<MCTRJobStatus> GetData()
        {
            
            try {
                logger.Debug("Executing MCTR.DataAccess.JobStatusRepository.GetData");
                var resultlist = entities.MCTR_JOB_STATUS.SqlQuery("SELECT * FROM(SELECT * FROM MCTR_JOB_STATUS ORDER BY date_entered DESC) WHERE rownum = 1").ToList<MCTR_JOB_STATUS>();            //  select Top(1) * from MCTR_JOB_STATUS").ToList<MCTR_JOB_STATUS>();
                var list = AutoMapper.Mapper.DynamicMap<IEnumerable<MCTR_JOB_STATUS>, IEnumerable<MCTRJobStatus>>(resultlist);
                //entities.Database.ExecuteSqlCommand(stringsql,paramasList);
                return list;
            }

            catch (Exception e)
            {
                logger.Error("Exception thrown from MCTR.DataAccess.JobStatusRepository.GetData:" + e.Message);
                throw;
            }
        }

    }
}
