///*************************************************************************
/// 
/// BOEING CONFIDENTIAL
/// ___________________
/// 
///  BOEING is a trademark of Boeing Management Company.
///
///  Copyright © 2016 Boeing. All rights reserved.
/// 
/// NOTICE:  All information contained herein is, and remains
/// the property of Boeing and its suppliers, if any.  
/// The intellectual and technical concepts contained
/// herein are proprietary to Boeing and its suppliers and may be 
/// covered by U.S. and Foreign Patents, patents in process, 
/// and are protected by trade secret or copyright law.
/// Dissemination of this information or reproduction of this material
/// is strictly forbidden unless prior written permission is obtained
/// from Boeing. 
///

///************************************************************************
/// Author           : Generated by ATMA ®
/// Revision History :  


using System;
using System.Collections.Generic;
using System.Linq;
using System.Net;
using System.Net.Http;
using System.Web.Http;
using log4net;

using MCTR.DomainEntity;
using MCTR.BusinessInterface;
using MCTR.Business;
using System.Net.Http.Headers;

namespace MCTR.RESTService.Controllers
{
///*********************************************************************
///<summary>
///MctrAttachBlServiceController is a Rest controller implementation  
///which acts as a wrapper to the MctrAttachBlBusiness implementation and
/// provides api path for each methods exposed.
///</summary>

  public class MctrAttachBlServiceController : ApiController
  {
   	
     private readonly ILog logger;
    
    public MctrAttachBlServiceController()
    {
      logger = LogManager.GetLogger(System.Reflection.MethodBase.GetCurrentMethod().DeclaringType);
    }  
    
     
    ///*************************************************************
    ///<summary>
    ///Method Name : summaryattachCloseButtonWhenButtonPressed
    ///</summary>
    ///<param name = "MctrAttachBl"></param>
    ///<returns>IEnumerable<MctrAttachBl> </returns>

    [HttpPost]
    [ActionName("summaryattachCloseButtonWhenButtonPressed")]
    public HttpResponseMessage summaryattachCloseButtonWhenButtonPressed([FromBody]IEnumerable<MctrAttachBl> mctrAttachBl){
      logger.Info("Executing Rest API : summaryattachCloseButtonWhenButtonPressed() with request : " + mctrAttachBl);
      if(mctrAttachBl != null){
        IMctrAttachBlBusiness mctrAttachBlBusiness = new MctrAttachBlBusiness();
        var response = mctrAttachBlBusiness.summaryattachCloseButtonWhenButtonPressed(mctrAttachBl);
        logger.Info("Response received from mctrAttachBlBusiness.summaryattachCloseButtonWhenButtonPressed() : " + response);
        return  Request.CreateResponse(HttpStatusCode.OK,response);
      }
      return null;
    }
        
    ///*************************************************************
    ///<summary>
    ///Method Name : mctrAttachMctrAttachOnLoad
    ///</summary>
    ///<param name = "MctrAttachBl"></param>
    ///<returns>IEnumerable<MctrAttachBl> </returns>

    [HttpPost]
    [ActionName("mctrAttachMctrAttachOnLoad")]
    public HttpResponseMessage mctrAttachMctrAttachOnLoad([FromBody]IEnumerable<MctrAttachBl> mctrAttachBl){
      logger.Info("Executing Rest API : mctrAttachMctrAttachOnLoad() with request : " + mctrAttachBl);
      if(mctrAttachBl != null){
        IMctrAttachBlBusiness mctrAttachBlBusiness = new MctrAttachBlBusiness();
        var response = mctrAttachBlBusiness.mctrAttachMctrAttachOnLoad(mctrAttachBl);
        logger.Info("Response received from mctrAttachBlBusiness.mctrAttachMctrAttachOnLoad() : " + response);
        return  Request.CreateResponse(HttpStatusCode.OK,response);
      }
      return null;
    }
        
    ///*************************************************************
    ///<summary>
    ///Method Name : mctrAttachattachDescrOnError
    ///</summary>
    ///<param name = "MctrAttachBl"></param>
    ///<returns>IEnumerable<MctrAttachBl> </returns>

    [HttpPost]
    [ActionName("mctrAttachattachDescrOnError")]
    public HttpResponseMessage mctrAttachattachDescrOnError([FromBody]IEnumerable<MctrAttachBl> mctrAttachBl){
      logger.Info("Executing Rest API : mctrAttachattachDescrOnError() with request : " + mctrAttachBl);
      if(mctrAttachBl != null){
        IMctrAttachBlBusiness mctrAttachBlBusiness = new MctrAttachBlBusiness();
        var response = mctrAttachBlBusiness.mctrAttachattachDescrOnError(mctrAttachBl);
        logger.Info("Response received from mctrAttachBlBusiness.mctrAttachattachDescrOnError() : " + response);
        return  Request.CreateResponse(HttpStatusCode.OK,response);
      }
      return null;
    }
        
    ///*************************************************************
    ///<summary>
    ///Method Name : mctrAttachattachInsertFileWhenButtonPressed
    ///</summary>
    ///<param name = "MctrAttachBl"></param>
    ///<returns>IEnumerable<MctrAttachBl> </returns>

    [HttpPost]
    [ActionName("mctrAttachattachInsertFileWhenButtonPressed")]
    public HttpResponseMessage mctrAttachattachInsertFileWhenButtonPressed([FromBody]IEnumerable<MctrAttachBl> mctrAttachBl){
      logger.Info("Executing Rest API : mctrAttachattachInsertFileWhenButtonPressed() with request : " + mctrAttachBl);
      if(mctrAttachBl != null){
        IMctrAttachBlBusiness mctrAttachBlBusiness = new MctrAttachBlBusiness();
        var response = mctrAttachBlBusiness.mctrAttachattachInsertFileWhenButtonPressed(mctrAttachBl);
        logger.Info("Response received from mctrAttachBlBusiness.mctrAttachattachInsertFileWhenButtonPressed() : " + response);
        return  Request.CreateResponse(HttpStatusCode.OK,response);
      }
      return null;
    }
        
    ///*************************************************************
    ///<summary>
    ///Method Name : mctrAttachattachViewFileWhenButtonPressed
    ///</summary>
    ///<param name = "MctrAttachBl"></param>
    ///<returns>IEnumerable<MctrAttachBl> </returns>

    [HttpPost]
    [ActionName("mctrAttachattachViewFileWhenButtonPressed")]
    public HttpResponseMessage mctrAttachattachViewFileWhenButtonPressed([FromBody]IEnumerable<MctrAttachBl> mctrAttachBl){
      logger.Info("Executing Rest API : mctrAttachattachViewFileWhenButtonPressed() with request : " + mctrAttachBl);
      if(mctrAttachBl != null){
        IMctrAttachBlBusiness mctrAttachBlBusiness = new MctrAttachBlBusiness();
        var response = mctrAttachBlBusiness.mctrAttachattachViewFileWhenButtonPressed(mctrAttachBl);
        logger.Info("Response received from mctrAttachBlBusiness.mctrAttachattachViewFileWhenButtonPressed() : " + response);
        HttpResponseMessage result = new HttpResponseMessage(HttpStatusCode.OK);
        result.Content = new ByteArrayContent(response.First().ATTACH_BLOB);
        result.Content.Headers.Add("fileName", response.First().ToString());
        result.Content.Headers.ContentType = new MediaTypeHeaderValue("application/octet-stream");
        return result;
            }
      return null;
    }
        
    ///*************************************************************
    ///<summary>
    ///Method Name : mctrAttachPreInsert
    ///</summary>
    ///<param name = "MctrAttachBl"></param>
    ///<returns>IEnumerable<MctrAttachBl> </returns>

    [HttpPost]
    [ActionName("mctrAttachPreInsert")]
    public HttpResponseMessage mctrAttachPreInsert([FromBody]IEnumerable<MctrAttachBl> mctrAttachBl){
      logger.Info("Executing Rest API : mctrAttachPreInsert() with request : " + mctrAttachBl);
      if(mctrAttachBl != null){
        IMctrAttachBlBusiness mctrAttachBlBusiness = new MctrAttachBlBusiness();
        var response = mctrAttachBlBusiness.mctrAttachPreInsert(mctrAttachBl);
        logger.Info("Response received from mctrAttachBlBusiness.mctrAttachPreInsert() : " + response);
        return  Request.CreateResponse(HttpStatusCode.OK,response);
      }
      return null;
    }
        
    ///*************************************************************
    ///<summary>
    ///Method Name : webutildummyWhenButtonPressed
    ///</summary>
    ///<param name = "MctrAttachBl"></param>
    ///<returns>IEnumerable<MctrAttachBl> </returns>

    [HttpPost]
    [ActionName("webutildummyWhenButtonPressed")]
    public HttpResponseMessage webutildummyWhenButtonPressed([FromBody]IEnumerable<MctrAttachBl> mctrAttachBl){
      logger.Info("Executing Rest API : webutildummyWhenButtonPressed() with request : " + mctrAttachBl);
      if(mctrAttachBl != null){
        IMctrAttachBlBusiness mctrAttachBlBusiness = new MctrAttachBlBusiness();
        var response = mctrAttachBlBusiness.webutildummyWhenButtonPressed(mctrAttachBl);
        logger.Info("Response received from mctrAttachBlBusiness.webutildummyWhenButtonPressed() : " + response);
        return  Request.CreateResponse(HttpStatusCode.OK,response);
      }
      return null;
    }
        
    ///*************************************************************
    ///<summary>
    ///Method Name : mctrAttachBlWhenNewFormInstance
    ///</summary>
    ///<param name = "MctrAttachBl"></param>
    ///<returns>IEnumerable<MctrAttachBl> </returns>

    [HttpPost]
    [ActionName("mctrAttachBlWhenNewFormInstance")]
    public HttpResponseMessage mctrAttachBlWhenNewFormInstance([FromBody]IEnumerable<MctrAttachBl> mctrAttachBl){
      logger.Info("Executing Rest API : mctrAttachBlWhenNewFormInstance() with request : " + mctrAttachBl);
      if(mctrAttachBl != null){
        IMctrAttachBlBusiness mctrAttachBlBusiness = new MctrAttachBlBusiness();
        var response = mctrAttachBlBusiness.mctrAttachBlWhenNewFormInstance(mctrAttachBl);
        logger.Info("Response received from mctrAttachBlBusiness.mctrAttachBlWhenNewFormInstance() : " + response);
        return  Request.CreateResponse(HttpStatusCode.OK,response);
      }
      return null;
    }
        ///*************************************************************
        ///<summary>
        ///Method Name : mctrAttachBlWhenNewFormInstance
        ///</summary>
        ///<param name = "MctrAttachBl"></param>
        ///<returns>IEnumerable<MctrAttachBl> </returns>

        [HttpPost]
        [ActionName("mctrAttachBlInsert")]
        public HttpResponseMessage mctrAttachBlInsert([FromBody]IEnumerable<MctrAttachBl> mctrAttachBl)
        {
            logger.Info("Executing Rest API : mctrAttachBlInsert() with request : " + mctrAttachBl);
            if (mctrAttachBl != null)
            {
                IMctrAttachBlBusiness mctrAttachBlBusiness = new MctrAttachBlBusiness();
                var response = mctrAttachBlBusiness.mctrAttachBlInsert(mctrAttachBl);
                logger.Info("Response received from mctrAttachBlBusiness.mctrAttachBlInsert() : " + response);
                return Request.CreateResponse(HttpStatusCode.OK, response);
            }
            return null;
        }


    }

}

