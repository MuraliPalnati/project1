using log4net;
using MCTR.DomainEntity;
///*************************************************************************
/// 
/// BOEING CONFIDENTIAL
/// ___________________
/// 
///  BOEING is a trademark of Boeing Management Company.
///
///  Copyright © 2016 Boeing. All rights reserved.
/// 
/// NOTICE:  All information contained herein is, and remains
/// the property of Boeing and its suppliers, if any.  
/// The intellectual and technical concepts contained
/// herein are proprietary to Boeing and its suppliers and may be 
/// covered by U.S. and Foreign Patents, patents in process, 
/// and are protected by trade secret or copyright law.
/// Dissemination of this information or reproduction of this material
/// is strictly forbidden unless prior written permission is obtained
/// from Boeing. 
///

///************************************************************************
/// Author           : Generated by ATMA ®
/// Revision History :  

using System.Collections.Generic;

namespace MCTR.Web.Handlers
{
    ///*********************************************************************
    ///<summary>
    ///TtdStatusBlHandler provides a level of abstraction for consuming the REST api.
    ///</summary>
    public class ReportHandler
    {
     private readonly ILog logger;
    
    public ReportHandler()
    {
      logger = LogManager.GetLogger(System.Reflection.MethodBase.GetCurrentMethod().DeclaringType);
    }

        public IEnumerable<AdminTables> selectionbutactiverolebulistwhenbuttonpressed(AdminTables admintables)
        {
            logger.Debug("Executing selectionbutRatesListWhenButtonPressed rest service handler.");
            string restApiPath = "Reportservice/selectionbutactiverolebulistwhenbuttonpressed";
            logger.Info("Invoking Rest API : " + restApiPath + " with Request : " + admintables);
            IEnumerable<AdminTables> response = HandlerUtil<AdminTables>.RestPostProcessor(restApiPath, admintables);
            logger.Info("Response received form Rest API : " + restApiPath + " : " + response);
            return response;
        }
        public IEnumerable<AdminTables> selectionbutactiveuserlistwhenbuttonpressed(AdminTables admintables)
        {

            logger.Debug("Executing selectionbutRatesListWhenButtonPressed rest service handler.");
            string restApiPath = "Reportservice/selectionbutactiveuserlistwhenbuttonpressed";
            logger.Info("Invoking Rest API : " + restApiPath + " with Request : " + admintables);
            var response = HandlerUtil<AdminTables>.RestPostProcessor(restApiPath, admintables);
            logger.Info("Response received form Rest API : " + restApiPath + " : " + response);
            return response;
        }
        public IEnumerable<AdminTables> selectionbutexceleotwhenbuttonpressed(AdminTables admintables)
        {

            logger.Debug("Executing selectionbutexceleotwhenbuttonpressed rest service handler.");
            string restApiPath = "Reportservice/selectionbutexceleotwhenbuttonpressed";
            logger.Info("Invoking Rest API : " + restApiPath + " with Request : " + admintables);
            var response = HandlerUtil<AdminTables>.RestPostProcessor(restApiPath, admintables);
            logger.Info("Response received form Rest API : " + restApiPath + " : " + response);
            return response;
        }
        public IEnumerable<AdminTables> selectionbutqtrlyrolelistwhenbuttonpressed(AdminTables admintables)
        {

            logger.Debug("Executing selectionbutqtrlyrolelistwhenbuttonpressed rest service handler.");
            string restApiPath = "Reportservice/selectionbutqtrlyrolelistwhenbuttonpressed";
            logger.Info("Invoking Rest API : " + restApiPath + " with Request : " + admintables);
            var response = HandlerUtil<AdminTables>.RestPostProcessor(restApiPath, admintables);
            logger.Info("Response received form Rest API : " + restApiPath + " : " + response);
            return response;
        }

        

        public IEnumerable<RptJrnlbyDate> mctrJrnlbyDatedwldExcel(RptJrnlbyDate rptJrnlbyDate)
        {
            logger.Debug("Executing selectionbutqtrlyrolelistwhenbuttonpressed rest service handler.");
            string restApiPath = "Reportservice/mctrJrnlbyDatedwldExcel";
            logger.Info("Invoking Rest API : " + restApiPath + " with Request : " + rptJrnlbyDate);
            var response = HandlerUtil<RptJrnlbyDate>.RestPostProcessor(restApiPath, rptJrnlbyDate);
            logger.Info("Response received form Rest API : " + restApiPath + " : " + response);
            return response;
        }
    }
}

